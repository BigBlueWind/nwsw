//-------------------------------------------------------------------------------------------
/** @file DOX_INTERNAL Sysddrctrl.h
 *
 * @brief
 * @author Mindspeed Technologies
 * @version $Revision: 1.6 $
 *
 * COPYRIGHT&copy; 2008-2011 Mindspeed Technologies.
 * ALL RIGHTS RESERVED
 *
 * This is Unpublished Proprietary Source Code of Mindspeed Technologies
 **/
//-------------------------------------------------------------------------------------------

#ifdef __cplusplus
extern "C"
{
#endif

#ifndef __SYSDDRCTRL_H__
#define __SYSDDRCTRL_H__

#include "4gmx.h"

typedef struct tDENALIDDRC
{
UINT8  ACTIVE_AGING;
UINT8  ADDR_CMP_EN;
UINT8  AP;
UINT8  AREFRESH;
UINT8  AUTO_REFRESH_MODE;
UINT8  AXI0_BDW_OVFLOW;
UINT8  AXI1_BDW_OVFLOW;
UINT8  BANK_SPLIT_EN;
UINT8  CONCURRENTAP;
UINT8  CONCURRENTAP_WR_ONLY;
UINT8  DLLLOCKREG;
UINT8  DLL_BYPASS_MODE;
UINT8  DQS_N_EN;
UINT8  DRIVE_DQ_DQS;
UINT8  ECC_DISABLE_W_UC_ERR;
UINT8  EIGHT_BANK_MODE;
UINT8  ENABLE_QUICK_SREFRESH;
UINT8  EN_WR_LEVELING;
UINT8  FWC;
UINT8  INTRPTAPBURST;
UINT8  INTRPTREADA;
UINT8  INTRPTWRITEA;
UINT8  NO_CMD_INIT;
UINT8  ODT_ALT_EN;
UINT8  PLACEMENT_EN;
UINT8  POWER_DOWN;
UINT8  PRIORITY_EN;
UINT8  PWRUP_SREFRESH_EXIT;
UINT8  RDLVL_BEGIN_DELAY_EN;
UINT8  RDLVL_CS;
UINT8  RDLVL_EDGE;
UINT8  RDLVL_EN;
UINT8  RDLVL_GATE_EN;
UINT8  RDLVL_GATE_PREAMBLE_CHECK_EN;
UINT8  RDLVL_GATE_REG_EN;
UINT8  RDLVL_GATE_REQ;
UINT8  RDLVL_OFFSET_DIR_0;
UINT8  RDLVL_OFFSET_DIR_1;
UINT8  RDLVL_OFFSET_DIR_2;
UINT8  RDLVL_OFFSET_DIR_3;
UINT8  RDLVL_OFFSET_DIR_4;
UINT8  RDLVL_REG_EN;
UINT8  RDLVL_REQ;
UINT8  REDUC;
UINT8  REG_DIMM_ENABLE;
UINT8  RESYNC_DLL;
UINT8  RESYNC_DLL_PER_AREF_EN;
UINT8  RW_SAME_EN;
UINT8  SREFRESH;
UINT8  START;
UINT8  SWAP_EN;
UINT8  SWAP_PORT_RW_SAME_EN;
UINT8  SWLVL_EXIT;
UINT8  SWLVL_LOAD;
UINT8  SWLVL_OP_DONE;
UINT8  SWLVL_START;
UINT8  TRAS_LOCKOUT;
UINT8  TREF_ENABLE;
UINT8  WRITEINTERP;
UINT8  WRITE_MODEREG;
UINT8  WRLVL_CS;
UINT8  WRLVL_INTERVAL_CT_EN;
UINT8  WRLVL_REG_EN;
UINT8  WRLVL_REQ;
UINT8  ZQCS_ROTATE;
UINT8  ZQ_IN_PROGRESS;
UINT8  ADDRESS_MIRRORING;
UINT8  AXI0_FIFO_TYPE_REG;
UINT8  AXI0_R_PRIORITY;
UINT8  AXI0_W_PRIORITY;
UINT8  AXI1_FIFO_TYPE_REG;
UINT8  AXI1_R_PRIORITY;
UINT8  AXI1_W_PRIORITY;
UINT8  AXI_ALIGNED_STROBE_DISABLE;
UINT8  CS_MAP;
UINT8  CTRL_RAW;
UINT8  DRAM_CLK_DISABLE;
UINT8  MAX_CS_REG;
UINT8  ODT_RD_MAP_CS0;
UINT8  ODT_RD_MAP_CS1;
UINT8  ODT_WR_MAP_CS0;
UINT8  ODT_WR_MAP_CS1;
UINT8  RTT_0;
UINT8  SW_LEVELING_MODE;
UINT8  WRTPRCT_ENABLE;
UINT8  ZQ_ON_SREF_EXIT;
UINT8  ZQ_REQ;
UINT8  ADDR_PINS;
UINT8  ARB_CMD_Q_THRESHOLD;
UINT8  BSTLEN;
UINT8  CKE_DELAY;
UINT8  COLUMN_SIZE;
UINT8  LVL_STATUS;
UINT8  PORT_DATA_ERROR_TYPE;
UINT8  Q_FULLNESS;
UINT8  R2R_DIFFCS_DLY;
UINT8  R2R_SAMECS_DLY;
UINT8  R2W_DIFFCS_DLY;
UINT8  R2W_SAMECS_DLY;
UINT8  TCCD;
UINT8  TCKE;
UINT8  TRRD;
UINT8  TRTP;
UINT8  W2R_DIFFCS_DLY;
UINT8  W2R_SAMECS_DLY;
UINT8  W2W_DIFFCS_DLY;
UINT8  W2W_SAMECS_DLY;
UINT8  ADD_ODT_CLK_DIFFTYPE_SAMECS;
UINT8  ADD_ODT_CLK_SAMETYPE_DIFFCS;
UINT8  APREBIT;
UINT8  BURST_ON_FLY_BIT;
UINT8  CASLAT;
UINT8  DRAM_CLASS;
UINT8  INITAREF;
UINT8  MAX_COL_REG;
UINT8  PORT_CMD_ERROR_TYPE;
UINT8  RDLVL_DQ_ZERO_COUNT;
UINT8  RDLVL_GATE_DQ_ZERO_COUNT;
UINT8  TDFI_CTRLUPD_MIN;
UINT8  TDFI_PHY_WRLAT;
UINT8  TDFI_PHY_WRLAT_BASE;
UINT8  TRP;
UINT8  TRP_AB;
UINT8  TWTR;
UINT8  WRLAT;
UINT8  WRLAT_ADJ;
UINT8  ADD_ODT_CLK_DIFFTYPE_DIFFCS;
UINT8  CASLAT_LIN;
UINT8  CASLAT_LIN_GATE;
UINT8  MAX_ROW_REG;
UINT8  OCD_ADJUST_PDN_CS_0;
UINT8  OCD_ADJUST_PUP_CS_0;
UINT8  RDLAT_ADJ;
UINT8  TDAL;
UINT8  TDFI_PHY_RDLAT;
UINT8  TDFI_RDDATA_EN;
UINT8  TDFI_RDDATA_EN_BASE;
UINT8  TMRD;
UINT8  TWR_INT;
UINT8  AGE_COUNT;
UINT8  COMMAND_AGE_COUNT;
UINT8  OUT_OF_RANGE_TYPE;
UINT8  TFAW;
UINT8  TRC;
UINT8  WLDQSEN;
UINT8  WLMRD;
UINT8  AXI0_BDW;
UINT8  AXI0_CURRENT_BDW;
UINT8  AXI1_BDW;
UINT8  AXI1_CURRENT_BDW;
UINT8  DLL_LOCK;
UINT8  OUT_OF_RANGE_LENGTH;
UINT8  WRTPRCT_ERROR_LENGTH;
UINT8  DLL_RST_ADJ_DLY;
UINT8  ECC_C_SYND;
UINT8  ECC_U_SYND;
UINT8  REFRESH_PER_ZQ;
UINT8  SWLVL_RESP_0;
UINT8  SWLVL_RESP_1;
UINT8  SWLVL_RESP_2;
UINT8  SWLVL_RESP_3;
UINT8  SWLVL_RESP_4;
UINT8  TDFI_RDLVL_DLL;
UINT8  TDFI_RDLVL_EN;
UINT8  TDFI_RDLVL_RESPLAT;
UINT8  TDFI_WRLVL_DLL;
UINT8  TDFI_WRLVL_EN;
UINT8  TDFI_WRLVL_RESPLAT;
UINT8  TMOD;
UINT8  TRAS_MIN;
UINT8  TRCD_INT;
UINT8  TRFC;
/*
UINT8  USER_DEF_REG_0;
UINT8  USER_DEF_REG_1;
UINT8  USER_DEF_REG_2;
UINT8  USER_DEF_REG_3;
UINT8  USER_DEF_REG_4;
UINT8  USER_DEF_REG_5;
UINT8  USER_DEF_REG_6;
UINT8  USER_DEF_REG_7;
*/
UINT32 dfi_bus_cnt:1;
UINT32 clk_ratio:2;
UINT32 pri_use_reg:1;
UINT32 ddrphy_reg0_unused:2;
UINT32 tdfi_wrlat:1;
UINT32 tdfi_rdata_en:1;

UINT32 pll_reset_n:1;
UINT32 pll_pd:1;
UINT32 pll_refclk_sel:2;
UINT32 ddrphy_reg1_unused:2;
UINT32 pll_test:1;
UINT32 pll_bypass:1;

UINT32 pll_fbdiv:6;
UINT32 pll_odiv1:2;
UINT32 pll_odiv2:2;
UINT32 pll_pcsdiv:6;

UINT32 Loopback_en:1;
UINT32 dll_sel:3;
UINT32 dfi_bus_count:1;
UINT32 mc_dist_fast:1;
UINT32 dfi_wr_al:2;

UINT32 wrm_rst_prot:1;
UINT32 dfi_rd_al:2;
UINT32 ddr2_mode:1;
UINT32 ddr2_low_speed:1;
UINT32 ddrphy_reg5_unused:3;

UINT32 use_mc_eval_wrlvl:1;
UINT32 use_mc_eval_rdlvl:1;
UINT32 use_mc_eval_rdgate:1;
UINT32 ddrphy_reg6_unused:5;

UINT32 pri_dq_slew_rate:1;
UINT32 pri_dq_drv_str:2;
UINT32 pri_dq_term:2;
UINT32 pri_ca_slew_rate:1;
UINT32 pri_ca_drv_str:2;

UINT8  USER_DEF_REG_RO_0;
UINT8  USER_DEF_REG_RO_1;
UINT8  USER_DEF_REG_RO_2;
UINT8  USER_DEF_REG_RO_3;
UINT16 TDFI_RDLVL_RR;

UINT16 TDFI_WRLVL_WW;

UINT16 WRLVL_STATUS;

UINT16 ZQCL;

UINT16 ZQCS;

UINT16 ZQINIT;

UINT16 TDFI_CTRLUPD_MAX;

UINT16 TDFI_PHYUPD_RESP;

UINT16 TDFI_PHYUPD_TYPE0;

UINT16 TDFI_PHYUPD_TYPE1;

UINT16 TDFI_PHYUPD_TYPE2;

UINT16 TDFI_PHYUPD_TYPE3;

UINT16 TREF;

UINT16 AXI0_EN_SIZE_LT_WIDTH_INSTR;

UINT16 AXI1_EN_SIZE_LT_WIDTH_INSTR;

UINT16 DFI_WRLVL_MAX_DELAY;

UINT16 DLL_RST_DELAY;

UINT16 MR0_DATA_0;

UINT16 MR0_DATA_1;

UINT16 MR1_DATA_0;

UINT16 MR1_DATA_1;

UINT16 MR2_DATA_0;

UINT16 MR2_DATA_1;

UINT16 MR3_DATA_0;

UINT16 MR3_DATA_1;

UINT16 RDLVL_BEGIN_DELAY_0;

UINT16 RDLVL_BEGIN_DELAY_1;

UINT16 RDLVL_BEGIN_DELAY_2;

UINT16 RDLVL_BEGIN_DELAY_3;

UINT16 RDLVL_BEGIN_DELAY_4;

UINT16 RDLVL_DELAY_0;

UINT16 RDLVL_DELAY_1;

UINT16 RDLVL_DELAY_2;

UINT16 RDLVL_DELAY_3;

UINT16 RDLVL_DELAY_4;

UINT16 RDLVL_END_DELAY_0;

UINT16 RDLVL_END_DELAY_1;

UINT16 RDLVL_END_DELAY_2;

UINT16 RDLVL_END_DELAY_3;

UINT16 RDLVL_END_DELAY_4;

UINT16 RDLVL_GATE_DELAY_0;

UINT16 RDLVL_GATE_DELAY_1;

UINT16 RDLVL_GATE_DELAY_2;

UINT16 RDLVL_GATE_DELAY_3;

UINT16 RDLVL_GATE_DELAY_4;

UINT16 RDLVL_GATE_MAX_DELAY;

UINT16 RDLVL_MAX_DELAY;

UINT16 RDLVL_MIDPOINT_DELAY_0;

UINT16 RDLVL_MIDPOINT_DELAY_1;

UINT16 RDLVL_MIDPOINT_DELAY_2;

UINT16 RDLVL_MIDPOINT_DELAY_3;

UINT16 RDLVL_MIDPOINT_DELAY_4;

UINT16 RDLVL_OFFSET_DELAY_0;

UINT16 RDLVL_OFFSET_DELAY_1;

UINT16 RDLVL_OFFSET_DELAY_2;

UINT16 RDLVL_OFFSET_DELAY_3;

UINT16 RDLVL_OFFSET_DELAY_4;

UINT16 REFRESH_PER_RDLVL;

UINT16 REFRESH_PER_RDLVL_GATE;

UINT16 TCPD;

UINT16 TDLL;

UINT16 TPDEX;

UINT16 TRAS_MAX;

UINT16 TXPDLL;

UINT16 TXSNR;

UINT16 TXSR;

UINT16 VERSION;

UINT16 WRLVL_DELAY_0;

UINT16 WRLVL_DELAY_1;

UINT16 WRLVL_DELAY_2;

UINT16 WRLVL_DELAY_3;

UINT16 WRLVL_DELAY_4;

UINT16 WRLVL_INTERVAL;

UINT16 XOR_CHECK_BITS;

UINT8  ECC_C_ID_0_7;
UINT8  ECC_C_ID_8_15;
UINT8  ECC_C_ID_16;
UINT8  ECC_U_ID_0_7;
UINT8  ECC_U_ID_8_15;
UINT8  ECC_U_ID_16;
UINT8  OUT_OF_RANGE_SOURCE_ID_0_7;
UINT8  OUT_OF_RANGE_SOURCE_ID_8_15;
UINT8  OUT_OF_RANGE_SOURCE_ID_16;
UINT8  PORT_CMD_ERROR_ID_0_7;
UINT8  PORT_CMD_ERROR_ID_8_15;
UINT8  PORT_CMD_ERROR_ID_16;
UINT8  PORT_DATA_ERROR_ID_0_7;
UINT8  PORT_DATA_ERROR_ID_8_15;
UINT8  PORT_DATA_ERROR_ID_16;
volatile UINT8  INT_ACK_0_7;
volatile UINT8  INT_ACK_8_15;
volatile UINT8  INT_ACK_16_17;
volatile UINT8  INT_MASK_0_7;
volatile UINT8  INT_MASK_8_15;
volatile UINT8  INT_MASK_16_18;
volatile UINT8  INT_STATUS_0_7;
volatile UINT8  INT_STATUS_8_15;
volatile UINT8  INT_STATUS_16_18;
UINT8  RDLVL_ERROR_STATUS_0_7;
UINT8  RDLVL_ERROR_STATUS_8_15;
UINT8  RDLVL_ERROR_STATUS_16_21;
UINT8  TINIT_0_7;
UINT8  TINIT_8_15;
UINT8  TINIT_16_23;
UINT8  CKE_INACTIVE_0_7;
UINT8  CKE_INACTIVE_8_15;
UINT8  CKE_INACTIVE_16_23;
UINT8  CKE_INACTIVE_24_31;
UINT8  DLL_CTRL_REG_0_0_0_7;
UINT8  DLL_CTRL_REG_0_0_8_15;
UINT8  DLL_CTRL_REG_0_0_16_23;
UINT8  DLL_CTRL_REG_0_0_24_31;
UINT8  DLL_CTRL_REG_0_1_0_7;
UINT8  DLL_CTRL_REG_0_1_8_15;
UINT8  DLL_CTRL_REG_0_1_16_23;
UINT8  DLL_CTRL_REG_0_1_24_31;
UINT8  DLL_CTRL_REG_0_2_0_7;
UINT8  DLL_CTRL_REG_0_2_8_15;
UINT8  DLL_CTRL_REG_0_2_16_23;
UINT8  DLL_CTRL_REG_0_2_24_31;
UINT8  DLL_CTRL_REG_0_3_0_7;
UINT8  DLL_CTRL_REG_0_3_8_15;
UINT8  DLL_CTRL_REG_0_3_16_23;
UINT8  DLL_CTRL_REG_0_3_24_31;
UINT8  DLL_CTRL_REG_0_4_0_7;
UINT8  DLL_CTRL_REG_0_4_8_15;
UINT8  DLL_CTRL_REG_0_4_16_23;
UINT8  DLL_CTRL_REG_0_4_24_31;
UINT8  TDFI_RDLVL_MAX_0_7;
UINT8  TDFI_RDLVL_MAX_8_15;
UINT8  TDFI_RDLVL_MAX_16_23;
UINT8  TDFI_RDLVL_MAX_24_31;
UINT8  TDFI_RDLVL_RESP_0_7;
UINT8  TDFI_RDLVL_RESP_8_15;
UINT8  TDFI_RDLVL_RESP_16_23;
UINT8  TDFI_RDLVL_RESP_24_31;
UINT8  TDFI_WRLVL_MAX_0_7;
UINT8  TDFI_WRLVL_MAX_8_15;
UINT8  TDFI_WRLVL_MAX_16_23;
UINT8  TDFI_WRLVL_MAX_24_31;
UINT8  TDFI_WRLVL_RESP_0_7;
UINT8  TDFI_WRLVL_RESP_8_15;
UINT8  TDFI_WRLVL_RESP_16_23;
UINT8  TDFI_WRLVL_RESP_24_31;
UINT8  TRST_PWRON_0_7;
UINT8  TRST_PWRON_8_15;
UINT8  TRST_PWRON_16_23;
UINT8  TRST_PWRON_24_31;
UINT8  ECC_C_ADDR_0_7;
UINT8  ECC_C_ADDR_8_15;
UINT8  ECC_C_ADDR_16_23;
UINT8  ECC_C_ADDR_24_31;
UINT8  ECC_C_ADDR_32_35;
UINT8  ECC_U_ADDR_0_7;
UINT8  ECC_U_ADDR_8_15;
UINT8  ECC_U_ADDR_16_23;
UINT8  ECC_U_ADDR_24_31;
UINT8  ECC_U_ADDR_32_35;
UINT8  OUT_OF_RANGE_ADDR_0_7;
UINT8  OUT_OF_RANGE_ADDR_8_15;
UINT8  OUT_OF_RANGE_ADDR_16_23;
UINT8  OUT_OF_RANGE_ADDR_24_31;
UINT8  OUT_OF_RANGE_ADDR_32_35;
UINT8  PORT_CMD_ERROR_ADDR_0_7;
UINT8  PORT_CMD_ERROR_ADDR_8_15;
UINT8  PORT_CMD_ERROR_ADDR_16_23;
UINT8  PORT_CMD_ERROR_ADDR_24_31;
UINT8  PORT_CMD_ERROR_ADDR_32_35;
UINT8  RDLVL_GATE_RESP_MASK_0_7;
UINT8  RDLVL_GATE_RESP_MASK_8_15;
UINT8  RDLVL_GATE_RESP_MASK_16_23;
UINT8  RDLVL_GATE_RESP_MASK_24_31;
UINT8  RDLVL_GATE_RESP_MASK_32_35;
UINT8  RDLVL_RESP_MASK_0_7;
UINT8  RDLVL_RESP_MASK_8_15;
UINT8  RDLVL_RESP_MASK_16_23;
UINT8  RDLVL_RESP_MASK_24_31;
UINT8  RDLVL_RESP_MASK_32_35;
UINT8  WRTPRCT_ERROR_ADDRESS_0_7;
UINT8  WRTPRCT_ERROR_ADDRESS_8_15;
UINT8  WRTPRCT_ERROR_ADDRESS_16_23;
UINT8  WRTPRCT_ERROR_ADDRESS_24_31;
UINT8  WRTPRCT_ERROR_ADDRESS_32_35;
UINT8  WRTPRCT_LOWER_ADDRESS_0_0_7;
UINT8  WRTPRCT_LOWER_ADDRESS_0_8_15;
UINT8  WRTPRCT_LOWER_ADDRESS_0_16_23;
UINT8  WRTPRCT_LOWER_ADDRESS_0_24_31;
UINT8  WRTPRCT_LOWER_ADDRESS_0_32_35;
UINT8  WRTPRCT_LOWER_ADDRESS_1_0_7;
UINT8  WRTPRCT_LOWER_ADDRESS_1_8_15;
UINT8  WRTPRCT_LOWER_ADDRESS_1_16_23;
UINT8  WRTPRCT_LOWER_ADDRESS_1_24_31;
UINT8  WRTPRCT_LOWER_ADDRESS_1_32_35;
UINT8  WRTPRCT_UPPER_ADDRESS_0_0_7;
UINT8  WRTPRCT_UPPER_ADDRESS_0_8_15;
UINT8  WRTPRCT_UPPER_ADDRESS_0_16_23;
UINT8  WRTPRCT_UPPER_ADDRESS_0_24_31;
UINT8  WRTPRCT_UPPER_ADDRESS_0_32_35;
UINT8  WRTPRCT_UPPER_ADDRESS_1_0_7;
UINT8  WRTPRCT_UPPER_ADDRESS_1_8_15;
UINT8  WRTPRCT_UPPER_ADDRESS_1_16_23;
UINT8  WRTPRCT_UPPER_ADDRESS_1_24_31;
UINT8  WRTPRCT_UPPER_ADDRESS_1_32_35;
UINT8  ECC_C_DATA_0_7;
UINT8  ECC_C_DATA_8_15;
UINT8  ECC_C_DATA_16_23;
UINT8  ECC_C_DATA_24_31;
UINT8  ECC_C_DATA_32_39;
UINT8  ECC_C_DATA_40_47;
UINT8  ECC_C_DATA_48_55;
UINT8  ECC_C_DATA_56_63;
UINT8  ECC_U_DATA_0_7;
UINT8  ECC_U_DATA_8_15;
UINT8  ECC_U_DATA_16_23;
UINT8  ECC_U_DATA_24_31;
UINT8  ECC_U_DATA_32_39;
UINT8  ECC_U_DATA_40_47;
UINT8  ECC_U_DATA_48_55;
UINT8  ECC_U_DATA_56_63;
UINT8  TBST_INT_INTERVAL;
} DENALIDDRC, *PDENALIDDRC;

typedef struct tDDRPHYSLICEREGS
{
    UINT16 WMDLL0;
    UINT16 SDLL00;
    UINT16 WCDU0;
    UINT16 RCAS_LATENCY0;
    UINT16 RDELAY_TAP0;
    UINT16 RESERVED[3];
} DDRPHYSLICEREGS, *PDDRPHYSLICEREGS;

UINT32 SysDDRSetup(UINT32 ddr_controller_id);

UINT32 GetChipRevisionByTestingDdrPhy(void);

UINT32 SysDDRGetFreq (UINT32 nID, UINT32 SrcClock);

/**
 * @brief Function to write protect a region of memory for a Denali
 * memory controller
 * 
 * @details
 * 
 * @par Overview
 * This function will cause the denali controller to write protect 
 * a region of memory from all writes regardless of source.
 * 
 * @param ddr_controller_id[in]            DDR controller ID, 0 or 1 (NOTE: C5K does not support DDR 1)
 * @param write_protect_region_number[in]  Write protect region, Denali supports two regions, 0 and 1 
 * @param lower_address[in]                Lower (starting) address to protect
 * @param upper_address[in]                Upper (ending)   address to protect
 *  
 * @returns Nothing (void function)
 */
void SysDDREnableWriteProtect(unsigned int ddr_controller_id,
                              unsigned int write_protect_region_number,
                              unsigned int lower_address,
                              unsigned int upper_address
                             );

/**
 * @brief Function to write protect a region of memory for a Denali
 * memory controller
 * 
 * @details
 * 
 * @par Overview
 * This function will cause the denali controller to disable write protect 
 * a region of memory from all writes regardless of source.
 * 
 * @details
 * 
 * @par Overiview
 * This function is used to disable a write protect region in the DDR controller.
 * If the region was previously disabled, this will restore the capability
 * for writes into the region.
 *  
 * @returns Nothing (void function)
 */
void SysDDRDisableWriteProtect(unsigned int ddr_controller_id);


#endif /* __SYSDDRCTRL_H__ */

#ifdef __cplusplus
}
#endif

