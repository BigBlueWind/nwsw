rhResetRsp = { result = 0; };   /* 0 - SUCCESS   1 - FAILURE   */
rhInitNoti = { result = 0; };   /* 0 - SUCCESS   1 - FAILURE   */      
rhFaControlRsp  = { result = 0; };   /* 0 - SUCCESS   1 - FAILURE   */  
rhDataPathSetRsp = { result = 0; };   /* 0 - SUCCESS   1 - FAILURE   */
rhDelaySettingRsp = { result = 0; };   /* 0 - SUCCESS   1 - FAILURE   */
rhTxOnPathA  = { result = 0; };   /* 0 - SUCCESS   1 - FAILURE   */
rhTxOnPathB = { result = 0; };   /* 0 - SUCCESS   1 - FAILURE   */
rhTxOffPathA = { result = 0; };   /* 0 - SUCCESS   1 - FAILURE   */
rhTxOffPathB = { result = 0; };   /* 0 - SUCCESS   1 - FAILURE   */
rhTxEnablePathA = { result = 0; };   /* 0 - SUCCESS   1 - FAILURE   */ 
rhTxEnablePathB = { result = 0; };   /* 0 - SUCCESS   1 - FAILURE   */
rhTxDisablePathA = { result = 0; };   /* 0 - SUCCESS   1 - FAILURE   */
rhTxDisablePathB  = { result = 0; };   /* 0 - SUCCESS   1 - FAILURE   */
rhAlarmThresholdRsp  = { result = 0; };   /* 0 - SUCCESS   1 - FAILURE   */ 
rhHwInfoRsp = { 
                result = 0;            /* 0 - SUCCESS   1 - FAILURE   */
                version = 01020328;  /* V1.2.3.40 indicates  0x01020328 */
                desc    = "dfd;sdsf;PWAV Radio Head;gdd;";
              }; 
rhFwInfoRsp = { 
                result = 0;            /* 0 - SUCCESS   1 - FAILURE   */
                version = 01020328;    /* V1.2.3.40 indicates  0x01020328 */
                buildDate    = 112312;
              };
rhStatusRsp = { 
                varResult = 0;
                varSeqNum = 1;                        /* (6~7) From REQ ulVar >> 16 */
                c1IQMap = 1;
                c2IQMap = 3;
                c3IQMap = 20;
                c4IQMap = 5;
                fwMode = 1;
                numOfFa = 1;
                mappingOf1FAStatus = 1;
                mappingOf2FAStatus = 2;
                mappingOf3FAStatus = 3;
                mappingOf4FAStatus = 4;
                cvc1 = 200;
                cvc2 = 201;
                cvc3 = 202;
                cvc4 = 204;
                txFilterBandwidth = 100;
                rxFilterBandwidth = 200;
                dlRatio = 0;
                ulRatio = 0;
                vswrShutdownAlarmThreshold = 60;
                overpowerShutdownAlarmThreshold = 15000;
                lowPowerAlarmThreshold = 19000;
                centerFrequency = 23000;
                fa1ChannelBandwidthStatus = 1;
                fa2ChannelBandwidthStatus = 2;
                fa3ChannelBandwidthStatus = 3;
                fa4ChannelBandwidthStatus = 4;
                tx1stFaFrequency = 2000;
                tx2ndFaFrequency = 3000;
                tx3rdFaFrequency = 4000;
                tx4thFaFrequency = 5000;
                rx1stFaFrequency = 6000;
                rx2ndFaFrequency = 7000;
                rx3rdFaFrequency = 8000;
                rx4thFaFrequency = 9000;
                txDelay = 24000;
                rxDelay = 25000;
                txPathAFaControl = 6;
                txPathBFaControl = 7;
                txPathCFaControl = 8;
                txPathDFaControl = 9;
                rxPathAFaControl = 10;
                rxPathBFaControl = 11;
                rxPathCFaControl = 12;
                rxPathDFaControl = 13;
                multiMode = 1;
                powerBoost = 0;
                filterSwithingMode = 0;
                txOnOrOffPathA = 5;            
  				txEnableOrDisablePathA = 2;  				
			    temperaturePathA = -277;
			    txRfPowerPathA = -150;
			    pathAReturnLoss = 2000;
			    pathAFa1RssiDigitalIQLevel = 200;
			    pathAFa2RssiDigitalIQLevel = 300;
			    pathAFa3RssiDigitalIQLevel = 400;			    
			    pathAFa4RssiDigitalIQLevel = 500;
			    pathAFa1TssiDigitalIQLevel = 600;
			    pathAFa2TssiDigitalIQLevel = 700;
			    pathAFa3TssiDigitalIQLevel = 800;
			    pathAFa4TssiDigitalIQLevel = 900;
			    pathAFa1TxAtten = 50; 
			    pathAFa2TxAtten = 60;
			    pathAFa3TxAtten = 70;
			    pathAFa4TxAtten = 80;
			    txOnOrOffPathB = 5;            
  				txEnableOrDisablePathB = 2;  				
			    temperaturePathB = -277;
			    txRfPowerPathB = -150;
			    pathBReturnLoss = 2000;
			    pathBFa1RssiDigitalIQLevel = 200;
			    pathBFa2RssiDigitalIQLevel = 300;
			    pathBFa3RssiDigitalIQLevel = 400;			    
			    pathBFa4RssiDigitalIQLevel = 500;
			    pathBFa1TssiDigitalIQLevel = 600;
			    pathBFa2TssiDigitalIQLevel = 700;
			    pathBFa3TssiDigitalIQLevel = 800;
			    pathBFa4TssiDigitalIQLevel = 900;
			    pathBFa1TxAtten = 50; 
			    pathBFa2TxAtten = 60;
			    pathBFa3TxAtten = 70;
			    pathBFa4TxAtten = 80;
			    txOnOrOffPathC = 5;            
  				txEnableOrDisablePathC = 2;  				
			    temperaturePathC = -277;
			    txRfPowerPathC = -150;
			    pathCReturnLoss = 2000;
			    pathCFa1RssiDigitalIQLevel = 200;
			    pathCFa2RssiDigitalIQLevel = 300;
			    pathCFa3RssiDigitalIQLevel = 400;			    
			    pathCFa4RssiDigitalIQLevel = 500;
			    pathCFa1TssiDigitalIQLevel = 600;
			    pathCFa2TssiDigitalIQLevel = 700;
			    pathCFa3TssiDigitalIQLevel = 800;
			    pathCFa4TssiDigitalIQLevel = 900;
			    pathCFa1TxAtten = 50; 
			    pathCFa2TxAtten = 60;
			    pathCFa3TxAtten = 70;
			    pathCFa4TxAtten = 80;
			    txOnOrOffPathD = 5;            
  				txEnableOrDisablePathD = 2;  				
			    temperaturePathD = -277;
			    txRfPowerPathD = -150;
			    pathDReturnLoss = 2000;
			    pathDFa1RssiDigitalIQLevel = 200;
			    pathDFa2RssiDigitalIQLevel = 300;
			    pathDFa3RssiDigitalIQLevel = 400;			    
			    pathDFa4RssiDigitalIQLevel = 500;
			    pathDFa1TssiDigitalIQLevel = 600;
			    pathDFa2TssiDigitalIQLevel = 700;
			    pathDFa3TssiDigitalIQLevel = 800;
			    pathDFa4TssiDigitalIQLevel = 900;
			    pathDFa1TxAtten = 50; 
			    pathDFa2TxAtten = 60;
			    pathDFa3TxAtten = 70;
			    pathDFa4TxAtten = 80;
               }; 
 rhAlarmRsp = { 
                result = 0;            /* 0 - SUCCESS   1 - FAILURE   */
                varSeqNum = 0;
                dataValidInd = 0; 
                alarmDataPathA = 12345678;
                alarmDataPathB = 12345678;
              };   
              
deh_mt_timers_cfg_table =  {
                             usedBy = "MODID_DEHMT";
                             timerName = 25;           /* Rh SIM Timer */
                             timeUnit = 3;             /* Sec */
                             duration = 2;
                             description = " Radio Head Simulator required to send ALARM Change NOTI to DEH";
                           }; /* End Of Timer 25 */   
              
