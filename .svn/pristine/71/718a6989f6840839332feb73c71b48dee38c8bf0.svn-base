# 1 "../..//enbapp/src/wr_smm_pdcp.c"
# 1 "/root/Desktop/vijay/Hercules/Master_MSPD_CCPU_AIR/enbapp/build//"
# 1 "<built-in>"
#define __STDC__ 1
# 1 "<built-in>"
#define __STDC_VERSION__ 199901L
# 1 "<built-in>"
#define __STDC_HOSTED__ 1
# 1 "<built-in>"
#define __GNUC__ 4
# 1 "<built-in>"
#define __GNUC_MINOR__ 1
# 1 "<built-in>"
#define __GNUC_PATCHLEVEL__ 2
# 1 "<built-in>"
#define __GNUC_RH_RELEASE__ 46
# 1 "<built-in>"
#define __SIZE_TYPE__ unsigned int
# 1 "<built-in>"
#define __PTRDIFF_TYPE__ int
# 1 "<built-in>"
#define __WCHAR_TYPE__ long int
# 1 "<built-in>"
#define __WINT_TYPE__ unsigned int
# 1 "<built-in>"
#define __INTMAX_TYPE__ long long int
# 1 "<built-in>"
#define __UINTMAX_TYPE__ long long unsigned int
# 1 "<built-in>"
#define __GXX_ABI_VERSION 1002
# 1 "<built-in>"
#define __SCHAR_MAX__ 127
# 1 "<built-in>"
#define __SHRT_MAX__ 32767
# 1 "<built-in>"
#define __INT_MAX__ 2147483647
# 1 "<built-in>"
#define __LONG_MAX__ 2147483647L
# 1 "<built-in>"
#define __LONG_LONG_MAX__ 9223372036854775807LL
# 1 "<built-in>"
#define __WCHAR_MAX__ 2147483647
# 1 "<built-in>"
#define __CHAR_BIT__ 8
# 1 "<built-in>"
#define __INTMAX_MAX__ 9223372036854775807LL
# 1 "<built-in>"
#define __FLT_EVAL_METHOD__ 2
# 1 "<built-in>"
#define __FLT_RADIX__ 2
# 1 "<built-in>"
#define __FLT_MANT_DIG__ 24
# 1 "<built-in>"
#define __FLT_DIG__ 6
# 1 "<built-in>"
#define __FLT_MIN_EXP__ (-125)
# 1 "<built-in>"
#define __FLT_MIN_10_EXP__ (-37)
# 1 "<built-in>"
#define __FLT_MAX_EXP__ 128
# 1 "<built-in>"
#define __FLT_MAX_10_EXP__ 38
# 1 "<built-in>"
#define __FLT_MAX__ 3.40282347e+38F
# 1 "<built-in>"
#define __FLT_MIN__ 1.17549435e-38F
# 1 "<built-in>"
#define __FLT_EPSILON__ 1.19209290e-7F
# 1 "<built-in>"
#define __FLT_DENORM_MIN__ 1.40129846e-45F
# 1 "<built-in>"
#define __FLT_HAS_INFINITY__ 1
# 1 "<built-in>"
#define __FLT_HAS_QUIET_NAN__ 1
# 1 "<built-in>"
#define __DBL_MANT_DIG__ 53
# 1 "<built-in>"
#define __DBL_DIG__ 15
# 1 "<built-in>"
#define __DBL_MIN_EXP__ (-1021)
# 1 "<built-in>"
#define __DBL_MIN_10_EXP__ (-307)
# 1 "<built-in>"
#define __DBL_MAX_EXP__ 1024
# 1 "<built-in>"
#define __DBL_MAX_10_EXP__ 308
# 1 "<built-in>"
#define __DBL_MAX__ 1.7976931348623157e+308
# 1 "<built-in>"
#define __DBL_MIN__ 2.2250738585072014e-308
# 1 "<built-in>"
#define __DBL_EPSILON__ 2.2204460492503131e-16
# 1 "<built-in>"
#define __DBL_DENORM_MIN__ 4.9406564584124654e-324
# 1 "<built-in>"
#define __DBL_HAS_INFINITY__ 1
# 1 "<built-in>"
#define __DBL_HAS_QUIET_NAN__ 1
# 1 "<built-in>"
#define __LDBL_MANT_DIG__ 64
# 1 "<built-in>"
#define __LDBL_DIG__ 18
# 1 "<built-in>"
#define __LDBL_MIN_EXP__ (-16381)
# 1 "<built-in>"
#define __LDBL_MIN_10_EXP__ (-4931)
# 1 "<built-in>"
#define __LDBL_MAX_EXP__ 16384
# 1 "<built-in>"
#define __LDBL_MAX_10_EXP__ 4932
# 1 "<built-in>"
#define __DECIMAL_DIG__ 21
# 1 "<built-in>"
#define __LDBL_MAX__ 1.18973149535723176502e+4932L
# 1 "<built-in>"
#define __LDBL_MIN__ 3.36210314311209350626e-4932L
# 1 "<built-in>"
#define __LDBL_EPSILON__ 1.08420217248550443401e-19L
# 1 "<built-in>"
#define __LDBL_DENORM_MIN__ 3.64519953188247460253e-4951L
# 1 "<built-in>"
#define __LDBL_HAS_INFINITY__ 1
# 1 "<built-in>"
#define __LDBL_HAS_QUIET_NAN__ 1
# 1 "<built-in>"
#define __REGISTER_PREFIX__ 
# 1 "<built-in>"
#define __USER_LABEL_PREFIX__ 
# 1 "<built-in>"
#define __VERSION__ "4.1.2 20080704 (Red Hat 4.1.2-46)"
# 1 "<built-in>"
#define __GNUC_GNU_INLINE__ 1
# 1 "<built-in>"
#define __NO_INLINE__ 1
# 1 "<built-in>"
#define __FINITE_MATH_ONLY__ 0
# 1 "<built-in>"
#define __STRICT_ANSI__ 1
# 1 "<built-in>"
#define __i386 1
# 1 "<built-in>"
#define __i386__ 1
# 1 "<built-in>"
#define __gnu_linux__ 1
# 1 "<built-in>"
#define __linux 1
# 1 "<built-in>"
#define __linux__ 1
# 1 "<built-in>"
#define __unix 1
# 1 "<built-in>"
#define __unix__ 1
# 1 "<built-in>"
#define __ELF__ 1
# 1 "<command line>"
#define SUNOS 1
# 1 "<command line>"
#define SS 1
# 1 "<command line>"
#define SS_MT 1
# 1 "<command line>"
#define ANSI 1
# 1 "<command line>"
#define _GNU_SOURCE 1
# 1 "<command line>"
#define SS_LINUX 1
# 1 "<command line>"
#define _REENTRANT 1
# 1 "<command line>"
#define __EXTENSIONS__ 1
# 1 "<command line>"
#define DEBUGNOEXIT 1
# 1 "<command line>"
#define WR 1
# 1 "<command line>"
#define LCCZT 1
# 1 "<command line>"
#define WR 1
# 1 "<command line>"
#define SM 1
# 1 "<command line>"
#undef LCLWR
# 1 "<command line>"
#undef LCSMMILWR
# 1 "<command line>"
#undef LCWRMILWR
# 1 "<command line>"
#define LCNHU 1
# 1 "<command line>"
#define WR 1
# 1 "<command line>"
#define NX 1
# 1 "<command line>"
#define LCWRLINHU 1
# 1 "<command line>"
#define LCNHUINHU 1
# 1 "<command line>"
#define LCNXLINHU 1
# 1 "<command line>"
#define LWLCNHUINHU 1
# 1 "<command line>"
#define LWLCNXLINHU 1
# 1 "<command line>"
#define LCNHMILNH 1
# 1 "<command line>"
#define LCSMNHMILNH 1
# 1 "<command line>"
#define LCCTF 1
# 1 "<command line>"
#define WR 1
# 1 "<command line>"
#define LCWRLICTF 1
# 1 "<command line>"
#define LCTFUICTF 1
# 1 "<command line>"
#define LCNHLICTF 1
# 1 "<command line>"
#define RG 1
# 1 "<command line>"
#define LCWRLIRGR 1
# 1 "<command line>"
#define LCRGR 1
# 1 "<command line>"
#define LWLCWRLIRGR 1
# 1 "<command line>"
#define LCRGUIRGR 1
# 1 "<command line>"
#define PJ 1
# 1 "<command line>"
#define NH 1
# 1 "<command line>"
#define LCPJU 1
# 1 "<command line>"
#define LCWRLIPJU 1
# 1 "<command line>"
#define LCPJUIPJU 1
# 1 "<command line>"
#define SZ 1
# 1 "<command line>"
#define UZ 1
# 1 "<command line>"
#define LCUZLISZT 1
# 1 "<command line>"
#define LWLCUZLISZT 1
# 1 "<command line>"
#define LCSZUISZT 1
# 1 "<command line>"
#define LCSZT 1
# 1 "<command line>"
#define PTSZUISZT 1
# 1 "<command line>"
#undef S1AP_REL851
# 1 "<command line>"
#define LSZV1 1
# 1 "<command line>"
#define SZTV1 1
# 1 "<command line>"
#define SZTV2 1
# 1 "<command line>"
#define EG 1
# 1 "<command line>"
#define LCEGT 1
# 1 "<command line>"
#define LCEGUIEGT 1
# 1 "<command line>"
#define CCPU_OPT 1
# 1 "<command line>"
#define LCEULIEGT 1
# 1 "<command line>"
#define CZ 1
# 1 "<command line>"
#define RS 1
# 1 "<command line>"
#define LCRSLICZT 1
# 1 "<command line>"
#define LWLCRSLICZT 1
# 1 "<command line>"
#define LCCZUICZT 1
# 1 "<command line>"
#define LCCZT 1
# 1 "<command line>"
#define PTCZUICZT 1
# 1 "<command line>"
#define ENB 1
# 1 "<command line>"
#define CMINET_BSDCOMPAT 1
# 1 "<command line>"
#define SS_TICKS_SEC 10
# 1 "<command line>"
#define CMFILE_REORG_1 1
# 1 "<command line>"
#define CM_INET2 1
# 1 "<command line>"
#define CMFILE_REORG_2 1
# 1 "<command line>"
#define SSINT2 1
# 1 "<command line>"
#define CMKV2 1
# 1 "<command line>"
#define HI_MULTI_THREADED 1
# 1 "<command line>"
#define YS_ENB_CFG 1
# 1 "<command line>"
#define SS_PERF 1
# 1 "<command line>"
#define SS_WL_REGION 1
# 1 "<command line>"
#define NO_ERRCLS 1
# 1 "<command line>"
#define NOERRCHK 1
# 1 "<command line>"
#define xSS_M_PROTO_REGION 1
# 1 "<command line>"
#define FP_RELEASE6 1
# 1 "<command line>"
#define CCPU_DEBUG_TRACE 1
# 1 "<command line>"
#define CCPU_MEAS_CPU 1
# 1 "<command line>"
#define DEBUGP 1
# 1 "<command line>"
#undef LTE_ENB_PERF
# 1 "<command line>"
#undef VE_PERF_MEAS
# 1 "<command line>"
#undef CM_PASN_DBG
# 1 "<command line>"
#define REL_850 1
# 1 "<command line>"
#undef UE_RAD_CAP
# 1 "<command line>"
#undef LTE_START_UL_DL_DATA
# 1 "<command line>"
#define SS_FLOAT 1
# 1 "<command line>"
#define RGR_RRM_TICK 1
# 1 "<command line>"
#define LTE_ENB_PAL 1
# 1 "<command line>"
#undef USE_PURE
# 1 "<command line>"
#define SLES9_PLUS 1
# 1 "<command line>"
#define TA_NEW 1
# 1 "<command line>"
#define SI_NEW 1
# 1 "<command line>"
#define RGR_SI_SCH 1
# 1 "<command line>"
#define VE_SRB2_SUPPORT 1
# 1 "<command line>"
#undef VE_SUPPORT_RLC_UM_MODE
# 1 "<command line>"
#undef NOFILESYS
# 1 "<command line>"
#undef LTE_LNX_AFFINITY
# 1 "<command line>"
#define RGR_V1 1
# 1 "<command line>"
#undef LTEMAC_MIMO
# 1 "<command line>"
#define LTE_HO_SUPPORT 1
# 1 "<command line>"
#define RS 1
# 1 "<command line>"
#define KW_BG_DL_PROC 1
# 1 "<command line>"
#define KW_BG_UL_PROC 1
# 1 "<command line>"
#define WR_SB_SCTP 1
# 1 "<command line>"
#define LTERRC_REL9 1
# 1 "<command line>"
#undef CTF_VER3
# 1 "<command line>"
#undef SSI_DEBUG_LEVEL1
# 1 "<command line>"
#define MME_LDBAL 1
# 1 "<command line>"
#define SZ_ENB 1
# 1 "<command line>"
#define EGTP_U_REL_9 1
# 1 "<command line>"
#define LEGV2 1
# 1 "<command line>"
#define YS_WIRESHARK_LOG 1
# 1 "<command line>"
#define MAC_SCH_STATS 1
# 1 "<command line>"
#define PHY_ERROR_LOGING 1
# 1 "<command line>"
#define SS_DIAG 1
# 1 "<command line>"
#define xLTE_L2_MEAS 1
# 1 "<command line>"
#define SZTV2 1
# 1 "<command line>"
#define WR_RELAY 1
# 1 "<command line>"
#define EU_DAT_APP 1
# 1 "<command line>"
#define EGTP_U 1
# 1 "<command line>"
#define NX 1
# 1 "<command line>"
#define PX 1
# 1 "<command line>"
#define UZ 1
# 1 "<command line>"
#define EU 1
# 1 "<command line>"
#define KW_PDCP 1
# 1 "<command line>"
#define KW 1
# 1 "<command line>"
#undef PTNXLIPJU
# 1 "<command line>"
#undef PTWRLIRGR
# 1 "<command line>"
#define DEBUGP 1
# 1 "<command line>"
#undef TFU_TDD
# 1 "<command line>"
#define TFU_WRR_2 1
# 1 "<command line>"
#define LCEGUIEGT 1
# 1 "<command line>"
#define LCWRLICTF 1
# 1 "<command line>"
#define LCWRLINHU 1
# 1 "<command line>"
#define xLCPJUIPJU 1
# 1 "<command line>"
#define LCWRLIRGR 1
# 1 "<command line>"
#undef LTE_TDD
# 1 "<command line>"
#define TA_NEW 1
# 1 "<command line>"
#define SI_NEW 1
# 1 "<command line>"
#define RGR_SI_SCH 1
# 1 "<command line>"
#undef WR_SM_LOG_TO_FILE
# 1 "<command line>"
#define DG 1
# 1 "<command line>"
#undef WR_DG_OAM
# 1 "<command line>"
#define VALIDATION_CHK 1
# 1 "<command line>"
#define WR_OAM_TEST 1
# 1 "<command line>"
#define WR_TEST_CODE 1
# 1 "<command line>"
#define WR_TEST_CLI 1
# 1 "<command line>"
#define ENB_OVRLOAD 1
# 1 "<command line>"
#undef MME_LDBAL
# 1 "<command line>"
#define SS_MT_TMR 1
# 1 "<command line>"
#define LCSMMILPJ 1
# 1 "<command line>"
#define LCPJMILPJ 1
# 1 "<command line>"
#define LCLPJ 1
# 1 "../..//enbapp/src/wr_smm_pdcp.c"


# 1 "../..//enbapp/src/wr.h" 1
# 91 "../..//enbapp/src/wr.h"
#define __WR_H__ 






# 1 "../..//mt/envopt.h" 1
# 94 "../..//mt/envopt.h"
#define __ENVOPTH__ 
# 179 "../..//mt/envopt.h"
#define LMINT3 



#define TDS_CORE2 
# 244 "../..//mt/envopt.h"
#define CMSS7_SPHDROPT 
# 3029 "../..//mt/envopt.h"
#define ATM 1
# 3563 "../..//mt/envopt.h"
#define SMSD_LMINT3 

#define SMSA_LMINT3 

#define SMSN_LMINT3 

#define SMSP_LMINT3 

#define SMST_LMINT3 

#define SMSI_LMINT3 






#define SMIA_LMINT3 

#define SMMA_LMINT3 

#define SMFN_LMINT3 
# 3593 "../..//mt/envopt.h"
#define SMIQ_LMINT3 

#define SMIN_LMINT3 
# 3611 "../..//mt/envopt.h"
#undef SMSD_LMINT3
#define SMSD_LMINT3 1




#undef SMSA_LMINT3
#define SMSA_LMINT3 1



#undef SMSN_LMINT3
#define SMSN_LMINT3 1



#undef SMSP_LMINT3
#define SMSP_LMINT3 1



#undef SMST_LMINT3
#define SMST_LMINT3 1



#undef SMSI_LMINT3
#define SMSI_LMINT3 1



#undef SMIA_LMINT3
#define SMIA_LMINT3 1



#undef SMMA_LMINT3
#define SMMA_LMINT3 1



#undef SMFN_LMINT3
#define SMFN_LMINT3 1
# 3677 "../..//mt/envopt.h"
#undef SMIQ_LMINT3
#define SMIQ_LMINT3 1



#undef SMIN_LMINT3
#define SMIN_LMINT3 1
# 10917 "../..//mt/envopt.h"
#define SS_RTR_SUPPORT 
# 10931 "../..//mt/envopt.h"
#define FCSPOSTINT 
# 10941 "../..//mt/envopt.h"
#define CONAVL 
#define STDIO_INCLD 
# 13449 "../..//mt/envopt.h"
#define MAP_MSC 0
#define IA_MSC 0





#define MAP_VLR 0
#define IA_VLR 0





#define MAP_HLR 0
#define IA_HLR 0




#define IA_SCP 0




#define MAP_GSN 0




#define MAP_REL99 0





#define MAP_REL98 0





#define MAP_MLC 0
# 14359 "../..//mt/envopt.h"
#define DG_MULTI_THREADED 
# 15869 "../..//mt/envopt.h"
#define SDT2 
# 16504 "../..//mt/envopt.h"
#undef SZ
#define SZ 1
# 18434 "../..//mt/envopt.h"
#undef NH
#define NH 1
# 18488 "../..//mt/envopt.h"
#define LWLCNHU 1
# 18530 "../..//mt/envopt.h"
#define LCLNH 1




#define LNH_VER1 
#define NHU_VER1 
# 18551 "../..//mt/envopt.h"
#undef RG
#define RG 1




#define RG_SC1 1
# 18566 "../..//mt/envopt.h"
#define RGU_DELTA 1

#define TFU_DELTA 2
# 18620 "../..//mt/envopt.h"
#define TFU_DLCNTRL_DLDELTA 2

#define TFU_DLDATA_DLDELTA 2

#define TFU_RECPREQ_DLDELTA 2


#define TFU_CRCIND_ULDELTA 2

#define TFU_HQFBKIND_ULDELTA 2
# 99 "../..//enbapp/src/wr.h" 2
# 1 "../..//cm/envdep.h" 1
# 94 "../..//cm/envdep.h"
#define __ENVDEPH__ 
# 188 "../..//cm/envdep.h"
#define SUNOS51 
# 236 "../..//cm/envdep.h"
#define ARGS(m) m






typedef void *Ptr;
# 431 "../..//cm/envdep.h"
#define PROC_SPARC 
#define UNIX 

#define INTERRPT 
#define ASM 
#define ISR_PUSH_ENV 
#define ISR_POP_ENV 
# 843 "../..//cm/envdep.h"
typedef unsigned char Bool;


typedef char S8;




typedef unsigned char U8;

typedef short S16;
typedef unsigned short U16;


typedef long S32;
typedef unsigned long U32;



__extension__ typedef long long S64;
__extension__ typedef unsigned long long U64;
# 877 "../..//cm/envdep.h"
typedef float F32;
typedef double F64;
# 892 "../..//cm/envdep.h"
typedef void Void;


typedef S8 (*PFS8) (void );
typedef S16 (*PFS16) (void );
typedef S32 (*PFS32) (void );
typedef Void (*PFVOID) (void );
typedef Void ( *PIF) (void );
# 1296 "../..//cm/envdep.h"
#define PUBLIC 






#define PRIVATE static






#define EXTERN extern




#define CONSTANT const
# 1353 "../..//cm/envdep.h"
#define INLINE 






#define VOLATILE volatile
# 1636 "../..//cm/envdep.h"
#define NULLP 0L
#define NULLD 0L

#define PTR U32
#define PTRSIZE sizeof(U32)

#define STKALIGN 4







#define REG1 register
#define REG2 register
#define REG3 register
#define REG4 register
#define REG5 register
#define REG6 register
#define REG7 register


#define REG8 register


#define FAR 
#define PTRSTRIDE 4
#define MEM_NONSEG 
# 1897 "../..//cm/envdep.h"
#define PTRALIGN(s) ((PTR)(s) % PTRSTRIDE ? ((PTR)(s) + (PTRSTRIDE - ((PTR)(s) % PTRSTRIDE))) : (PTR)(s))






#define DATAALIGN(s) ((Size)(s) % PTRSTRIDE ? ((Size)(s) - (PTRSTRIDE - ((Size)(s) % PTRSTRIDE))) : (Size)(s))




typedef U32 MFTYPE;




typedef S8 *ARGTYPE;

#define ARG(argp,type) *((type*)argp)

#define ARGINC(argp,type) argp=(ARGTYPE)(argp + (sizeof(type) < STKALIGN ? STKALIGN : sizeof(type)))







#define UNUSED(x) (x=x)
# 1982 "../..//cm/envdep.h"
#define TRC0(a) ;
# 2000 "../..//cm/envdep.h"
#define TRC1(a) ;
# 2019 "../..//cm/envdep.h"
#define TRC2(a) ;
# 2038 "../..//cm/envdep.h"
#define TRC3(a) ;
# 2056 "../..//cm/envdep.h"
#define TRC4(a) ;
# 2102 "../..//cm/envdep.h"
#define RETVOID return
#define RETVALUE(v) return(v)
# 2160 "../..//cm/envdep.h"
#define MIN(x,y) ((x) > (y) ? (y) : (x))






#define MAX(x,y) ((x) > (y) ? (x) : (y))
# 100 "../..//enbapp/src/wr.h" 2
# 1 "../..//cm/envind.h" 1
# 94 "../..//cm/envind.h"
#define __ENVINDH__ 
# 143 "../..//cm/envind.h"
#define FALSE 0






#define TRUE 1



#define NO 0
#define YES 1

#define OFF 0
#define ON 1

#define OK 0
#define FAIL (-1)

#define BASE10 10
#define BASE16 16




#define A_NULL 0x00
#define A_SOH 0x01
#define A_STX 0x02
#define A_ETX 0x03
#define A_EOT 0x04
#define A_ENQ 0x05
#define A_ACK 0x06
#define A_BELL 0x07
#define A_BS 0x08
#define A_HT 0x09
#define A_LF 0x0a
#define A_VT 0x0b
#define A_FF 0x0c
#define A_CR 0x0d
#define A_SO 0x0e
#define A_SI 0x0f
#define A_DLE 0x10
#define A_DC1 0x11
#define A_DC2 0x12
#define A_DC3 0x13
#define A_DC4 0x14
#define A_NAK 0x15
#define A_SYN 0x16
#define A_ETB 0x17
#define A_CAN 0x18
#define A_EM 0x19
#define A_SUB 0x1A
#define A_ESC 0x1B
#define A_FS 0x1C
#define A_GS 0x1D
#define A_RS 0x1E
#define A_US 0x1F
#define A_SP 0x20
#define A_EXCLAIM 0x21
#define A_DBLQUO 0x22
#define A_POUND 0x23
#define A_DOLLAR 0x24
#define A_PERCENT 0x25
#define A_AND 0x26
#define A_SNGQUO 0x27
#define A_LTPARENT 0x28
#define A_RTPARENT 0x29
#define A_ASTERISK 0x2A
#define A_PLUS 0x2B
#define A_COMMA 0x2C
#define A_HYPHEN 0x2D
#define A_PERIOD 0x2E
#define A_FWDSL 0x2F
#define A_0 0x30
#define A_1 0x31
#define A_2 0x32
#define A_3 0x33
#define A_4 0x34
#define A_5 0x35
#define A_6 0x36
#define A_7 0x37
#define A_8 0x38
#define A_9 0x39
#define A_COLON 0x3A
#define A_SCOLON 0x3B
#define A_LT 0x3C
#define A_EQUAL 0x3D
#define A_GT 0x3E
#define A_QMARK 0x3F
#define A_AMPER 0x40
#define A_UP_A 0x41
#define A_UP_B 0x42
#define A_UP_C 0x43
#define A_UP_D 0x44
#define A_UP_E 0x45
#define A_UP_F 0x46
#define A_UP_G 0x47
#define A_UP_H 0x48
#define A_UP_I 0x49
#define A_UP_J 0x4A
#define A_UP_K 0x4B
#define A_UP_L 0x4C
#define A_UP_M 0x4D
#define A_UP_N 0x4E
#define A_UP_O 0x4F
#define A_UP_P 0x50
#define A_UP_Q 0x51
#define A_UP_R 0x52
#define A_UP_S 0x53
#define A_UP_T 0x54
#define A_UP_U 0x55
#define A_UP_V 0x56
#define A_UP_W 0x57
#define A_UP_X 0x58
#define A_UP_Y 0x59
#define A_UP_Z 0x5A
#define A_BKSL 0x5C
#define A_LW_A 0x61
#define A_LW_B 0x62
#define A_LW_C 0x63
#define A_LW_D 0x64
#define A_LW_E 0x65
#define A_LW_F 0x66
#define A_LW_G 0x67
#define A_LW_H 0x68
#define A_LW_I 0x69
#define A_LW_J 0x6A
#define A_LW_K 0x6B
#define A_LW_L 0x6C
#define A_LW_M 0x6D
#define A_LW_N 0x6E
#define A_LW_O 0x6F
#define A_LW_P 0x70
#define A_LW_Q 0x71
#define A_LW_R 0x72
#define A_LW_S 0x73
#define A_LW_T 0x74
#define A_LW_U 0x75
#define A_LW_V 0x76
#define A_LW_W 0x77
#define A_LW_X 0x78
#define A_LW_Y 0x79
#define A_LW_Z 0x7A
#define A_DEL 0x7F
#define A_INVCHR 0xFF

#define IA5MAX 128
# 301 "../..//cm/envind.h"
#define ABS(x) ((x) < 0 ? -(x) : x)




#define GetHiByte(w) (((U16)(w) >> 8) & 0xff)
#define GetLoByte(w) ((U16)(w) & 0xff)
#define GetHiWord(l) (((U32)(l) >> 16) & 0xffffL)
#define GetLoWord(l) ((U32)(l) & 0xffffL)
# 319 "../..//cm/envind.h"
#define PutHiByte(w,b) (U16) (((U16)(b) << 8) | ((U16)(w) & 0x00ff))
#define PutLoByte(w,b) (U16) (((U16)(b) & 0xff) | ((U16)(w) & 0xff00))
#define PutHiWord(l,w) (U32) (((U32)(w) << 16) | ((U32)(l) & (U32)0x0000ffff))
#define PutLoWord(l,w) (U32) (((U32)(w) & 0xffff) | ((U32)(l) & (U32)0xffff0000))







#define Char(c) ((c) & 0x7f)
#define Byte(c) ((c) & 0xff)
#define Word(c) ((c) & 0xffffL)

#define IsOdd(c) (((c % 2) == 1) ? TRUE:FALSE)
#define IsEven(c) (((c % 2) == 0) ? TRUE:FALSE)

#define StripPar(c) ((c) & 0x7f)




#define AIsUpper(c) ((c>=A_UP_A) && (c<=A_UP_Z))
#define AIsLower(c) ((c>=A_LW_A) && (c<=A_LW_Z))
#define AIsAlpha(c) (AIsUpper(c) || AIsLower(c))
#define AIsDigit(c) ((c>=A_0) && (c<=A_9))
#define AIsSpace(c) ((c==A_SP) || (c==A_HT) || (c==A_LF))
#define AIsWhite(c) ((c==A_SP) || (c==A_HT) || (c==A_LF))
#define AToUpper(c) (AIsLower(c) ? (c+A_UP_A-A_LW_A):(c))
#define AToLower(c) (AIsUpper(c) ? (c+A_LW_A-A_UP_A):(c))

#define AIsAscii(c) ((c>=A_SP) && (c<A_DEL))
#define AIsXupper(c) ((c>=A_UP_A) && (c<=A_UP_F))
#define AIsXlower(c) ((c>=A_LW_A) && (c<=A_LW_F))
#define AIsXdigit(c) (AIsDigit(c) || AIsXupper(c) || AIsXlower(c))
#define AIsCntrl(c) (((c>=A_NULL) && (c<A_SP)) || (c==A_DEL))

#define ACmdDelim(c) ((c == A_CR) || (c == A_PLUS))
# 101 "../..//enbapp/src/wr.h" 2

# 1 "../..//cm/gen.h" 1
# 91 "../..//cm/gen.h"
#define __GENH__ 
# 169 "../..//cm/gen.h"
#define SUOWN 0
#define SPOWN 1



#define FLCNOTALLOW 0
#define FLCALLOW 1



#define WDWNOTALLOW 0



#define STATE_DISCONNECTED 0x00
#define STATE_CONNECTING 0x01
#define STATE_CONNECTED 0x02
#define STATE_DISCONNECTING 0x03


#define MAX_PROTADDR_LEN 16


#define MAX_PROT_ADDRS 4



#define ADRLEN 20
#define SHRTADRLEN 32
#define LNGADRLEN 64



#define NOTPRSNT 0
#define PRSNT_NODEF 1
#define PRSNT_DEF 2

#define MF_SIZE_TKNSTRS 22
#define MF_SIZE_TKNSTRM 32
#define MF_SIZE_TKNSTR 132
#define MF_SIZE_TKNSTRE 255
#define MF_SIZE_TKNBITS 7
#define TP_SIZE_TKNSTR 8


#define MA_MF_EXTCONT_SIZE 20


#define FRMRLY 1
#define MACINT 2






#define SSF_INTER 0
#define SSF_NAT 2

#define PRI_ZERO 0
#define PRI_ONE 1
#define PRI_TWO 2



#define FROM_LWR 1
#define FROM_UPR 2

#define MOD15 0x0f
#define NOTUSED 0

#define DIR_OUT 1
#define DIR_INC 2

#define PRESALLOW 0
#define PRESREST 1
#define MFROK 0
#define MFRFAILED 1
#define MFREOM 2
# 970 "../..//cm/gen.h"
#define S_DEF 0x00
#define S_8KHZINTEG 0x01
#define S_SDUINTEG 0x04
#define S_UNSTRUCT 0x07



#define MAX_ST_STRING 256




#define SEL_LC_NEW 0
#define SEL_LC_OLD 1



#define OWNPROCID 0
#define SP_POOL 0x00
#define SU_POOL 0x00



#define SMREGION 1
#define SMPOOL 0





#define TCFG 1
#define TCNTRL 2
#define TSTS 3
#define TSSTA 4
#define TUSTA 5
#define TTRC 6
#define TACNT 7
#define TUDAT 8
#define TWRMSTRT 9
#define TSWP 10
#define TSNAP 11
#define TUCFG 12
#define TSNMP 13
#define TOBJ 14
#define TMIB 15

#define TAUDT 16



#define STGEN 1
#define STTSAP 2
#define STNSAP 3
#define STLLSAP 4
#define STDLSAP 5
#define STMSAP 6
#define STPSAP 7
#define STSID 8
#define STHG 9
#define STROUT 10
#define STDLC 11
#define STINTCUG 12
#define STBCHNPROF 13
#define STPVC 14
#define STMCGRP 15
#define STFRROUT 16
#define STDCHAN 17
#define STADRMAP 18
#define STDELADRMAP 19

#define STLOOP 20
#define STREG 21
#define STDPOOL 22
#define STSPOOL 23
#define STDQ 24
#define STENT 25
#define STTSK 26

#define STDELROUT 30
#define STDELPVC 31
#define STIFDSTADR 32

#define STLNKSET 33
#define STISAP 34
#define STICIR 35
#define STSPSAP 36
#define STTCUSAP 37
#define STTPSAP 38
#define STTPCIR 39
#define STVCC 40
#define STCGPTYNMB 41
#define STWPSAP 42
#define STAALSAP 43
#define STLANDST 44
#define STLES 45
#define STBUS 46



#define STDLSAPACT 47
#define STDLSAPDIS STDLSAP
#define STTFCMTRC 49
#define STPNNBR 50
#define STPNPTSE 51
#define STLECS 52
#define STLECSLES 53
#define STLECSROUT 54
#define STERR 55

#define STMAP 56
#define STMAPNODE 57
#define STRCC 58
#define STRTEADDR 59
#define STRTENODE 60
#define STRTETNS 61
#define STRTETBL 62
#define STPNPG 63
#define STLINK 64
#define STINFOGRP 65

#define STNISAP 66
#define STSISAP 67
#define STPROF 68
#define STNETPFX 69
#define STUSRPART 70
#define STADDR 71
#define STSRVC 72
#define STCIPSAP 73


#define STEVEFADR 74


#define STHLHP 75
#define STSUMMADDR 76


#define STSTAARP 77


#define STTDM 78



#define STLECSMPOATLV 79

#define STMPCCP 80
#define STMPSAP 81
#define STMPSCP 82


#define STGRTSAP 85
#define STGRNSAP 86
#define STGRDLSAP 87
#define STALLSAP 88
#define STPEERSAP 89


#define STVINTERFACE 83
#define STVPORT 84
#define STVLINK 85


#define STCIPPVC 86

#define STCIPARP 87




#define STSIGCONPARAM 90
#define STDELSIGPARAM 91


#define STVPROC 92
#define STPPROC 93
#define STASSOC 94



#define STSERVER 95


#define STLECSTLV 96
#define STLESLEC 97
#define STLESSMS 98
#define STLESLECSMS 99
#define STBUSLEC 100
#define STSMS 101
#define STSMSGRP 102
#define STSMSLEC 103


#define STMASAP 104


#define STTFCMTRCNODE 105

#define STNHSSAP 106
#define STMPSDISCTBL 107
#define STMPSINGRTBL 108
#define STMPSEGRTBL 109
#define STARISAP 110

#define STNHSCP 111
#define STNHSNXTHOP 112
#define STNHSTRCACHE 113
#define STNHSEXTNS 114
#define STNHSEGRCACHE 115
#define STNHSVENDATA 116


#define STSSAP 117
#define ST323ENT 118
#define STCALL 119
#define STGRSSAP 120


#define STVPC 121

#define STCIPSRVR 122


#define STSESSION 123


#define STCTLDPCB 124

#define STGCPENT 125


#define STNW 126
#define STASSO 127
#define STDELASSO 128


#define STSRVCTYPE 129
#define STSRVCCONNINFO 130
#define STAALPROFILE 131


#define STPEER 132
#define STFEC 133
#define STEXPRTE 134
#define STRMSAP 135
#define STINT 136
#define STROUTSAP 137
#define STFWDSAP 138
#define STSESS 139
#define STADDRESS 140


#define STALTSAP 141
#define STSNTSAP 142
#define STGRALTSAP 143
#define STGRSNTSAP 144
#define STPATH 145
#define STDPC 146


#define STBE 147
#define STGRBESAP 148
#define STTPTSRV 149
#define STDESC 150

#define STPXYSAP 151
#define STCIPARPENT 152
#define STMACONLST 153
#define STMACON 154



#define STSIPENT 155


#define STGCPMGC 156
#define STGCPMG 157


#define STLWRSAP 158


#define STNIDPC 159
#define STNWSS7 160
#define STTRFLIM 161
#define STMSGIMP 162


#define STDELNW 163
#define STDELTSAP 164
#define STDELNSAP 165


#define STCRSAP 166
#define STRLSAP 167
#define STMKSAP 168


#define STNBUSAP 169
#define STIBPROT 170


#define STLASAP 171
#define STNBR 172
#define STRVINT 173
#define STLTSAP 174


#define STCSAP 175
#define STUSAP 176
#define STTPTENDP 177


#define STLSAP 178
#define STRRSAP 179


#define STCTSAP 180


#define STTCSAP 181


#define STPDCPENT 182

#define STINST 183



#define STCKWSAP 184
#define STKWUSAP 185
#define STRGUSAP 186

#define STCPJSAP 187
#define STPJUSAP 188




#define AENA 1
#define ADISIMM 2
#define ADISGRC 3
#define ARST 4
#define ADGN 5
#define AADD 6
#define ADEL 7
#define AINH 8
#define AUNINH 9
#define ASPRST 10
#define AACTLNKSET 11
#define ADEACTLNKSET 12
#define AVAL 13
#define AFLCON 14
#define AFLCOFF 15
#define ACLEAR 16
#define ASTRTLL 17
#define AENDLL 18
#define ACTION_DROP 19
#define ACTION_NO_DROP 20
#define ABND_ENA 21
#define ARSTVCC 22
#define ARSTVPC 23



#define AFORCE_PRV 24
#define AFORCE_EM 25
#define ACLR_FORCE_MD 26
#define ACTION_LPO 27
#define ACTION_LPR 28
#define APRV_UNS 29

#define ABND 30
#define AUBND 31
#define AUBND_DIS AUBND




#define ADELROUT 32
#define ADELLNKSET 33

#define ADELCMBLNKSET 34
#define ADELLNK 35
#define ASHUTDOWN 36
#define ATRAP 37
#define AGEN_STA 38


#define AGO_ACT 38
#define AGO_SBY 39
#define AWARMSTART 40
#define AABORT 41
#define ASYNCHRONIZE 42
#define ANOACT 43
#define AHOLDQUEUE 44
#define ARLSQUEUE 45
#define APEER_PING 46
#define ADIS_PEER_SAP 47
#define AGEN_FAULT 48
#define AAUDIT 49
#define ADISIMM_L2 50
#define ADEACTLNKSET_L2 51

#define AGEN_MSG 52


#define ASNDTRIGG 53

#define AXIDINI 54
#define APMLEN 55


#define AADD_BCHAN 56
#define ADEL_BCHAN 57
#define AMOOS 58
#define ASRVMSG_ON 59
#define ASRVMSG_OFF 60
#define ARESTART 61


#define AMODIFY 62


#define ASTOPRST 63
#define ABLK 64
#define AUBLK 65


#define AHANDOFF 66
#define AMATEDCFG_ADD 67
#define AMATEDCFG_RMV 68

#define AFAILOVER 69

#define AADD_ASSOC_TPTSRV 70
#define ADEL_ASSOC_TPTSRV 71


#define ACONG 72

#define ASTRTOAMLL 72
#define AENDOAMLL 73
#define ASTRTPMG 74
#define AENDPMG 75
#define ASTRTPM 76
#define ASTRTPG 77
#define ASTRTPMLL 78
#define AENDPMLL 79
#define ARSTPM 80

#define AMODABORT 81
#define AADD_ASSOC_ENDP 82
#define ADEL_ASSOC_ENDP 83


#define AADD_OPC 84
#define ADEL_OPC 85


#define ASTRT_AUDIT 90
#define ASTOP_AUDIT 91
#define ASTRT_LNK_AUDIT 92
#define ASTRT_LNKSET_AUDIT 93
#define ASTRT_RTE_AUDIT 94
#define ASTOP_LNK_AUDIT 95
#define ASTOP_LNKSET_AUDIT 96
#define ASTOP_RTE_AUDIT 97
# 1448 "../..//cm/gen.h"
#define AEOPENR 100
#define AECLOSER 101
#define AESTABLISH 102
#define ATERMINATE 103
#define AHBEAT_ENB_ASSOC 104
#define AHBEAT_DIS_ASSOC 105
#define AHBEAT_ENB_DSTADDR 106
#define AHBEAT_DIS_DSTADDR 107



#define SAELMNT 1
#define SAACNT 2
#define SAUSTA 3
#define SATRC 4
#define SADBG 5
#define SALOG 6



#define SAGR_DSTPROCID 6
#define SAGR_ROUTE 7
#define SAGR_PRIORITY 8
#define SAENA_PEER_SAP 9
#define SADIS_PEER_SAP 10
#define SAAUD 11

#define SADNS 12


#define SATRFLIM 13
#define SAREPORT 14

#define SAGR_GENERIC_MAX 20


#define HU_RUNREQ 12
#define HU_PROCEEDREQ 13


#define MIBOPCODEBASE 1000
#define MIB_REQUEST_GET 0
#define MIB_REQUEST_GET_NEXT 1

#define MIB_REQUEST_SET 3


#define MIBSTATUSBASE 1000
#define MIB_SUCCESS 0
#define MIB_NOSUCHNAME 2
#define MIB_INVALID_IDX (MIBSTATUSBASE + 1)

#define MIB_INVALID_OPCODE (MIBSTATUSBASE + 3)

#define MIB_END_ALL_TABLES (MIBSTATUSBASE + 4)

#define MIB_SUCCESS_NEXT_AVL_OBJ (MIBSTATUSBASE + 6)





#define TL1FRMRX 0
#define TL1FRMTX 1
#define TL2FRMRX 2
#define TL2FRMTX 3
#define TL2TMR 4
#define TL3PKTRX 5
#define TL3PKTTX 6
#define TL3TMR 7
#define TL7FRMRX 8
#define TL7FRMTX 9
#define TL7TMR 10
#define TL5MSGTX 11
#define TL5MSGRX 12



#define ZEROSTS 0
#define NOZEROSTS 1



#define THRSHA 0

#define THRSHB 1

#define THRSHC 2

#define THRSHD 3

#define THRSHE 4


#define LSAP 1
#define XTSAP 2





#define IGNORE 0


#define X25LINK 0
#define X75LINK 1

#define USER 0
#define NETWORK 1
#define SYM_USER 2



#define ENTR_CONG 1
#define EXIT_CONG 2
#define PROT_ST_UP 3
#define PROT_ST_DN 4
#define PROT_ERR 5
#define INV_REM 6
#define LINK_ALIGNED 7
#define ALIGN_LOST 8
#define ELEC_DOWN 9
#define ELEC_UP 10
#define REG_DOWN 11
#define REG_UP 12
#define INH_DEN 13
#define INH_ACK 14
#define UNINHED 15
#define UNINH_DEN 16
#define CONG_LVL_1 17
#define CONG_LVL_2 18
#define CIR_OUT_ORD 19
#define CIRMGT_NORESP 20
#define CIR_INVAL 21
#define CIR_VAL_FAIL 22
#define CIR_VAL_SUCC 23
#define CIC_INVAL 24
#define CONT_FAIL 25
#define CIR_UNEQUIP 49
#define RMT_BLKD 50
#define RMT_UNBLKD 51
#define CIR_IN_SERV 52
#define TERM_INIT_FAIL 53
#define ERROR_LOG 54

#define INV_EVENT (ERROR_LOG + 1)




#define SW_CCITT 1
#define SW_ITU 1
#define SW_CCITT88 1
#define SW_ANSI 2
#define SW_ANSI88 2
#define SW_ANSI92 3
#define SW_CCITT92 4
#define SW_SINGTEL 4
#define SW_Q767 5
#define SW_CHINA 6


#define SW_JAPAN 7
# 1908 "../..//cm/gen.h"
#define LCM_PRIM_OK 0
#define LCM_PRIM_NOK 1
#define LCM_PRIM_OK_NDONE 2


#define LCM_REASON_NOT_APPL 0
#define LCM_REASON_INVALID_ENTITY 1
#define LCM_REASON_INVALID_INSTANCE 2
#define LCM_REASON_INVALID_MSGTYPE 3
#define LCM_REASON_MEM_NOAVAIL 4
#define LCM_REASON_INVALID_ELMNT 5
#define LCM_REASON_RECONFIG_FAIL 6
#define LCM_REASON_REGTMR_FAIL 7
#define LCM_REASON_GENCFG_NOT_DONE 8
#define LCM_REASON_INVALID_ACTION 9
#define LCM_REASON_INVALID_SUBACTION 10
#define LCM_REASON_INVALID_STATE 11
#define LCM_REASON_INVALID_SAP 12
#define LCM_REASON_INVALID_PAR_VAL 13
#define LCM_REASON_QINIT_FAIL 15
#define LCM_REASON_NEG_CFM 16
#define LCM_REASON_UPDTMR_EXPIRED 17
#define LCM_REASON_MISC_FAILURE 18
#define LCM_REASON_EXCEED_CONF_VAL 19
#define LCM_REASON_HASHING_FAILED 20
#define LCM_REASON_PEERCFG_NOT_DONE 21
#define LCM_REASON_PRTLYRCFG_NOT_DONE 22

#define LCM_REASON_INV_RSET 23
#define LCM_REASON_INV_RSET_RANGE 24
#define LCM_REASON_INV_RSET_TYPE 25
#define LCM_REASON_INV_RSET_QUAL 26
#define LCM_REASON_INV_INTERFACE 27
#define LCM_REASON_INV_DIST_TYPE 28
#define LCM_REASON_INV_DIST_QUAL 29
#define LCM_REASON_NAK_RCVD 30
#define LCM_REASON_TIMEOUT 31
#define LCM_REASON_PURE_FTHA 32

#define LCM_REASON_DIST_FTHA 33

#define LCM_REASON_INV_KEY 34
#define LCM_REASON_SW_INCOMP 35


#define LCM_REASON_VERSION_MISMATCH 36
#define LCM_REASON_SWVER_NAVAIL 37
#define LCM_REASON_INVALID_RTENT 38

#define LCM_REASON_MAXSPC_EXCEEDING 39
#define LCM_REASON_WRONG_DEFAULT_SPC 40
#define LCM_REASON_SPC_EXISTS 41
#define LCM_REASON_MINSPC_REACHED 42
#define LCM_REASON_MORE_SPC_THAN_CONFIGURED 43
#define LCM_REASON_DFL_SPC_DEL_NOT_ALLOWED 44
#define LCM_REASON_NOTHING_TO_DELETE 45
#define LCM_REASON_SPC_ALREADY_DELETED 46

#define LCM_REASON_LYR_SPECIFIC 256


#define LCM_REASON_ASP_CONFIG 47
#define LCM_REASON_ULLOCK_INIT_FAILED 48


#define LCM_CATEGORY_PROTOCOL 1
#define LCM_CATEGORY_INTERFACE 2
#define LCM_CATEGORY_INTERNAL 3
#define LCM_CATEGORY_RESOURCE 4
#define LCM_CATEGORY_PSF_FTHA 5
#define LCM_CATEGORY_PERF_MONIT 6


#define LCM_CATEGORY_LYR_SPECIFIC 256


#define LCM_EVENT_UI_INV_EVT 1
#define LCM_EVENT_LI_INV_EVT 2
#define LCM_EVENT_PI_INV_EVT 3
#define LCM_EVENT_INV_EVT 4
#define LCM_EVENT_INV_STATE 5
#define LCM_EVENT_INV_TMR_EVT 6
#define LCM_EVENT_MI_INV_EVT 7
#define LCM_EVENT_BND_FAIL 8
#define LCM_EVENT_NAK 9
#define LCM_EVENT_TIMEOUT 10
#define LCM_EVENT_BND_OK 11
#define LCM_EVENT_SMEM_ALLOC_FAIL 12
#define LCM_EVENT_DMEM_ALLOC_FAIL 13

#define LCM_EVENT_SEQERR 14
#define LCM_EVENT_OOM 15
#define LCM_EVENT_UPDMSG_ERR 16
#define LCM_EVENT_HTBT_EXP 17
#define LCM_EVENT_TRANSLATION_FAILURE 18


#define LCM_EVENT_LYR_SPECIFIC 256


#define LCM_CAUSE_UNKNOWN 0
#define LCM_CAUSE_OUT_OF_RANGE 1
#define LCM_CAUSE_INV_SAP 2
#define LCM_CAUSE_INV_SPID 3
#define LCM_CAUSE_INV_SUID 4
#define LCM_CAUSE_INV_NETWORK_MSG 5
#define LCM_CAUSE_DECODE_ERR 6
#define LCM_CAUSE_USER_INITIATED 7
#define LCM_CAUSE_MGMT_INITIATED 8
#define LCM_CAUSE_INV_STATE 9
#define LCM_CAUSE_TMR_EXPIRED 10
#define LCM_CAUSE_INV_MSG_LENGTH 11
#define LCM_CAUSE_PROT_NOT_ACTIVE 12
#define LCM_CAUSE_INV_PAR_VAL 13
#define LCM_CAUSE_NEG_CFM 14
#define LCM_CAUSE_MEM_ALLOC_FAIL 15
#define LCM_CAUSE_HASH_FAIL 16
#define LCM_CAUSE_VERSION_MISMATCH 17
#define LCM_CAUSE_SWVER_NAVAIL 18
#define LCM_CAUSE_DLGFAIL_DUETO_RECOVERY 19
#define LCM_CAUSE_INV_ACTION 20

#define LCM_CAUSE_NETWK_INITIATED 21
#define LCM_CAUSE_LYR_SPECIFIC 256




#define LMSIF 1
#define LNSIF 2
#define LRYIF 3
#define LAMIF 4
#define LASIF 5
#define LPNIF 6
#define LACIF 7
#define LECIF 8
#define LESIF 9
#define LUMIF 10
#define LIMIF 11
#define LSAIF 12
#define LSEIF 13
#define LISIF 14
#define LQIIF 15
#define LPQIF 16
#define LSDIF 17
#define LSNIF 18
#define LSPIF 19
#define LSTIF 20
#define LIEIF 21
#define LQCIF 22
#define LTTIF 23
#define LMAIF 24
#define LSIIF 25
#define LTPIF 26
#define LSRIF 27
#define LINIF 28
#define LXNIF 29
#define LBDIF 30
#define LAPIF 31
#define LFRIF 32
#define LMEIF 33
#define LWDIF 34
#define LWNIF 35
#define LWIIF 36
#define LWUIF 37
#define LWSIF 38
#define LWCIF 39
#define LBIIF 40
#define LFMIF 41
#define LFNIF 42
#define LEVIF 43
#define LLVIF 44
#define LNVIF 45
#define LVFIF 46
#define LIXIF 47
#define LFAIF 48
#define LPLIF 49
#define LAFIF 50
#define LCVIF 51
#define LMVIF 52
#define LBVIF 53
#define LLKIF 54
#define LPVIF 55
#define LCCIF 56
#define LZCIF 57
#define LRMIF 58
#define LZRIF 59
#define LRTIF 60
#define LZSIF 61
#define LSFIF 62
#define LXMIF 63
#define LBWIF 64
#define LIWIF 65
#define LQWIF 66
#define LAWIF 67
#define LZTIF 68
#define LDTIF 69
#define LZPIF 70
#define LZNIF 71
#define LZIIF 72
#define LZQIF 73
#define LZMIF 74
#define LSGIF 75
#define LSHIF 76
#define LMRIF 77
#define LPRIF 78
#define LGNIF 79
#define LGTIF 80
#define LGLIF 81
#define LGGIF 82
#define LGSIF 83
#define LHCIF 84
#define LHIIF 85
#define LHRIF 86
#define LIQIF 87
#define LMGIF 88
#define LDNIF 89
#define LDPIF 90
#define LLNIF 91
#define LPAIF 92
#define LALIF 93
#define LSBIF 94
#define LSOIF 95
#define LITIF 96
#define LNFIF 97
#define LIDIF 98
#define LNDIF 99
#define LSUIF 100
#define LNPIF 101
#define LRAIF 102
#define LZGIF 103
#define LDGIF 104
#define LRNIF 105
#define LZJIF 106
#define LZFIF 107
#define LGMIF 108
#define LZKIF 109

#define LAEIF 110

#define LYTIF 111


#define AALIF 150
#define ALTIF 151
#define AMTIF 152
#define APLIF 153
#define ARIIF 154
#define ASDIF 155
#define ASIIF 156
#define BITIF 157
#define CCTIF 158
#define CIPIF 159
#define DATIF 160
#define ECMIF 161
#define EVTIF 162
#define FNTIF 163
#define FRDIF 164
#define GBRIF 165
#define GGUIF 166
#define GLSIF 167
#define GNSIF 168
#define GSPIF 169
#define HCTIF 170
#define HGTIF 171
#define HITIF 172
#define HRTIF 173
#define IATIF 174
#define IETIF 175
#define IFPIF 176
#define INTIF 177
#define MACIF 178
#define MATIF 179
#define MDPIF 180
#define MGTIF 181
#define MPAIF 182
#define MVTIF 183
#define NUIIF 184
#define NVTIF 185
#define PCIIF 186
#define PXYIF 187
#define RLSIF 188
#define RMTIF 189
#define RTTIF 190
#define RYTIF 191
#define SCTIF 192
#define SDTIF 193
#define SFTIF 194
#define SITIF 195
#define SNTIF 196
#define SPTIF 197
#define STUIF 198
#define TCTIF 199
#define TPTIF 200
#define TUTIF 201
#define UMEIF 202
#define VFTIF 203
#define WITIF 204
#define WNTIF 205
#define WUTIF 206
#define XMTIF 207
#define XNTIF 208
#define RPTIF 209
#define RNTIF 210
#define CAPIF 211
#define LFPIF 212
#define FPUIF 213
#define CMKIF 214
#define MKUIF 215
#define PHUIF 216
#define GMUIF 212

#define SZTIF 213


#define SGPIF 250
#define SHPIF 251
#define MRPIF 252
#define ZNPIF 253
#define ZPPIF 254
#define ZTPIF 255
#define ZIPIF 256
#define ZQPIF 257
#define ZMPIF 258
#define ZCPIF 259
#define ZRPIF 260
#define ZSPIF 261
#define ZAPIF 262
#define ZGPIF 263
#define ZBPIF 264
#define ZVPIF 265
#define ZJPIF 266
#define ZFPIF 267
#define ZLPIF 268
#define ZKPIF 269

#define AEPIF 270

#define YTPIF 271

#define HWPIF 272


#define MAX_INTF 2


#define MAX_ISNI_NID 0x07
#define MAX_INS_NID 0x02




#define LOOPBACK_MODE 0
#define TESTING_MODE 1
#define HARDWARE_MODE 2


#define CM_BND_OK 1
#define CM_BND_NOK 2


#define CM_IPV4ADDR_TYPE 4
#define CM_IPV6ADDR_TYPE 6






#define DBGMASK_SI 0x00000001
#define DBGMASK_MI 0x00000002
#define DBGMASK_UI 0x00000004
#define DBGMASK_LI 0x00000008
#define DBGMASK_PI 0x00000010
#define DBGMASK_PLI 0x00000020

#define DBGMASK_LYR 0x00000100
# 2322 "../..//cm/gen.h"
#define DBGP(_tskInit,_layerName,_msgClass,_arg) { if ((_tskInit)->dbgMask & (_msgClass)) { sprintf((_tskInit)->prntBuf, "[%s 0x%x:%x] %s:%d ", _layerName, (_tskInit)->ent, (_tskInit)->inst, __FILE__, __LINE__); SPrint((_tskInit)->prntBuf); sprintf _arg; SPrint((_tskInit)->prntBuf); } }
# 2456 "../..//cm/gen.h"
#define CBUF_INIT(_class,size) 
#define CBUF_WRITE(_class,_argList) 
#define CBUF_DATA_PRINT(_class) 
# 2471 "../..//cm/gen.h"
#define cmPkBool(x,mBuf) SPkU8(x, mBuf)
#define cmPkStatus(x,mBuf) SPkS16(x, mBuf)
#define cmPkTicks(x,mBuf) SPkU32(x, mBuf)
#define cmPkQLen(x,mBuf) SPkS16(x, mBuf)
#define cmPkOrder(x,mBuf) SPkS16(x, mBuf)
#define cmPkData(x,mBuf) SPkU8(x, mBuf)
#define cmPkRandom(x,mBuf) SPkU16(x, mBuf)
#define cmPkSeq(x,mBuf) SPkS16(x, mBuf)
#define cmPkReason(x,mBuf) SPkS16(x, mBuf)
#define cmPkProcId(x,mBuf) SPkU16(x, mBuf)
#define cmPkVectNmb(x,mBuf) SPkS16(x, mBuf)
#define cmPkPrior(x,mBuf) SPkU8(x, mBuf)
#define cmPkPriority(x,mBuf) cmPkPrior(x, mBuf)
#define cmPkRoute(x,mBuf) SPkU8(x, mBuf)
#define cmPkTtype(x,mBuf) SPkS16(x, mBuf)
#define cmPkSema(x,mBuf) SPkS8(x, mBuf)
#define cmPkTxt(x,mBuf) SPkS8(x, mBuf)
#define cmPkEnt(x,mBuf) SPkU8(x, mBuf)
#define cmPkInst(x,mBuf) SPkU8(x, mBuf)
#define cmPkElmnt(x,mBuf) SPkS16(x, mBuf)
#define cmPkElmntInst1(x,mBuf) SPkS16(x, mBuf)
#define cmPkElmntInst2(x,mBuf) SPkS16(x, mBuf)
#define cmPkElmntInst3(x,mBuf) SPkS16(x, mBuf)
#define cmPkRegion(x,mBuf) SPkU8(x, mBuf)
#define cmPkPool(x,mBuf) SPkU8(x, mBuf)



#define cmPkMsgLen(x,mBuf) SPkS16(x, mBuf)




#define cmPkSize(x,mBuf) SPkU32(x, mBuf)




#define cmPkSelector(x,mBuf) SPkU8(x, mBuf)
#define cmPkEvent(x,mBuf) SPkU8(x, mBuf)
#define cmPkCntr(x,mBuf) SPkS32(x, mBuf)
#define cmPkStsCntr(x,mBuf) SPkU32(x, mBuf)
#define cmPkLnkNmb(x,mBuf) SPkS16(x, mBuf)
#define cmPkSuId(x,mBuf) SPkS16(x, mBuf)
#define cmPkSpId(x,mBuf) SPkS16(x, mBuf)
#define cmPkSuInstId(x,mBuf) SPkS16(x, mBuf)
#define cmPkSpInstId(x,mBuf) SPkS16(x, mBuf)
#define cmPkSapi(x,mBuf) SPkU8(x, mBuf)
#define cmPkTei(x,mBuf) SPkU8(x, mBuf)
#define cmPkchNo(x,mBuf) SPkU8(x, mBuf)
#define cmPkCes(x,mBuf) SPkU8(x, mBuf)
#define cmPkDlci(x,mBuf) SPkU32(x, mBuf)
#define cmPkCalRef(x,mBuf) SPkU16(x, mBuf)
#define cmPkOrigin(x,mBuf) SPkS16(x, mBuf)
#define cmPkNwId(x,mBuf) SPkU16(x, mBuf)
#define cmPkSwtch(x,mBuf) SPkS16(x, mBuf)
#define cmPkCause(x,mBuf) SPkU8(x, mBuf)
#define cmPkDgn(x,mBuf) SPkU8(x, mBuf)
#define cmPkAction(x,mBuf) SPkS16(x, mBuf)
#define cmPkSeqS16(x,mBuf) SPkS16(x, mBuf)
#define cmPkSeqU16(x,mBuf) SPkU16(x, mBuf)
#define cmPkSeqS24(x,mBuf) SPkS32(x, mBuf)
#define cmPkSeqU24(x,mBuf) SPkU32(x, mBuf)
#define cmPkSetUpArb(x,mBuf) SPkU8(x, mBuf)
#define cmPkEvntType(x,mBuf) SPkU8(x, mBuf)
#define cmPkState(x,mBuf) SPkU8(x, mBuf)
#define cmPkMode(x,mBuf) SPkU8(x, mBuf)
#define cmPkConnId(x,mBuf) SPkS32(x, mBuf)
#define cmPkUConnId(x,mBuf) SPkU32(x, mBuf)
#define cmPkMibOpCode(x,mBuf) SPkU16(x, mBuf)
#define cmPkMibStatus(x,mBuf) SPkU16(x, mBuf)
#define cmPkMibTblType(x,mBuf) SPkU16(x, mBuf)
#define cmPkMibReqId(x,mBuf) SPkS32(x, mBuf)
#define cmPkProfileId(x,mBuf) SPkU8(x, mBuf)
#define cmPkIntfId(x,mBuf) SPkU16(x, mBuf)
#define cmPkIntfVer(x,mBuf) SPkU16(x, mBuf)
#define cmPkuaType(x,mBuf) SPkU8(x, mBuf)


#define cmPkBaud(x,mBuf) SPkS16(x, mBuf)
#define cmPkPhysIntType(x,mBuf) SPkS16(x, mBuf)
#define cmPkPathConnType(x,mBuf) SPkS16(x, mBuf)
#define cmPkParity(x,mBuf) SPkS16(x, mBuf)
#define cmPkCharLength(x,mBuf) SPkS16(x, mBuf)
#define cmPkStopBits(x,mBuf) SPkS16(x, mBuf)



#define cmPkIpAddr(x,mBuf) SPkU32(x, mBuf)
#define cmPkPort(x,mBuf) SPkU16(x, mBuf)
#define cmPkCmd(x,mBuf) SPkU8(x, mBuf)
#define cmPkFlags(x,mBuf) SPkU8(x, mBuf)
#define cmPkTtl(x,mBuf) SPkU8(x, mBuf)
#define cmPkPrec(x,mBuf) SPkU8(x, mBuf)
#define cmPkWindow(x,mBuf) SPkU32(x, mBuf)



#define cmPkOui(x,mBuf) SPkU32(x, mBuf)
#define cmPkPid(x,mBuf) SPkU16(x, mBuf)
#define cmPkLlcId(x,mBuf) SPkU32(x, mBuf)






#define cmUnpkBool(x,mBuf) SUnpkU8(x, mBuf)
#define cmUnpkStatus(x,mBuf) SUnpkS16(x, mBuf)
#define cmUnpkTicks(x,mBuf) SUnpkU32(x, mBuf)
#define cmUnpkQLen(x,mBuf) SUnpkS16(x, mBuf)
#define cmUnpkOrder(x,mBuf) SUnpkS16(x, mBuf)
#define cmUnpkData(x,mBuf) SUnpkU8(x, mBuf)
#define cmUnpkRandom(x,mBuf) SUnpkU16(x, mBuf)
#define cmUnpkSeq(x,mBuf) SUnpkS16(x, mBuf)
#define cmUnpkReason(x,mBuf) SUnpkS16(x, mBuf)
#define cmUnpkProcId(x,mBuf) SUnpkU16(x, mBuf)
#define cmUnpkVectNmb(x,mBuf) SUnpkS16(x, mBuf)
#define cmUnpkPrior(x,mBuf) SUnpkU8(x, mBuf)
#define cmUnpkPriority(x,mBuf) cmUnpkPrior(x, mBuf)
#define cmUnpkRoute(x,mBuf) SUnpkU8(x, mBuf)
#define cmUnpkTtype(x,mBuf) SUnpkS16(x, mBuf)
#define cmUnpkSema(x,mBuf) SUnpkS8(x, mBuf)
#define cmUnpkTxt(x,mBuf) SUnpkS8(x, mBuf)
#define cmUnpkEnt(x,mBuf) SUnpkU8(x, mBuf)
#define cmUnpkInst(x,mBuf) SUnpkU8(x, mBuf)
#define cmUnpkElmnt(x,mBuf) SUnpkS16(x, mBuf)
#define cmUnpkElmntInst1(x,mBuf) SUnpkS16(x, mBuf)
#define cmUnpkElmntInst2(x,mBuf) SUnpkS16(x, mBuf)
#define cmUnpkElmntInst3(x,mBuf) SUnpkS16(x, mBuf)
#define cmUnpkRegion(x,mBuf) SUnpkU8(x, mBuf)
#define cmUnpkPool(x,mBuf) SUnpkU8(x, mBuf)



#define cmUnpkMsgLen(x,mBuf) SUnpkS16(x, mBuf)




#define cmUnpkSize(x,mBuf) SUnpkU32(x, mBuf)




#define cmUnpkSelector(x,mBuf) SUnpkU8(x, mBuf)
#define cmUnpkEvent(x,mBuf) SUnpkU8(x, mBuf)
#define cmUnpkCntr(x,mBuf) SUnpkS32(x, mBuf)
#define cmUnpkStsCntr(x,mBuf) SUnpkU32(x, mBuf)
#define cmUnpkLnkNmb(x,mBuf) SUnpkS16(x, mBuf)
#define cmUnpkSuId(x,mBuf) SUnpkS16(x, mBuf)
#define cmUnpkSpId(x,mBuf) SUnpkS16(x, mBuf)
#define cmUnpkSuInstId(x,mBuf) SUnpkS16(x, mBuf)
#define cmUnpkSpInstId(x,mBuf) SUnpkS16(x, mBuf)
#define cmUnpkSapi(x,mBuf) SUnpkU8(x, mBuf)
#define cmUnpkTei(x,mBuf) SUnpkU8(x, mBuf)
#define cmUnpkchNo(x,mBuf) SUnpkS8(x, mBuf)
#define cmUnpkCes(x,mBuf) SUnpkU8(x, mBuf)
#define cmUnpkDlci(x,mBuf) SUnpkU32(x, mBuf)
#define cmUnpkCalRef(x,mBuf) SUnpkU16(x, mBuf)
#define cmUnpkOrigin(x,mBuf) SUnpkS16(x, mBuf)
#define cmUnpkNwId(x,mBuf) SUnpkU16(x, mBuf)
#define cmUnpkSwtch(x,mBuf) SUnpkS16(x, mBuf)
#define cmUnpkCause(x,mBuf) SUnpkU8(x, mBuf)
#define cmUnpkDgn(x,mBuf) SUnpkU8(x, mBuf)
#define cmUnpkAction(x,mBuf) SUnpkS16(x, mBuf)
#define cmUnpkSeqS16(x,mBuf) SUnpkS16(x, mBuf)
#define cmUnpkSeqU16(x,mBuf) SUnpkU16(x, mBuf)
#define cmUnpkSeqS24(x,mBuf) SUnpkS32(x, mBuf)
#define cmUnpkSeqU24(x,mBuf) SUnpkU32(x, mBuf)
#define cmUnpkSetUpArb(x,mBuf) SUnpkU8(x, mBuf)
#define cmUnpkEvntType(x,mBuf) SUnpkU8(x, mBuf)
#define cmUnpkState(x,mBuf) SUnpkU8(x, mBuf)
#define cmUnpkMode(x,mBuf) SUnpkU8(x, mBuf)
#define cmUnpkConnId(x,mBuf) SUnpkS32(x, mBuf)
#define cmUnpkUConnId(x,mBuf) SUnpkU32(x, mBuf)
#define cmUnpkMibOpCode(x,mBuf) SUnpkU16(x, mBuf)
#define cmUnpkMibStatus(x,mBuf) SUnpkU16(x, mBuf)
#define cmUnpkMibTblType(x,mBuf) SUnpkU16(x, mBuf)
#define cmUnpkMibReqId(x,mBuf) SUnpkS32(x, mBuf)
#define cmUnpkProfileId(x,mBuf) SUnpkU8(x, mBuf)
#define cmUnpkIntfId(x,mBuf) SUnpkU16(x, mBuf)
#define cmUnpkIntfVer(x,mBuf) SUnpkU16(x, mBuf)
#define cmUnpkuaType(x,mBuf) SUnpkU8(x, mBuf)


#define cmUnpkBaud(x,mBuf) SUnpkS16(x, mBuf)
#define cmUnpkPhysIntType(x,mBuf) SUnpkS16(x, mBuf)
#define cmUnpkPathConnType(x,mBuf) SUnpkS16(x, mBuf)
#define cmUnpkParity(x,mBuf) SUnpkS16(x, mBuf)
#define cmUnpkCharLength(x,mBuf) SUnpkS16(x, mBuf)
#define cmUnpkStopBits(x,mBuf) SUnpkS16(x, mBuf)



#define cmUnpkIpAddr(x,mBuf) SUnpkU32(x, mBuf)
#define cmUnpkPort(x,mBuf) SUnpkU16(x, mBuf)
#define cmUnpkCmd(x,mBuf) SUnpkU8(x, mBuf)
#define cmUnpkFlags(x,mBuf) SUnpkU8(x, mBuf)
#define cmUnpkTtl(x,mBuf) SUnpkU8(x, mBuf)
#define cmUnpkPrec(x,mBuf) SUnpkU8(x, mBuf)
#define cmUnpkWindow(x,mBuf) SUnpkU32(x, mBuf)



#define cmUnpkOui(x,mBuf) SUnpkU32(x, mBuf)
#define cmUnpkPid(x,mBuf) SUnpkU16(x, mBuf)
#define cmUnpkLlcId(x,mBuf) SUnpkU32(x, mBuf)



#define CMPKTKNSTR(tknStr,mBuf) { Cntr i; if(tknStr->pres) { for (i = 0; i < (S16) tknStr->len; i++) { CMCHKPK(SPkU8, tknStr->val[i], mBuf); } CMCHKPK(SPkU8, tknStr->len, mBuf); } CMCHKPK(SPkU8, tknStr->pres, mBuf); }
# 2702 "../..//cm/gen.h"
#define CMUNPKTKNSTR(tknStr,mBuf) { Cntr i; CMCHKUNPK(SUnpkU8, &tknStr->pres, mBuf); if(tknStr->pres) { CMCHKUNPK(SUnpkU8, &tknStr->len, mBuf); for (i = 1; i <= (S16) tknStr->len; i++) { CMCHKUNPK(SUnpkU8, &tknStr->val[tknStr->len - i], mBuf); } } }
# 2725 "../..//cm/gen.h"
#define cmPkTranId(x,mBuf) SPkU32(x, mBuf)
#define cmUnpkTranId(x,mBuf) SUnpkU32(x, mBuf)
# 103 "../..//enbapp/src/wr.h" 2
# 1 "../..//cm/ssi.h" 1
# 90 "../..//cm/ssi.h"
#define __SSIH__ 
# 152 "../..//cm/ssi.h"
#define Q1Q2 0
#define Q2Q1 1



#define M1M2 0
#define M2M1 1






#define PTENTH 1
#define PONE 10
#define PTEN 100
#define PHUND 1000




#define NRM_TERM 0
#define PWR_UP 1
#define SWITCH 2
#define SW_ERROR 3
#define DMT_FIRED 4
#define EXTERNAL 5
#define SHUTDOWN 6


#define PREBUF 0
#define PSTBUF 1



#define ROK 0
#define RFAILED 1
#define ROKDNA 2
#define RNA 3
#define ROUTRES 4
#define ROKIGNORE 5
#define RIGNORE 6
#define ROKCRSIG 7
#define ROKCRPRM 8
#define ROKDRSIG 9
#define ROKDRPRM 10
#define ROKDCPRM 11
#define ROKDUP 12
#define RSKIP 13
#define ROKDRPRMSP 14


#define ROKDRPRMSU 15


#define ROKPENDING 16
#define RLONG 17

#define RINPROGRESS 18
#define RWOULDBLOCK 19
#define RCLOSED 20
#define RTIMEOUT 21
#define RISCONN 22

#define RINVIFVER 23
# 226 "../..//cm/ssi.h"
#define PRNTSZE 255




#define EOF (-1)
# 257 "../..//cm/ssi.h"
#define SBUFSIZE(size) (size)
# 268 "../..//cm/ssi.h"
#define MAXTICKS 0xffffffff
# 277 "../..//cm/ssi.h"
#define ERRZERO 0




#define ERRSS 0
#define ERRLM 500
#define ERRAP 1000
#define ERRXN 2000
#define ERRFM 3000
#define ERRVX 3200
#define ERRPS 3300
#define ERRVW 3400
#define ERRHE 3600
#define ERRWN 3600
#define ERRQI 3700
#define ERRWI 3800
#define ERRWU 3900
#define ERRLB 4000
#define ERRBD 4000
#define ERRSC 5000
#define ERRMS 5500
#define ERRSM 6500
#define ERRLL 8500
#define ERRBI 8500
#define ERRTC 8500
#define ERRIX 9000
#define ERRMF 9500
#define ERRAR 9600
#define ERRMA 9600
#define ERROD 10600
#define ERRSE 10700
#define ERRSI 11000
#define ERRSN 12000
#define ERRSD 13000
#define ERRSA 13500
#define ERRIN 14000
#define ERRIS 15000
#define ERRLC 15500
#define ERRTP 16000
#define ERRCM 17000
#define ERRST 18000
#define ERRFN 18500
#define ERRSP 19000
#define ERRME 20000
#define ERREV 20100
#define ERRNV 20500
#define ERRLV 20300
#define ERRAC 21000
#define ERRAS 22000
#define ERRAM 23000
#define ERRM6 24000
#define ERRPN 24500
#define ERRUM 25000
#define ERRMU 26000
#define ERRFR 26100
#define ERRMPOFR 26500
#define ERRLR 27000
#define ERRLU 28000
#define ERRRY 29000
#define ERROS 30000
#define ERREC 31000
#define ERRES 31500
#define ERRTU 32000
#define ERRFA 32200
#define ERRSR 32500
#define ERRPL 32700
#define ERRAF 33000
#define ERRCV 34000
#define ERRMV 34200
#define ERRCMDRV 34400
#define ERRPQ 34500
#define ERRGL 34600
#define ERRVO 34700
#define ERRZP 34800
#define ERRP1 34900
#define ERRIB 35000
#define ERRRN 35100
#define ERRVU 35300
#define ERRFP 35500


#define ERRTX 35700
#define ERRMZ 35900
#define ERRNEXT ERRMZ + 200

#define ERRD2 4000
# 384 "../..//cm/ssi.h"
#define ERRSMST (ERRSM + 50)
#define ERRSMSP (ERRSM + 100)
#define ERRSMSN (ERRSM + 150)
#define ERRSMSD (ERRSM + 200)
#define ERRSMSA (ERRSM + 225)
#define ERRSMAM (ERRSM + 250)
#define ERRSMAS (ERRSM + 300)
#define ERRSMUM (ERRSM + 350)
#define ERRSMM6 (ERRSM + 400)
#define ERRSMMS (ERRSM + 450)
#define ERRSMEC (ERRSM + 500)
#define ERRSMSI (ERRSM + 550)
#define ERRSMBI (ERRSM + 575)
#define ERRSMTU (ERRSM + 600)
#define ERRSMFA (ERRSM + 650)
#define ERRSMSE (ERRSM + 700)
#define ERRSMSR (ERRSM + 750)
#define ERRSMRY (ERRSM + 800)
#define ERRSMTP (ERRSM + 850)
#define ERRSMES (ERRSM + 900)
#define ERRSMIN (ERRSM + 950)
#define ERRSMLB (ERRSM + 1000)
#define ERRSMLD (ERRSM + 1050)
#define ERRSMBD (ERRSM + 1100)
#define ERRSMBR (ERRSM + 1150)
#define ERRSMER (ERRSM + 1200)
#define ERRSMPN (ERRSM + 1250)
#define ERRSMME (ERRSM + 1300)
#define ERRSMXN (ERRSM + 1350)
#define ERRSMQI (ERRSM + 1400)
#define ERRSMWN (ERRSM + 1450)
#define ERRSMMA (ERRSM + 1500)
#define ERRSMNV (ERRSM + 1550)
#define ERRSMLV (ERRSM + 1575)
#define ERRSMEV (ERRSM + 1600)
#define ERRSMAF (ERRSM + 1625)
#define ERRSMFR (ERRSM + 1725)
#define ERRSMAC (ERRSM + 1825)
#define ERRSMIA (ERRSM + 1925)
#define ERRSMPU (ERRSM + 2625)
#define ERRSMSG (ERRSM + 2700)
#define ERRSMPQ (ERRSM + 2800)
#define ERRSMVO (ERRSM + 2900)
#define ERRSMZP (ERRSM + 3000)
#define ERRSMZL (ERRSM + 3100)

#define ERRSMMZ (ERRSM + 4000)
#define ERRSMD2 (ERRSM + 4100)







#define ESMBASE (ERRSM + 0)
#define ESMXXX (ESMBASE + 0)
#define ESM001 (ESMBASE + 1)




#define ESMUMBASE (ERRSMUM + 0)
#define ESMUMXXX (ESMUMBASE + 0)




#define ESMSTBASE (ERRSMST + 0)
#define ESMSTXXX (ESMSTBASE + 0)
#define ESMSTX ESMSTXXX




#define ESMSPBASE (ERRSMSP + 0)
#define ESMSPXXX (ESMSPBASE + 0)
#define ESMSPX ESMSPXXX




#define ESMSNBASE (ERRSMSN + 0)
#define ESMSNXXX (ESMSNBASE + 0)
#define ESMSNX ESMSNXXX




#define ESMSDBASE (ERRSMSD + 0)
#define ESMSDXXX (ESMSDBASE + 0)
#define ESMSDX ESMSDXXX




#define ELMBASE (ERRLM + 0)
#define ELMXXX (ELMBASE)

#define ELM001 (ERRLM + 1)
#define ELM002 (ERRLM + 2)
#define ELM003 (ERRLM + 3)
#define ELM004 (ERRLM + 4)
#define ELM005 (ERRLM + 5)
#define ELM006 (ERRLM + 6)
#define ELM007 (ERRLM + 7)
#define ELM008 (ERRLM + 8)
#define ELM009 (ERRLM + 9)
#define ELM010 (ERRLM + 10)
#define ELM011 (ERRLM + 11)
#define ELM012 (ERRLM + 12)
#define ELM013 (ERRLM + 13)
#define ELM014 (ERRLM + 14)
#define ELM015 (ERRLM + 15)
#define ELM016 (ERRLM + 16)
#define ELM017 (ERRLM + 17)
#define ELM018 (ERRLM + 18)
#define ELM019 (ERRLM + 19)
#define ELM020 (ERRLM + 20)
#define ELM021 (ERRLM + 21)
#define ELM022 (ERRLM + 22)
#define ELM023 (ERRLM + 23)
#define ELM024 (ERRLM + 24)
#define ELM025 (ERRLM + 25)
#define ELM026 (ERRLM + 26)
#define ELM027 (ERRLM + 27)
#define ELM028 (ERRLM + 28)
#define ELM029 (ERRLM + 29)
#define ELM030 (ERRLM + 30)
#define ELM031 (ERRLM + 31)
#define ELM032 (ERRLM + 32)
#define ELM033 (ERRLM + 33)
#define ELM034 (ERRLM + 34)
#define ELM035 (ERRLM + 35)
#define ELM036 (ERRLM + 36)
#define ELM037 (ERRLM + 37)
#define ELM038 (ERRLM + 38)
#define ELM039 (ERRLM + 39)
#define ELM040 (ERRLM + 40)
#define ELM041 (ERRLM + 41)
#define ELM042 (ERRLM + 42)
#define ELM043 (ERRLM + 43)
#define ELM044 (ERRLM + 44)
#define ELM045 (ERRLM + 45)
#define ELM046 (ERRLM + 46)
#define ELM047 (ERRLM + 47)
#define ELM048 (ERRLM + 48)
#define ELM049 (ERRLM + 49)
#define ELM050 (ERRLM + 50)
#define ELM051 (ERRLM + 51)
#define ELM052 (ERRLM + 52)
#define ELM053 (ERRLM + 53)
#define ELM054 (ERRLM + 54)
#define ELM055 (ERRLM + 55)
#define ELM056 (ERRLM + 56)
#define ELM057 (ERRLM + 57)
#define ELM058 (ERRLM + 58)
#define ELM059 (ERRLM + 59)
#define ELM060 (ERRLM + 60)
#define ELM061 (ERRLM + 61)
#define ELM062 (ERRLM + 62)
#define ELM063 (ERRLM + 63)
#define ELM064 (ERRLM + 64)
#define ELM065 (ERRLM + 65)
#define ELM066 (ERRLM + 66)
#define ELM067 (ERRLM + 67)
#define ELM068 (ERRLM + 68)
#define ELM069 (ERRLM + 69)
#define ELM070 (ERRLM + 70)
#define ELM071 (ERRLM + 71)
#define ELM072 (ERRLM + 72)
#define ELM073 (ERRLM + 73)
#define ELM074 (ERRLM + 74)
#define ELM075 (ERRLM + 75)
# 929 "../..//cm/ssi.h"
#define ERRCLS_ADD_RES 0x1



#define ERRCLS_INT_PAR 0x2



#define ERRCLS_DEBUG 0x4




#define ERRCLS_FTHA 0x8






#define ERRCLASS 0
# 991 "../..//cm/ssi.h"
#define CMCHKPK(func,val,mBuf) func(val, mBuf);


#define CMCHKPKLOG(func,val,mBuf,errCode,pst) func(val, mBuf);


#define CMCHKPKVERLOG(func,val,mBuf,errCode,pst) func(pst, val, mBuf);
# 1043 "../..//cm/ssi.h"
#define CMCHKUNPK(func,val,mBuf) func(val, mBuf);


#define CMCHKUNPKLOG(func,val,mBuf,errCode,pst) func(val, mBuf);


#define CMCHKUNPKVERLOG(func,val,mBuf,errCode,pst) func(pst, val, mBuf);
# 1066 "../..//cm/ssi.h"
#define DSTRTIDX 00
#define DENDIDX 31
# 1112 "../..//cm/ssi.h"
#define DSIZE (DENDIDX+1)




#define DSTRTPAD 0




#define SGETBUFREGION(buf) (DFLT_REGION)
#define SGETBUFPOOL(buf) (DFLT_POOL)



#define BDATA 0x01
#define BMSG 0x02
#define BTSK 0x03


#define BDPOOL 0x06
#define BSPOOL 0x07
#define BUNK 0x08



#define TTUND 0x00
#define TTNORM 0x01
#define TTPERM 0x02
#define TTPREEMPT 0x03
#define TTTMR 0x04
#define TTMOS 0x05
# 1157 "../..//cm/ssi.h"
#define PROCIDNC 0xFFFF



#define PRIOR0 0x00
#define PRIOR1 0x01
#define PRIOR2 0x02
#define PRIOR3 0x03
#define PRIORNC 0xFF



#define RTESPEC 0x00
#define RTEFRST 0x01
#define RTEALL 0x02
#define RTESHM 0x03
#define RTETRNQ 0x04
#define RTEQONLY 0x05
#define RTE_PROTO 0x06
#define RTE_RT_UPD 0x07
#define RTE_REV_UPD 0x08
#define RTENC 0xFF



#define ENTPRM 0x00
#define ENTTST 0x00
#define ENTSS 0x01
#define ENTMS ENTSS
#define ENTNS ENTSS
#define ENTSC 0x02
#define ENTLB 0x03
#define ENTLD 0x04
#define ENTML 0x05
#define ENTBD 0x06
#define ENTXI 0x07
#define ENTXN 0x08
#define ENTXG 0x09
#define ENTIN 0x0A
#define ENTAP 0x0B
#define ENTBR 0x0C

#define ENTER 0x0D

#define ENTSM 0x0E
#define ENTMD 0x0F
#define ENTAL 0x10
#define ENTLDLM 0x11
#define ENTTC 0x12
#define ENTIX 0x13
#define ENTSI 0x14
#define ENTSN 0x15
#define ENTSD 0x16
#define ENTST 0x17
#define ENTDB 0x18
#define ENTIS 0x19
#define ENTLC 0x1A
#define ENTOD 0x1B
#define ENTSE 0x1C
#define ENTHE 0x1D
#define ENTSP 0x1E
#define ENTCC 0x1F
#define ENTTU 0x20
#define ENTUD 0x21
#define ENTM1 0x22
#define ENTM2 0x23
#define ENTM3 0x24
#define ENTTP 0x25
#define ENTBS 0x26
#define ENTM4 0x27
#define ENTM5 0x28
#define ENTM6 0x29
#define ENTM7 0x2A
#define ENTM8 0x2B
#define ENTM9 0x2C
#define ENTME 0x2D
#define ENTAC 0x2E
#define ENTAS 0x2F
#define ENTAM 0x30
#define ENTUM 0x31
#define ENTMU 0x32
#define ENTLR 0x33
#define ENTLU 0x34
#define ENTRY 0x35
#define ENTEC 0x36
#define ENTFA 0x37
#define ENTSR 0x38
#define ENTES 0x39
#define ENTPN 0x3A
#define ENTQI 0x3B
#define ENTWD 0x3C
#define ENTWN 0x3D
#define ENTWI 0x3E
#define ENTWU 0x3F
#define ENTWS 0x40
#define ENTWC 0x41
#define ENTPU 0x42
#define ENTSA 0x43
#define ENTFM 0x44
#define ENTBI 0x45
#define ENTMA 0x46
#define ENTFN 0x47
#define ENTNV 0x48
#define ENTLV 0x49
#define ENTEV 0x4a
#define ENTPL 0x4b
#define ENTAU 0x4c
#define ENTVM 0x4d
#define ENTAF 0x4e
#define ENTFR 0x4f
#define ENTMT 0x50
#define ENTCV 0x51
#define ENTMV 0x52
#define ENTIM 0x53
#define ENTBV 0x54
#define ENTPA 0x55
#define ENTPV 0x56
#define ENTLK 0x57
#define ENTL1 0x58
#define ENTIA 0x59
#define ENTIU 0x5a
#define ENTRM 0x5b
#define ENTRT 0x5c
#define ENTSG 0x5d
#define ENTPQ 0x5e
#define ENTMC 0x5f
#define ENTIE 0x60
#define ENTBW ENTBI
#define ENTIW ENTSI
#define ENTQW ENTIN
#define ENTAW ENTAM
#define ENTSF 0x61
#define ENTVF 0x62
#define ENTCL 0x63
#define ENTSH 0x65
#define ENTMR 0x66
#define ENTL4 0x67
#define ENTTT 0x68
#define ENTPR 0x69
#define ENTGN 0x6a
#define ENTGG 0x6b
#define ENTAR 0x6c
#define ENTGT 0x6d
#define ENTGM 0x6e
#define ENTGR 0x6f
#define ENTGW 0x70
#define ENTGL 0x71
#define ENTGS 0x72
#define ENTGZ 0x73
#define ENTGY 0x74
#define ENTHI 0x75
#define ENTHC 0x76
#define ENTHU 0x77
#define ENTHR 0x78
#define ENTNM 0x79
#define ENTGB 0x7a
#define ENTGP 0x7b
#define ENTIQ 0x7c
#define ENTXM 0x7d
#define ENTMG 0x7e
#define ENTHG 0x7f
#define ENTDN 0x80
#define ENTTS 0x81
#define ENTVO 0x82
#define ENTGO 0x83
#define ENTGI 0x84
#define ENTGH 0x85
#define ENTGU 0x86
#define ENTLN 0x87
#define ENTSB 0x88
#define ENTIT 0x89
#define ENTFW 0x8a
#define ENTRL 0x8b
#define ENTAL2 0x8c
#define ENTAA 0x8d
#define ENTRA 0x8f
#define ENTNF 0x90
#define ENTRN 0x91
#define ENTDP 0x92
#define ENTDT 0x93
#define ENTNP 0x94
#define ENTP1 0x95
#define ENTID 0x96
#define ENTND 0x97
#define ENTDM 0x98
#define ENTSO 0x99
#define ENTSU 0x9a


#define ENTRU 0x9b




#define ENTQC 0x9c
#define ENTCU 0x9d
#define ENTMM 0x9e
#define ENTGA 0x9f
#define ENTGE 0xa0
#define ENTSV 0xa1
#define ENTMW 0xa2
#define ENTNW 0xa3
#define ENTDI 0xa4
#define ENTMK 0xa5
#define ENTRR 0xa6
#define ENTIB 0xa7
#define ENTPH 0xa8
#define ENTII ENTSM
#define ENTUL 0xa9
#define ENTGD 0xaa
#define ENTGX 0xab
#define ENTDG 0xac

#define ENTXX 0xad
#define ENTPD 0xae
#define ENTUS 0xaf
#define ENTBM 0xb0

#define ENTLA 0xb1
#define ENTLT 0xb2
#define ENTRD 0xb3

#define ENTGF 0xb4
#define ENTDV 0xb5
#define ENTCS 0xb6
#define ENTFP 0xb7
#define ENTDU 0xb8
#define ENTFU 0xb9
#define ENTVU 0xba

#define ENTMZ 0xbb

#define ENTMX 0xbc

#define ENTD3 0xbd
#define ENTD2 0xbe

#define ENTNDD3 0xbf

#define ENTRP 0xc0
#define ENTDK 0xc1
#define ENTTM 0xc2
#define ENTSPU 0xc3
#define ENTGC 0xc4
#define ENTLM 0xc5


#define ENTHS 0xc6
#define ENTCH 0xc7
#define ENTUH 0xc8

#define ENTAQ 0xc9
#define ENTAB 0xca


#define ENTAH 0xcb
#define ENTAE 0xcc


#define ENTRX 0xcd



#define ENTPP ENTSM


#define ENTLX 0xce



#define ENTXU 0xcf
# 1436 "../..//cm/ssi.h"
#define ENTXY 0xd0


#define ENTSZ 0xd1
#define ENTUZ 0xd2

#define ENTEG 0xd3
#define ENTEU 0xd4

#define ENTTF 0xd5
#define ENTRG 0xd6
#define ENTKW 0xd7
#define ENTPJ 0xd8
#define ENTNH 0xd9



#define ENTNX 0xda
#define ENTCZ 0xdb
#define ENTRS 0xdc


#define ENTHM 0xdd
#define ENTHX 0xde


#define ENTVE 0xdf
#define ENTWR 0xe3


#define ENTOS 0xe0
#define ENTOC 0xe1

#define ENTPX 0xe2
# 1482 "../..//cm/ssi.h"
#define ENTYS 0xe4

#define ENTVB 0xe5





#define ENTLAST ENTVB







#define ENTNC 0xFF



#define INSTNC 0xFF


#define SUIDNC 0xFFFF


#define SPIDNC 0xFFFF


#define REGIONNC 0xFF


#define POOLNC 0xFF




#define EVTNONE 0x00

#define EVTPERM 0x01
#define EVT_TIMEOUT 0x02

#define EVTBNDREQ 0x04




#define EVTUBNDREQ 0x08




#define EVTCONREQ 0x0C
#define EVTCONCFM 0x0D
#define EVTCONIND 0x0E
#define EVTCONRSP 0x0F

#define EVTDISCREQ 0x10
#define EVTDISCCFM 0x11
#define EVTDISCIND 0x12
#define EVTDISCRSP 0x13

#define EVTDATREQ 0x14
#define EVTDATCFM 0x15
#define EVTDATIND 0x16
#define EVTDATRSP 0x17

#define EVTUDATREQ 0x18
#define EVTUDATCFM 0x19
#define EVTUDATIND 0x1A
#define EVTUDATRSP 0x1B

#define EVTEDATREQ 0x1C
#define EVTEDATCFM 0x1D
#define EVTEDATIND 0x1E
#define EVTEDATRSP 0x1F

#define EVTDATCHRREQ 0x20
#define EVTDATCHRCFM 0x21
#define EVTDATCHRIND 0x22
#define EVTDATCHRRSP 0x23

#define EVTDATACKREQ 0x24
#define EVTDATACKCFM 0x25
#define EVTDATACKIND 0x26
#define EVTDATACKRSP 0x27

#define EVTFLCREQ 0x28

#define EVTFLCIND 0x2A


#define EVTRSTREQ 0x2C
#define EVTRSTCFM 0x2D
#define EVTRSTIND 0x2E
#define EVTRSTRSP 0x2F

#define EVTCFGXXREQ 0x30




#define EVTRESMREQ 0x34

#define EVTRESMIND 0x36


#define EVTSUSPREQ 0x38

#define EVTSUSPIND 0x3A


#define EVTCFGREQ 0x3C
#define EVTCFGCFM 0x3D
#define EVTCFGIND 0x3E


#define EVTSTAREQ 0x40
#define EVTSTACFM 0x41
#define EVTSTAIND 0x42


#define EVTSTSREQ 0x44
#define EVTSTSCFM 0x45



#define EVTTRCIND 0x48




#define EVTCNTRLREQ 0x4C
#define EVTCNTRLCFM 0x4D
#define EVTCNTRLIND 0x4E
#define EVTCNTRLRSP 0x4F

#define EVTXIDREQ 0x50
#define EVTXIDCFM 0x51
#define EVTXIDIND 0x52
#define EVTXIDRSP 0x53

#define EVTACNTREQ 0x54

#define EVTACNTIND 0x56


#define EVTCNSTREQ 0x58

#define EVTCNSTIND 0x5A


#define EVTRELREQ 0x5C
#define EVTRELCFM 0x5D
#define EVTRELIND 0x5E
#define EVTRELRSP 0x5F

#define EVTSSHLREQ 0x60
#define EVTSSHLCFM 0x61
#define EVTSSHLIND 0x62
#define EVTSSHLRSP 0x63

#define EVTRMRTREQ 0x64
#define EVTRMRTCFM 0x65
#define EVTRMRTIND 0x66
#define EVTRMRTRSP 0x67

#define EVTFACREQ 0x68
#define EVTFACCFM 0x69
#define EVTFACIND 0x6A
#define EVTFACRSP 0x6B

#define EVTSTAENQREQ 0x6C
#define EVTSTAENQCFM 0x6D
#define EVTSTAENQIND 0x6E
#define EVTSTAENQRSP 0x6F

#define EVTSRVREQ 0x70
#define EVTSRVCFM 0x71
#define EVTSRVIND 0x72




#define EVTALRTIND 0x76


#define EVTSTAXXREQ 0x78
#define EVTSTAXXCFM 0x79
#define EVTSTAXXIND 0x7A


#define EVTLMUDATREQ 0x7C

#define EVTLMUDATIND 0x7E


#define EVTADDREQ 0x80
#define EVTADDCFM 0x81
#define EVTADDIND 0x82
#define EVTADDRSP 0x83

#define EVTREMREQ 0x84
#define EVTREMCFM 0x85
#define EVTREMIND 0x86


#define EVTSYNREQ 0x88
#define EVTSYNCFM 0x89
#define EVTSYNIND 0x8A


#define EVTEXAMREQ 0x8C
#define EVTEXAMCFM 0x8D



#define EVTADDPTYREQ 0x90
#define EVTADDPTYCFM 0x91
#define EVTADDPTYIND 0x92
#define EVTADDPTYRSP 0x93

#define EVTADDPTYREJREQ 0x94
#define EVTADDPTYREJCFM 0x95
#define EVTADDPTYREJIND 0x96
#define EVTADDPTYREJRSP 0x97

#define EVTDROPPTYREQ 0x98
#define EVTDROPPTYCFM 0x99
#define EVTDROPPTYIND 0x9A
#define EVTDROPPTYRSP 0x9B

#define EVTNEXTREQ 0x9C
#define EVTNEXTCFM 0x9D
#define EVTNEXTIND 0x9E




#define EVTERRIND 0xA2
#define EVTERRRSP 0xA3

#define EVT_BNDREQ 0xA4




#define EVT_UBNDREQ 0xA8




#define EVT_DATREQ 0xAC
#define EVT_DATCFM 0xAD
#define EVT_DATIND 0xAE
#define EVT_DATRSP 0xAF

#define EVT_UDATREQ 0xB0
#define EVT_UDATCFM 0xB1
#define EVT_UDATIND 0xB2
#define EVT_UDATRSP 0xB3

#define EVTESTREQ 0xB4
#define EVTESTCFM 0xB5
#define EVTESTIND 0xB6
#define EVTESTRSP 0xB7

#define EVTMODREQ 0xC0
#define EVTMODCFM 0xC1
#define EVTMODIND 0xC2
#define EVTMODRSP 0xC3

#define EVTTSKDOWNREQ 0xF0
#define EVTTSKDOWNCFM 0xF1



#define EVTTSKUPREQ 0xF4
#define EVTTSKUPCFM 0xF5



#define EVTCRDREQ 0xF8
#define EVTCRDCFM 0xF9
#define EVTCRDIND 0xFA
#define EVTCRDRSP 0xFB

#define EVTSTEREQ 0xFC
#define EVTSTEIND 0xFD
#define EVTPCSTEIND 0xFE

#define EVTSHIFT 0xFF
# 1887 "../..//cm/ssi.h"
#define SS_MEM_V_TO_P 1
#define SS_MEM_CHK_RES 2

#define DFLT_REGION 0
#define DFLT_POOL 0





#define OWNREGION DFLT_REGION


#define SS_LOCK_MUTEX 1
#define SS_LOCK_SPIN 2
#define SS_LOCK_CRITSEC 3
# 1953 "../..//cm/ssi.h"
#undef SGETBUFREGION
#define SGETBUFREGION(buf) (((buf) == NULLP) ? REGIONNC : (Region)*((Region *)(buf)->b_rptr))


#undef SGETBUFPOOL
#define SGETBUFPOOL(buf) (((buf) == NULLP) ? POOLNC : (Pool)*((Pool *)((buf)->b_rptr + sizeof(Region))))







# 1 "/u/prd/rtr/mt/ss_dep.h" 1
# 93 "/u/prd/rtr/mt/ss_dep.h"
#define __SSDEPH__ 
# 115 "/u/prd/rtr/mt/ss_dep.h"
#define _POSIX_C_SOURCE 199309L

# 1 "/usr/include/pthread.h" 1 3 4
# 20 "/usr/include/pthread.h" 3 4
#define _PTHREAD_H 1

# 1 "/usr/include/features.h" 1 3 4
# 21 "/usr/include/features.h" 3 4
#define _FEATURES_H 1
# 93 "/usr/include/features.h" 3 4
#undef __USE_ISOC99
#undef __USE_POSIX
#undef __USE_POSIX2
#undef __USE_POSIX199309
#undef __USE_POSIX199506
#undef __USE_XOPEN
#undef __USE_XOPEN_EXTENDED
#undef __USE_UNIX98
#undef __USE_XOPEN2K
#undef __USE_LARGEFILE
#undef __USE_LARGEFILE64
#undef __USE_FILE_OFFSET64
#undef __USE_BSD
#undef __USE_SVID
#undef __USE_MISC
#undef __USE_ATFILE
#undef __USE_GNU
#undef __USE_REENTRANT
#undef __USE_FORTIFY_LEVEL
#undef __FAVOR_BSD
#undef __KERNEL_STRICT_NAMES




#define __KERNEL_STRICT_NAMES 



#define __USE_ANSI 1
# 132 "/usr/include/features.h" 3 4
#define __GNUC_PREREQ(maj,min) ((__GNUC__ << 16) + __GNUC_MINOR__ >= ((maj) << 16) + (min))
# 149 "/usr/include/features.h" 3 4
#undef _ISOC99_SOURCE
#define _ISOC99_SOURCE 1
#undef _POSIX_SOURCE
#define _POSIX_SOURCE 1
#undef _POSIX_C_SOURCE
#define _POSIX_C_SOURCE 200112L
#undef _XOPEN_SOURCE
#define _XOPEN_SOURCE 600
#undef _XOPEN_SOURCE_EXTENDED
#define _XOPEN_SOURCE_EXTENDED 1
#undef _LARGEFILE64_SOURCE
#define _LARGEFILE64_SOURCE 1
#undef _BSD_SOURCE
#define _BSD_SOURCE 1
#undef _SVID_SOURCE
#define _SVID_SOURCE 1
#undef _ATFILE_SOURCE
#define _ATFILE_SOURCE 1
# 185 "/usr/include/features.h" 3 4
#define __USE_ISOC99 1
# 203 "/usr/include/features.h" 3 4
#define __USE_POSIX 1



#define __USE_POSIX2 1



#define __USE_POSIX199309 1



#define __USE_POSIX199506 1



#define __USE_XOPEN2K 1



#define __USE_XOPEN 1

#define __USE_XOPEN_EXTENDED 1
#define __USE_UNIX98 1
#undef _LARGEFILE_SOURCE
#define _LARGEFILE_SOURCE 1

#define __USE_XOPEN2K 1
#undef __USE_ISOC99
#define __USE_ISOC99 1
# 242 "/usr/include/features.h" 3 4
#define __USE_LARGEFILE 1



#define __USE_LARGEFILE64 1







#define __USE_MISC 1



#define __USE_BSD 1



#define __USE_SVID 1



#define __USE_ATFILE 1



#define __USE_GNU 1



#define __USE_REENTRANT 1
# 291 "/usr/include/features.h" 3 4
#define __USE_FORTIFY_LEVEL 0



#define __STDC_IEC_559__ 1
#define __STDC_IEC_559_COMPLEX__ 1


#define __STDC_ISO_10646__ 200009L







#undef __GNU_LIBRARY__
#define __GNU_LIBRARY__ 6



#define __GLIBC__ 2
#define __GLIBC_MINOR__ 5

#define __GLIBC_PREREQ(maj,min) ((__GLIBC__ << 16) + __GLIBC_MINOR__ >= ((maj) << 16) + (min))







#define __GLIBC_HAVE_LONG_LONG 1





# 1 "/usr/include/sys/cdefs.h" 1 3 4
# 21 "/usr/include/sys/cdefs.h" 3 4
#define _SYS_CDEFS_H 1
# 36 "/usr/include/sys/cdefs.h" 3 4
#undef __P
#undef __PMT
# 47 "/usr/include/sys/cdefs.h" 3 4
#define __THROW __attribute__ ((__nothrow__))
#define __NTH(fct) __attribute__ ((__nothrow__)) fct
# 74 "/usr/include/sys/cdefs.h" 3 4
#define __P(args) args
#define __PMT(args) args




#define __CONCAT(x,y) x ## y
#define __STRING(x) #x


#define __ptr_t void *
#define __long_double_t long double







#define __BEGIN_DECLS 
#define __END_DECLS 
# 114 "/usr/include/sys/cdefs.h" 3 4
#define __BEGIN_NAMESPACE_STD 
#define __END_NAMESPACE_STD 
#define __USING_NAMESPACE_STD(name) 
#define __BEGIN_NAMESPACE_C99 
#define __END_NAMESPACE_C99 
#define __USING_NAMESPACE_C99(name) 





#define __bounded 
#define __unbounded 
#define __ptrvalue 




#define __bos(ptr) __builtin_object_size (ptr, __USE_FORTIFY_LEVEL > 1)
#define __bos0(ptr) __builtin_object_size (ptr, 0)
#define __warndecl(name,msg) extern void name (void)





#define __flexarr []
# 167 "/usr/include/sys/cdefs.h" 3 4
#define __REDIRECT(name,proto,alias) name proto __asm__ (__ASMNAME (#alias))




#define __REDIRECT_NTH(name,proto,alias) name proto __asm__ (__ASMNAME (#alias)) __THROW


#define __ASMNAME(cname) __ASMNAME2 (__USER_LABEL_PREFIX__, cname)
#define __ASMNAME2(prefix,cname) __STRING (prefix) cname
# 197 "/usr/include/sys/cdefs.h" 3 4
#define __attribute_malloc__ __attribute__ ((__malloc__))
# 206 "/usr/include/sys/cdefs.h" 3 4
#define __attribute_pure__ __attribute__ ((__pure__))
# 215 "/usr/include/sys/cdefs.h" 3 4
#define __attribute_used__ __attribute__ ((__used__))
#define __attribute_noinline__ __attribute__ ((__noinline__))







#define __attribute_deprecated__ __attribute__ ((__deprecated__))
# 236 "/usr/include/sys/cdefs.h" 3 4
#define __attribute_format_arg__(x) __attribute__ ((__format_arg__ (x)))
# 246 "/usr/include/sys/cdefs.h" 3 4
#define __attribute_format_strfmon__(a,b) __attribute__ ((__format__ (__strfmon__, a, b)))
# 255 "/usr/include/sys/cdefs.h" 3 4
#define __nonnull(params) __attribute__ ((__nonnull__ params))







#define __attribute_warn_unused_result__ __attribute__ ((__warn_unused_result__))
# 272 "/usr/include/sys/cdefs.h" 3 4
#define __wur 




#define __always_inline __inline __attribute__ ((__always_inline__))
# 299 "/usr/include/sys/cdefs.h" 3 4
#define __restrict_arr __restrict
# 313 "/usr/include/sys/cdefs.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 19 "/usr/include/bits/wordsize.h" 3 4
#define __WORDSIZE 32
# 314 "/usr/include/sys/cdefs.h" 2 3 4
# 331 "/usr/include/sys/cdefs.h" 3 4
#define __LDBL_REDIR1(name,proto,alias) name proto
#define __LDBL_REDIR(name,proto) name proto
#define __LDBL_REDIR1_NTH(name,proto,alias) name proto __THROW
#define __LDBL_REDIR_NTH(name,proto) name proto __THROW
#define __LDBL_REDIR_DECL(name) 
# 330 "/usr/include/features.h" 2 3 4
# 352 "/usr/include/features.h" 3 4
# 1 "/usr/include/gnu/stubs.h" 1 3 4



# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 19 "/usr/include/bits/wordsize.h" 3 4
#define __WORDSIZE 32
# 5 "/usr/include/gnu/stubs.h" 2 3 4


# 1 "/usr/include/gnu/stubs-32.h" 1 3 4
# 10 "/usr/include/gnu/stubs-32.h" 3 4
#define __stub___kernel_cosl 
#define __stub___kernel_sinl 
#define __stub___kernel_tanl 
#define __stub_chflags 
#define __stub_fattach 
#define __stub_fchflags 
#define __stub_fdetach 
#define __stub_gtty 
#define __stub_lchmod 
#define __stub_lutimes 
#define __stub_revoke 
#define __stub_setlogin 
#define __stub_sigreturn 
#define __stub_sstk 
#define __stub_stty 
# 8 "/usr/include/gnu/stubs.h" 2 3 4
# 353 "/usr/include/features.h" 2 3 4
# 23 "/usr/include/pthread.h" 2 3 4
# 1 "/usr/include/endian.h" 1 3 4
# 20 "/usr/include/endian.h" 3 4
#define _ENDIAN_H 1
# 32 "/usr/include/endian.h" 3 4
#define __LITTLE_ENDIAN 1234
#define __BIG_ENDIAN 4321
#define __PDP_ENDIAN 3412


# 1 "/usr/include/bits/endian.h" 1 3 4






#define __BYTE_ORDER __LITTLE_ENDIAN
# 38 "/usr/include/endian.h" 2 3 4




#define __FLOAT_WORD_ORDER __BYTE_ORDER



#define LITTLE_ENDIAN __LITTLE_ENDIAN
#define BIG_ENDIAN __BIG_ENDIAN
#define PDP_ENDIAN __PDP_ENDIAN
#define BYTE_ORDER __BYTE_ORDER



#define __LONG_LONG_PAIR(HI,LO) LO, HI
# 24 "/usr/include/pthread.h" 2 3 4
# 1 "/usr/include/sched.h" 1 3 4
# 21 "/usr/include/sched.h" 3 4
#define _SCHED_H 1




# 1 "/usr/include/bits/types.h" 1 3 4
# 25 "/usr/include/bits/types.h" 3 4
#define _BITS_TYPES_H 1


# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 19 "/usr/include/bits/wordsize.h" 3 4
#define __WORDSIZE 32
# 29 "/usr/include/bits/types.h" 2 3 4

#define __need_size_t 
# 1 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 1 3 4
# 189 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 3 4
#define __size_t__ 
#define __SIZE_T__ 
#define _SIZE_T 
#define _SYS_SIZE_T_H 
#define _T_SIZE_ 
#define _T_SIZE 
#define __SIZE_T 
#define _SIZE_T_ 
#define _BSD_SIZE_T_ 
#define _SIZE_T_DEFINED_ 
#define _SIZE_T_DEFINED 
#define _BSD_SIZE_T_DEFINED_ 
#define _SIZE_T_DECLARED 
#define ___int_size_t_h 
#define _GCC_SIZE_T 
#define _SIZET_ 



#define __size_t 





typedef unsigned int size_t;
# 236 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 3 4
#undef __need_size_t
# 409 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 3 4
#undef __need_NULL
# 32 "/usr/include/bits/types.h" 2 3 4


typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;




__extension__ typedef signed long long int __int64_t;
__extension__ typedef unsigned long long int __uint64_t;







__extension__ typedef long long int __quad_t;
__extension__ typedef unsigned long long int __u_quad_t;
# 102 "/usr/include/bits/types.h" 3 4
#define __S16_TYPE short int
#define __U16_TYPE unsigned short int
#define __S32_TYPE int
#define __U32_TYPE unsigned int
#define __SLONGWORD_TYPE long int
#define __ULONGWORD_TYPE unsigned long int

#define __SQUAD_TYPE __quad_t
#define __UQUAD_TYPE __u_quad_t
#define __SWORD_TYPE int
#define __UWORD_TYPE unsigned int
#define __SLONG32_TYPE long int
#define __ULONG32_TYPE unsigned long int
#define __S64_TYPE __quad_t
#define __U64_TYPE __u_quad_t


#define __STD_TYPE __extension__ typedef
# 134 "/usr/include/bits/types.h" 3 4
# 1 "/usr/include/bits/typesizes.h" 1 3 4
# 25 "/usr/include/bits/typesizes.h" 3 4
#define _BITS_TYPESIZES_H 1




#define __DEV_T_TYPE __UQUAD_TYPE
#define __UID_T_TYPE __U32_TYPE
#define __GID_T_TYPE __U32_TYPE
#define __INO_T_TYPE __ULONGWORD_TYPE
#define __INO64_T_TYPE __UQUAD_TYPE
#define __MODE_T_TYPE __U32_TYPE
#define __NLINK_T_TYPE __UWORD_TYPE
#define __OFF_T_TYPE __SLONGWORD_TYPE
#define __OFF64_T_TYPE __SQUAD_TYPE
#define __PID_T_TYPE __S32_TYPE
#define __RLIM_T_TYPE __ULONGWORD_TYPE
#define __RLIM64_T_TYPE __UQUAD_TYPE
#define __BLKCNT_T_TYPE __SLONGWORD_TYPE
#define __BLKCNT64_T_TYPE __SQUAD_TYPE
#define __FSBLKCNT_T_TYPE __ULONGWORD_TYPE
#define __FSBLKCNT64_T_TYPE __UQUAD_TYPE
#define __FSFILCNT_T_TYPE __ULONGWORD_TYPE
#define __FSFILCNT64_T_TYPE __UQUAD_TYPE
#define __ID_T_TYPE __U32_TYPE
#define __CLOCK_T_TYPE __SLONGWORD_TYPE
#define __TIME_T_TYPE __SLONGWORD_TYPE
#define __USECONDS_T_TYPE __U32_TYPE
#define __SUSECONDS_T_TYPE __SLONGWORD_TYPE
#define __DADDR_T_TYPE __S32_TYPE
#define __SWBLK_T_TYPE __SLONGWORD_TYPE
#define __KEY_T_TYPE __S32_TYPE
#define __CLOCKID_T_TYPE __S32_TYPE
#define __TIMER_T_TYPE void *
#define __BLKSIZE_T_TYPE __SLONGWORD_TYPE
#define __FSID_T_TYPE struct { int __val[2]; }
#define __SSIZE_T_TYPE __SWORD_TYPE


#define __FD_SETSIZE 1024
# 135 "/usr/include/bits/types.h" 2 3 4


__extension__ typedef __u_quad_t __dev_t;
__extension__ typedef unsigned int __uid_t;
__extension__ typedef unsigned int __gid_t;
__extension__ typedef unsigned long int __ino_t;
__extension__ typedef __u_quad_t __ino64_t;
__extension__ typedef unsigned int __mode_t;
__extension__ typedef unsigned int __nlink_t;
__extension__ typedef long int __off_t;
__extension__ typedef __quad_t __off64_t;
__extension__ typedef int __pid_t;
__extension__ typedef struct { int __val[2]; } __fsid_t;
__extension__ typedef long int __clock_t;
__extension__ typedef unsigned long int __rlim_t;
__extension__ typedef __u_quad_t __rlim64_t;
__extension__ typedef unsigned int __id_t;
__extension__ typedef long int __time_t;
__extension__ typedef unsigned int __useconds_t;
__extension__ typedef long int __suseconds_t;

__extension__ typedef int __daddr_t;
__extension__ typedef long int __swblk_t;
__extension__ typedef int __key_t;


__extension__ typedef int __clockid_t;


__extension__ typedef void * __timer_t;


__extension__ typedef long int __blksize_t;




__extension__ typedef long int __blkcnt_t;
__extension__ typedef __quad_t __blkcnt64_t;


__extension__ typedef unsigned long int __fsblkcnt_t;
__extension__ typedef __u_quad_t __fsblkcnt64_t;


__extension__ typedef unsigned long int __fsfilcnt_t;
__extension__ typedef __u_quad_t __fsfilcnt64_t;

__extension__ typedef int __ssize_t;



typedef __off64_t __loff_t;
typedef __quad_t *__qaddr_t;
typedef char *__caddr_t;


__extension__ typedef int __intptr_t;


__extension__ typedef unsigned int __socklen_t;


#undef __STD_TYPE
# 27 "/usr/include/sched.h" 2 3 4

#define __need_timespec 
# 1 "/usr/include/time.h" 1 3 4
# 68 "/usr/include/time.h" 3 4
#undef __need_clock_t
# 84 "/usr/include/time.h" 3 4
#undef __need_time_t
# 96 "/usr/include/time.h" 3 4
#undef __clockid_time_t
# 108 "/usr/include/time.h" 3 4
#undef __need_timer_t






#define __timespec_defined 1





struct timespec
  {
    __time_t tv_sec;
    long int tv_nsec;
  };


#undef __need_timespec
# 30 "/usr/include/sched.h" 2 3 4


# 1 "/usr/include/bits/sched.h" 1 3 4
# 29 "/usr/include/bits/sched.h" 3 4
#define SCHED_OTHER 0
#define SCHED_FIFO 1
#define SCHED_RR 2

#define SCHED_BATCH 3




#define CSIGNAL 0x000000ff
#define CLONE_VM 0x00000100
#define CLONE_FS 0x00000200
#define CLONE_FILES 0x00000400
#define CLONE_SIGHAND 0x00000800
#define CLONE_PTRACE 0x00002000
#define CLONE_VFORK 0x00004000

#define CLONE_PARENT 0x00008000

#define CLONE_THREAD 0x00010000
#define CLONE_NEWNS 0x00020000
#define CLONE_SYSVSEM 0x00040000
#define CLONE_SETTLS 0x00080000
#define CLONE_PARENT_SETTID 0x00100000

#define CLONE_CHILD_CLEARTID 0x00200000

#define CLONE_DETACHED 0x00400000
#define CLONE_UNTRACED 0x00800000

#define CLONE_CHILD_SETTID 0x01000000

#define CLONE_STOPPED 0x02000000



struct sched_param
  {
    int __sched_priority;
  };





extern int clone (int (*__fn) (void *__arg), void *__child_stack,
    int __flags, void *__arg, ...) __attribute__ ((__nothrow__));


extern int unshare (int __flags) __attribute__ ((__nothrow__));








#define __defined_schedparam 1

struct __sched_param
  {
    int __sched_priority;
  };
#undef __need_schedparam




#define __cpu_set_t_defined 

#define __CPU_SETSIZE 1024
#define __NCPUBITS (8 * sizeof (__cpu_mask))


typedef unsigned long int __cpu_mask;


#define __CPUELT(cpu) ((cpu) / __NCPUBITS)
#define __CPUMASK(cpu) ((__cpu_mask) 1 << ((cpu) % __NCPUBITS))


typedef struct
{
  __cpu_mask __bits[1024 / (8 * sizeof (__cpu_mask))];
} cpu_set_t;


#define __CPU_ZERO(cpusetp) do { unsigned int __i; cpu_set_t *__arr = (cpusetp); for (__i = 0; __i < sizeof (cpu_set_t) / sizeof (__cpu_mask); ++__i) __arr->__bits[__i] = 0; } while (0)






#define __CPU_SET(cpu,cpusetp) ((cpusetp)->__bits[__CPUELT (cpu)] |= __CPUMASK (cpu))

#define __CPU_CLR(cpu,cpusetp) ((cpusetp)->__bits[__CPUELT (cpu)] &= ~__CPUMASK (cpu))

#define __CPU_ISSET(cpu,cpusetp) (((cpusetp)->__bits[__CPUELT (cpu)] & __CPUMASK (cpu)) != 0)
# 33 "/usr/include/sched.h" 2 3 4

#define sched_priority __sched_priority





extern int sched_setparam (__pid_t __pid, __const struct sched_param *__param)
     __attribute__ ((__nothrow__));


extern int sched_getparam (__pid_t __pid, struct sched_param *__param) __attribute__ ((__nothrow__));


extern int sched_setscheduler (__pid_t __pid, int __policy,
          __const struct sched_param *__param) __attribute__ ((__nothrow__));


extern int sched_getscheduler (__pid_t __pid) __attribute__ ((__nothrow__));


extern int sched_yield (void) __attribute__ ((__nothrow__));


extern int sched_get_priority_max (int __algorithm) __attribute__ ((__nothrow__));


extern int sched_get_priority_min (int __algorithm) __attribute__ ((__nothrow__));


extern int sched_rr_get_interval (__pid_t __pid, struct timespec *__t) __attribute__ ((__nothrow__));




#define CPU_SETSIZE __CPU_SETSIZE
#define CPU_SET(cpu,cpusetp) __CPU_SET (cpu, cpusetp)
#define CPU_CLR(cpu,cpusetp) __CPU_CLR (cpu, cpusetp)
#define CPU_ISSET(cpu,cpusetp) __CPU_ISSET (cpu, cpusetp)
#define CPU_ZERO(cpusetp) __CPU_ZERO (cpusetp)



extern int sched_setaffinity (__pid_t __pid, size_t __cpusetsize,
         __const cpu_set_t *__cpuset) __attribute__ ((__nothrow__));


extern int sched_getaffinity (__pid_t __pid, size_t __cpusetsize,
         cpu_set_t *__cpuset) __attribute__ ((__nothrow__));



# 25 "/usr/include/pthread.h" 2 3 4
# 1 "/usr/include/time.h" 1 3 4
# 28 "/usr/include/time.h" 3 4
#define _TIME_H 1








#define __need_size_t 
#define __need_NULL 
# 1 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 1 3 4
# 236 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 3 4
#undef __need_size_t
# 398 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 3 4
#undef NULL




#define NULL ((void *)0)





#undef __need_NULL
# 40 "/usr/include/time.h" 2 3 4



# 1 "/usr/include/bits/time.h" 1 3 4
# 26 "/usr/include/bits/time.h" 3 4
#define _BITS_TIME_H 1







#define CLOCKS_PER_SEC 1000000l
# 46 "/usr/include/bits/time.h" 3 4
#define CLOCK_REALTIME 0

#define CLOCK_MONOTONIC 1

#define CLOCK_PROCESS_CPUTIME_ID 2

#define CLOCK_THREAD_CPUTIME_ID 3


#define TIMER_ABSTIME 1
# 44 "/usr/include/time.h" 2 3 4
# 55 "/usr/include/time.h" 3 4
#define __clock_t_defined 1





typedef __clock_t clock_t;






#undef __need_clock_t


#define __time_t_defined 1





typedef __time_t time_t;






#undef __need_time_t



#define __clockid_t_defined 1




typedef __clockid_t clockid_t;


#undef __clockid_time_t



#define __timer_t_defined 1




typedef __timer_t timer_t;


#undef __need_timer_t
# 128 "/usr/include/time.h" 3 4
#undef __need_timespec





struct tm
{
  int tm_sec;
  int tm_min;
  int tm_hour;
  int tm_mday;
  int tm_mon;
  int tm_year;
  int tm_wday;
  int tm_yday;
  int tm_isdst;


  long int tm_gmtoff;
  __const char *tm_zone;




};








struct itimerspec
  {
    struct timespec it_interval;
    struct timespec it_value;
  };


struct sigevent;





typedef __pid_t pid_t;
#define __pid_t_defined 







extern clock_t clock (void) __attribute__ ((__nothrow__));


extern time_t time (time_t *__timer) __attribute__ ((__nothrow__));


extern double difftime (time_t __time1, time_t __time0)
     __attribute__ ((__nothrow__)) __attribute__ ((__const__));


extern time_t mktime (struct tm *__tp) __attribute__ ((__nothrow__));





extern size_t strftime (char *__restrict __s, size_t __maxsize,
   __const char *__restrict __format,
   __const struct tm *__restrict __tp) __attribute__ ((__nothrow__));





extern char *strptime (__const char *__restrict __s,
         __const char *__restrict __fmt, struct tm *__tp)
     __attribute__ ((__nothrow__));





# 1 "/usr/include/xlocale.h" 1 3 4
# 22 "/usr/include/xlocale.h" 3 4
#define _XLOCALE_H 1





typedef struct __locale_struct
{

  struct locale_data *__locales[13];


  const unsigned short int *__ctype_b;
  const int *__ctype_tolower;
  const int *__ctype_toupper;


  const char *__names[13];
} *__locale_t;
# 217 "/usr/include/time.h" 2 3 4

extern size_t strftime_l (char *__restrict __s, size_t __maxsize,
     __const char *__restrict __format,
     __const struct tm *__restrict __tp,
     __locale_t __loc) __attribute__ ((__nothrow__));

extern char *strptime_l (__const char *__restrict __s,
    __const char *__restrict __fmt, struct tm *__tp,
    __locale_t __loc) __attribute__ ((__nothrow__));






extern struct tm *gmtime (__const time_t *__timer) __attribute__ ((__nothrow__));



extern struct tm *localtime (__const time_t *__timer) __attribute__ ((__nothrow__));





extern struct tm *gmtime_r (__const time_t *__restrict __timer,
       struct tm *__restrict __tp) __attribute__ ((__nothrow__));



extern struct tm *localtime_r (__const time_t *__restrict __timer,
          struct tm *__restrict __tp) __attribute__ ((__nothrow__));





extern char *asctime (__const struct tm *__tp) __attribute__ ((__nothrow__));


extern char *ctime (__const time_t *__timer) __attribute__ ((__nothrow__));







extern char *asctime_r (__const struct tm *__restrict __tp,
   char *__restrict __buf) __attribute__ ((__nothrow__));


extern char *ctime_r (__const time_t *__restrict __timer,
        char *__restrict __buf) __attribute__ ((__nothrow__));




extern char *__tzname[2];
extern int __daylight;
extern long int __timezone;




extern char *tzname[2];



extern void tzset (void) __attribute__ ((__nothrow__));



extern int daylight;
extern long int timezone;





extern int stime (__const time_t *__when) __attribute__ ((__nothrow__));





#define __isleap(year) ((year) % 4 == 0 && ((year) % 100 != 0 || (year) % 400 == 0))
# 312 "/usr/include/time.h" 3 4
extern time_t timegm (struct tm *__tp) __attribute__ ((__nothrow__));


extern time_t timelocal (struct tm *__tp) __attribute__ ((__nothrow__));


extern int dysize (int __year) __attribute__ ((__nothrow__)) __attribute__ ((__const__));
# 327 "/usr/include/time.h" 3 4
extern int nanosleep (__const struct timespec *__requested_time,
        struct timespec *__remaining);



extern int clock_getres (clockid_t __clock_id, struct timespec *__res) __attribute__ ((__nothrow__));


extern int clock_gettime (clockid_t __clock_id, struct timespec *__tp) __attribute__ ((__nothrow__));


extern int clock_settime (clockid_t __clock_id, __const struct timespec *__tp)
     __attribute__ ((__nothrow__));






extern int clock_nanosleep (clockid_t __clock_id, int __flags,
       __const struct timespec *__req,
       struct timespec *__rem);


extern int clock_getcpuclockid (pid_t __pid, clockid_t *__clock_id) __attribute__ ((__nothrow__));




extern int timer_create (clockid_t __clock_id,
    struct sigevent *__restrict __evp,
    timer_t *__restrict __timerid) __attribute__ ((__nothrow__));


extern int timer_delete (timer_t __timerid) __attribute__ ((__nothrow__));


extern int timer_settime (timer_t __timerid, int __flags,
     __const struct itimerspec *__restrict __value,
     struct itimerspec *__restrict __ovalue) __attribute__ ((__nothrow__));


extern int timer_gettime (timer_t __timerid, struct itimerspec *__value)
     __attribute__ ((__nothrow__));


extern int timer_getoverrun (timer_t __timerid) __attribute__ ((__nothrow__));
# 389 "/usr/include/time.h" 3 4
extern int getdate_err;
# 398 "/usr/include/time.h" 3 4
extern struct tm *getdate (__const char *__string);
# 412 "/usr/include/time.h" 3 4
extern int getdate_r (__const char *__restrict __string,
        struct tm *__restrict __resbufp);



# 26 "/usr/include/pthread.h" 2 3 4

#define __need_sigset_t 
# 1 "/usr/include/signal.h" 1 3 4
# 31 "/usr/include/signal.h" 3 4


# 1 "/usr/include/bits/sigset.h" 1 3 4
# 21 "/usr/include/bits/sigset.h" 3 4
#define _SIGSET_H_types 1

typedef int __sig_atomic_t;



#define _SIGSET_NWORDS (1024 / (8 * sizeof (unsigned long int)))
typedef struct
  {
    unsigned long int __val[(1024 / (8 * sizeof (unsigned long int)))];
  } __sigset_t;
# 34 "/usr/include/signal.h" 2 3 4
# 49 "/usr/include/signal.h" 3 4
#define __sigset_t_defined 
typedef __sigset_t sigset_t;

#undef __need_sigset_t
# 400 "/usr/include/signal.h" 3 4

# 29 "/usr/include/pthread.h" 2 3 4
# 1 "/usr/include/bits/pthreadtypes.h" 1 3 4
# 20 "/usr/include/bits/pthreadtypes.h" 3 4
#define _BITS_PTHREADTYPES_H 1

#define __SIZEOF_PTHREAD_ATTR_T 36
#define __SIZEOF_PTHREAD_MUTEX_T 24
#define __SIZEOF_PTHREAD_MUTEXATTR_T 4
#define __SIZEOF_PTHREAD_COND_T 48
#define __SIZEOF_PTHREAD_COND_COMPAT_T 12
#define __SIZEOF_PTHREAD_CONDATTR_T 4
#define __SIZEOF_PTHREAD_RWLOCK_T 32
#define __SIZEOF_PTHREAD_RWLOCKATTR_T 8
#define __SIZEOF_PTHREAD_BARRIER_T 20
#define __SIZEOF_PTHREAD_BARRIERATTR_T 4




typedef unsigned long int pthread_t;


typedef union
{
  char __size[36];
  long int __align;
} pthread_attr_t;


typedef struct __pthread_internal_slist
{
  struct __pthread_internal_slist *__next;
} __pthread_slist_t;




typedef union
{
  struct __pthread_mutex_s
  {
    int __lock;
    unsigned int __count;
    int __owner;


    int __kind;
    unsigned int __nusers;
    __extension__ union
    {
      int __spins;
      __pthread_slist_t __list;
    };
  } __data;
  char __size[24];
  long int __align;
} pthread_mutex_t;

typedef union
{
  char __size[4];
  long int __align;
} pthread_mutexattr_t;




typedef union
{
  struct
  {
    int __lock;
    unsigned int __futex;
    __extension__ unsigned long long int __total_seq;
    __extension__ unsigned long long int __wakeup_seq;
    __extension__ unsigned long long int __woken_seq;
    void *__mutex;
    unsigned int __nwaiters;
    unsigned int __broadcast_seq;
  } __data;
  char __size[48];
  __extension__ long long int __align;
} pthread_cond_t;

typedef union
{
  char __size[4];
  long int __align;
} pthread_condattr_t;



typedef unsigned int pthread_key_t;



typedef int pthread_once_t;





typedef union
{
  struct
  {
    int __lock;
    unsigned int __nr_readers;
    unsigned int __readers_wakeup;
    unsigned int __writer_wakeup;
    unsigned int __nr_readers_queued;
    unsigned int __nr_writers_queued;


    unsigned char __flags;
    unsigned char __shared;
    unsigned char __pad1;
    unsigned char __pad2;
    int __writer;
  } __data;
  char __size[32];
  long int __align;
} pthread_rwlock_t;

typedef union
{
  char __size[8];
  long int __align;
} pthread_rwlockattr_t;





typedef volatile int pthread_spinlock_t;




typedef union
{
  char __size[20];
  long int __align;
} pthread_barrier_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_barrierattr_t;




#define __cleanup_fct_attribute __attribute__ ((__regparm__ (1)))
# 30 "/usr/include/pthread.h" 2 3 4
# 1 "/usr/include/bits/setjmp.h" 1 3 4
# 22 "/usr/include/bits/setjmp.h" 3 4
#define _BITS_SETJMP_H 1






typedef int __jmp_buf[6];
# 31 "/usr/include/pthread.h" 2 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 19 "/usr/include/bits/wordsize.h" 3 4
#define __WORDSIZE 32
# 32 "/usr/include/pthread.h" 2 3 4



enum
{
  PTHREAD_CREATE_JOINABLE,
#define PTHREAD_CREATE_JOINABLE PTHREAD_CREATE_JOINABLE
  PTHREAD_CREATE_DETACHED
#define PTHREAD_CREATE_DETACHED PTHREAD_CREATE_DETACHED
};



enum
{
  PTHREAD_MUTEX_TIMED_NP,
  PTHREAD_MUTEX_RECURSIVE_NP,
  PTHREAD_MUTEX_ERRORCHECK_NP,
  PTHREAD_MUTEX_ADAPTIVE_NP

  ,
  PTHREAD_MUTEX_NORMAL = PTHREAD_MUTEX_TIMED_NP,
  PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,
  PTHREAD_MUTEX_ERRORCHECK = PTHREAD_MUTEX_ERRORCHECK_NP,
  PTHREAD_MUTEX_DEFAULT = PTHREAD_MUTEX_NORMAL



  , PTHREAD_MUTEX_FAST_NP = PTHREAD_MUTEX_TIMED_NP

};




enum
{
  PTHREAD_MUTEX_STALLED_NP,
  PTHREAD_MUTEX_ROBUST_NP
};





enum
{
  PTHREAD_PRIO_NONE,
  PTHREAD_PRIO_INHERIT,
  PTHREAD_PRIO_PROTECT
};
# 99 "/usr/include/pthread.h" 3 4
#define PTHREAD_MUTEX_INITIALIZER { { 0, 0, 0, 0, 0, { 0 } } }


#define PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP { { 0, 0, 0, PTHREAD_MUTEX_RECURSIVE_NP, 0, { 0 } } }

#define PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP { { 0, 0, 0, PTHREAD_MUTEX_ERRORCHECK_NP, 0, { 0 } } }

#define PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP { { 0, 0, 0, PTHREAD_MUTEX_ADAPTIVE_NP, 0, { 0 } } }







enum
{
  PTHREAD_RWLOCK_PREFER_READER_NP,
  PTHREAD_RWLOCK_PREFER_WRITER_NP,
  PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP,
  PTHREAD_RWLOCK_DEFAULT_NP = PTHREAD_RWLOCK_PREFER_READER_NP
};


#define PTHREAD_RWLOCK_INITIALIZER { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
# 132 "/usr/include/pthread.h" 3 4
#define PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP { { 0, 0, 0, 0, 0, 0, PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP, 0, 0, 0, 0 } }
# 146 "/usr/include/pthread.h" 3 4
enum
{
  PTHREAD_INHERIT_SCHED,
#define PTHREAD_INHERIT_SCHED PTHREAD_INHERIT_SCHED
  PTHREAD_EXPLICIT_SCHED
#define PTHREAD_EXPLICIT_SCHED PTHREAD_EXPLICIT_SCHED
};



enum
{
  PTHREAD_SCOPE_SYSTEM,
#define PTHREAD_SCOPE_SYSTEM PTHREAD_SCOPE_SYSTEM
  PTHREAD_SCOPE_PROCESS
#define PTHREAD_SCOPE_PROCESS PTHREAD_SCOPE_PROCESS
};



enum
{
  PTHREAD_PROCESS_PRIVATE,
#define PTHREAD_PROCESS_PRIVATE PTHREAD_PROCESS_PRIVATE
  PTHREAD_PROCESS_SHARED
#define PTHREAD_PROCESS_SHARED PTHREAD_PROCESS_SHARED
};




#define PTHREAD_COND_INITIALIZER { { 0, 0, 0, 0, 0, (void *) 0, 0, 0 } }



struct _pthread_cleanup_buffer
{
  void (*__routine) (void *);
  void *__arg;
  int __canceltype;
  struct _pthread_cleanup_buffer *__prev;
};


enum
{
  PTHREAD_CANCEL_ENABLE,
#define PTHREAD_CANCEL_ENABLE PTHREAD_CANCEL_ENABLE
  PTHREAD_CANCEL_DISABLE
#define PTHREAD_CANCEL_DISABLE PTHREAD_CANCEL_DISABLE
};
enum
{
  PTHREAD_CANCEL_DEFERRED,
#define PTHREAD_CANCEL_DEFERRED PTHREAD_CANCEL_DEFERRED
  PTHREAD_CANCEL_ASYNCHRONOUS
#define PTHREAD_CANCEL_ASYNCHRONOUS PTHREAD_CANCEL_ASYNCHRONOUS
};
#define PTHREAD_CANCELED ((void *) -1)



#define PTHREAD_ONCE_INIT 0






#define PTHREAD_BARRIER_SERIAL_THREAD -1








extern int pthread_create (pthread_t *__restrict __newthread,
      __const pthread_attr_t *__restrict __attr,
      void *(*__start_routine) (void *),
      void *__restrict __arg) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 3)));





extern void pthread_exit (void *__retval) __attribute__ ((__noreturn__));







extern int pthread_join (pthread_t __th, void **__thread_return);




extern int pthread_tryjoin_np (pthread_t __th, void **__thread_return) __attribute__ ((__nothrow__));







extern int pthread_timedjoin_np (pthread_t __th, void **__thread_return,
     __const struct timespec *__abstime);






extern int pthread_detach (pthread_t __th) __attribute__ ((__nothrow__));



extern pthread_t pthread_self (void) __attribute__ ((__nothrow__)) __attribute__ ((__const__));


extern int pthread_equal (pthread_t __thread1, pthread_t __thread2) __attribute__ ((__nothrow__));







extern int pthread_attr_init (pthread_attr_t *__attr) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_attr_destroy (pthread_attr_t *__attr)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_attr_getdetachstate (__const pthread_attr_t *__attr,
     int *__detachstate)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_attr_setdetachstate (pthread_attr_t *__attr,
     int __detachstate)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_attr_getguardsize (__const pthread_attr_t *__attr,
          size_t *__guardsize)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_attr_setguardsize (pthread_attr_t *__attr,
          size_t __guardsize)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_attr_getschedparam (__const pthread_attr_t *__restrict
           __attr,
           struct sched_param *__restrict __param)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_attr_setschedparam (pthread_attr_t *__restrict __attr,
           __const struct sched_param *__restrict
           __param) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_attr_getschedpolicy (__const pthread_attr_t *__restrict
     __attr, int *__restrict __policy)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_attr_setschedpolicy (pthread_attr_t *__attr, int __policy)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_attr_getinheritsched (__const pthread_attr_t *__restrict
      __attr, int *__restrict __inherit)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_attr_setinheritsched (pthread_attr_t *__attr,
      int __inherit)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_attr_getscope (__const pthread_attr_t *__restrict __attr,
      int *__restrict __scope)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_attr_setscope (pthread_attr_t *__attr, int __scope)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_attr_getstackaddr (__const pthread_attr_t *__restrict
          __attr, void **__restrict __stackaddr)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2))) __attribute__ ((__deprecated__));





extern int pthread_attr_setstackaddr (pthread_attr_t *__attr,
          void *__stackaddr)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__deprecated__));


extern int pthread_attr_getstacksize (__const pthread_attr_t *__restrict
          __attr, size_t *__restrict __stacksize)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));




extern int pthread_attr_setstacksize (pthread_attr_t *__attr,
          size_t __stacksize)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_attr_getstack (__const pthread_attr_t *__restrict __attr,
      void **__restrict __stackaddr,
      size_t *__restrict __stacksize)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2, 3)));




extern int pthread_attr_setstack (pthread_attr_t *__attr, void *__stackaddr,
      size_t __stacksize) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));





extern int pthread_attr_setaffinity_np (pthread_attr_t *__attr,
     size_t __cpusetsize,
     __const cpu_set_t *__cpuset)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 3)));



extern int pthread_attr_getaffinity_np (__const pthread_attr_t *__attr,
     size_t __cpusetsize,
     cpu_set_t *__cpuset)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 3)));





extern int pthread_getattr_np (pthread_t __th, pthread_attr_t *__attr)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));







extern int pthread_setschedparam (pthread_t __target_thread, int __policy,
      __const struct sched_param *__param)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3)));


extern int pthread_getschedparam (pthread_t __target_thread,
      int *__restrict __policy,
      struct sched_param *__restrict __param)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));


extern int pthread_setschedprio (pthread_t __target_thread, int __prio)
     __attribute__ ((__nothrow__));




extern int pthread_getconcurrency (void) __attribute__ ((__nothrow__));


extern int pthread_setconcurrency (int __level) __attribute__ ((__nothrow__));







extern int pthread_yield (void) __attribute__ ((__nothrow__));




extern int pthread_setaffinity_np (pthread_t __th, size_t __cpusetsize,
       __const cpu_set_t *__cpuset)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3)));


extern int pthread_getaffinity_np (pthread_t __th, size_t __cpusetsize,
       cpu_set_t *__cpuset)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3)));
# 465 "/usr/include/pthread.h" 3 4
extern int pthread_once (pthread_once_t *__once_control,
    void (*__init_routine) (void)) __attribute__ ((__nonnull__ (1, 2)));
# 477 "/usr/include/pthread.h" 3 4
extern int pthread_setcancelstate (int __state, int *__oldstate);



extern int pthread_setcanceltype (int __type, int *__oldtype);


extern int pthread_cancel (pthread_t __th);




extern void pthread_testcancel (void);




typedef struct
{
  struct
  {
    __jmp_buf __cancel_jmp_buf;
    int __mask_was_saved;
  } __cancel_jmp_buf[1];
  void *__pad[4];
} __pthread_unwind_buf_t __attribute__ ((__aligned__));
# 511 "/usr/include/pthread.h" 3 4
struct __pthread_cleanup_frame
{
  void (*__cancel_routine) (void *);
  void *__cancel_arg;
  int __do_it;
  int __cancel_type;
};
# 635 "/usr/include/pthread.h" 3 4
#define pthread_cleanup_push(routine,arg) do { __pthread_unwind_buf_t __cancel_buf; void (*__cancel_routine) (void *) = (routine); void *__cancel_arg = (arg); int not_first_call = __sigsetjmp ((struct __jmp_buf_tag *) __cancel_buf.__cancel_jmp_buf, 0); if (__builtin_expect (not_first_call, 0)) { __cancel_routine (__cancel_arg); __pthread_unwind_next (&__cancel_buf); } __pthread_register_cancel (&__cancel_buf); do {
# 651 "/usr/include/pthread.h" 3 4
extern void __pthread_register_cancel (__pthread_unwind_buf_t *__buf)
     __attribute__ ((__regparm__ (1)));



#define pthread_cleanup_pop(execute) } while (0); __pthread_unregister_cancel (&__cancel_buf); if (execute) __cancel_routine (__cancel_arg); } while (0)





extern void __pthread_unregister_cancel (__pthread_unwind_buf_t *__buf)
  __attribute__ ((__regparm__ (1)));





#define pthread_cleanup_push_defer_np(routine,arg) do { __pthread_unwind_buf_t __cancel_buf; void (*__cancel_routine) (void *) = (routine); void *__cancel_arg = (arg); int not_first_call = __sigsetjmp ((struct __jmp_buf_tag *) __cancel_buf.__cancel_jmp_buf, 0); if (__builtin_expect (not_first_call, 0)) { __cancel_routine (__cancel_arg); __pthread_unwind_next (&__cancel_buf); } __pthread_register_cancel_defer (&__cancel_buf); do {
# 685 "/usr/include/pthread.h" 3 4
extern void __pthread_register_cancel_defer (__pthread_unwind_buf_t *__buf)
     __attribute__ ((__regparm__ (1)));




#define pthread_cleanup_pop_restore_np(execute) } while (0); __pthread_unregister_cancel_restore (&__cancel_buf); if (execute) __cancel_routine (__cancel_arg); } while (0)





extern void __pthread_unregister_cancel_restore (__pthread_unwind_buf_t *__buf)
  __attribute__ ((__regparm__ (1)));



extern void __pthread_unwind_next (__pthread_unwind_buf_t *__buf)
     __attribute__ ((__regparm__ (1))) __attribute__ ((__noreturn__))

     __attribute__ ((__weak__))

     ;



struct __jmp_buf_tag;
extern int __sigsetjmp (struct __jmp_buf_tag *__env, int __savemask) __attribute__ ((__nothrow__));





extern int pthread_mutex_init (pthread_mutex_t *__mutex,
          __const pthread_mutexattr_t *__mutexattr)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_mutex_destroy (pthread_mutex_t *__mutex)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_mutex_trylock (pthread_mutex_t *__mutex)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_mutex_lock (pthread_mutex_t *__mutex)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_mutex_timedlock (pthread_mutex_t *__restrict __mutex,
                                    __const struct timespec *__restrict
                                    __abstime) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));



extern int pthread_mutex_unlock (pthread_mutex_t *__mutex)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));




extern int pthread_mutex_getprioceiling (__const pthread_mutex_t *
      __restrict __mutex,
      int *__restrict __prioceiling)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));



extern int pthread_mutex_setprioceiling (pthread_mutex_t *__restrict __mutex,
      int __prioceiling,
      int *__restrict __old_ceiling)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 3)));





extern int pthread_mutex_consistent_np (pthread_mutex_t *__mutex)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));







extern int pthread_mutexattr_init (pthread_mutexattr_t *__attr)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_mutexattr_destroy (pthread_mutexattr_t *__attr)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_mutexattr_getpshared (__const pthread_mutexattr_t *
      __restrict __attr,
      int *__restrict __pshared)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_mutexattr_setpshared (pthread_mutexattr_t *__attr,
      int __pshared)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_mutexattr_gettype (__const pthread_mutexattr_t *__restrict
          __attr, int *__restrict __kind)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));




extern int pthread_mutexattr_settype (pthread_mutexattr_t *__attr, int __kind)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_mutexattr_getprotocol (__const pthread_mutexattr_t *
       __restrict __attr,
       int *__restrict __protocol)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));



extern int pthread_mutexattr_setprotocol (pthread_mutexattr_t *__attr,
       int __protocol)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_mutexattr_getprioceiling (__const pthread_mutexattr_t *
          __restrict __attr,
          int *__restrict __prioceiling)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_mutexattr_setprioceiling (pthread_mutexattr_t *__attr,
          int __prioceiling)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));




extern int pthread_mutexattr_getrobust_np (__const pthread_mutexattr_t *__attr,
        int *__robustness)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_mutexattr_setrobust_np (pthread_mutexattr_t *__attr,
        int __robustness)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));
# 845 "/usr/include/pthread.h" 3 4
extern int pthread_rwlock_init (pthread_rwlock_t *__restrict __rwlock,
    __const pthread_rwlockattr_t *__restrict
    __attr) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_rwlock_destroy (pthread_rwlock_t *__rwlock)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_rwlock_rdlock (pthread_rwlock_t *__rwlock)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_rwlock_tryrdlock (pthread_rwlock_t *__rwlock)
  __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_rwlock_timedrdlock (pthread_rwlock_t *__restrict __rwlock,
           __const struct timespec *__restrict
           __abstime) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));



extern int pthread_rwlock_wrlock (pthread_rwlock_t *__rwlock)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_rwlock_trywrlock (pthread_rwlock_t *__rwlock)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_rwlock_timedwrlock (pthread_rwlock_t *__restrict __rwlock,
           __const struct timespec *__restrict
           __abstime) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));



extern int pthread_rwlock_unlock (pthread_rwlock_t *__rwlock)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));





extern int pthread_rwlockattr_init (pthread_rwlockattr_t *__attr)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_rwlockattr_destroy (pthread_rwlockattr_t *__attr)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_rwlockattr_getpshared (__const pthread_rwlockattr_t *
       __restrict __attr,
       int *__restrict __pshared)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_rwlockattr_setpshared (pthread_rwlockattr_t *__attr,
       int __pshared)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_rwlockattr_getkind_np (__const pthread_rwlockattr_t *
       __restrict __attr,
       int *__restrict __pref)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_rwlockattr_setkind_np (pthread_rwlockattr_t *__attr,
       int __pref) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));







extern int pthread_cond_init (pthread_cond_t *__restrict __cond,
         __const pthread_condattr_t *__restrict
         __cond_attr) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_cond_destroy (pthread_cond_t *__cond)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_cond_signal (pthread_cond_t *__cond)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_cond_broadcast (pthread_cond_t *__cond)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));






extern int pthread_cond_wait (pthread_cond_t *__restrict __cond,
         pthread_mutex_t *__restrict __mutex)
     __attribute__ ((__nonnull__ (1, 2)));
# 957 "/usr/include/pthread.h" 3 4
extern int pthread_cond_timedwait (pthread_cond_t *__restrict __cond,
       pthread_mutex_t *__restrict __mutex,
       __const struct timespec *__restrict
       __abstime) __attribute__ ((__nonnull__ (1, 2, 3)));




extern int pthread_condattr_init (pthread_condattr_t *__attr)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_condattr_destroy (pthread_condattr_t *__attr)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_condattr_getpshared (__const pthread_condattr_t *
                                        __restrict __attr,
                                        int *__restrict __pshared)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_condattr_setpshared (pthread_condattr_t *__attr,
                                        int __pshared) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_condattr_getclock (__const pthread_condattr_t *
          __restrict __attr,
          __clockid_t *__restrict __clock_id)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_condattr_setclock (pthread_condattr_t *__attr,
          __clockid_t __clock_id)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));
# 1001 "/usr/include/pthread.h" 3 4
extern int pthread_spin_init (pthread_spinlock_t *__lock, int __pshared)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_spin_destroy (pthread_spinlock_t *__lock)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_spin_lock (pthread_spinlock_t *__lock)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_spin_trylock (pthread_spinlock_t *__lock)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_spin_unlock (pthread_spinlock_t *__lock)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));






extern int pthread_barrier_init (pthread_barrier_t *__restrict __barrier,
     __const pthread_barrierattr_t *__restrict
     __attr, unsigned int __count)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_barrier_destroy (pthread_barrier_t *__barrier)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_barrier_wait (pthread_barrier_t *__barrier)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_barrierattr_init (pthread_barrierattr_t *__attr)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_barrierattr_destroy (pthread_barrierattr_t *__attr)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_barrierattr_getpshared (__const pthread_barrierattr_t *
        __restrict __attr,
        int *__restrict __pshared)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_barrierattr_setpshared (pthread_barrierattr_t *__attr,
                                           int __pshared)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));
# 1068 "/usr/include/pthread.h" 3 4
extern int pthread_key_create (pthread_key_t *__key,
          void (*__destr_function) (void *))
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_key_delete (pthread_key_t __key) __attribute__ ((__nothrow__));


extern void *pthread_getspecific (pthread_key_t __key) __attribute__ ((__nothrow__));


extern int pthread_setspecific (pthread_key_t __key,
    __const void *__pointer) __attribute__ ((__nothrow__)) ;




extern int pthread_getcpuclockid (pthread_t __thread_id,
      __clockid_t *__clock_id)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));
# 1102 "/usr/include/pthread.h" 3 4
extern int pthread_atfork (void (*__prepare) (void),
      void (*__parent) (void),
      void (*__child) (void)) __attribute__ ((__nothrow__));
# 1116 "/usr/include/pthread.h" 3 4

# 118 "/u/prd/rtr/mt/ss_dep.h" 2
# 1 "/usr/include/semaphore.h" 1 3 4
# 20 "/usr/include/semaphore.h" 3 4
#define _SEMAPHORE_H 1


# 1 "/usr/include/sys/types.h" 1 3 4
# 25 "/usr/include/sys/types.h" 3 4
#define _SYS_TYPES_H 1









typedef __u_char u_char;
typedef __u_short u_short;
typedef __u_int u_int;
typedef __u_long u_long;
typedef __quad_t quad_t;
typedef __u_quad_t u_quad_t;
typedef __fsid_t fsid_t;
#define __u_char_defined 



typedef __loff_t loff_t;



typedef __ino_t ino_t;



#define __ino_t_defined 


typedef __ino64_t ino64_t;
#define __ino64_t_defined 



typedef __dev_t dev_t;
#define __dev_t_defined 



typedef __gid_t gid_t;
#define __gid_t_defined 



typedef __mode_t mode_t;
#define __mode_t_defined 



typedef __nlink_t nlink_t;
#define __nlink_t_defined 



typedef __uid_t uid_t;
#define __uid_t_defined 




typedef __off_t off_t;



#define __off_t_defined 


typedef __off64_t off64_t;
#define __off64_t_defined 
# 105 "/usr/include/sys/types.h" 3 4
typedef __id_t id_t;
#define __id_t_defined 



typedef __ssize_t ssize_t;
#define __ssize_t_defined 




typedef __daddr_t daddr_t;
typedef __caddr_t caddr_t;
#define __daddr_t_defined 




typedef __key_t key_t;
#define __key_t_defined 



#define __need_clock_t 

#define __need_time_t 
#define __need_timer_t 
#define __need_clockid_t 




typedef __useconds_t useconds_t;
#define __useconds_t_defined 


typedef __suseconds_t suseconds_t;
#define __suseconds_t_defined 



#define __need_size_t 
# 1 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 1 3 4
# 236 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 3 4
#undef __need_size_t
# 409 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 3 4
#undef __need_NULL
# 148 "/usr/include/sys/types.h" 2 3 4



typedef unsigned long int ulong;
typedef unsigned short int ushort;
typedef unsigned int uint;
# 188 "/usr/include/sys/types.h" 3 4
#define __intN_t(N,MODE) typedef int int ##N ##_t __attribute__ ((__mode__ (MODE)))

#define __u_intN_t(N,MODE) typedef unsigned int u_int ##N ##_t __attribute__ ((__mode__ (MODE)))



#define __int8_t_defined 
typedef int int8_t __attribute__ ((__mode__ (__QI__)));
typedef int int16_t __attribute__ ((__mode__ (__HI__)));
typedef int int32_t __attribute__ ((__mode__ (__SI__)));
typedef int int64_t __attribute__ ((__mode__ (__DI__)));


typedef unsigned int u_int8_t __attribute__ ((__mode__ (__QI__)));
typedef unsigned int u_int16_t __attribute__ ((__mode__ (__HI__)));
typedef unsigned int u_int32_t __attribute__ ((__mode__ (__SI__)));
typedef unsigned int u_int64_t __attribute__ ((__mode__ (__DI__)));

typedef int register_t __attribute__ ((__mode__ (__word__)));





#define __BIT_TYPES_DEFINED__ 1







# 1 "/usr/include/sys/select.h" 1 3 4
# 23 "/usr/include/sys/select.h" 3 4
#define _SYS_SELECT_H 1







# 1 "/usr/include/bits/select.h" 1 3 4
# 26 "/usr/include/bits/select.h" 3 4
#define __FD_ZERO(fdsp) do { int __d0, __d1; __asm__ __volatile__ ("cld; rep; stosl" : "=c" (__d0), "=D" (__d1) : "a" (0), "0" (sizeof (fd_set) / sizeof (__fd_mask)), "1" (&__FDS_BITS (fdsp)[0]) : "memory"); } while (0)
# 37 "/usr/include/bits/select.h" 3 4
#define __FD_SET(fd,fdsp) __asm__ __volatile__ ("btsl %1,%0" : "=m" (__FDS_BITS (fdsp)[__FDELT (fd)]) : "r" (((int) (fd)) % __NFDBITS) : "cc","memory")




#define __FD_CLR(fd,fdsp) __asm__ __volatile__ ("btrl %1,%0" : "=m" (__FDS_BITS (fdsp)[__FDELT (fd)]) : "r" (((int) (fd)) % __NFDBITS) : "cc","memory")




#define __FD_ISSET(fd,fdsp) (__extension__ ({register char __result; __asm__ __volatile__ ("btl %1,%2 ; setcb %b0" : "=q" (__result) : "r" (((int) (fd)) % __NFDBITS), "m" (__FDS_BITS (fdsp)[__FDELT (fd)]) : "cc"); __result; }))
# 32 "/usr/include/sys/select.h" 2 3 4


# 1 "/usr/include/bits/sigset.h" 1 3 4
# 35 "/usr/include/sys/select.h" 2 3 4







#define __need_time_t 
#define __need_timespec 

#define __need_timeval 
# 1 "/usr/include/bits/time.h" 1 3 4
# 62 "/usr/include/bits/time.h" 3 4
#undef __need_timeval

#define _STRUCT_TIMEVAL 1




struct timeval
  {
    __time_t tv_sec;
    __suseconds_t tv_usec;
  };
# 47 "/usr/include/sys/select.h" 2 3 4
# 55 "/usr/include/sys/select.h" 3 4
typedef long int __fd_mask;


#undef __NFDBITS
#undef __FDELT
#undef __FDMASK

#define __NFDBITS (8 * sizeof (__fd_mask))
#define __FDELT(d) ((d) / __NFDBITS)
#define __FDMASK(d) ((__fd_mask) 1 << ((d) % __NFDBITS))


typedef struct
  {



    __fd_mask fds_bits[1024 / (8 * sizeof (__fd_mask))];
#define __FDS_BITS(set) ((set)->fds_bits)




  } fd_set;


#define FD_SETSIZE __FD_SETSIZE



typedef __fd_mask fd_mask;


#define NFDBITS __NFDBITS




#define FD_SET(fd,fdsetp) __FD_SET (fd, fdsetp)
#define FD_CLR(fd,fdsetp) __FD_CLR (fd, fdsetp)
#define FD_ISSET(fd,fdsetp) __FD_ISSET (fd, fdsetp)
#define FD_ZERO(fdsetp) __FD_ZERO (fdsetp)



# 109 "/usr/include/sys/select.h" 3 4
extern int select (int __nfds, fd_set *__restrict __readfds,
     fd_set *__restrict __writefds,
     fd_set *__restrict __exceptfds,
     struct timeval *__restrict __timeout);
# 121 "/usr/include/sys/select.h" 3 4
extern int pselect (int __nfds, fd_set *__restrict __readfds,
      fd_set *__restrict __writefds,
      fd_set *__restrict __exceptfds,
      const struct timespec *__restrict __timeout,
      const __sigset_t *__restrict __sigmask);



# 221 "/usr/include/sys/types.h" 2 3 4


# 1 "/usr/include/sys/sysmacros.h" 1 3 4
# 21 "/usr/include/sys/sysmacros.h" 3 4
#define _SYS_SYSMACROS_H 1







__extension__
extern __inline unsigned int gnu_dev_major (unsigned long long int __dev)
     __attribute__ ((__nothrow__));
__extension__
extern __inline unsigned int gnu_dev_minor (unsigned long long int __dev)
     __attribute__ ((__nothrow__));
__extension__
extern __inline unsigned long long int gnu_dev_makedev (unsigned int __major,
       unsigned int __minor)
     __attribute__ ((__nothrow__));


__extension__ extern __inline unsigned int
__attribute__ ((__nothrow__)) gnu_dev_major (unsigned long long int __dev)
{
  return ((__dev >> 8) & 0xfff) | ((unsigned int) (__dev >> 32) & ~0xfff);
}

__extension__ extern __inline unsigned int
__attribute__ ((__nothrow__)) gnu_dev_minor (unsigned long long int __dev)
{
  return (__dev & 0xff) | ((unsigned int) (__dev >> 12) & ~0xff);
}

__extension__ extern __inline unsigned long long int
__attribute__ ((__nothrow__)) gnu_dev_makedev (unsigned int __major, unsigned int __minor)
{
  return ((__minor & 0xff) | ((__major & 0xfff) << 8)
   | (((unsigned long long int) (__minor & ~0xff)) << 12)
   | (((unsigned long long int) (__major & ~0xfff)) << 32));
}




#define major(dev) gnu_dev_major (dev)
#define minor(dev) gnu_dev_minor (dev)
#define makedev(maj,min) gnu_dev_makedev (maj, min)
# 224 "/usr/include/sys/types.h" 2 3 4




typedef __blksize_t blksize_t;
#define __blksize_t_defined 





typedef __blkcnt_t blkcnt_t;
#define __blkcnt_t_defined 


typedef __fsblkcnt_t fsblkcnt_t;
#define __fsblkcnt_t_defined 


typedef __fsfilcnt_t fsfilcnt_t;
#define __fsfilcnt_t_defined 
# 262 "/usr/include/sys/types.h" 3 4
typedef __blkcnt64_t blkcnt64_t;
typedef __fsblkcnt64_t fsblkcnt64_t;
typedef __fsfilcnt64_t fsfilcnt64_t;
# 273 "/usr/include/sys/types.h" 3 4

# 24 "/usr/include/semaphore.h" 2 3 4

#define __need_timespec 




# 1 "/usr/include/bits/semaphore.h" 1 3 4
# 25 "/usr/include/bits/semaphore.h" 3 4
#define __SIZEOF_SEM_T 16



#define SEM_FAILED ((sem_t *) 0)


#define SEM_VALUE_MAX (2147483647)


typedef union
{
  char __size[16];
  long int __align;
} sem_t;
# 31 "/usr/include/semaphore.h" 2 3 4






extern int sem_init (sem_t *__sem, int __pshared, unsigned int __value)
     __attribute__ ((__nothrow__));

extern int sem_destroy (sem_t *__sem) __attribute__ ((__nothrow__));


extern sem_t *sem_open (__const char *__name, int __oflag, ...) __attribute__ ((__nothrow__));


extern int sem_close (sem_t *__sem) __attribute__ ((__nothrow__));


extern int sem_unlink (__const char *__name) __attribute__ ((__nothrow__));





extern int sem_wait (sem_t *__sem);






extern int sem_timedwait (sem_t *__restrict __sem,
     __const struct timespec *__restrict __abstime);



extern int sem_trywait (sem_t *__sem) __attribute__ ((__nothrow__));


extern int sem_post (sem_t *__sem) __attribute__ ((__nothrow__));


extern int sem_getvalue (sem_t *__restrict __sem, int *__restrict __sval)
     __attribute__ ((__nothrow__));



# 119 "/u/prd/rtr/mt/ss_dep.h" 2
# 1 "/usr/include/stdio.h" 1 3 4
# 27 "/usr/include/stdio.h" 3 4
#define _STDIO_H 1




#define __need_size_t 
#define __need_NULL 
# 1 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 1 3 4
# 236 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 3 4
#undef __need_size_t
# 398 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 3 4
#undef NULL




#define NULL ((void *)0)





#undef __need_NULL
# 35 "/usr/include/stdio.h" 2 3 4


#define __need_FILE 
#define __need___FILE 







typedef struct _IO_FILE FILE;







#define __FILE_defined 1

#undef __need_FILE





typedef struct _IO_FILE __FILE;

#define ____FILE_defined 1

#undef __need___FILE



#define _STDIO_USES_IOSTREAM 

# 1 "/usr/include/libio.h" 1 3 4
# 30 "/usr/include/libio.h" 3 4
#define _IO_STDIO_H 

# 1 "/usr/include/_G_config.h" 1 3 4




#define _G_config_h 1




#define __need_size_t 
#define __need_wchar_t 
#define __need_wint_t 
#define __need_NULL 
# 1 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 1 3 4
# 236 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 3 4
#undef __need_size_t
# 265 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 3 4
#define __wchar_t__ 
#define __WCHAR_T__ 
#define _WCHAR_T 
#define _T_WCHAR_ 
#define _T_WCHAR 
#define __WCHAR_T 
#define _WCHAR_T_ 
#define _BSD_WCHAR_T_ 
#define _WCHAR_T_DEFINED_ 
#define _WCHAR_T_DEFINED 
#define _WCHAR_T_H 
#define ___int_wchar_t_h 
#define __INT_WCHAR_T_H 
#define _GCC_WCHAR_T 
#define _WCHAR_T_DECLARED 
# 292 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 3 4
#undef _BSD_WCHAR_T_
# 326 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 3 4
typedef long int wchar_t;
# 345 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 3 4
#undef __need_wchar_t




#define _WINT_T 




typedef unsigned int wint_t;

#undef __need_wint_t
# 398 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 3 4
#undef NULL




#define NULL ((void *)0)





#undef __need_NULL
# 15 "/usr/include/_G_config.h" 2 3 4
# 23 "/usr/include/_G_config.h" 3 4
#define __need_mbstate_t 
# 1 "/usr/include/wchar.h" 1 3 4
# 47 "/usr/include/wchar.h" 3 4
#define __need_wint_t 
# 1 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 1 3 4
# 357 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 3 4
#undef __need_wint_t
# 409 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 3 4
#undef __need_NULL
# 49 "/usr/include/wchar.h" 2 3 4

# 1 "/usr/include/bits/wchar.h" 1 3 4
# 21 "/usr/include/bits/wchar.h" 3 4
#define _BITS_WCHAR_H 1

#define __WCHAR_MIN (-2147483647l - 1l)
#define __WCHAR_MAX (2147483647l)
# 51 "/usr/include/wchar.h" 2 3 4
# 74 "/usr/include/wchar.h" 3 4
#define __mbstate_t_defined 1

typedef struct
{
  int __count;
  union
  {
    wint_t __wch;
    char __wchb[4];
  } __value;
} __mbstate_t;

#undef __need_mbstate_t
# 25 "/usr/include/_G_config.h" 2 3 4
#define _G_size_t size_t
typedef struct
{
  __off_t __pos;
  __mbstate_t __state;
} _G_fpos_t;
typedef struct
{
  __off64_t __pos;
  __mbstate_t __state;
} _G_fpos64_t;
#define _G_ssize_t __ssize_t
#define _G_off_t __off_t
#define _G_off64_t __off64_t
#define _G_pid_t __pid_t
#define _G_uid_t __uid_t
#define _G_wchar_t wchar_t
#define _G_wint_t wint_t
#define _G_stat64 stat64
# 1 "/usr/include/gconv.h" 1 3 4
# 24 "/usr/include/gconv.h" 3 4
#define _GCONV_H 1


#define __need_mbstate_t 
# 1 "/usr/include/wchar.h" 1 3 4
# 47 "/usr/include/wchar.h" 3 4
#define __need_wint_t 
# 1 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 1 3 4
# 357 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 3 4
#undef __need_wint_t
# 409 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 3 4
#undef __need_NULL
# 49 "/usr/include/wchar.h" 2 3 4
# 86 "/usr/include/wchar.h" 3 4
#undef __need_mbstate_t
# 29 "/usr/include/gconv.h" 2 3 4
#define __need_size_t 
#define __need_wchar_t 
# 1 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 1 3 4
# 236 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 3 4
#undef __need_size_t
# 345 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 3 4
#undef __need_wchar_t
# 409 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 3 4
#undef __need_NULL
# 32 "/usr/include/gconv.h" 2 3 4


#define __UNKNOWN_10646_CHAR ((wchar_t) 0xfffd)


enum
{
  __GCONV_OK = 0,
  __GCONV_NOCONV,
  __GCONV_NODB,
  __GCONV_NOMEM,

  __GCONV_EMPTY_INPUT,
  __GCONV_FULL_OUTPUT,
  __GCONV_ILLEGAL_INPUT,
  __GCONV_INCOMPLETE_INPUT,

  __GCONV_ILLEGAL_DESCRIPTOR,
  __GCONV_INTERNAL_ERROR
};



enum
{
  __GCONV_IS_LAST = 0x0001,
  __GCONV_IGNORE_ERRORS = 0x0002
};



struct __gconv_step;
struct __gconv_step_data;
struct __gconv_loaded_object;
struct __gconv_trans_data;



typedef int (*__gconv_fct) (struct __gconv_step *, struct __gconv_step_data *,
       __const unsigned char **, __const unsigned char *,
       unsigned char **, size_t *, int, int);


typedef wint_t (*__gconv_btowc_fct) (struct __gconv_step *, unsigned char);


typedef int (*__gconv_init_fct) (struct __gconv_step *);
typedef void (*__gconv_end_fct) (struct __gconv_step *);



typedef int (*__gconv_trans_fct) (struct __gconv_step *,
      struct __gconv_step_data *, void *,
      __const unsigned char *,
      __const unsigned char **,
      __const unsigned char *, unsigned char **,
      size_t *);


typedef int (*__gconv_trans_context_fct) (void *, __const unsigned char *,
       __const unsigned char *,
       unsigned char *, unsigned char *);


typedef int (*__gconv_trans_query_fct) (__const char *, __const char ***,
     size_t *);


typedef int (*__gconv_trans_init_fct) (void **, const char *);
typedef void (*__gconv_trans_end_fct) (void *);

struct __gconv_trans_data
{

  __gconv_trans_fct __trans_fct;
  __gconv_trans_context_fct __trans_context_fct;
  __gconv_trans_end_fct __trans_end_fct;
  void *__data;
  struct __gconv_trans_data *__next;
};



struct __gconv_step
{
  struct __gconv_loaded_object *__shlib_handle;
  __const char *__modname;

  int __counter;

  char *__from_name;
  char *__to_name;

  __gconv_fct __fct;
  __gconv_btowc_fct __btowc_fct;
  __gconv_init_fct __init_fct;
  __gconv_end_fct __end_fct;



  int __min_needed_from;
  int __max_needed_from;
  int __min_needed_to;
  int __max_needed_to;


  int __stateful;

  void *__data;
};



struct __gconv_step_data
{
  unsigned char *__outbuf;
  unsigned char *__outbufend;



  int __flags;



  int __invocation_counter;



  int __internal_use;

  __mbstate_t *__statep;
  __mbstate_t __state;



  struct __gconv_trans_data *__trans;
};



typedef struct __gconv_info
{
  size_t __nsteps;
  struct __gconv_step *__steps;
  __extension__ struct __gconv_step_data __data [];
} *__gconv_t;
# 45 "/usr/include/_G_config.h" 2 3 4
typedef union
{
  struct __gconv_info __cd;
  struct
  {
    struct __gconv_info __cd;
    struct __gconv_step_data __data;
  } __combined;
} _G_iconv_t;

typedef int _G_int16_t __attribute__ ((__mode__ (__HI__)));
typedef int _G_int32_t __attribute__ ((__mode__ (__SI__)));
typedef unsigned int _G_uint16_t __attribute__ ((__mode__ (__HI__)));
typedef unsigned int _G_uint32_t __attribute__ ((__mode__ (__SI__)));

#define _G_HAVE_BOOL 1



#define _G_HAVE_ATEXIT 1
#define _G_HAVE_SYS_CDEFS 1
#define _G_HAVE_SYS_WAIT 1
#define _G_NEED_STDARG_H 1
#define _G_va_list __gnuc_va_list

#define _G_HAVE_PRINTF_FP 1
#define _G_HAVE_MMAP 1
#define _G_HAVE_MREMAP 1
#define _G_HAVE_LONG_DOUBLE_IO 1
#define _G_HAVE_IO_FILE_OPEN 1
#define _G_HAVE_IO_GETLINE_INFO 1

#define _G_IO_IO_FILE_VERSION 0x20001

#define _G_OPEN64 __open64
#define _G_LSEEK64 __lseek64
#define _G_MMAP64 __mmap64
#define _G_FSTAT64(fd,buf) __fxstat64 (_STAT_VER, fd, buf)


#define _G_HAVE_ST_BLKSIZE defined (_STATBUF_ST_BLKSIZE)

#define _G_BUFSIZ 8192


#define _G_NAMES_HAVE_UNDERSCORE 0
#define _G_VTABLE_LABEL_HAS_LENGTH 1
#define _G_USING_THUNKS 1
#define _G_VTABLE_LABEL_PREFIX "__vt_"
#define _G_VTABLE_LABEL_PREFIX_ID __vt_



#define _G_ARGS(ARGLIST) ARGLIST
# 33 "/usr/include/libio.h" 2 3 4

#define _IO_pos_t _G_fpos_t
#define _IO_fpos_t _G_fpos_t
#define _IO_fpos64_t _G_fpos64_t
#define _IO_size_t _G_size_t
#define _IO_ssize_t _G_ssize_t
#define _IO_off_t _G_off_t
#define _IO_off64_t _G_off64_t
#define _IO_pid_t _G_pid_t
#define _IO_uid_t _G_uid_t
#define _IO_iconv_t _G_iconv_t
#define _IO_HAVE_SYS_WAIT _G_HAVE_SYS_WAIT
#define _IO_HAVE_ST_BLKSIZE _G_HAVE_ST_BLKSIZE
#define _IO_BUFSIZ _G_BUFSIZ
#define _IO_va_list _G_va_list
#define _IO_wint_t _G_wint_t



#define __need___va_list 
# 1 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stdarg.h" 1 3 4
# 37 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stdarg.h" 3 4
#undef __need___va_list




#define __GNUC_VA_LIST 
typedef __builtin_va_list __gnuc_va_list;
# 54 "/usr/include/libio.h" 2 3 4

#undef _IO_va_list
#define _IO_va_list __gnuc_va_list
# 76 "/usr/include/libio.h" 3 4
#define _PARAMS(protos) __P(protos)







#define _IO_UNIFIED_JUMPTABLES 1
# 105 "/usr/include/libio.h" 3 4
#define _IOS_INPUT 1
#define _IOS_OUTPUT 2
#define _IOS_ATEND 4
#define _IOS_APPEND 8
#define _IOS_TRUNC 16
#define _IOS_NOCREATE 32
#define _IOS_NOREPLACE 64
#define _IOS_BIN 128







#define _IO_MAGIC 0xFBAD0000
#define _OLD_STDIO_MAGIC 0xFABC0000
#define _IO_MAGIC_MASK 0xFFFF0000
#define _IO_USER_BUF 1
#define _IO_UNBUFFERED 2
#define _IO_NO_READS 4
#define _IO_NO_WRITES 8
#define _IO_EOF_SEEN 0x10
#define _IO_ERR_SEEN 0x20
#define _IO_DELETE_DONT_CLOSE 0x40
#define _IO_LINKED 0x80
#define _IO_IN_BACKUP 0x100
#define _IO_LINE_BUF 0x200
#define _IO_TIED_PUT_GET 0x400
#define _IO_CURRENTLY_PUTTING 0x800
#define _IO_IS_APPENDING 0x1000
#define _IO_IS_FILEBUF 0x2000
#define _IO_BAD_SEEN 0x4000
#define _IO_USER_LOCK 0x8000

#define _IO_FLAGS2_MMAP 1
#define _IO_FLAGS2_NOTCANCEL 2



#define _IO_FLAGS2_USER_WBUF 8


#define _IO_SKIPWS 01
#define _IO_LEFT 02
#define _IO_RIGHT 04
#define _IO_INTERNAL 010
#define _IO_DEC 020
#define _IO_OCT 040
#define _IO_HEX 0100
#define _IO_SHOWBASE 0200
#define _IO_SHOWPOINT 0400
#define _IO_UPPERCASE 01000
#define _IO_SHOWPOS 02000
#define _IO_SCIENTIFIC 04000
#define _IO_FIXED 010000
#define _IO_UNITBUF 020000
#define _IO_STDIO 040000
#define _IO_DONT_CLOSE 0100000
#define _IO_BOOLALPHA 0200000


struct _IO_jump_t; struct _IO_FILE;
# 177 "/usr/include/libio.h" 3 4
typedef void _IO_lock_t;





struct _IO_marker {
  struct _IO_marker *_next;
  struct _IO_FILE *_sbuf;



  int _pos;
# 200 "/usr/include/libio.h" 3 4
};


enum __codecvt_result
{
  __codecvt_ok,
  __codecvt_partial,
  __codecvt_error,
  __codecvt_noconv
};
# 268 "/usr/include/libio.h" 3 4
struct _IO_FILE {
  int _flags;
#define _IO_file_flags _flags



  char* _IO_read_ptr;
  char* _IO_read_end;
  char* _IO_read_base;
  char* _IO_write_base;
  char* _IO_write_ptr;
  char* _IO_write_end;
  char* _IO_buf_base;
  char* _IO_buf_end;

  char *_IO_save_base;
  char *_IO_backup_base;
  char *_IO_save_end;

  struct _IO_marker *_markers;

  struct _IO_FILE *_chain;

  int _fileno;



  int _flags2;

  __off_t _old_offset;

#define __HAVE_COLUMN 

  unsigned short _cur_column;
  signed char _vtable_offset;
  char _shortbuf[1];



  _IO_lock_t *_lock;
# 316 "/usr/include/libio.h" 3 4
  __off64_t _offset;
# 325 "/usr/include/libio.h" 3 4
  void *__pad1;
  void *__pad2;
  void *__pad3;
  void *__pad4;
  size_t __pad5;

  int _mode;

  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];

};


typedef struct _IO_FILE _IO_FILE;


struct _IO_FILE_plus;

extern struct _IO_FILE_plus _IO_2_1_stdin_;
extern struct _IO_FILE_plus _IO_2_1_stdout_;
extern struct _IO_FILE_plus _IO_2_1_stderr_;

#define _IO_stdin ((_IO_FILE*)(&_IO_2_1_stdin_))
#define _IO_stdout ((_IO_FILE*)(&_IO_2_1_stdout_))
#define _IO_stderr ((_IO_FILE*)(&_IO_2_1_stderr_))
# 361 "/usr/include/libio.h" 3 4
typedef __ssize_t __io_read_fn (void *__cookie, char *__buf, size_t __nbytes);







typedef __ssize_t __io_write_fn (void *__cookie, __const char *__buf,
     size_t __n);







typedef int __io_seek_fn (void *__cookie, __off64_t *__pos, int __w);


typedef int __io_close_fn (void *__cookie);




typedef __io_read_fn cookie_read_function_t;
typedef __io_write_fn cookie_write_function_t;
typedef __io_seek_fn cookie_seek_function_t;
typedef __io_close_fn cookie_close_function_t;


typedef struct
{
  __io_read_fn *read;
  __io_write_fn *write;
  __io_seek_fn *seek;
  __io_close_fn *close;
} _IO_cookie_io_functions_t;
typedef _IO_cookie_io_functions_t cookie_io_functions_t;

struct _IO_cookie_file;


extern void _IO_cookie_init (struct _IO_cookie_file *__cfile, int __read_write,
        void *__cookie, _IO_cookie_io_functions_t __fns);







extern int __underflow (_IO_FILE *);
extern int __uflow (_IO_FILE *);
extern int __overflow (_IO_FILE *, int);
extern wint_t __wunderflow (_IO_FILE *);
extern wint_t __wuflow (_IO_FILE *);
extern wint_t __woverflow (_IO_FILE *, wint_t);


#define _IO_BE(expr,res) __builtin_expect ((expr), res)




#define _IO_getc_unlocked(_fp) (_IO_BE ((_fp)->_IO_read_ptr >= (_fp)->_IO_read_end, 0) ? __uflow (_fp) : *(unsigned char *) (_fp)->_IO_read_ptr++)


#define _IO_peekc_unlocked(_fp) (_IO_BE ((_fp)->_IO_read_ptr >= (_fp)->_IO_read_end, 0) && __underflow (_fp) == EOF ? EOF : *(unsigned char *) (_fp)->_IO_read_ptr)



#define _IO_putc_unlocked(_ch,_fp) (_IO_BE ((_fp)->_IO_write_ptr >= (_fp)->_IO_write_end, 0) ? __overflow (_fp, (unsigned char) (_ch)) : (unsigned char) (*(_fp)->_IO_write_ptr++ = (_ch)))




#define _IO_getwc_unlocked(_fp) (_IO_BE ((_fp)->_wide_data->_IO_read_ptr >= (_fp)->_wide_data->_IO_read_end, 0) ? __wuflow (_fp) : (_IO_wint_t) *(_fp)->_wide_data->_IO_read_ptr++)



#define _IO_putwc_unlocked(_wch,_fp) (_IO_BE ((_fp)->_wide_data->_IO_write_ptr >= (_fp)->_wide_data->_IO_write_end, 0) ? __woverflow (_fp, _wch) : (_IO_wint_t) (*(_fp)->_wide_data->_IO_write_ptr++ = (_wch)))





#define _IO_feof_unlocked(__fp) (((__fp)->_flags & _IO_EOF_SEEN) != 0)
#define _IO_ferror_unlocked(__fp) (((__fp)->_flags & _IO_ERR_SEEN) != 0)

extern int _IO_getc (_IO_FILE *__fp);
extern int _IO_putc (int __c, _IO_FILE *__fp);
extern int _IO_feof (_IO_FILE *__fp) __attribute__ ((__nothrow__));
extern int _IO_ferror (_IO_FILE *__fp) __attribute__ ((__nothrow__));

extern int _IO_peekc_locked (_IO_FILE *__fp);


#define _IO_PENDING_OUTPUT_COUNT(_fp) ((_fp)->_IO_write_ptr - (_fp)->_IO_write_base)


extern void _IO_flockfile (_IO_FILE *) __attribute__ ((__nothrow__));
extern void _IO_funlockfile (_IO_FILE *) __attribute__ ((__nothrow__));
extern int _IO_ftrylockfile (_IO_FILE *) __attribute__ ((__nothrow__));
# 473 "/usr/include/libio.h" 3 4
#define _IO_peekc(_fp) _IO_peekc_unlocked (_fp)
#define _IO_flockfile(_fp) 
#define _IO_funlockfile(_fp) 
#define _IO_ftrylockfile(_fp) 
#define _IO_cleanup_region_start(_fct,_fp) 
#define _IO_cleanup_region_end(_Doit) 


extern int _IO_vfscanf (_IO_FILE * __restrict, const char * __restrict,
   __gnuc_va_list, int *__restrict);
extern int _IO_vfprintf (_IO_FILE *__restrict, const char *__restrict,
    __gnuc_va_list);
extern __ssize_t _IO_padn (_IO_FILE *, int, __ssize_t);
extern size_t _IO_sgetn (_IO_FILE *, void *, size_t);

extern __off64_t _IO_seekoff (_IO_FILE *, __off64_t, int, int);
extern __off64_t _IO_seekpos (_IO_FILE *, __off64_t, int);

extern void _IO_free_backup_area (_IO_FILE *) __attribute__ ((__nothrow__));
# 73 "/usr/include/stdio.h" 2 3 4




typedef __gnuc_va_list va_list;
#define _VA_LIST_DEFINED 









typedef _G_fpos_t fpos_t;





typedef _G_fpos64_t fpos64_t;



#define _IOFBF 0
#define _IOLBF 1
#define _IONBF 2




#define BUFSIZ _IO_BUFSIZ
# 118 "/usr/include/stdio.h" 3 4
#define SEEK_SET 0
#define SEEK_CUR 1
#define SEEK_END 2




#define P_tmpdir "/tmp"
# 138 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/bits/stdio_lim.h" 1 3 4
# 24 "/usr/include/bits/stdio_lim.h" 3 4
#define L_tmpnam 20
#define TMP_MAX 238328
#define FILENAME_MAX 4096


#define L_ctermid 9
#define L_cuserid 9




#undef FOPEN_MAX
#define FOPEN_MAX 16
# 139 "/usr/include/stdio.h" 2 3 4



extern struct _IO_FILE *stdin;
extern struct _IO_FILE *stdout;
extern struct _IO_FILE *stderr;


#define stdin stdin
#define stdout stdout
#define stderr stderr




extern int remove (__const char *__filename) __attribute__ ((__nothrow__));

extern int rename (__const char *__old, __const char *__new) __attribute__ ((__nothrow__));




extern int renameat (int __oldfd, __const char *__old, int __newfd,
       __const char *__new) __attribute__ ((__nothrow__));








extern FILE *tmpfile (void);
# 181 "/usr/include/stdio.h" 3 4
extern FILE *tmpfile64 (void);



extern char *tmpnam (char *__s) __attribute__ ((__nothrow__));





extern char *tmpnam_r (char *__s) __attribute__ ((__nothrow__));
# 203 "/usr/include/stdio.h" 3 4
extern char *tempnam (__const char *__dir, __const char *__pfx)
     __attribute__ ((__nothrow__)) __attribute__ ((__malloc__));








extern int fclose (FILE *__stream);




extern int fflush (FILE *__stream);

# 228 "/usr/include/stdio.h" 3 4
extern int fflush_unlocked (FILE *__stream);
# 238 "/usr/include/stdio.h" 3 4
extern int fcloseall (void);









extern FILE *fopen (__const char *__restrict __filename,
      __const char *__restrict __modes);




extern FILE *freopen (__const char *__restrict __filename,
        __const char *__restrict __modes,
        FILE *__restrict __stream);
# 269 "/usr/include/stdio.h" 3 4


extern FILE *fopen64 (__const char *__restrict __filename,
        __const char *__restrict __modes);
extern FILE *freopen64 (__const char *__restrict __filename,
   __const char *__restrict __modes,
   FILE *__restrict __stream);




extern FILE *fdopen (int __fd, __const char *__modes) __attribute__ ((__nothrow__));





extern FILE *fopencookie (void *__restrict __magic_cookie,
     __const char *__restrict __modes,
     _IO_cookie_io_functions_t __io_funcs) __attribute__ ((__nothrow__));


extern FILE *fmemopen (void *__s, size_t __len, __const char *__modes) __attribute__ ((__nothrow__));




extern FILE *open_memstream (char **__bufloc, size_t *__sizeloc) __attribute__ ((__nothrow__));






extern void setbuf (FILE *__restrict __stream, char *__restrict __buf) __attribute__ ((__nothrow__));



extern int setvbuf (FILE *__restrict __stream, char *__restrict __buf,
      int __modes, size_t __n) __attribute__ ((__nothrow__));





extern void setbuffer (FILE *__restrict __stream, char *__restrict __buf,
         size_t __size) __attribute__ ((__nothrow__));


extern void setlinebuf (FILE *__stream) __attribute__ ((__nothrow__));








extern int fprintf (FILE *__restrict __stream,
      __const char *__restrict __format, ...);




extern int printf (__const char *__restrict __format, ...);

extern int sprintf (char *__restrict __s,
      __const char *__restrict __format, ...) __attribute__ ((__nothrow__));





extern int vfprintf (FILE *__restrict __s, __const char *__restrict __format,
       __gnuc_va_list __arg);




extern int vprintf (__const char *__restrict __format, __gnuc_va_list __arg);

extern int vsprintf (char *__restrict __s, __const char *__restrict __format,
       __gnuc_va_list __arg) __attribute__ ((__nothrow__));





extern int snprintf (char *__restrict __s, size_t __maxlen,
       __const char *__restrict __format, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 4)));

extern int vsnprintf (char *__restrict __s, size_t __maxlen,
        __const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 0)));






extern int vasprintf (char **__restrict __ptr, __const char *__restrict __f,
        __gnuc_va_list __arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 0)));
extern int __asprintf (char **__restrict __ptr,
         __const char *__restrict __fmt, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 3)));
extern int asprintf (char **__restrict __ptr,
       __const char *__restrict __fmt, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 3)));







extern int vdprintf (int __fd, __const char *__restrict __fmt,
       __gnuc_va_list __arg)
     __attribute__ ((__format__ (__printf__, 2, 0)));
extern int dprintf (int __fd, __const char *__restrict __fmt, ...)
     __attribute__ ((__format__ (__printf__, 2, 3)));








extern int fscanf (FILE *__restrict __stream,
     __const char *__restrict __format, ...) ;




extern int scanf (__const char *__restrict __format, ...) ;

extern int sscanf (__const char *__restrict __s,
     __const char *__restrict __format, ...) __attribute__ ((__nothrow__));








extern int vfscanf (FILE *__restrict __s, __const char *__restrict __format,
      __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 2, 0))) ;





extern int vscanf (__const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 1, 0))) ;


extern int vsscanf (__const char *__restrict __s,
      __const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__scanf__, 2, 0)));









extern int fgetc (FILE *__stream);
extern int getc (FILE *__stream);





extern int getchar (void);




#define getc(_fp) _IO_getc (_fp)






extern int getc_unlocked (FILE *__stream);
extern int getchar_unlocked (void);
# 471 "/usr/include/stdio.h" 3 4
extern int fgetc_unlocked (FILE *__stream);











extern int fputc (int __c, FILE *__stream);
extern int putc (int __c, FILE *__stream);





extern int putchar (int __c);




#define putc(_ch,_fp) _IO_putc (_ch, _fp)
# 504 "/usr/include/stdio.h" 3 4
extern int fputc_unlocked (int __c, FILE *__stream);







extern int putc_unlocked (int __c, FILE *__stream);
extern int putchar_unlocked (int __c);






extern int getw (FILE *__stream);


extern int putw (int __w, FILE *__stream);








extern char *fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
     ;






extern char *gets (char *__s) ;

# 550 "/usr/include/stdio.h" 3 4
extern char *fgets_unlocked (char *__restrict __s, int __n,
        FILE *__restrict __stream) ;
# 566 "/usr/include/stdio.h" 3 4
extern __ssize_t __getdelim (char **__restrict __lineptr,
          size_t *__restrict __n, int __delimiter,
          FILE *__restrict __stream) ;
extern __ssize_t getdelim (char **__restrict __lineptr,
        size_t *__restrict __n, int __delimiter,
        FILE *__restrict __stream) ;







extern __ssize_t getline (char **__restrict __lineptr,
       size_t *__restrict __n,
       FILE *__restrict __stream) ;








extern int fputs (__const char *__restrict __s, FILE *__restrict __stream);





extern int puts (__const char *__s);






extern int ungetc (int __c, FILE *__stream);






extern size_t fread (void *__restrict __ptr, size_t __size,
       size_t __n, FILE *__restrict __stream) ;




extern size_t fwrite (__const void *__restrict __ptr, size_t __size,
        size_t __n, FILE *__restrict __s) ;

# 627 "/usr/include/stdio.h" 3 4
extern int fputs_unlocked (__const char *__restrict __s,
      FILE *__restrict __stream);
# 638 "/usr/include/stdio.h" 3 4
extern size_t fread_unlocked (void *__restrict __ptr, size_t __size,
         size_t __n, FILE *__restrict __stream) ;
extern size_t fwrite_unlocked (__const void *__restrict __ptr, size_t __size,
          size_t __n, FILE *__restrict __stream) ;








extern int fseek (FILE *__stream, long int __off, int __whence);




extern long int ftell (FILE *__stream) ;




extern void rewind (FILE *__stream);

# 674 "/usr/include/stdio.h" 3 4
extern int fseeko (FILE *__stream, __off_t __off, int __whence);




extern __off_t ftello (FILE *__stream) ;
# 693 "/usr/include/stdio.h" 3 4






extern int fgetpos (FILE *__restrict __stream, fpos_t *__restrict __pos);




extern int fsetpos (FILE *__stream, __const fpos_t *__pos);
# 716 "/usr/include/stdio.h" 3 4



extern int fseeko64 (FILE *__stream, __off64_t __off, int __whence);
extern __off64_t ftello64 (FILE *__stream) ;
extern int fgetpos64 (FILE *__restrict __stream, fpos64_t *__restrict __pos);
extern int fsetpos64 (FILE *__stream, __const fpos64_t *__pos);




extern void clearerr (FILE *__stream) __attribute__ ((__nothrow__));

extern int feof (FILE *__stream) __attribute__ ((__nothrow__)) ;

extern int ferror (FILE *__stream) __attribute__ ((__nothrow__)) ;




extern void clearerr_unlocked (FILE *__stream) __attribute__ ((__nothrow__));
extern int feof_unlocked (FILE *__stream) __attribute__ ((__nothrow__)) ;
extern int ferror_unlocked (FILE *__stream) __attribute__ ((__nothrow__)) ;








extern void perror (__const char *__s);






# 1 "/usr/include/bits/sys_errlist.h" 1 3 4
# 27 "/usr/include/bits/sys_errlist.h" 3 4
extern int sys_nerr;
extern __const char *__const sys_errlist[];


extern int _sys_nerr;
extern __const char *__const _sys_errlist[];
# 755 "/usr/include/stdio.h" 2 3 4




extern int fileno (FILE *__stream) __attribute__ ((__nothrow__)) ;




extern int fileno_unlocked (FILE *__stream) __attribute__ ((__nothrow__)) ;
# 774 "/usr/include/stdio.h" 3 4
extern FILE *popen (__const char *__command, __const char *__modes) ;





extern int pclose (FILE *__stream);





extern char *ctermid (char *__s) __attribute__ ((__nothrow__));





extern char *cuserid (char *__s);




struct obstack;


extern int obstack_printf (struct obstack *__restrict __obstack,
      __const char *__restrict __format, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 3)));
extern int obstack_vprintf (struct obstack *__restrict __obstack,
       __const char *__restrict __format,
       __gnuc_va_list __args)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 0)));







extern void flockfile (FILE *__stream) __attribute__ ((__nothrow__));



extern int ftrylockfile (FILE *__stream) __attribute__ ((__nothrow__)) ;


extern void funlockfile (FILE *__stream) __attribute__ ((__nothrow__));
# 844 "/usr/include/stdio.h" 3 4

# 120 "/u/prd/rtr/mt/ss_dep.h" 2
# 1 "../..//cm/cm5.h" 1
# 91 "../..//cm/cm5.h"
#define __CM5H__ 




#define TMR_DEF_MAX 1
#define TMR_NONE -1
#define TMR_DEF 1
#define TMR0 0
# 121 "/u/prd/rtr/mt/ss_dep.h" 2
# 1 "/u/prd/rtr/mt/mt_ss.h" 1
# 93 "/u/prd/rtr/mt/mt_ss.h"
#define __MTSSH__ 





#define SS_PROC_ID PID_STK(1)







#define SS_MAX_ENT 255
#define SS_MAX_INST 8



#define SS_MAX_TTSKS 30


#define SS_MAX_STSKS 30
# 132 "/u/prd/rtr/mt/mt_ss.h"
#define SS_MAX_RTRTSKS 255




#define SS_MAX_TMRS 45
# 159 "/u/prd/rtr/mt/mt_ss.h"
#define SS_MAX_REGS 1
# 172 "/u/prd/rtr/mt/mt_ss.h"
#define SS_MAX_POOLS_PER_REG 5
# 186 "/u/prd/rtr/mt/mt_ss.h"
#define SS_STSKTBL_LOCK SS_LOCK_MUTEX
#define SS_STSKENTRY_LOCK SS_LOCK_MUTEX
#define SS_TMRTBL_LOCK SS_LOCK_MUTEX
#define SS_DMNDQ_LOCK SS_LOCK_MUTEX
#define SS_DRVRENTRY_LOCK SS_LOCK_MUTEX
#define SS_RTRENTRY_LOCK SS_LOCK_MUTEX



#define SsSemaId sem_t
#define SLockId pthread_mutex_t



#define SInitLock(l,t) pthread_mutex_init(l, NULL)
#define SLock(l) pthread_mutex_lock(l)
#define SUnlock(l) pthread_mutex_unlock(l)
#define SDestroyLock(l) pthread_mutex_destroy(l)

#define ssInitSema(s,c) sem_init(s, 0, c)
#define ssWaitSema(s) sem_wait(s)
#define ssPostSema(s) sem_post(s)
#define ssDestroySema(s) sem_destroy(s)

#define SS_CHECK_CUR_STSK(t) (pthread_equal(pthread_self(), (t)->dep.tId))


#define SInitSemaphore(s,c) sem_init(s, 0, c)
#define SWaitSemaphore(s) sem_wait(s)
#define SPostSemaphore(s) sem_post(s)
#define SDestroySemaphore(s) sem_destroy(s)

#define ssdPstTsk(p,m,t) 




#define SExit() exit(0)
# 234 "/u/prd/rtr/mt/mt_ss.h"
#define SMemCpy(d,s,c) memcpy(d,s,c)
#define SMemSet(s,c,n) memset(s,c,n)






#define MT_TICK_CNT (((U32)0x0F4240)/SS_TICKS_SEC)

#define MT_MAX_TICK_CNT_VAL 35
#define MT_MIN_TICK_CNT_VAL 1



#define MT_IS_SET 0
#define MT_IS_UNSET 1
#define MT_IS_RESET 2
# 269 "/u/prd/rtr/mt/mt_ss.h"
#define MT_BKT_0_DSIZE 128


#define MT_BKT_0_NUMBLKS 3500







#define MT_BKT_1_DSIZE 256
#define MT_BKT_1_NUMBLKS 10500
# 294 "/u/prd/rtr/mt/mt_ss.h"
#define MT_BKT_2_DSIZE 320
#define MT_BKT_2_NUMBLKS 1
# 305 "/u/prd/rtr/mt/mt_ss.h"
#define MT_BKT_3_DSIZE 640
#define MT_BKT_3_NUMBLKS 1







#define MT_MAX_BKTS 2




#define MT_POOL_3_DSIZE (MT_BKT_3_DSIZE-(sizeof(SsMblk)+sizeof(SsDblk)))
#define MT_POOL_2_DSIZE (MT_BKT_2_DSIZE-(sizeof(SsMblk)+sizeof(SsDblk)))
#define MT_POOL_1_DSIZE (MT_BKT_1_DSIZE-(sizeof(SsMblk)+sizeof(SsDblk)))
#define MT_POOL_0_DSIZE (MT_BKT_0_DSIZE-(sizeof(SsMblk)+sizeof(SsDblk)))
# 333 "/u/prd/rtr/mt/mt_ss.h"
#define MT_HEAP_SIZE 4194304U



#define STATIC_MEM_CFG 




#define MT_BKTQNSIZE 32






#define MT_TASK_STACK NULLD
#define MT_ISTASK_STACK NULLD
#define MT_TMRTASK_STACK NULLD
#define MT_CONSOLE_STACK NULLD
# 399 "/u/prd/rtr/mt/mt_ss.h"
#define SS_CVMX_WQE_POOL SS_CVMX_POOL_0
# 122 "/u/prd/rtr/mt/ss_dep.h" 2

# 1 "/usr/include/string.h" 1 3 4
# 24 "/usr/include/string.h" 3 4
#define _STRING_H 1






#define __need_size_t 
#define __need_NULL 
# 1 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 1 3 4
# 236 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 3 4
#undef __need_size_t
# 398 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 3 4
#undef NULL




#define NULL ((void *)0)





#undef __need_NULL
# 34 "/usr/include/string.h" 2 3 4




extern void *memcpy (void *__restrict __dest,
       __const void *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


extern void *memmove (void *__dest, __const void *__src, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));






extern void *memccpy (void *__restrict __dest, __const void *__restrict __src,
        int __c, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));





extern void *memset (void *__s, int __c, size_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int memcmp (__const void *__s1, __const void *__s2, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern void *memchr (__const void *__s, int __c, size_t __n)
      __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));





extern void *rawmemchr (__const void *__s, int __c)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));


extern void *memrchr (__const void *__s, int __c, size_t __n)
      __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));





extern char *strcpy (char *__restrict __dest, __const char *__restrict __src)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

extern char *strncpy (char *__restrict __dest,
        __const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


extern char *strcat (char *__restrict __dest, __const char *__restrict __src)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

extern char *strncat (char *__restrict __dest, __const char *__restrict __src,
        size_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


extern int strcmp (__const char *__s1, __const char *__s2)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

extern int strncmp (__const char *__s1, __const char *__s2, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern int strcoll (__const char *__s1, __const char *__s2)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

extern size_t strxfrm (char *__restrict __dest,
         __const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));

# 121 "/usr/include/string.h" 3 4
extern int strcoll_l (__const char *__s1, __const char *__s2, __locale_t __l)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 3)));

extern size_t strxfrm_l (char *__dest, __const char *__src, size_t __n,
    __locale_t __l) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 4)));




extern char *strdup (__const char *__s)
     __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));






extern char *strndup (__const char *__string, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));




#define strdupa(s) (__extension__ ({ __const char *__old = (s); size_t __len = strlen (__old) + 1; char *__new = (char *) __builtin_alloca (__len); (char *) memcpy (__new, __old, __len); }))
# 154 "/usr/include/string.h" 3 4
#define strndupa(s,n) (__extension__ ({ __const char *__old = (s); size_t __len = strnlen (__old, (n)); char *__new = (char *) __builtin_alloca (__len + 1); __new[__len] = '\0'; (char *) memcpy (__new, __old, __len); }))
# 165 "/usr/include/string.h" 3 4


extern char *strchr (__const char *__s, int __c)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));

extern char *strrchr (__const char *__s, int __c)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));





extern char *strchrnul (__const char *__s, int __c)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));





extern size_t strcspn (__const char *__s, __const char *__reject)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern size_t strspn (__const char *__s, __const char *__accept)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

extern char *strpbrk (__const char *__s, __const char *__accept)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

extern char *strstr (__const char *__haystack, __const char *__needle)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));



extern char *strtok (char *__restrict __s, __const char *__restrict __delim)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));




extern char *__strtok_r (char *__restrict __s,
    __const char *__restrict __delim,
    char **__restrict __save_ptr)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));

extern char *strtok_r (char *__restrict __s, __const char *__restrict __delim,
         char **__restrict __save_ptr)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));




extern char *strcasestr (__const char *__haystack, __const char *__needle)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));






extern void *memmem (__const void *__haystack, size_t __haystacklen,
       __const void *__needle, size_t __needlelen)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 3)));



extern void *__mempcpy (void *__restrict __dest,
   __const void *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
extern void *mempcpy (void *__restrict __dest,
        __const void *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));





extern size_t strlen (__const char *__s)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));





extern size_t strnlen (__const char *__string, size_t __maxlen)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));





extern char *strerror (int __errnum) __attribute__ ((__nothrow__));

# 281 "/usr/include/string.h" 3 4
extern char *strerror_r (int __errnum, char *__buf, size_t __buflen)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));





extern void __bzero (void *__s, size_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));



extern void bcopy (__const void *__src, void *__dest, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


extern void bzero (void *__s, size_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int bcmp (__const void *__s1, __const void *__s2, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern char *index (__const char *__s, int __c)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));


extern char *rindex (__const char *__s, int __c)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));



extern int ffs (int __i) __attribute__ ((__nothrow__)) __attribute__ ((__const__));




extern int ffsl (long int __l) __attribute__ ((__nothrow__)) __attribute__ ((__const__));

__extension__ extern int ffsll (long long int __ll)
     __attribute__ ((__nothrow__)) __attribute__ ((__const__));




extern int strcasecmp (__const char *__s1, __const char *__s2)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern int strncasecmp (__const char *__s1, __const char *__s2, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));





extern int strcasecmp_l (__const char *__s1, __const char *__s2,
    __locale_t __loc)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 3)));

extern int strncasecmp_l (__const char *__s1, __const char *__s2,
     size_t __n, __locale_t __loc)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 4)));





extern char *strsep (char **__restrict __stringp,
       __const char *__restrict __delim)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));




extern int strverscmp (__const char *__s1, __const char *__s2)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern char *strsignal (int __sig) __attribute__ ((__nothrow__));


extern char *__stpcpy (char *__restrict __dest, __const char *__restrict __src)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
extern char *stpcpy (char *__restrict __dest, __const char *__restrict __src)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));



extern char *__stpncpy (char *__restrict __dest,
   __const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
extern char *stpncpy (char *__restrict __dest,
        __const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


extern char *strfry (char *__string) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern void *memfrob (void *__s, size_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));






extern char *basename (__const char *__filename) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));
# 426 "/usr/include/string.h" 3 4

# 124 "/u/prd/rtr/mt/ss_dep.h" 2

# 1 "/usr/include/sys/socket.h" 1 3 4
# 21 "/usr/include/sys/socket.h" 3 4
#define _SYS_SOCKET_H 1





# 1 "/usr/include/sys/uio.h" 1 3 4
# 20 "/usr/include/sys/uio.h" 3 4
#define _SYS_UIO_H 1








# 1 "/usr/include/bits/uio.h" 1 3 4
# 24 "/usr/include/bits/uio.h" 3 4
#define _BITS_UIO_H 1
# 40 "/usr/include/bits/uio.h" 3 4
#define UIO_MAXIOV 1024



struct iovec
  {
    void *iov_base;
    size_t iov_len;
  };
# 30 "/usr/include/sys/uio.h" 2 3 4
# 40 "/usr/include/sys/uio.h" 3 4
extern ssize_t readv (int __fd, __const struct iovec *__iovec, int __count);
# 50 "/usr/include/sys/uio.h" 3 4
extern ssize_t writev (int __fd, __const struct iovec *__iovec, int __count);


# 28 "/usr/include/sys/socket.h" 2 3 4
#define __need_size_t 
# 1 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 1 3 4
# 236 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 3 4
#undef __need_size_t
# 409 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 3 4
#undef __need_NULL
# 30 "/usr/include/sys/socket.h" 2 3 4





# 1 "/usr/include/bits/socket.h" 1 3 4
# 21 "/usr/include/bits/socket.h" 3 4
#define __BITS_SOCKET_H 





#define __need_size_t 
#define __need_NULL 
# 1 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 1 3 4
# 236 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 3 4
#undef __need_size_t
# 398 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 3 4
#undef NULL




#define NULL ((void *)0)





#undef __need_NULL
# 30 "/usr/include/bits/socket.h" 2 3 4

# 1 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/limits.h" 1 3 4






#define _GCC_LIMITS_H_ 



# 1 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/syslimits.h" 1 3 4





#define _GCC_NEXT_LIMITS_H 
# 1 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/limits.h" 1 3 4
# 122 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/limits.h" 3 4
# 1 "/usr/include/limits.h" 1 3 4
# 25 "/usr/include/limits.h" 3 4
#define _LIBC_LIMITS_H_ 1







#define MB_LEN_MAX 16
# 133 "/usr/include/limits.h" 3 4
#define LLONG_MIN (-LLONG_MAX-1)


#define LLONG_MAX __LONG_LONG_MAX__


#define ULLONG_MAX (LLONG_MAX * 2ULL + 1)





# 1 "/usr/include/bits/posix1_lim.h" 1 3 4
# 26 "/usr/include/bits/posix1_lim.h" 3 4
#define _BITS_POSIX1_LIM_H 1





#define _POSIX_AIO_LISTIO_MAX 2


#define _POSIX_AIO_MAX 1


#define _POSIX_ARG_MAX 4096



#define _POSIX_CHILD_MAX 25





#define _POSIX_DELAYTIMER_MAX 32



#define _POSIX_HOST_NAME_MAX 255


#define _POSIX_LINK_MAX 8


#define _POSIX_LOGIN_NAME_MAX 9


#define _POSIX_MAX_CANON 255



#define _POSIX_MAX_INPUT 255


#define _POSIX_MQ_OPEN_MAX 8


#define _POSIX_MQ_PRIO_MAX 32


#define _POSIX_NAME_MAX 14



#define _POSIX_NGROUPS_MAX 8






#define _POSIX_OPEN_MAX 20






#define _POSIX_FD_SETSIZE _POSIX_OPEN_MAX


#define _POSIX_PATH_MAX 256


#define _POSIX_PIPE_BUF 512



#define _POSIX_RE_DUP_MAX 255


#define _POSIX_RTSIG_MAX 8


#define _POSIX_SEM_NSEMS_MAX 256


#define _POSIX_SEM_VALUE_MAX 32767


#define _POSIX_SIGQUEUE_MAX 32


#define _POSIX_SSIZE_MAX 32767


#define _POSIX_STREAM_MAX 8


#define _POSIX_SYMLINK_MAX 255



#define _POSIX_SYMLOOP_MAX 8


#define _POSIX_TIMER_MAX 32


#define _POSIX_TTY_NAME_MAX 9


#define _POSIX_TZNAME_MAX 6


#define _POSIX_QLIMIT 1



#define _POSIX_HIWAT _POSIX_PIPE_BUF


#define _POSIX_UIO_MAXIOV 16


#define _POSIX_CLOCKRES_MIN 20000000



# 1 "/usr/include/bits/local_lim.h" 1 3 4
# 26 "/usr/include/bits/local_lim.h" 3 4
#define __undef_NR_OPEN 


#define __undef_LINK_MAX 


#define __undef_OPEN_MAX 



# 1 "/usr/include/linux/limits.h" 1 3 4

#define _LINUX_LIMITS_H 

#define NR_OPEN 1024

#define NGROUPS_MAX 65536
#define ARG_MAX 131072
#define CHILD_MAX 999
#define OPEN_MAX 256
#define LINK_MAX 127
#define MAX_CANON 255
#define MAX_INPUT 255
#define NAME_MAX 255
#define PATH_MAX 4096
#define PIPE_BUF 4096
#define XATTR_NAME_MAX 255
#define XATTR_SIZE_MAX 65536
#define XATTR_LIST_MAX 65536

#define RTSIG_MAX 32
# 37 "/usr/include/bits/local_lim.h" 2 3 4



#undef NR_OPEN
#undef __undef_NR_OPEN



#undef LINK_MAX
#undef __undef_LINK_MAX



#undef OPEN_MAX
#undef __undef_OPEN_MAX



#define _POSIX_THREAD_KEYS_MAX 128

#define PTHREAD_KEYS_MAX 1024


#define _POSIX_THREAD_DESTRUCTOR_ITERATIONS 4

#define PTHREAD_DESTRUCTOR_ITERATIONS _POSIX_THREAD_DESTRUCTOR_ITERATIONS


#define _POSIX_THREAD_THREADS_MAX 64

#undef PTHREAD_THREADS_MAX



#define AIO_PRIO_DELTA_MAX 20


#define PTHREAD_STACK_MIN 16384


#define DELAYTIMER_MAX 2147483647


#define TTY_NAME_MAX 32


#define LOGIN_NAME_MAX 256


#define HOST_NAME_MAX 64


#define MQ_PRIO_MAX 32768
# 154 "/usr/include/bits/posix1_lim.h" 2 3 4



#define SSIZE_MAX LONG_MAX
# 146 "/usr/include/limits.h" 2 3 4



# 1 "/usr/include/bits/posix2_lim.h" 1 3 4
# 24 "/usr/include/bits/posix2_lim.h" 3 4
#define _BITS_POSIX2_LIM_H 1



#define _POSIX2_BC_BASE_MAX 99


#define _POSIX2_BC_DIM_MAX 2048


#define _POSIX2_BC_SCALE_MAX 99


#define _POSIX2_BC_STRING_MAX 1000



#define _POSIX2_COLL_WEIGHTS_MAX 2



#define _POSIX2_EXPR_NEST_MAX 32


#define _POSIX2_LINE_MAX 2048



#define _POSIX2_RE_DUP_MAX 255



#define _POSIX2_CHARCLASS_NAME_MAX 14







#define BC_BASE_MAX _POSIX2_BC_BASE_MAX


#define BC_DIM_MAX _POSIX2_BC_DIM_MAX


#define BC_SCALE_MAX _POSIX2_BC_SCALE_MAX


#define BC_STRING_MAX _POSIX2_BC_STRING_MAX


#define COLL_WEIGHTS_MAX 255


#define EXPR_NEST_MAX _POSIX2_EXPR_NEST_MAX


#define LINE_MAX _POSIX2_LINE_MAX


#define CHARCLASS_NAME_MAX 2048



#define RE_DUP_MAX (0x7fff)
# 150 "/usr/include/limits.h" 2 3 4



# 1 "/usr/include/bits/xopen_lim.h" 1 3 4
# 31 "/usr/include/bits/xopen_lim.h" 3 4
#define _XOPEN_LIM_H 1

#define __need_IOV_MAX 
# 1 "/usr/include/bits/stdio_lim.h" 1 3 4
# 24 "/usr/include/bits/stdio_lim.h" 3 4
#define L_tmpnam 20
#define TMP_MAX 238328
#define FILENAME_MAX 4096


#define L_ctermid 9
#define L_cuserid 9




#undef FOPEN_MAX
#define FOPEN_MAX 16



#define IOV_MAX 1024
# 35 "/usr/include/bits/xopen_lim.h" 2 3 4
# 66 "/usr/include/bits/xopen_lim.h" 3 4
#define _XOPEN_IOV_MAX _POSIX_UIO_MAXIOV




#define NL_ARGMAX _POSIX_ARG_MAX


#define NL_LANGMAX _POSIX2_LINE_MAX


#define NL_MSGMAX INT_MAX



#define NL_NMAX INT_MAX


#define NL_SETMAX INT_MAX


#define NL_TEXTMAX INT_MAX


#define NZERO 20
# 110 "/usr/include/bits/xopen_lim.h" 3 4
#define WORD_BIT 32
# 130 "/usr/include/bits/xopen_lim.h" 3 4
#define LONG_BIT 32
# 154 "/usr/include/limits.h" 2 3 4
# 123 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/limits.h" 2 3 4
# 8 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/syslimits.h" 2 3 4
#undef _GCC_NEXT_LIMITS_H
# 12 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/limits.h" 2 3 4


#define _LIMITS_H___ 


#undef CHAR_BIT
#define CHAR_BIT __CHAR_BIT__







#undef SCHAR_MIN
#define SCHAR_MIN (-SCHAR_MAX - 1)
#undef SCHAR_MAX
#define SCHAR_MAX __SCHAR_MAX__


#undef UCHAR_MAX



#define UCHAR_MAX (SCHAR_MAX * 2 + 1)
# 50 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/limits.h" 3 4
#undef CHAR_MIN
#define CHAR_MIN SCHAR_MIN
#undef CHAR_MAX
#define CHAR_MAX SCHAR_MAX



#undef SHRT_MIN
#define SHRT_MIN (-SHRT_MAX - 1)
#undef SHRT_MAX
#define SHRT_MAX __SHRT_MAX__


#undef USHRT_MAX



#define USHRT_MAX (SHRT_MAX * 2 + 1)



#undef INT_MIN
#define INT_MIN (-INT_MAX - 1)
#undef INT_MAX
#define INT_MAX __INT_MAX__


#undef UINT_MAX
#define UINT_MAX (INT_MAX * 2U + 1U)



#undef LONG_MIN
#define LONG_MIN (-LONG_MAX - 1L)
#undef LONG_MAX
#define LONG_MAX __LONG_MAX__


#undef ULONG_MAX
#define ULONG_MAX (LONG_MAX * 2UL + 1UL)



#undef LLONG_MIN
#define LLONG_MIN (-LLONG_MAX - 1LL)
#undef LLONG_MAX
#define LLONG_MAX __LONG_LONG_MAX__


#undef ULLONG_MAX
#define ULLONG_MAX (LLONG_MAX * 2ULL + 1ULL)




#undef LONG_LONG_MIN
#define LONG_LONG_MIN (-LONG_LONG_MAX - 1LL)
#undef LONG_LONG_MAX
#define LONG_LONG_MAX __LONG_LONG_MAX__


#undef ULONG_LONG_MAX
#define ULONG_LONG_MAX (LONG_LONG_MAX * 2ULL + 1ULL)
# 32 "/usr/include/bits/socket.h" 2 3 4




typedef __socklen_t socklen_t;
#define __socklen_t_defined 



enum __socket_type
{
  SOCK_STREAM = 1,

#define SOCK_STREAM SOCK_STREAM
  SOCK_DGRAM = 2,

#define SOCK_DGRAM SOCK_DGRAM
  SOCK_RAW = 3,
#define SOCK_RAW SOCK_RAW
  SOCK_RDM = 4,
#define SOCK_RDM SOCK_RDM
  SOCK_SEQPACKET = 5,

#define SOCK_SEQPACKET SOCK_SEQPACKET
  SOCK_PACKET = 10


#define SOCK_PACKET SOCK_PACKET
};


#define PF_UNSPEC 0
#define PF_LOCAL 1
#define PF_UNIX PF_LOCAL
#define PF_FILE PF_LOCAL
#define PF_INET 2
#define PF_AX25 3
#define PF_IPX 4
#define PF_APPLETALK 5
#define PF_NETROM 6
#define PF_BRIDGE 7
#define PF_ATMPVC 8
#define PF_X25 9
#define PF_INET6 10
#define PF_ROSE 11
#define PF_DECnet 12
#define PF_NETBEUI 13
#define PF_SECURITY 14
#define PF_KEY 15
#define PF_NETLINK 16
#define PF_ROUTE PF_NETLINK
#define PF_PACKET 17
#define PF_ASH 18
#define PF_ECONET 19
#define PF_ATMSVC 20
#define PF_SNA 22
#define PF_IRDA 23
#define PF_PPPOX 24
#define PF_WANPIPE 25
#define PF_BLUETOOTH 31
#define PF_MAX 32


#define AF_UNSPEC PF_UNSPEC
#define AF_LOCAL PF_LOCAL
#define AF_UNIX PF_UNIX
#define AF_FILE PF_FILE
#define AF_INET PF_INET
#define AF_AX25 PF_AX25
#define AF_IPX PF_IPX
#define AF_APPLETALK PF_APPLETALK
#define AF_NETROM PF_NETROM
#define AF_BRIDGE PF_BRIDGE
#define AF_ATMPVC PF_ATMPVC
#define AF_X25 PF_X25
#define AF_INET6 PF_INET6
#define AF_ROSE PF_ROSE
#define AF_DECnet PF_DECnet
#define AF_NETBEUI PF_NETBEUI
#define AF_SECURITY PF_SECURITY
#define AF_KEY PF_KEY
#define AF_NETLINK PF_NETLINK
#define AF_ROUTE PF_ROUTE
#define AF_PACKET PF_PACKET
#define AF_ASH PF_ASH
#define AF_ECONET PF_ECONET
#define AF_ATMSVC PF_ATMSVC
#define AF_SNA PF_SNA
#define AF_IRDA PF_IRDA
#define AF_PPPOX PF_PPPOX
#define AF_WANPIPE PF_WANPIPE
#define AF_BLUETOOTH PF_BLUETOOTH
#define AF_MAX PF_MAX





#define SOL_RAW 255
#define SOL_DECNET 261
#define SOL_X25 262
#define SOL_PACKET 263
#define SOL_ATM 264
#define SOL_AAL 265
#define SOL_IRDA 266


#define SOMAXCONN 128


# 1 "/usr/include/bits/sockaddr.h" 1 3 4
# 25 "/usr/include/bits/sockaddr.h" 3 4
#define _BITS_SOCKADDR_H 1



typedef unsigned short int sa_family_t;





#define __SOCKADDR_COMMON(sa_prefix) sa_family_t sa_prefix ##family


#define __SOCKADDR_COMMON_SIZE (sizeof (unsigned short int))
# 143 "/usr/include/bits/socket.h" 2 3 4


struct sockaddr
  {
    sa_family_t sa_family;
    char sa_data[14];
  };







#define __ss_aligntype __uint32_t

#define _SS_SIZE 128
#define _SS_PADSIZE (_SS_SIZE - (2 * sizeof (__ss_aligntype)))

struct sockaddr_storage
  {
    sa_family_t ss_family;
    __uint32_t __ss_align;
    char __ss_padding[(128 - (2 * sizeof (__uint32_t)))];
  };



enum
  {
    MSG_OOB = 0x01,
#define MSG_OOB MSG_OOB
    MSG_PEEK = 0x02,
#define MSG_PEEK MSG_PEEK
    MSG_DONTROUTE = 0x04,
#define MSG_DONTROUTE MSG_DONTROUTE


    MSG_TRYHARD = MSG_DONTROUTE,
#define MSG_TRYHARD MSG_DONTROUTE

    MSG_CTRUNC = 0x08,
#define MSG_CTRUNC MSG_CTRUNC
    MSG_PROXY = 0x10,
#define MSG_PROXY MSG_PROXY
    MSG_TRUNC = 0x20,
#define MSG_TRUNC MSG_TRUNC
    MSG_DONTWAIT = 0x40,
#define MSG_DONTWAIT MSG_DONTWAIT
    MSG_EOR = 0x80,
#define MSG_EOR MSG_EOR
    MSG_WAITALL = 0x100,
#define MSG_WAITALL MSG_WAITALL
    MSG_FIN = 0x200,
#define MSG_FIN MSG_FIN
    MSG_SYN = 0x400,
#define MSG_SYN MSG_SYN
    MSG_CONFIRM = 0x800,
#define MSG_CONFIRM MSG_CONFIRM
    MSG_RST = 0x1000,
#define MSG_RST MSG_RST
    MSG_ERRQUEUE = 0x2000,
#define MSG_ERRQUEUE MSG_ERRQUEUE
    MSG_NOSIGNAL = 0x4000,
#define MSG_NOSIGNAL MSG_NOSIGNAL
    MSG_MORE = 0x8000
#define MSG_MORE MSG_MORE
  };




struct msghdr
  {
    void *msg_name;
    socklen_t msg_namelen;

    struct iovec *msg_iov;
    size_t msg_iovlen;

    void *msg_control;
    size_t msg_controllen;




    int msg_flags;
  };


struct cmsghdr
  {
    size_t cmsg_len;




    int cmsg_level;
    int cmsg_type;

    __extension__ unsigned char __cmsg_data [];

  };



#define CMSG_DATA(cmsg) ((cmsg)->__cmsg_data)



#define CMSG_NXTHDR(mhdr,cmsg) __cmsg_nxthdr (mhdr, cmsg)
#define CMSG_FIRSTHDR(mhdr) ((size_t) (mhdr)->msg_controllen >= sizeof (struct cmsghdr) ? (struct cmsghdr *) (mhdr)->msg_control : (struct cmsghdr *) NULL)


#define CMSG_ALIGN(len) (((len) + sizeof (size_t) - 1) & (size_t) ~(sizeof (size_t) - 1))

#define CMSG_SPACE(len) (CMSG_ALIGN (len) + CMSG_ALIGN (sizeof (struct cmsghdr)))

#define CMSG_LEN(len) (CMSG_ALIGN (sizeof (struct cmsghdr)) + (len))

extern struct cmsghdr *__cmsg_nxthdr (struct msghdr *__mhdr,
          struct cmsghdr *__cmsg) __attribute__ ((__nothrow__));
# 290 "/usr/include/bits/socket.h" 3 4
enum
  {
    SCM_RIGHTS = 0x01
#define SCM_RIGHTS SCM_RIGHTS

    , SCM_CREDENTIALS = 0x02
#define SCM_CREDENTIALS SCM_CREDENTIALS

  };



struct ucred
{
  pid_t pid;
  uid_t uid;
  gid_t gid;
};


# 1 "/usr/include/asm/socket.h" 1 3 4

#define _ASM_SOCKET_H 

# 1 "/usr/include/asm/sockios.h" 1 3 4

#define __ARCH_I386_SOCKIOS__ 


#define FIOSETOWN 0x8901
#define SIOCSPGRP 0x8902
#define FIOGETOWN 0x8903
#define SIOCGPGRP 0x8904
#define SIOCATMARK 0x8905
#define SIOCGSTAMP 0x8906
# 5 "/usr/include/asm/socket.h" 2 3 4


#define SOL_SOCKET 1

#define SO_DEBUG 1
#define SO_REUSEADDR 2
#define SO_TYPE 3
#define SO_ERROR 4
#define SO_DONTROUTE 5
#define SO_BROADCAST 6
#define SO_SNDBUF 7
#define SO_RCVBUF 8
#define SO_SNDBUFFORCE 32
#define SO_RCVBUFFORCE 33
#define SO_KEEPALIVE 9
#define SO_OOBINLINE 10
#define SO_NO_CHECK 11
#define SO_PRIORITY 12
#define SO_LINGER 13
#define SO_BSDCOMPAT 14

#define SO_PASSCRED 16
#define SO_PEERCRED 17
#define SO_RCVLOWAT 18
#define SO_SNDLOWAT 19
#define SO_RCVTIMEO 20
#define SO_SNDTIMEO 21


#define SO_SECURITY_AUTHENTICATION 22
#define SO_SECURITY_ENCRYPTION_TRANSPORT 23
#define SO_SECURITY_ENCRYPTION_NETWORK 24

#define SO_BINDTODEVICE 25


#define SO_ATTACH_FILTER 26
#define SO_DETACH_FILTER 27

#define SO_PEERNAME 28
#define SO_TIMESTAMP 29
#define SCM_TIMESTAMP SO_TIMESTAMP

#define SO_ACCEPTCONN 30

#define SO_PEERSEC 31
#define SO_PASSSEC 34
# 311 "/usr/include/bits/socket.h" 2 3 4



struct linger
  {
    int l_onoff;
    int l_linger;
  };
# 36 "/usr/include/sys/socket.h" 2 3 4




struct osockaddr
  {
    unsigned short int sa_family;
    unsigned char sa_data[14];
  };




enum
{
  SHUT_RD = 0,
#define SHUT_RD SHUT_RD
  SHUT_WR,
#define SHUT_WR SHUT_WR
  SHUT_RDWR
#define SHUT_RDWR SHUT_RDWR
};
# 71 "/usr/include/sys/socket.h" 3 4
#define __SOCKADDR_ALLTYPES __SOCKADDR_ONETYPE (sockaddr) __SOCKADDR_ONETYPE (sockaddr_at) __SOCKADDR_ONETYPE (sockaddr_ax25) __SOCKADDR_ONETYPE (sockaddr_dl) __SOCKADDR_ONETYPE (sockaddr_eon) __SOCKADDR_ONETYPE (sockaddr_in) __SOCKADDR_ONETYPE (sockaddr_in6) __SOCKADDR_ONETYPE (sockaddr_inarp) __SOCKADDR_ONETYPE (sockaddr_ipx) __SOCKADDR_ONETYPE (sockaddr_iso) __SOCKADDR_ONETYPE (sockaddr_ns) __SOCKADDR_ONETYPE (sockaddr_un) __SOCKADDR_ONETYPE (sockaddr_x25)
# 86 "/usr/include/sys/socket.h" 3 4
#define __SOCKADDR_ONETYPE(type) struct type *__restrict __ ##type ##__;
typedef union { struct sockaddr *__restrict __sockaddr__; struct sockaddr_at *__restrict __sockaddr_at__; struct sockaddr_ax25 *__restrict __sockaddr_ax25__; struct sockaddr_dl *__restrict __sockaddr_dl__; struct sockaddr_eon *__restrict __sockaddr_eon__; struct sockaddr_in *__restrict __sockaddr_in__; struct sockaddr_in6 *__restrict __sockaddr_in6__; struct sockaddr_inarp *__restrict __sockaddr_inarp__; struct sockaddr_ipx *__restrict __sockaddr_ipx__; struct sockaddr_iso *__restrict __sockaddr_iso__; struct sockaddr_ns *__restrict __sockaddr_ns__; struct sockaddr_un *__restrict __sockaddr_un__; struct sockaddr_x25 *__restrict __sockaddr_x25__;
       } __SOCKADDR_ARG __attribute__ ((__transparent_union__));
#undef __SOCKADDR_ONETYPE
#define __SOCKADDR_ONETYPE(type) __const struct type *__restrict __ ##type ##__;
typedef union { __const struct sockaddr *__restrict __sockaddr__; __const struct sockaddr_at *__restrict __sockaddr_at__; __const struct sockaddr_ax25 *__restrict __sockaddr_ax25__; __const struct sockaddr_dl *__restrict __sockaddr_dl__; __const struct sockaddr_eon *__restrict __sockaddr_eon__; __const struct sockaddr_in *__restrict __sockaddr_in__; __const struct sockaddr_in6 *__restrict __sockaddr_in6__; __const struct sockaddr_inarp *__restrict __sockaddr_inarp__; __const struct sockaddr_ipx *__restrict __sockaddr_ipx__; __const struct sockaddr_iso *__restrict __sockaddr_iso__; __const struct sockaddr_ns *__restrict __sockaddr_ns__; __const struct sockaddr_un *__restrict __sockaddr_un__; __const struct sockaddr_x25 *__restrict __sockaddr_x25__;
       } __CONST_SOCKADDR_ARG __attribute__ ((__transparent_union__));
#undef __SOCKADDR_ONETYPE






extern int socket (int __domain, int __type, int __protocol) __attribute__ ((__nothrow__));





extern int socketpair (int __domain, int __type, int __protocol,
         int __fds[2]) __attribute__ ((__nothrow__));


extern int bind (int __fd, __CONST_SOCKADDR_ARG __addr, socklen_t __len)
     __attribute__ ((__nothrow__));


extern int getsockname (int __fd, __SOCKADDR_ARG __addr,
   socklen_t *__restrict __len) __attribute__ ((__nothrow__));
# 124 "/usr/include/sys/socket.h" 3 4
extern int connect (int __fd, __CONST_SOCKADDR_ARG __addr, socklen_t __len);



extern int getpeername (int __fd, __SOCKADDR_ARG __addr,
   socklen_t *__restrict __len) __attribute__ ((__nothrow__));






extern ssize_t send (int __fd, __const void *__buf, size_t __n, int __flags);






extern ssize_t recv (int __fd, void *__buf, size_t __n, int __flags);






extern ssize_t sendto (int __fd, __const void *__buf, size_t __n,
         int __flags, __CONST_SOCKADDR_ARG __addr,
         socklen_t __addr_len);
# 161 "/usr/include/sys/socket.h" 3 4
extern ssize_t recvfrom (int __fd, void *__restrict __buf, size_t __n,
    int __flags, __SOCKADDR_ARG __addr,
    socklen_t *__restrict __addr_len);







extern ssize_t sendmsg (int __fd, __const struct msghdr *__message,
   int __flags);






extern ssize_t recvmsg (int __fd, struct msghdr *__message, int __flags);





extern int getsockopt (int __fd, int __level, int __optname,
         void *__restrict __optval,
         socklen_t *__restrict __optlen) __attribute__ ((__nothrow__));




extern int setsockopt (int __fd, int __level, int __optname,
         __const void *__optval, socklen_t __optlen) __attribute__ ((__nothrow__));





extern int listen (int __fd, int __n) __attribute__ ((__nothrow__));
# 209 "/usr/include/sys/socket.h" 3 4
extern int accept (int __fd, __SOCKADDR_ARG __addr,
     socklen_t *__restrict __addr_len);







extern int shutdown (int __fd, int __how) __attribute__ ((__nothrow__));




extern int sockatmark (int __fd) __attribute__ ((__nothrow__));







extern int isfdtype (int __fd, int __fdtype) __attribute__ ((__nothrow__));
# 240 "/usr/include/sys/socket.h" 3 4

# 126 "/u/prd/rtr/mt/ss_dep.h" 2
# 1 "/usr/include/netinet/in.h" 1 3 4
# 20 "/usr/include/netinet/in.h" 3 4
#define _NETINET_IN_H 1


# 1 "/usr/include/stdint.h" 1 3 4
# 24 "/usr/include/stdint.h" 3 4
#define _STDINT_H 1



# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 19 "/usr/include/bits/wordsize.h" 3 4
#define __WORDSIZE 32
# 29 "/usr/include/stdint.h" 2 3 4
# 49 "/usr/include/stdint.h" 3 4
typedef unsigned char uint8_t;
typedef unsigned short int uint16_t;

typedef unsigned int uint32_t;
#define __uint32_t_defined 




__extension__
typedef unsigned long long int uint64_t;






typedef signed char int_least8_t;
typedef short int int_least16_t;
typedef int int_least32_t;



__extension__
typedef long long int int_least64_t;



typedef unsigned char uint_least8_t;
typedef unsigned short int uint_least16_t;
typedef unsigned int uint_least32_t;



__extension__
typedef unsigned long long int uint_least64_t;






typedef signed char int_fast8_t;





typedef int int_fast16_t;
typedef int int_fast32_t;
__extension__
typedef long long int int_fast64_t;



typedef unsigned char uint_fast8_t;





typedef unsigned int uint_fast16_t;
typedef unsigned int uint_fast32_t;
__extension__
typedef unsigned long long int uint_fast64_t;
# 126 "/usr/include/stdint.h" 3 4
typedef int intptr_t;
#define __intptr_t_defined 

typedef unsigned int uintptr_t;
# 138 "/usr/include/stdint.h" 3 4
__extension__
typedef long long int intmax_t;
__extension__
typedef unsigned long long int uintmax_t;
# 153 "/usr/include/stdint.h" 3 4
#define __INT64_C(c) c ## LL
#define __UINT64_C(c) c ## ULL





#define INT8_MIN (-128)
#define INT16_MIN (-32767-1)
#define INT32_MIN (-2147483647-1)
#define INT64_MIN (-__INT64_C(9223372036854775807)-1)

#define INT8_MAX (127)
#define INT16_MAX (32767)
#define INT32_MAX (2147483647)
#define INT64_MAX (__INT64_C(9223372036854775807))


#define UINT8_MAX (255)
#define UINT16_MAX (65535)
#define UINT32_MAX (4294967295U)
#define UINT64_MAX (__UINT64_C(18446744073709551615))



#define INT_LEAST8_MIN (-128)
#define INT_LEAST16_MIN (-32767-1)
#define INT_LEAST32_MIN (-2147483647-1)
#define INT_LEAST64_MIN (-__INT64_C(9223372036854775807)-1)

#define INT_LEAST8_MAX (127)
#define INT_LEAST16_MAX (32767)
#define INT_LEAST32_MAX (2147483647)
#define INT_LEAST64_MAX (__INT64_C(9223372036854775807))


#define UINT_LEAST8_MAX (255)
#define UINT_LEAST16_MAX (65535)
#define UINT_LEAST32_MAX (4294967295U)
#define UINT_LEAST64_MAX (__UINT64_C(18446744073709551615))



#define INT_FAST8_MIN (-128)




#define INT_FAST16_MIN (-2147483647-1)
#define INT_FAST32_MIN (-2147483647-1)

#define INT_FAST64_MIN (-__INT64_C(9223372036854775807)-1)

#define INT_FAST8_MAX (127)




#define INT_FAST16_MAX (2147483647)
#define INT_FAST32_MAX (2147483647)

#define INT_FAST64_MAX (__INT64_C(9223372036854775807))


#define UINT_FAST8_MAX (255)




#define UINT_FAST16_MAX (4294967295U)
#define UINT_FAST32_MAX (4294967295U)

#define UINT_FAST64_MAX (__UINT64_C(18446744073709551615))
# 234 "/usr/include/stdint.h" 3 4
#define INTPTR_MIN (-2147483647-1)
#define INTPTR_MAX (2147483647)
#define UINTPTR_MAX (4294967295U)




#define INTMAX_MIN (-__INT64_C(9223372036854775807)-1)

#define INTMAX_MAX (__INT64_C(9223372036854775807))


#define UINTMAX_MAX (__UINT64_C(18446744073709551615))
# 256 "/usr/include/stdint.h" 3 4
#define PTRDIFF_MIN (-2147483647-1)
#define PTRDIFF_MAX (2147483647)



#define SIG_ATOMIC_MIN (-2147483647-1)
#define SIG_ATOMIC_MAX (2147483647)





#define SIZE_MAX (4294967295U)





#define WCHAR_MIN __WCHAR_MIN
#define WCHAR_MAX __WCHAR_MAX



#define WINT_MIN (0u)
#define WINT_MAX (4294967295u)
# 290 "/usr/include/stdint.h" 3 4
#define INT8_C(c) c
#define INT16_C(c) c
#define INT32_C(c) c



#define INT64_C(c) c ## LL



#define UINT8_C(c) c
#define UINT16_C(c) c
#define UINT32_C(c) c ## U



#define UINT64_C(c) c ## ULL







#define INTMAX_C(c) c ## LL
#define UINTMAX_C(c) c ## ULL
# 24 "/usr/include/netinet/in.h" 2 3 4







enum
  {
    IPPROTO_IP = 0,
#define IPPROTO_IP IPPROTO_IP
    IPPROTO_HOPOPTS = 0,
#define IPPROTO_HOPOPTS IPPROTO_HOPOPTS
    IPPROTO_ICMP = 1,
#define IPPROTO_ICMP IPPROTO_ICMP
    IPPROTO_IGMP = 2,
#define IPPROTO_IGMP IPPROTO_IGMP
    IPPROTO_IPIP = 4,
#define IPPROTO_IPIP IPPROTO_IPIP
    IPPROTO_TCP = 6,
#define IPPROTO_TCP IPPROTO_TCP
    IPPROTO_EGP = 8,
#define IPPROTO_EGP IPPROTO_EGP
    IPPROTO_PUP = 12,
#define IPPROTO_PUP IPPROTO_PUP
    IPPROTO_UDP = 17,
#define IPPROTO_UDP IPPROTO_UDP
    IPPROTO_IDP = 22,
#define IPPROTO_IDP IPPROTO_IDP
    IPPROTO_TP = 29,
#define IPPROTO_TP IPPROTO_TP
    IPPROTO_IPV6 = 41,
#define IPPROTO_IPV6 IPPROTO_IPV6
    IPPROTO_ROUTING = 43,
#define IPPROTO_ROUTING IPPROTO_ROUTING
    IPPROTO_FRAGMENT = 44,
#define IPPROTO_FRAGMENT IPPROTO_FRAGMENT
    IPPROTO_RSVP = 46,
#define IPPROTO_RSVP IPPROTO_RSVP
    IPPROTO_GRE = 47,
#define IPPROTO_GRE IPPROTO_GRE
    IPPROTO_ESP = 50,
#define IPPROTO_ESP IPPROTO_ESP
    IPPROTO_AH = 51,
#define IPPROTO_AH IPPROTO_AH
    IPPROTO_ICMPV6 = 58,
#define IPPROTO_ICMPV6 IPPROTO_ICMPV6
    IPPROTO_NONE = 59,
#define IPPROTO_NONE IPPROTO_NONE
    IPPROTO_DSTOPTS = 60,
#define IPPROTO_DSTOPTS IPPROTO_DSTOPTS
    IPPROTO_MTP = 92,
#define IPPROTO_MTP IPPROTO_MTP
    IPPROTO_ENCAP = 98,
#define IPPROTO_ENCAP IPPROTO_ENCAP
    IPPROTO_PIM = 103,
#define IPPROTO_PIM IPPROTO_PIM
    IPPROTO_COMP = 108,
#define IPPROTO_COMP IPPROTO_COMP
    IPPROTO_SCTP = 132,
#define IPPROTO_SCTP IPPROTO_SCTP
    IPPROTO_RAW = 255,
#define IPPROTO_RAW IPPROTO_RAW
    IPPROTO_MAX
  };



typedef uint16_t in_port_t;


enum
  {
    IPPORT_ECHO = 7,
    IPPORT_DISCARD = 9,
    IPPORT_SYSTAT = 11,
    IPPORT_DAYTIME = 13,
    IPPORT_NETSTAT = 15,
    IPPORT_FTP = 21,
    IPPORT_TELNET = 23,
    IPPORT_SMTP = 25,
    IPPORT_TIMESERVER = 37,
    IPPORT_NAMESERVER = 42,
    IPPORT_WHOIS = 43,
    IPPORT_MTP = 57,

    IPPORT_TFTP = 69,
    IPPORT_RJE = 77,
    IPPORT_FINGER = 79,
    IPPORT_TTYLINK = 87,
    IPPORT_SUPDUP = 95,


    IPPORT_EXECSERVER = 512,
    IPPORT_LOGINSERVER = 513,
    IPPORT_CMDSERVER = 514,
    IPPORT_EFSSERVER = 520,


    IPPORT_BIFFUDP = 512,
    IPPORT_WHOSERVER = 513,
    IPPORT_ROUTESERVER = 520,


    IPPORT_RESERVED = 1024,


    IPPORT_USERRESERVED = 5000
  };



typedef uint32_t in_addr_t;
struct in_addr
  {
    in_addr_t s_addr;
  };







#define IN_CLASSA(a) ((((in_addr_t)(a)) & 0x80000000) == 0)
#define IN_CLASSA_NET 0xff000000
#define IN_CLASSA_NSHIFT 24
#define IN_CLASSA_HOST (0xffffffff & ~IN_CLASSA_NET)
#define IN_CLASSA_MAX 128

#define IN_CLASSB(a) ((((in_addr_t)(a)) & 0xc0000000) == 0x80000000)
#define IN_CLASSB_NET 0xffff0000
#define IN_CLASSB_NSHIFT 16
#define IN_CLASSB_HOST (0xffffffff & ~IN_CLASSB_NET)
#define IN_CLASSB_MAX 65536

#define IN_CLASSC(a) ((((in_addr_t)(a)) & 0xe0000000) == 0xc0000000)
#define IN_CLASSC_NET 0xffffff00
#define IN_CLASSC_NSHIFT 8
#define IN_CLASSC_HOST (0xffffffff & ~IN_CLASSC_NET)

#define IN_CLASSD(a) ((((in_addr_t)(a)) & 0xf0000000) == 0xe0000000)
#define IN_MULTICAST(a) IN_CLASSD(a)

#define IN_EXPERIMENTAL(a) ((((in_addr_t)(a)) & 0xe0000000) == 0xe0000000)
#define IN_BADCLASS(a) ((((in_addr_t)(a)) & 0xf0000000) == 0xf0000000)


#define INADDR_ANY ((in_addr_t) 0x00000000)

#define INADDR_BROADCAST ((in_addr_t) 0xffffffff)

#define INADDR_NONE ((in_addr_t) 0xffffffff)


#define IN_LOOPBACKNET 127


#define INADDR_LOOPBACK ((in_addr_t) 0x7f000001)



#define INADDR_UNSPEC_GROUP ((in_addr_t) 0xe0000000)
#define INADDR_ALLHOSTS_GROUP ((in_addr_t) 0xe0000001)
#define INADDR_ALLRTRS_GROUP ((in_addr_t) 0xe0000002)
#define INADDR_MAX_LOCAL_GROUP ((in_addr_t) 0xe00000ff)



struct in6_addr
  {
    union
      {
 uint8_t u6_addr8[16];
 uint16_t u6_addr16[8];
 uint32_t u6_addr32[4];
      } in6_u;
#define s6_addr in6_u.u6_addr8
#define s6_addr16 in6_u.u6_addr16
#define s6_addr32 in6_u.u6_addr32
  };

extern const struct in6_addr in6addr_any;
extern const struct in6_addr in6addr_loopback;
#define IN6ADDR_ANY_INIT { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }
#define IN6ADDR_LOOPBACK_INIT { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

#define INET_ADDRSTRLEN 16
#define INET6_ADDRSTRLEN 46






struct sockaddr_in
  {
    sa_family_t sin_family;
    in_port_t sin_port;
    struct in_addr sin_addr;


    unsigned char sin_zero[sizeof (struct sockaddr) -
      (sizeof (unsigned short int)) -
      sizeof (in_port_t) -
      sizeof (struct in_addr)];
  };


struct sockaddr_in6
  {
    sa_family_t sin6_family;
    in_port_t sin6_port;
    uint32_t sin6_flowinfo;
    struct in6_addr sin6_addr;
    uint32_t sin6_scope_id;
  };



struct ip_mreq
  {

    struct in_addr imr_multiaddr;


    struct in_addr imr_interface;
  };

struct ip_mreq_source
  {

    struct in_addr imr_multiaddr;


    struct in_addr imr_interface;


    struct in_addr imr_sourceaddr;
  };


struct ipv6_mreq
  {

    struct in6_addr ipv6mr_multiaddr;


    unsigned int ipv6mr_interface;
  };



struct group_req
  {

    uint32_t gr_interface;


    struct sockaddr_storage gr_group;
  };

struct group_source_req
  {

    uint32_t gsr_interface;


    struct sockaddr_storage gsr_group;


    struct sockaddr_storage gsr_source;
  };



struct ip_msfilter
  {

    struct in_addr imsf_multiaddr;


    struct in_addr imsf_interface;


    uint32_t imsf_fmode;


    uint32_t imsf_numsrc;

    struct in_addr imsf_slist[1];
  };

#define IP_MSFILTER_SIZE(numsrc) (sizeof (struct ip_msfilter) - sizeof (struct in_addr) + (numsrc) * sizeof (struct in_addr))



struct group_filter
  {

    uint32_t gf_interface;


    struct sockaddr_storage gf_group;


    uint32_t gf_fmode;


    uint32_t gf_numsrc;

    struct sockaddr_storage gf_slist[1];
};

#define GROUP_FILTER_SIZE(numsrc) (sizeof (struct group_filter) - sizeof (struct sockaddr_storage) + ((numsrc) * sizeof (struct sockaddr_storage)))






# 1 "/usr/include/bits/in.h" 1 3 4
# 28 "/usr/include/bits/in.h" 3 4
#define IP_OPTIONS 4
#define IP_HDRINCL 3
#define IP_TOS 1
#define IP_TTL 2
#define IP_RECVOPTS 6

#define IP_RECVRETOPTS IP_RETOPTS
#define IP_RETOPTS 7
#define IP_MULTICAST_IF 32
#define IP_MULTICAST_TTL 33
#define IP_MULTICAST_LOOP 34
#define IP_ADD_MEMBERSHIP 35
#define IP_DROP_MEMBERSHIP 36
#define IP_UNBLOCK_SOURCE 37
#define IP_BLOCK_SOURCE 38
#define IP_ADD_SOURCE_MEMBERSHIP 39
#define IP_DROP_SOURCE_MEMBERSHIP 40
#define IP_MSFILTER 41
#define MCAST_JOIN_GROUP 42
#define MCAST_BLOCK_SOURCE 43
#define MCAST_UNBLOCK_SOURCE 44
#define MCAST_LEAVE_GROUP 45
#define MCAST_JOIN_SOURCE_GROUP 46
#define MCAST_LEAVE_SOURCE_GROUP 47
#define MCAST_MSFILTER 48

#define MCAST_EXCLUDE 0
#define MCAST_INCLUDE 1

#define IP_ROUTER_ALERT 5
#define IP_PKTINFO 8
#define IP_PKTOPTIONS 9
#define IP_PMTUDISC 10
#define IP_MTU_DISCOVER 10
#define IP_RECVERR 11
#define IP_RECVTTL 12
#define IP_RECVTOS 13



#define IP_PMTUDISC_DONT 0
#define IP_PMTUDISC_WANT 1
#define IP_PMTUDISC_DO 2


#define SOL_IP 0

#define IP_DEFAULT_MULTICAST_TTL 1
#define IP_DEFAULT_MULTICAST_LOOP 1
#define IP_MAX_MEMBERSHIPS 20




struct ip_opts
  {
    struct in_addr ip_dst;
    char ip_opts[40];
  };


struct ip_mreqn
  {
    struct in_addr imr_multiaddr;
    struct in_addr imr_address;
    int imr_ifindex;
  };


struct in_pktinfo
  {
    int ipi_ifindex;
    struct in_addr ipi_spec_dst;
    struct in_addr ipi_addr;
  };




#define IPV6_ADDRFORM 1
#define IPV6_2292PKTINFO 2
#define IPV6_2292HOPOPTS 3
#define IPV6_2292DSTOPTS 4
#define IPV6_2292RTHDR 5
#define IPV6_2292PKTOPTIONS 6
#define IPV6_CHECKSUM 7
#define IPV6_2292HOPLIMIT 8

#define SCM_SRCRT IPV6_RXSRCRT

#define IPV6_NEXTHOP 9
#define IPV6_AUTHHDR 10
#define IPV6_UNICAST_HOPS 16
#define IPV6_MULTICAST_IF 17
#define IPV6_MULTICAST_HOPS 18
#define IPV6_MULTICAST_LOOP 19
#define IPV6_JOIN_GROUP 20
#define IPV6_LEAVE_GROUP 21
#define IPV6_ROUTER_ALERT 22
#define IPV6_MTU_DISCOVER 23
#define IPV6_MTU 24
#define IPV6_RECVERR 25
#define IPV6_V6ONLY 26
#define IPV6_JOIN_ANYCAST 27
#define IPV6_LEAVE_ANYCAST 28
#define IPV6_IPSEC_POLICY 34
#define IPV6_XFRM_POLICY 35

#define IPV6_RECVPKTINFO 49
#define IPV6_PKTINFO 50
#define IPV6_RECVHOPLIMIT 51
#define IPV6_HOPLIMIT 52
#define IPV6_RECVHOPOPTS 53
#define IPV6_HOPOPTS 54
#define IPV6_RTHDRDSTOPTS 55
#define IPV6_RECVRTHDR 56
#define IPV6_RTHDR 57
#define IPV6_RECVDSTOPTS 58
#define IPV6_DSTOPTS 59

#define IPV6_RECVTCLASS 66
#define IPV6_TCLASS 67


#define IPV6_ADD_MEMBERSHIP IPV6_JOIN_GROUP
#define IPV6_DROP_MEMBERSHIP IPV6_LEAVE_GROUP
#define IPV6_RXHOPOPTS IPV6_HOPOPTS
#define IPV6_RXDSTOPTS IPV6_DSTOPTS


#define IPV6_PMTUDISC_DONT 0
#define IPV6_PMTUDISC_WANT 1
#define IPV6_PMTUDISC_DO 2


#define SOL_IPV6 41
#define SOL_ICMPV6 58


#define IPV6_RTHDR_LOOSE 0
#define IPV6_RTHDR_STRICT 1

#define IPV6_RTHDR_TYPE_0 0
# 346 "/usr/include/netinet/in.h" 2 3 4
# 354 "/usr/include/netinet/in.h" 3 4
extern uint32_t ntohl (uint32_t __netlong) __attribute__ ((__nothrow__)) __attribute__ ((__const__));
extern uint16_t ntohs (uint16_t __netshort)
     __attribute__ ((__nothrow__)) __attribute__ ((__const__));
extern uint32_t htonl (uint32_t __hostlong)
     __attribute__ ((__nothrow__)) __attribute__ ((__const__));
extern uint16_t htons (uint16_t __hostshort)
     __attribute__ ((__nothrow__)) __attribute__ ((__const__));




# 1 "/usr/include/bits/byteswap.h" 1 3 4
# 25 "/usr/include/bits/byteswap.h" 3 4
#define _BITS_BYTESWAP_H 1


#define __bswap_constant_16(x) ((((x) >> 8) & 0xff) | (((x) & 0xff) << 8))




#define __bswap_16(x) (__extension__ ({ register unsigned short int __v, __x = (x); if (__builtin_constant_p (__x)) __v = __bswap_constant_16 (__x); else __asm__ ("rorw $8, %w0" : "=r" (__v) : "0" (__x) : "cc"); __v; }))
# 59 "/usr/include/bits/byteswap.h" 3 4
#define __bswap_constant_32(x) ((((x) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | (((x) & 0x0000ff00) << 8) | (((x) & 0x000000ff) << 24))
# 71 "/usr/include/bits/byteswap.h" 3 4
#define __bswap_32(x) (__extension__ ({ register unsigned int __v, __x = (x); if (__builtin_constant_p (__x)) __v = __bswap_constant_32 (__x); else __asm__ ("rorw $8, %w0;" "rorl $16, %0;" "rorw $8, %w0" : "=r" (__v) : "0" (__x) : "cc"); __v; }))
# 110 "/usr/include/bits/byteswap.h" 3 4
#define __bswap_constant_64(x) ((((x) & 0xff00000000000000ull) >> 56) | (((x) & 0x00ff000000000000ull) >> 40) | (((x) & 0x0000ff0000000000ull) >> 24) | (((x) & 0x000000ff00000000ull) >> 8) | (((x) & 0x00000000ff000000ull) << 8) | (((x) & 0x0000000000ff0000ull) << 24) | (((x) & 0x000000000000ff00ull) << 40) | (((x) & 0x00000000000000ffull) << 56))
# 120 "/usr/include/bits/byteswap.h" 3 4
#define __bswap_64(x) (__extension__ ({ union { __extension__ unsigned long long int __ll; unsigned long int __l[2]; } __w, __r; if (__builtin_constant_p (x)) __r.__ll = __bswap_constant_64 (x); else { __w.__ll = (x); __r.__l[0] = __bswap_32 (__w.__l[1]); __r.__l[1] = __bswap_32 (__w.__l[0]); } __r.__ll; }))
# 366 "/usr/include/netinet/in.h" 2 3 4
# 388 "/usr/include/netinet/in.h" 3 4
#define IN6_IS_ADDR_UNSPECIFIED(a) (((__const uint32_t *) (a))[0] == 0 && ((__const uint32_t *) (a))[1] == 0 && ((__const uint32_t *) (a))[2] == 0 && ((__const uint32_t *) (a))[3] == 0)





#define IN6_IS_ADDR_LOOPBACK(a) (((__const uint32_t *) (a))[0] == 0 && ((__const uint32_t *) (a))[1] == 0 && ((__const uint32_t *) (a))[2] == 0 && ((__const uint32_t *) (a))[3] == htonl (1))





#define IN6_IS_ADDR_MULTICAST(a) (((__const uint8_t *) (a))[0] == 0xff)

#define IN6_IS_ADDR_LINKLOCAL(a) ((((__const uint32_t *) (a))[0] & htonl (0xffc00000)) == htonl (0xfe800000))



#define IN6_IS_ADDR_SITELOCAL(a) ((((__const uint32_t *) (a))[0] & htonl (0xffc00000)) == htonl (0xfec00000))



#define IN6_IS_ADDR_V4MAPPED(a) ((((__const uint32_t *) (a))[0] == 0) && (((__const uint32_t *) (a))[1] == 0) && (((__const uint32_t *) (a))[2] == htonl (0xffff)))




#define IN6_IS_ADDR_V4COMPAT(a) ((((__const uint32_t *) (a))[0] == 0) && (((__const uint32_t *) (a))[1] == 0) && (((__const uint32_t *) (a))[2] == 0) && (ntohl (((__const uint32_t *) (a))[3]) > 1))





#define IN6_ARE_ADDR_EQUAL(a,b) ((((__const uint32_t *) (a))[0] == ((__const uint32_t *) (b))[0]) && (((__const uint32_t *) (a))[1] == ((__const uint32_t *) (b))[1]) && (((__const uint32_t *) (a))[2] == ((__const uint32_t *) (b))[2]) && (((__const uint32_t *) (a))[3] == ((__const uint32_t *) (b))[3]))






extern int bindresvport (int __sockfd, struct sockaddr_in *__sock_in) __attribute__ ((__nothrow__));


extern int bindresvport6 (int __sockfd, struct sockaddr_in6 *__sock_in)
     __attribute__ ((__nothrow__));


#define IN6_IS_ADDR_MC_NODELOCAL(a) (IN6_IS_ADDR_MULTICAST(a) && ((((__const uint8_t *) (a))[1] & 0xf) == 0x1))



#define IN6_IS_ADDR_MC_LINKLOCAL(a) (IN6_IS_ADDR_MULTICAST(a) && ((((__const uint8_t *) (a))[1] & 0xf) == 0x2))



#define IN6_IS_ADDR_MC_SITELOCAL(a) (IN6_IS_ADDR_MULTICAST(a) && ((((__const uint8_t *) (a))[1] & 0xf) == 0x5))



#define IN6_IS_ADDR_MC_ORGLOCAL(a) (IN6_IS_ADDR_MULTICAST(a) && ((((__const uint8_t *) (a))[1] & 0xf) == 0x8))



#define IN6_IS_ADDR_MC_GLOBAL(a) (IN6_IS_ADDR_MULTICAST(a) && ((((__const uint8_t *) (a))[1] & 0xf) == 0xe))




struct in6_pktinfo
  {
    struct in6_addr ipi6_addr;
    unsigned int ipi6_ifindex;
  };


struct ip6_mtuinfo
  {
    struct sockaddr_in6 ip6m_addr;
    uint32_t ip6m_mtu;
  };




extern int inet6_option_space (int __nbytes)
     __attribute__ ((__nothrow__)) __attribute__ ((__deprecated__));
extern int inet6_option_init (void *__bp, struct cmsghdr **__cmsgp,
         int __type) __attribute__ ((__nothrow__)) __attribute__ ((__deprecated__));
extern int inet6_option_append (struct cmsghdr *__cmsg,
    __const uint8_t *__typep, int __multx,
    int __plusy) __attribute__ ((__nothrow__)) __attribute__ ((__deprecated__));
extern uint8_t *inet6_option_alloc (struct cmsghdr *__cmsg, int __datalen,
        int __multx, int __plusy)
     __attribute__ ((__nothrow__)) __attribute__ ((__deprecated__));
extern int inet6_option_next (__const struct cmsghdr *__cmsg,
         uint8_t **__tptrp)
     __attribute__ ((__nothrow__)) __attribute__ ((__deprecated__));
extern int inet6_option_find (__const struct cmsghdr *__cmsg,
         uint8_t **__tptrp, int __type)
     __attribute__ ((__nothrow__)) __attribute__ ((__deprecated__));



extern int inet6_opt_init (void *__extbuf, socklen_t __extlen) __attribute__ ((__nothrow__));
extern int inet6_opt_append (void *__extbuf, socklen_t __extlen, int __offset,
        uint8_t __type, socklen_t __len, uint8_t __align,
        void **__databufp) __attribute__ ((__nothrow__));
extern int inet6_opt_finish (void *__extbuf, socklen_t __extlen, int __offset)
     __attribute__ ((__nothrow__));
extern int inet6_opt_set_val (void *__databuf, int __offset, void *__val,
         socklen_t __vallen) __attribute__ ((__nothrow__));
extern int inet6_opt_next (void *__extbuf, socklen_t __extlen, int __offset,
      uint8_t *__typep, socklen_t *__lenp,
      void **__databufp) __attribute__ ((__nothrow__));
extern int inet6_opt_find (void *__extbuf, socklen_t __extlen, int __offset,
      uint8_t __type, socklen_t *__lenp,
      void **__databufp) __attribute__ ((__nothrow__));
extern int inet6_opt_get_val (void *__databuf, int __offset, void *__val,
         socklen_t __vallen) __attribute__ ((__nothrow__));



extern socklen_t inet6_rth_space (int __type, int __segments) __attribute__ ((__nothrow__));
extern void *inet6_rth_init (void *__bp, socklen_t __bp_len, int __type,
        int __segments) __attribute__ ((__nothrow__));
extern int inet6_rth_add (void *__bp, __const struct in6_addr *__addr) __attribute__ ((__nothrow__));
extern int inet6_rth_reverse (__const void *__in, void *__out) __attribute__ ((__nothrow__));
extern int inet6_rth_segments (__const void *__bp) __attribute__ ((__nothrow__));
extern struct in6_addr *inet6_rth_getaddr (__const void *__bp, int __index)
     __attribute__ ((__nothrow__));





extern int getipv4sourcefilter (int __s, struct in_addr __interface_addr,
    struct in_addr __group, uint32_t *__fmode,
    uint32_t *__numsrc, struct in_addr *__slist)
     __attribute__ ((__nothrow__));


extern int setipv4sourcefilter (int __s, struct in_addr __interface_addr,
    struct in_addr __group, uint32_t __fmode,
    uint32_t __numsrc,
    __const struct in_addr *__slist)
     __attribute__ ((__nothrow__));



extern int getsourcefilter (int __s, uint32_t __interface_addr,
       __const struct sockaddr *__group,
       socklen_t __grouplen, uint32_t *__fmode,
       uint32_t *__numsrc,
       struct sockaddr_storage *__slist) __attribute__ ((__nothrow__));


extern int setsourcefilter (int __s, uint32_t __interface_addr,
       __const struct sockaddr *__group,
       socklen_t __grouplen, uint32_t __fmode,
       uint32_t __numsrc,
       __const struct sockaddr_storage *__slist) __attribute__ ((__nothrow__));



# 127 "/u/prd/rtr/mt/ss_dep.h" 2
# 1967 "../..//cm/ssi.h" 2
# 2041 "../..//cm/ssi.h"
#define SS_REGION1 1
#define SS_REGION2 2


#define SS_REFTIME_01_01_1970 0
#define SS_REFTIME_01_01_2002 1009843200


#define SS_100MS 10
#define SS_10MS 100
#define SS_1MS 1000
# 2075 "../..//cm/ssi.h"
#define SRegTmr(ent,inst,period,fun) SRegCfgTmr(ent,inst,period,SS_TICKS_SEC,fun)
#define SDeregTmr(ent,inst,period,fun) SDeregCfgTmr(ent,inst,period,SS_TICKS_SEC,fun)
# 2085 "../..//cm/ssi.h"
#define SRegTmrMt(ent,inst,period,fun) SRegCfgTmrMt(ent,inst,period,SS_TICKS_SEC,fun)
#define SDeregTmrMt(ent,inst,period,fun) SDeregCfgTmrMt(ent,inst,period,SS_TICKS_SEC,fun)
# 2207 "../..//cm/ssi.h"
#define PID_STK(h) (h)
# 104 "../..//enbapp/src/wr.h" 2
# 1 "../..//cm/cm5.h" 1
# 105 "../..//enbapp/src/wr.h" 2
# 1 "../..//cm/cm_tkns.h" 1
# 91 "../..//cm/cm_tkns.h"
#define __CMTKNSH 
# 115 "../..//cm/cm_tkns.h"
#define cmPkTknPres(x,mBuf) cmPkTknU8(x, mBuf)

#define cmUnpkTknPres(x,mBuf) cmUnpkTknU8(x, mBuf)




#define CMPKTKNBSTR(tknStr,mBuf) { Cntr i; Cntr len; if(tknStr->pres) { if (tknStr->len % 8) len = (tknStr->len/8 ) + 1; else len = (tknStr->len/8 ); for (i = 0; i < (S16) len; i++) { CMCHKPK(SPkU8, tknStr->val[i], mBuf); } CMCHKPK(SPkU8, tknStr->len, mBuf); } CMCHKPK(SPkU8, tknStr->pres, mBuf); }
# 148 "../..//cm/cm_tkns.h"
#define CMUNPKTKNBSTR(tknStr,mBuf) { Cntr i; Cntr len; CMCHKUNPK(SUnpkU8, &tknStr->pres, mBuf); if(tknStr->pres) { CMCHKUNPK(SUnpkU8, &tknStr->len, mBuf); if (tknStr->len % 8) len = (tknStr->len/8 ) + 1; else len = (tknStr->len/8 ); for (i = 1; i <= (S16) len; i++) { CMCHKUNPK(SUnpkU8, &tknStr->val[len - i], mBuf); } } }
# 106 "../..//enbapp/src/wr.h" 2
# 1 "../..//cm/cm_mblk.h" 1
# 90 "../..//cm/cm_mblk.h"
#define __CMMBLKH__ 


#define CM_ALIGNBOUNDARY_FOUR 4
#define CM_ALIGNBOUNDARY_EIGHT 8



#define CM_INIT_MEMCP(_memCp,_maxSize,_sMem) { _memCp->first = NULLP; _memCp->last = NULLP; _memCp->count = 0; _memCp->memCb.maxSize = _maxSize; _memCp->memCb.memAllocated = 0; _memCp->memCb.initPtr = NULLP; _memCp->memCb.runPtr = NULLP; _memCp->memCb.sMem.region = _sMem->region; _memCp->memCb.sMem.pool = _sMem->pool; }
# 111 "../..//cm/cm_mblk.h"
#define CM_INIT_MEMCPVAR(_memCp) { _memCp->first = NULLP; _memCp->last = NULLP; _memCp->count = 0; _memCp->memCb.memAllocated = 0; _memCp->memCb.initPtr = NULLP; _memCp->memCb.runPtr = NULLP; }
# 129 "../..//cm/cm_mblk.h"
#define CM_ALIGN_SIZE(_size) { if( (_size % CM_ALIGNBOUNDARY_FOUR) ) _size = _size + ( CM_ALIGNBOUNDARY_FOUR - (_size % CM_ALIGNBOUNDARY_FOUR)); }







#define CMCHKUNPKPTR(func,val,ptr,mBuf) { S16 ret; if ((ret = func(val, ptr, mBuf)) != ROK) RETVALUE(ret); }






#define CMGETMBLK(ptr,size,pptr) { S16 ret; ret = cmGetMem( ptr, size, pptr); if (ret != ROK) { RETVALUE(RFAILED); } }
# 107 "../..//enbapp/src/wr.h" 2
# 1 "../..//cm/cm_llist.h" 1
# 90 "../..//cm/cm_llist.h"
#define __CMLLISTH__ 



#define cmLListFirst(l) ((l)->crnt = (l)->first)
#define cmLListLast(l) ((l)->crnt = (l)->last)
#define cmLListCrnt(l) ((l)->crnt)
#define cmLListNext(l) ((l)->crnt = ((l)->crnt ? (l)->crnt->next : (l)->first))

#define cmLListPrev(l) ((l)->crnt = ((l)->crnt ? (l)->crnt->prev : (l)->first))

#define cmLListLen(l) ((l)->count)
#define cmLListNode(n) ((n)->node)

#define CM_LLIST_FIRST_NODE(l,n) ((((n) = cmLListFirst(l)) != NULLP) ? (n)->node : NULLP)
#define CM_LLIST_NEXT_NODE(l,n) ((((n) = cmLListNext(l))!= NULLP) ? (n)->node : NULLP)
#define CM_LLIST_PREV_NODE(l,n) ((((n) = cmLListPrev(l)) != NULLP) ? (n)->node : NULLP)
# 108 "../..//enbapp/src/wr.h" 2
# 1 "../..//cm/cm_hash.h" 1
# 91 "../..//cm/cm_hash.h"
#define __CMHASHH__ 






#define CM_HASH_KEYTYPE_DEF 0

#define CM_HASH_KEYTYPE_MULT24 1


#define CM_HASH_KEYTYPE_DIRIDX 2

#define CM_HASH_KEYTYPE_STR 3

#define CM_HASH_KEYTYPE_U32MOD 4


#define CM_HASH_KEYTYPE_CONID 5


#define CM_HASH_KEYTYPE_BCD8 6



#define CM_HASH_KEYTYPE_ANY 7





#define CM_STR_HASHFUNC_CONSTANT 31



#define CM_HASHKEYLEN_U32 sizeof(U32)
#define CM_HASHKEYLEN_U16 sizeof(U16)
#define CM_HASHKEYLEN_U8 sizeof(U8)



#define CM_HASH_QUERYTYPE_BINS 1
#define CM_HASH_QUERYTYPE_BINSIZE 2
#define CM_HASH_QUERYTYPE_ENTRIES 3
#define CM_HASH_QUERYTYPE_OFFSET 4
#define CM_HASH_QUERYTYPE_DUPFLG 5
#define CM_HASH_QUERYTYPE_KEYTYPE 6

#define CM_HASH_VALUE(entry) (entry)->hashVal
#define CM_HASH_SIZE(tbl) (tbl)->nmbBins


#define CM_HASH_NMBENT(tbl) (tbl)->nmbEnt




#define CM_HASH_DUPFLG(tbl) (tbl)->dupFlg

#define CM_HASH_OFFSET(tbl) (tbl)->offset




#define CM_HASH_KEYTYPE(tbl) (tbl)->keyType



#define CM_HASH_BINSIZE sizeof(CmListEnt)



#define CM_HASH_NOBITMASK 0x8000


#define CM_HASH_MULT24_CONST 10368890


#define CM_HASH_MULT24_BITPOS 24




#define cmHashListOADelete(hashListCp,entry) cmHashListDelete(hashListCp, (PTR)entry)
# 197 "../..//cm/cm_hash.h"
#define CM_HASH_MIX(a,b,c) { a -= b; a -= c; a ^= (c>>13); b -= c; b -= a; b ^= (a<<8); c -= a; c -= b; c ^= (b>>13); a -= b; a -= c; a ^= (c>>12); b -= c; b -= a; b ^= (a<<16); c -= a; c -= b; c ^= (b>>5); a -= b; a -= c; a ^= (c>>3); b -= c; b -= a; b ^= (a<<10); c -= a; c -= b; c ^= (b>>15); }
# 109 "../..//enbapp/src/wr.h" 2
# 1 "../..//cm/cm_lte.h" 1
# 91 "../..//cm/cm_lte.h"
#define __CM_LTE_H__ 
# 101 "../..//cm/cm_lte.h"
#define CM_LTE_MAX_LOGCH_PER_RB 2


#define CM_LTE_MODE_TM 1
#define CM_LTE_MODE_UM 2
#define CM_LTE_MODE_AM 3


#define CM_LTE_LCH_BCCH 1
#define CM_LTE_LCH_PCCH 2
#define CM_LTE_LCH_CCCH 3
#define CM_LTE_LCH_DTCH 4
#define CM_LTE_LCH_DCCH 5


#define CM_LTE_TRCH_BCH 1
#define CM_LTE_TRCH_PCH 2
#define CM_LTE_TRCH_DL_SCH 3
#define CM_LTE_TRCH_RACH 4
#define CM_LTE_TRCH_UL_SCH 5

#define CM_LTE_DIR_UL 1
#define CM_LTE_DIR_DL 2

#define CM_LTE_SRB 0
#define CM_LTE_DRB 1
# 110 "../..//enbapp/src/wr.h" 2
# 1 "../..//cm/cm_inet.h" 1
# 100 "../..//cm/cm_inet.h"
#define __CMINETH__ 

#define CM_INET_IPV4ADDR_SIZE 4
#define CM_INET_IPV6ADDR_SIZE 16

#define CM_INET_IPV4PORT_SIZE 2
#define CM_INET_IPV6PORT_SIZE 2


#define CM_INET_IPV4ADDR_TYPE CM_IPV4ADDR_TYPE
#define CM_INET_IPV6ADDR_TYPE CM_IPV6ADDR_TYPE
# 121 "../..//cm/cm_inet.h"
#define CM_INET_INV_SOCKFD -1


#define CM_INET_IPV4_NUM_ADDR 16
#define CM_INET_IPV6_NUM_ADDR 4
# 178 "../..//cm/cm_inet.h"
#define CM_INET_STREAM SOCK_STREAM
#define CM_INET_DGRAM SOCK_DGRAM






#define CM_INET_AI_PASSIVE AI_PASSIVE


#define CM_INET_RAW SOCK_RAW



#define CM_INET_OPT_BLOCK 0
#define CM_INET_OPT_REUSEADDR 1
#define CM_INET_OPT_RX_BUF_SIZE 2
#define CM_INET_OPT_TX_BUF_SIZE 3
#define CM_INET_OPT_ADD_MCAST_MBR 4
#define CM_INET_OPT_DRP_MCAST_MBR 5
#define CM_INET_OPT_TCP_NODELAY 6


#define CM_INET_OPT_BSD_COMPAT 7


#define CM_INET_OPT_MCAST_LOOP 8
#define CM_INET_OPT_MCAST_IF 9
#define CM_INET_OPT_MCAST_TTL 14


#define CM_INET_OPT_HDR_INCLD 10
#define CM_INET_OPT_DONTFRAGMENT 11
#define CM_INET_OPT_TOS 12
#define CM_INET_OPT_TTL 13
# 246 "../..//cm/cm_inet.h"
#define CM_INET_OPT_BROADCAST 23
#define CM_INET_OPT_KEEPALIVE 24
# 276 "../..//cm/cm_inet.h"
#define CM_INET_OPT_DISABLE 0
#define CM_INET_OPT_ENABLE 1







#define CM_INET_LEVEL_SOCKET SOL_SOCKET
#define CM_INET_LEVEL_IP IPPROTO_IP
#define CM_INET_LEVEL_TCP IPPROTO_TCP
#define CM_INET_LEVEL_SCTP IPPROTO_SCTP
# 302 "../..//cm/cm_inet.h"
#define CM_INET_SHTDWN_RECV 0
#define CM_INET_SHTDWN_SEND 1
#define CM_INET_SHTDWN_BOTH 2



#define CM_INET_NO_FLAG 0
#define CM_INET_MSG_PEEK MSG_PEEK





#define CM_INET_MAX_DBUF 15






#define CM_INET_MAX_MSG_LEN 0x7fff




#define CM_INET_MAX_UDPRAW_MSGSIZE 2048


#define CM_INET_IPV6_ANCIL_DATA 512
#define CM_INET_IPV4_ANCIL_DATA 128

#define CM_INET_READ_ANY -1
# 344 "../..//cm/cm_inet.h"
#define RNETFAILED 27

#define CM_INET_INADDR_ANY INADDR_ANY




#define CM_INET_PROTO_IP IPPROTO_IP
#define CM_INET_PROTO_ICMP IPPROTO_ICMP
#define CM_INET_PROTO_TCP IPPROTO_TCP
#define CM_INET_PROTO_UDP IPPROTO_UDP
#define CM_INET_PROTO_RAW IPPROTO_RAW
#define CM_INET_PROTO_SCTP 132




#define CM_INET_PROTO_RSVP 46
# 374 "../..//cm/cm_inet.h"
#define CM_INET_FD_SET(_sockFd,_fdSet) FD_SET((_sockFd)->fd, _fdSet)
#define CM_INET_FD_CLR(_sockFd,_fdSet) FD_CLR((_sockFd)->fd, _fdSet)
#define CM_INET_FD_ISSET(_sockFd,_fdSet) FD_ISSET((_sockFd)->fd, _fdSet)
#define CM_INET_FD_ZERO(_fdSet) FD_ZERO(_fdSet)


#define CM_INET_NTOH_U32(_long) ntohl(_long)
#define CM_INET_HTON_U32(_long) htonl(_long)
#define CM_INET_NTOH_U16(_word) ntohs(_word)
#define CM_INET_HTON_U16(_word) htons(_word)


#define CM_INET_PEEK_U8(_sockFd,_fromAddr,_info,_pos,_octet,_ret) _ret = cmInetPeek(_sockFd, _fromAddr, _info, _pos, sizeof(U8), &_octet)






#define CM_INET_PEEK_U16(_sockFd,_fromAddr,_info,_pos,_word,_ret) { U8 _tempWord[2]; _ret = cmInetPeek(_sockFd, _fromAddr, _info, _pos, sizeof(U16), _tempWord); if (_ret == ROK) { _word = ((_tempWord[0] << 8) + (_tempWord[1])); } }
# 408 "../..//cm/cm_inet.h"
#define CM_INET_PEEK_U32(_sockFd,_fromAddr,_info,_pos,_long,_ret) { U8 _tempLong[4]; _ret = cmInetPeek(_sockFd, _fromAddr, _info, _pos, sizeof(U32), _tempLong); if (_ret == ROK) { _long = ((_tempLong[0] << 24) + (_tempLong[1] << 16) + (_tempLong[2] << 8) + _tempLong[3]); } }
# 424 "../..//cm/cm_inet.h"
#define CM_INET_INV_SOCK_FD(_sockFd) ((_sockFd)->fd < 0)



#define CM_INET_SOCK_SAME(_s1,_s2,_ret) { _ret = FALSE; if ((_s1->fd == _s2->fd) && (_s1->blocking == _s2->blocking) && (_s1->type == _s2->type)) { _ret = TRUE; } }
# 443 "../..//cm/cm_inet.h"
#define CM_INET_SET_INV_SOCK_FD(_sockFd) ((_sockFd)->fd = -1)
# 540 "../..//cm/cm_inet.h"
#define cmPkCmInetIpAddr(x,mBuf) SPkU32(x, mBuf)
#define cmUnpkCmInetIpAddr(x,mBuf) SUnpkU32(x, mBuf)
# 557 "../..//cm/cm_inet.h"
#define CM_INET_FDSETINFO_RESET(_fdSetInfo) { _fdSetInfo->arIdx = 0; }






#define CM_INET_ATOH(_intVal,_asciiVal) { if ((_asciiVal >='a') && (_asciiVal <='f')) { _intVal = (16 * _intVal) + (_asciiVal - 'a' +10 ); } else if ((_asciiVal >='A') && (_asciiVal <= 'F')) { _intVal = (16 * _intVal) + (_asciiVal - 'A' +10 ); } else { _intVal = (16 * _intVal) + (_asciiVal - '0'); } }
# 581 "../..//cm/cm_inet.h"
#define CM_INET_ATOI(_intVal,_asciiVal) { _intVal = (10 * _intVal) + (_asciiVal - '0'); }





#define CM_INET_GET_IPV4_ADDR_FRM_STRING(_value,_str) { U16 _hiWord; U16 _loWord; _hiWord = 0; _loWord = 0; _hiWord = PutHiByte(_hiWord, (_str[0])); _hiWord = PutLoByte(_hiWord, (_str[1])); _loWord = PutHiByte(_loWord, (_str[2])); _loWord = PutLoByte(_loWord, (_str[3])); _value = PutLoWord(_value, _loWord); _value = PutHiWord(_value, _hiWord); }
# 603 "../..//cm/cm_inet.h"
#define CMINETLOGERROR(errCls,errCode,errVal,errDesc) SLogError(ENTNC, INSTNC, 0, __FILE__, __LINE__, errCls, errCode, errVal, errDesc )



#define ECMINET 0
#define ECMINET001 (ECMINET + 1)
#define ECMINET002 (ECMINET + 2)
#define ECMINET003 (ECMINET + 3)
#define ECMINET004 (ECMINET + 4)
#define ECMINET005 (ECMINET + 5)
#define ECMINET006 (ECMINET + 6)
#define ECMINET007 (ECMINET + 7)
#define ECMINET008 (ECMINET + 8)
#define ECMINET009 (ECMINET + 9)
#define ECMINET010 (ECMINET + 10)
#define ECMINET011 (ECMINET + 11)
#define ECMINET012 (ECMINET + 12)
#define ECMINET013 (ECMINET + 13)
#define ECMINET014 (ECMINET + 14)
#define ECMINET015 (ECMINET + 15)
#define ECMINET016 (ECMINET + 16)
#define ECMINET017 (ECMINET + 17)
#define ECMINET018 (ECMINET + 18)
#define ECMINET019 (ECMINET + 19)
#define ECMINET020 (ECMINET + 20)
#define ECMINET021 (ECMINET + 21)
#define ECMINET022 (ECMINET + 22)
#define ECMINET023 (ECMINET + 23)
#define ECMINET024 (ECMINET + 24)
#define ECMINET025 (ECMINET + 25)
#define ECMINET026 (ECMINET + 26)
#define ECMINET027 (ECMINET + 27)
#define ECMINET028 (ECMINET + 28)
#define ECMINET029 (ECMINET + 29)
#define ECMINET030 (ECMINET + 30)
#define ECMINET031 (ECMINET + 31)
#define ECMINET032 (ECMINET + 32)
#define ECMINET033 (ECMINET + 33)
#define ECMINET034 (ECMINET + 34)
#define ECMINET035 (ECMINET + 35)
#define ECMINET036 (ECMINET + 36)
#define ECMINET037 (ECMINET + 37)
#define ECMINET038 (ECMINET + 38)
#define ECMINET039 (ECMINET + 39)
#define ECMINET040 (ECMINET + 40)
#define ECMINET041 (ECMINET + 41)
#define ECMINET042 (ECMINET + 42)
#define ECMINET043 (ECMINET + 43)
#define ECMINET044 (ECMINET + 44)
#define ECMINET045 (ECMINET + 45)
#define ECMINET046 (ECMINET + 46)
#define ECMINET047 (ECMINET + 47)
#define ECMINET048 (ECMINET + 48)
#define ECMINET049 (ECMINET + 49)
#define ECMINET050 (ECMINET + 50)
#define ECMINET051 (ECMINET + 51)
#define ECMINET052 (ECMINET + 52)
#define ECMINET053 (ECMINET + 53)
#define ECMINET054 (ECMINET + 54)
#define ECMINET055 (ECMINET + 55)
#define ECMINET056 (ECMINET + 56)
#define ECMINET057 (ECMINET + 57)
#define ECMINET058 (ECMINET + 58)
#define ECMINET059 (ECMINET + 59)
#define ECMINET060 (ECMINET + 60)
#define ECMINET061 (ECMINET + 61)
#define ECMINET062 (ECMINET + 62)
#define ECMINET063 (ECMINET + 63)
#define ECMINET064 (ECMINET + 64)
#define ECMINET065 (ECMINET + 65)
#define ECMINET066 (ECMINET + 66)
#define ECMINET067 (ECMINET + 67)
#define ECMINET068 (ECMINET + 68)
#define ECMINET069 (ECMINET + 69)

#define ECMINET070 (ECMINET + 70)

#define ECMINET071 (ECMINET + 71)
#define ECMINETXXX ECMINET
# 111 "../..//enbapp/src/wr.h" 2
# 1 "../..//cm/cm_tpt.h" 1
# 90 "../..//cm/cm_tpt.h"
#define __CMTPTH__ 

# 1 "../..//cm/cm_inet.h" 1
# 93 "../..//cm/cm_tpt.h" 2





#define CM_MAX_NET_ADDR 16



#define CM_IPV4ADDR_SIZE CM_INET_IPV4ADDR_SIZE
#define CM_IPV6ADDR_SIZE CM_INET_IPV6ADDR_SIZE


#define CM_IPV4PORT_SIZE CM_INET_IPV4PORT_SIZE
#define CM_IPV6PORT_SIZE CM_INET_IPV4PORT_SIZE


#define CM_NETADDR_NOTPRSNT 0
#define CM_NETADDR_IPV4 CM_INET_IPV4ADDR_TYPE
#define CM_NETADDR_IPV6 CM_INET_IPV6ADDR_TYPE


#define CM_TPTADDR_NOTPRSNT 0
#define CM_TPTADDR_IPV4 CM_INET_IPV4ADDR_TYPE
#define CM_TPTADDR_IPV6 CM_INET_IPV6ADDR_TYPE
#define CM_TPTADDR_AAL 3

#define CM_MAX_SOCK_OPTS 8


#define CM_TPTPARAM_NOTPRSNT 0
#define CM_TPTPARAM_SOCK 1
#define CM_TPTPARAM_AAL 2
#define CM_TPTPARAM_TLS 3





#define CM_INPORT_ANY 0




#define CM_SOCKOPT_LEVEL_SOCKET CM_INET_LEVEL_SOCKET
#define CM_SOCKOPT_LEVEL_IP CM_INET_LEVEL_IP
#define CM_SOCKOPT_LEVEL_TCP CM_INET_LEVEL_TCP
# 152 "../..//cm/cm_tpt.h"
#define CM_SOCKOPT_OPT_BLOCK CM_INET_OPT_BLOCK
#define CM_SOCKOPT_OPT_REUSEADDR CM_INET_OPT_REUSEADDR
#define CM_SOCKOPT_OPT_RX_BUF_SIZE CM_INET_OPT_RX_BUF_SIZE
#define CM_SOCKOPT_OPT_TX_BUF_SIZE CM_INET_OPT_TX_BUF_SIZE
#define CM_SOCKOPT_OPT_ADD_MCAST_MBR CM_INET_OPT_ADD_MCAST_MBR
#define CM_SOCKOPT_OPT_DRP_MCAST_MBR CM_INET_OPT_DRP_MCAST_MBR
#define CM_SOCKOPT_OPT_TCP_NODELAY CM_INET_OPT_TCP_NODELAY
#define CM_SOCKOPT_OPT_MCAST_LOOP CM_INET_OPT_MCAST_LOOP
#define CM_SOCKOPT_OPT_MCAST_IF CM_INET_OPT_MCAST_IF
#define CM_SOCKOPT_OPT_MCAST_TTL CM_INET_OPT_MCAST_TTL
#define CM_SOCKOPT_OPT_BROADCAST CM_INET_OPT_BROADCAST

#define CM_SOCKOPT_OPT_KEEPALIVE CM_INET_OPT_KEEPALIVE

#define CM_SOCKOPT_OPT_HDRINCLD CM_INET_OPT_HDR_INCLD
#define CM_SOCKOPT_OPT_DONTFRAGMENT CM_INET_OPT_DONTFRAGMENT
#define CM_SOCKOPT_OPT_TOS CM_INET_OPT_TOS
#define CM_SOCKOPT_OPT_TTL CM_INET_OPT_TTL
# 218 "../..//cm/cm_tpt.h"
#define CM_DF_MASK 0x4000
#define CM_MF_MASK 0x2000


#define CM_PROTOCOL_IP CM_INET_PROTO_IP
#define CM_PROTOCOL_ICMP CM_INET_PROTO_ICMP
#define CM_PROTOCOL_TCP CM_INET_PROTO_TCP
#define CM_PROTOCOL_UDP CM_INET_PROTO_UDP
#define CM_PROTOCOL_RAW CM_INET_PROTO_RAW
#define CM_PROTOCOL_SCTP CM_INET_PROTO_SCTP





#define CM_PROTOCOL_RSVP CM_INET_PROTO_RSVP
# 245 "../..//cm/cm_tpt.h"
#define CM_IPTOS_MIN_DELAY 0x10
#define CM_IPTOS_MAX_TPUT 0x08
#define CM_IPTOS_MAX_REL 0x04


#define CM_MAX_ICMP_ERROR 5
# 262 "../..//cm/cm_tpt.h"
#define CM_ICMP_ET_DEST_UNREACHBLE 3
#define CM_ICMP_ET_SRC_QUENCH 4
#define CM_ICMP_ET_REDRCT 5
#define CM_ICMP_ET_TIM_EXCEED 11
#define CM_ICMP_ET_PARAM_PROB 12
# 277 "../..//cm/cm_tpt.h"
#define CM_ICMP_EC_NWK_UNREACH 0
#define CM_ICMP_EC_HST_UNREACH 1
#define CM_ICMP_EC_PROTO_UNREACH 2
#define CM_ICMP_EC_PORT_UNREACH 3
#define CM_ICMP_EC_FRAG_REQ_DFSET 4
#define CM_ICMP_EC_SRC_RUT_FAIL 5


#define CM_ICMP_EC_SRC_QUENCH 4


#define CM_ICMP_EC_RDRCT_NWK 0
#define CM_ICMP_EC_RDRCT_HST 1
#define CM_ICMP_EC_RDRCT_TOSNWK 2
#define CM_ICMP_EC_RDRCT_TOSHST 3


#define CM_ICMP_EC_TTL_TRNST 0
#define CM_ICMP_EC_TTL_REASM 1
# 318 "../..//cm/cm_tpt.h"
#define CM_ICMP_NO_FILTER 0
#define CM_ICMPVER4_FILTER CM_INET_IPV4ADDR_TYPE
#define CM_ICMPVER6_FILTER CM_INET_IPV6ADDR_TYPE


#define CM_ALL_CODES_MASK 0xFFFFFFFF


#define CM_HDRPARM_NOTPRSNT 0
#define CM_HDRPARM_IPV4 CM_INET_IPV4ADDR_TYPE
#define CM_HDRPARM_IPV6 CM_INET_IPV6ADDR_TYPE

#define CM_HDRPARM_ICMP6 1

#define CM_IPV4_HDRLEN 20
#define CM_IPV6_HDRLEN 40

#define CM_IPV4_OPTS_MAXLEN 44


#define CM_INADDR_ANY CM_INET_INADDR_ANY

#define CM_SOCKOPT_ENABLE CM_INET_OPT_ENABLE
#define CM_SOCKOPT_DISABLE CM_INET_OPT_DISABLE



#define cmPkCmIpv4NetAddr(x,mBuf) SPkU32(x, mBuf)


#define cmUnpkCmIpv4NetAddr(x,mBuf) SUnpkU32(x, mBuf)
# 112 "../..//enbapp/src/wr.h" 2
# 1 "../..//cm/szt_asn.h" 1
# 607 "../..//cm/szt_asn.h"
#define __SZTASNH__ 

#define SZUCHKUNPKPTR(func,val,ptr,mBuf) { S16 ret; if ((ret = func(val, mBuf, ptr)) != ROK) RETVALUE(ret);}




#define Sztid_Invalid 0xffffffff

#define PRIVIE_ID_LOCAL 0
#define PRIVIE_ID_GLOBAL 1
#define Sztid_HovrPrep 0
#define Sztid_HovrResourceAllocn 1
#define Sztid_HovrNotification 2
#define Sztid_PathSwRqst 3
#define Sztid_HovrCancel 4
#define Sztid_E_RABSetup 5
#define Sztid_E_RABMdfy 6
#define Sztid_E_RABRls 7
#define Sztid_E_RABRlsInd 8
#define Sztid_InitCntxtSetup 9
#define Sztid_Pag 10
#define Sztid_downlinkNASTport 11
#define Sztid_initialUEMsg 12
#define Sztid_uplinkNASTport 13
#define Sztid_Reset 14
#define Sztid_ErrInd 15
#define Sztid_NASNonDlvryInd 16
#define Sztid_S1Setup 17
#define Sztid_UECntxtRlsRqst 18
#define Sztid_DlnkS1cdma2000tunneling 19
#define Sztid_UlnkS1cdma2000tunneling 20
#define Sztid_UECntxtModification 21
#define Sztid_UECapbltyInfoInd 22
#define Sztid_UECntxtRls 23
#define Sztid_eNBStatusTfr 24
#define Sztid_MMEStatusTfr 25
#define Sztid_DeactvTrace 26
#define Sztid_TraceStart 27
#define Sztid_TraceFailInd 28
#define Sztid_ENBConfigUpd 29
#define Sztid_MMEConfigUpd 30
#define Sztid_LocRprtngCntrl 31
#define Sztid_LocRprtngFailInd 32
#define Sztid_LocReport 33
#define Sztid_OverloadStart 34
#define Sztid_OverloadStop 35
#define Sztid_WriteReplaceWarning 36
#define Sztid_eNBDirectInformTfr 37
#define Sztid_MMEDirectInformTfr 38
#define Sztid_PrivMsg 39
#define Sztid_eNBConfigTfr 40
#define Sztid_MMEConfigTfr 41
#define Sztid_CellTrafficTrace 42
#define Sztid_Kill 43
#define Sztid_downlinkUEAssociatedLPPaTport 44
#define Sztid_uplinkUEAssociatedLPPaTport 45
#define Sztid_downlinkNonUEAssociatedLPPaTport 46
#define Sztid_uplinkNonUEAssociatedLPPaTport 47
#define SztmaxPrivIEs 65535
#define SztmaxProtExtns 65535
#define SztmaxProtIEs 65535
#define SztmaxNrOfCSGs 256
#define SztmaxNrOfE_RABs 256
#define SztmaxnoofTAIs 256
#define SztmaxnoofTACs 256
#define SztmaxNrOfErrs 256
#define SztmaxnoofBPLMNs 6
#define SztmaxnoofPLMNsPerMME 32
#define SztmaxnoofEPLMNs 15
#define SztmaxnoofEPLMNsPlusOne 16
#define SztmaxnoofForbLACs 4096
#define SztmaxnoofForbTACs 4096
#define SztmaxNrOfIvdualS1ConsToReset 256
#define SztmaxnoofCells 16
#define SztmaxnoofTAIforWarning 65535
#define SztmaxnoofCellID 65535
#define SztmaxnoofEmergencyAreaID 65535
#define SztmaxnoofCellinTAI 65535
#define SztmaxnoofCellinEAI 65535
#define SztmaxnoofeNBX2TLAs 2
#define SztmaxnoofRATs 8
#define SztmaxnoofGroupIDs 65535
#define SztmaxnoofMMECs 256
#define Sztid_MME_UE_S1AP_ID 0
#define Sztid_HovrTyp 1
#define Sztid_Cause 2
#define Sztid_SrcID 3
#define Sztid_TgetID 4
#define Sztid_eNB_UE_S1AP_ID 8
#define Sztid_E_RABSubjtoDataFwdingLst 12
#define Sztid_E_RABtoRlsLstHOCmd 13
#define Sztid_E_RABDataFwdingItem 14
#define Sztid_E_RABRlsItemBrRelComp 15
#define Sztid_E_RABToBeSetupLstBrSUReq 16
#define Sztid_E_RABToBeSetupItemBrSUReq 17
#define Sztid_E_RABAdmtdLst 18
#define Sztid_E_RABFailedToSetupLstHOReqAck 19
#define Sztid_E_RABAdmtdItem 20
#define Sztid_E_RABFailedtoSetupItemHOReqAck 21
#define Sztid_E_RABToBeSwedDLLst 22
#define Sztid_E_RABToBeSwedDLItem 23
#define Sztid_E_RABToBeSetupLstCtxtSUReq 24
#define Sztid_TraceActvn 25
#define Sztid_NAS_PDU 26
#define Sztid_E_RABToBeSetupItemHOReq 27
#define Sztid_E_RABSetupLstBrSURes 28
#define Sztid_E_RABFailedToSetupLstBrSURes 29
#define Sztid_E_RABToBeMdfdLstBrModReq 30
#define Sztid_E_RABMdfyLstBrModRes 31
#define Sztid_E_RABFailedToMdfyLst 32
#define Sztid_E_RABToBeRlsdLst 33
#define Sztid_E_RABFailedToRlsLst 34
#define Sztid_E_RABItem 35
#define Sztid_E_RABToBeMdfdItemBrModReq 36
#define Sztid_E_RABMdfyItemBrModRes 37
#define Sztid_E_RABRlsItem 38
#define Sztid_E_RABSetupItemBrSURes 39
#define Sztid_SecurCntxt 40
#define Sztid_HovrRestrnLst 41
#define Sztid_UEPagID 43
#define Sztid_pagingDRX 44
#define Sztid_TAILst 46
#define Sztid_TAIItem 47
#define Sztid_E_RABFailedToSetupLstCtxtSURes 48
#define Sztid_E_RABRlsItemHOCmd 49
#define Sztid_E_RABSetupItemCtxtSURes 50
#define Sztid_E_RABSetupLstCtxtSURes 51
#define Sztid_E_RABToBeSetupItemCtxtSUReq 52
#define Sztid_E_RABToBeSetupLstHOReq 53
#define Sztid_GERANtoLTEHOInformRes 55
#define Sztid_UTRANtoLTEHOInformRes 57
#define Sztid_CriticalityDiag 58
#define Sztid_Global_ENB_ID 59
#define Sztid_eNBname 60
#define Sztid_MMEname 61
#define Sztid_SrvdPLMNs 63
#define Sztid_SuppTAs 64
#define Sztid_TimeToWait 65
#define Sztid_uEaggregateMaxBitrate 66
#define Sztid_TAI 67
#define Sztid_E_RABRlsLstBrRelComp 69
#define Sztid_cdma2000PDU 70
#define Sztid_cdma2000RATTyp 71
#define Sztid_cdma2000SectorID 72
#define Sztid_SecurKey 73
#define Sztid_UERadioCapblty 74
#define Sztid_GUMMEI_ID 75
#define Sztid_E_RABInformLstItem 78
#define Sztid_Direct_Fwding_Path_Avlblty 79
#define Sztid_UEIdentityIdxValue 80
#define Sztid_cdma2000HOStatus 83
#define Sztid_cdma2000HOReqdInd 84
#define Sztid_E_UTRAN_Trace_ID 86
#define Sztid_RelativeMMECapacity 87
#define Sztid_SrcMME_UE_S1AP_ID 88
#define Sztid_Brs_SubjToStatusTfr_Item 89
#define Sztid_eNB_StatusTfr_TprntCont 90
#define Sztid_UE_assocLogS1_ConItem 91
#define Sztid_ResetTyp 92
#define Sztid_UE_assocLogS1_ConLstResAck 93
#define Sztid_E_RABToBeSwedULItem 94
#define Sztid_E_RABToBeSwedULLst 95
#define Sztid_S_TMSI 96
#define Sztid_cdma2000OneXRAND 97
#define Sztid_RqstTyp 98
#define Sztid_UE_S1AP_IDs 99
#define Sztid_EUTRAN_CGI 100
#define Sztid_OverloadResp 101
#define Sztid_cdma2000OneXSRVCCInfo 102
#define Sztid_E_RABFailedToBeRlsdLst 103
#define Sztid_Src_ToTget_TprntCont 104
#define Sztid_SrvdGUMMEIs 105
#define Sztid_SubscriberProfileIDforRFP 106
#define Sztid_UESecurCapabilities 107
#define Sztid_CSFallbackIndicator 108
#define Sztid_CNDomain 109
#define Sztid_E_RABRlsdLst 110
#define Sztid_MsgIdentifier 111
#define Sztid_SerialNumber 112
#define Sztid_WarningAreaLst 113
#define Sztid_RepetitionPeriod 114
#define Sztid_NumberofBroadcastRqst 115
#define Sztid_WarningTyp 116
#define Sztid_WarningSecurInfo 117
#define Sztid_DataCodingScheme 118
#define Sztid_WarningMsgContents 119
#define Sztid_BroadcastCompletedAreaLst 120
#define Sztid_Inter_SystemInformTfrTypEDT 121
#define Sztid_Inter_SystemInformTfrTypMDT 122
#define Sztid_Tget_ToSrc_TprntCont 123
#define Sztid_SRVCCOperationPossible 124
#define Sztid_SRVCCHOInd 125
#define Sztid_NAS_DlnkCount 126
#define Sztid_CSG_Id 127
#define Sztid_CSG_IdLst 128
#define Sztid_SONConfigTfrECT 129
#define Sztid_SONConfigTfrMCT 130
#define Sztid_TraceCollectionEntityIPAddr 131
#define Sztid_MSClassmark2 132
#define Sztid_MSClassmark3 133
#define Sztid_RRC_Establishment_Cause 134
#define Sztid_NASSecurParamsfromE_UTRAN 135
#define Sztid_NASSecurParamstoE_UTRAN 136
#define Sztid_DefaultPagDRX 137
#define Sztid_Src_ToTget_TprntCont_Secondary 138
#define Sztid_Tget_ToSrc_TprntCont_Secondary 139
#define Sztid_EUTRANRoundTripDelayEstimationInfo 140
#define Sztid_BroadcastCancelledAreaLst 141
#define Sztid_ConcurrentWarningMsgIndicator 142
#define Sztid_Data_Fwding_Not_Possible 143
#define Sztid_ExtendedRepetitionPeriod 144
#define Sztid_CellAccessMode 145
#define Sztid_CSGMembershipStatus 146
#define Sztid_LPPa_PDU 147
#define Sztid_Routing_ID 148
#define Sztid_Time_Synchronization_Info 149
#define Sztid_PS_ServiceNotAvailable 150

#define Sztid_SrcMME_GUMMEI 157
#define Sztid_MME_UE_S1AP_ID_2 158
#define Sztid_RegisteredLAI 159

#define BROADCASTCANCELLEDAREALST_CELLID_CANCELLED 0
#define BROADCASTCANCELLEDAREALST_TAI_CANCELLED 1
#define BROADCASTCANCELLEDAREALST_EMERGENCYAREAID_CANCELLED 2

#define BROADCASTCOMPLETEDAREALST_CELLID_BROADCAST 0
#define BROADCASTCOMPLETEDAREALST_TAI_BROADCAST 1
#define BROADCASTCOMPLETEDAREALST_EMERGENCYAREAID_BROADCAST 2

#define CAUSE_RADIONW 0
#define CAUSE_TRANSPORT 1
#define CAUSE_NAS 2
#define CAUSE_PROTOCOL 3
#define CAUSE_MISC 4

#define ENB_ID_MACROENB_ID 0
#define ENB_ID_HOMEENB_ID 1

#define LASTVISITEDGERANCELLINFORM_UNDEFINED 0

#define LASTVISITEDCELL_ITEM_E_UTRAN_CELL 0
#define LASTVISITEDCELL_ITEM_UTRAN_CELL 1
#define LASTVISITEDCELL_ITEM_GERAN_CELL 2

#define OVERLOADRESP_OVERLOADACTION 0

#define RIMROUTINGADDR_GERAN_CELL_ID 0
#define RIMROUTINGADDR_TARGETRNC_ID 1

#define SONINFORM_SONINFORMRQST 0
#define SONINFORM_SONINFORMREPLY 1

#define TGETID_TARGETENB_ID 0
#define TGETID_TARGETRNC_ID 1
#define TGETID_CGI 2

#define UE_S1AP_IDS_UE_S1AP_ID_PAIR 0
#define UE_S1AP_IDS_MME_UE_S1AP_ID 1

#define UEPAGID_S_TMSI 0
#define UEPAGID_IMSI 1

#define WARNINGAREALST_CELLIDLST 0
#define WARNINGAREALST_TRACKINGAREALSTFORWARNING 1
#define WARNINGAREALST_EMERGENCYAREAIDLST 2

#define RESETTYP_S1_INTF 0
#define RESETTYP_PARTOFS1_INTF 1

#define INTER_SYSTEMINFORMTFRTYP_RIMTFR 0

#define S1AP_PDU_INITIATINGMSG 0
#define S1AP_PDU_SUCCESSFULOUTCOME 1
#define S1AP_PDU_UNSUCCESSFULOUTCOME 2
# 113 "../..//enbapp/src/wr.h" 2


# 1 "../..//cm/gen.x" 1
# 91 "../..//cm/gen.x"
#define __GENX__ 
# 186 "../..//cm/gen.x"
typedef S8 Txt;

typedef U8 Ent;

typedef U8 Inst;

typedef struct entityId
{
   Ent ent;
   Inst inst;
} EntityId;



typedef S16 Elmnt;

typedef S16 ElmntInst1;

typedef S16 ElmntInst2;

typedef S16 ElmntInst3;

typedef struct elmntId
{
   Elmnt elmnt;
   ElmntInst1 elmntInst1;
   ElmntInst2 elmntInst2;
   ElmntInst3 elmntInst3;
} ElmntId;

typedef U8 Region;

typedef U8 Pool;

typedef U8 Prior;

typedef Prior Priority;

typedef U8 Route;

typedef U8 Data;

typedef U8 Selector;

typedef S16 Reason;

typedef U16 ProcId;

typedef U8 Event;

typedef U32 TranId;

typedef S16 IntNum;

typedef U16 TranNum;

typedef U16 CmIntfId;
typedef U16 CmIntfVer;
# 254 "../..//cm/gen.x"
typedef struct pst
{
   ProcId dstProcId;
   ProcId srcProcId;

   Ent dstEnt;
   Inst dstInst;
   Ent srcEnt;
   Inst srcInst;

   Prior prior;
   Route route;
   Event event;
   Region region;

   Pool pool;
   Selector selector;
   CmIntfVer intfVer;
} Pst;



typedef struct systemId
{
   S16 mVer;
   S16 mRev;
   S16 bVer;
   S16 bRev;
   Txt *ptNmb;
} SystemId;





typedef struct protAddr
{
   U16 protType;
   U8 len;
   U8 preLen;
   U8 address[16];





}ProtAddr;

typedef struct protAddrTbl
{
   U8 count;
   ProtAddr addr[4];
}ProtAddrTbl;



typedef struct addrs
{
   U8 length;
   U8 strg[20];
} Addrs;

typedef struct shrtAddr
{
   U8 length;
   U8 strg[32];
} ShrtAddrs;

typedef struct lngAddr
{
   U8 length;
   U8 strg[64];
} LngAddrs;



typedef struct bndCfg
{
   Txt *usrId;
   U8 bufOwnshp;
   U8 flcTyp;
   U8 wdw;
   Ent ent;
   Inst inst;
   Region region;
   Pool pool;
   Prior prior;
   Route route;
   Addrs sapAdr;
   Selector selector;
} BndCfg;
# 359 "../..//cm/gen.x"
typedef struct tskInit
{



   Ent ent;
   Inst inst;
   Region region;
   Pool pool;
   Reason reason;
   Bool cfgDone;
   Bool acnt;
   Bool usta;
   Bool trc;

   U32 dbgMask;
   Txt prntBuf[255];

   U32 logMask;
   BndCfg lmBnd;
   ProcId procId;
   Pst lmPst;
# 392 "../..//cm/gen.x"
} TskInit;


typedef S32 Cntr;

typedef U32 StsCntr;

typedef S16 LnkNmb;

typedef S8 VBit;

typedef S16 SuId;

typedef S16 SpId;

typedef S16 SuInstId;

typedef S16 SpInstId;

typedef U16 PortId;

typedef U8 Sapi;

typedef U8 Tei;

typedef U8 Ces;

typedef U32 Dlci;

typedef U16 CalRef;

typedef S16 Origin;

typedef U16 NwId;

typedef S16 Swtch;

typedef U8 Cause;

typedef U8 Dgn;

typedef S16 Action;

typedef S16 SeqS16;

typedef U16 SeqU16;

typedef S32 SeqS24;

typedef U32 SeqU24;

typedef U8 SetUpArb;

typedef U8 EvntType;

typedef U8 State;

typedef U8 Mode;

typedef S32 ConnId;

typedef U32 UConnId;

typedef U16 ProtId;

typedef U16 ChannelId;

typedef U8 Arr64U8[64];

typedef U16 Efa;

typedef U32 BitState;

typedef U8 CChanId;

typedef U16 MibOpCode;


typedef U16 MibStatus;

typedef U16 MibTblType;

typedef S32 MibReqId;

typedef U8 UstaType;
typedef S8 ChannelNo;
# 568 "../..//cm/gen.x"
typedef S16 Baud;

typedef S16 PhysIntType;

typedef S16 PathConnType;

typedef S16 Parity;

typedef S16 CharLength;

typedef S16 StopBits;



typedef U32 IpAddr;

typedef U16 Port;

typedef U8 Cmd;

typedef U8 Flags;

typedef U8 Ttl;

typedef U8 Prec;

typedef U32 Window;

typedef U8 MtpStatus;

typedef U8 Credit;



typedef U32 CirId;

typedef U16 Cic;

typedef U32 SiInstId;



typedef U32 BiInstId;



typedef U32 TpInstId;



typedef U32 Oui;
typedef U16 Pid;
typedef U32 LlcId;
# 783 "../..//cm/gen.x"
typedef struct octStrg
{
   S32 length;
   U8 val[132];
} OctStrg;

typedef struct tknHdr
{
   U8 pres;
   U8 spare1;
   U16 spare2;



} TknHdr;

typedef struct elmtHdr
{
   U8 pres;
   U8 actnInd;
   U16 compInd;



} ElmtHdr;



typedef struct tknU8
{
   U8 pres;
   U8 val;
   U16 spare1;



} TknU8;

typedef struct tknS8
{
   U8 pres;
   S8 val;
   U16 spare1;



} TknS8;

typedef struct tknU16
{
   U8 pres;
   U8 spare1;
   U16 val;



} TknU16;

typedef struct tknU32
{
   U8 pres;
   U8 spare1;
   U16 spare2;
   U32 val;
} TknU32;

typedef struct tknS32
{
   U8 pres;
   U8 spare1;
   U16 spare2;
   S32 val;
} TknS32;

typedef struct tknStrS
{
   U8 pres;
   U8 len;
   U16 spare1;




   U8 val[(22 + 3) & 0xffc];

} TknStrS;

typedef struct tknStrM
{
   U8 pres;
   U8 len;
   U16 spare1;




   U8 val[(32 + 3) & 0xffc];

} TknStrM;

typedef struct tknStr
{
   U8 pres;
   U8 len;
   U16 spare1;




   U8 val[(132 + 3) & 0xffc];

} TknStr;

typedef struct tknStrE
{
   U8 pres;
   U8 len;
   U16 spare1;




   U8 val[(255 + 3) & 0xffc];

} TknStrE;

typedef struct tknStrXL
{
   U16 len;
   U8 pres;
   U8 spare1;



   U8 *val;
} TknStrXL;

typedef struct tknStr4
{
   U8 pres;
   U8 len;
   U16 spare1;




   U8 val[4];

} TknStr4;

typedef struct tknStr12
{
   U8 pres;
   U8 len;
   U16 spare1;




   U8 val[12];

} TknStr12;

typedef struct tknStr32
{
   U8 pres;
   U8 len;
   U16 spare1;



   U8 val[32];
} TknStr32;

typedef struct tknStr64
{
   U8 pres;
   U8 len;
   U16 spare1;



   U8 val[64];
} TknStr64;

typedef struct tknStr132
{
   U8 pres;
   U8 len;
   U16 spare1;




   U8 val[132];

} TknStr132;

typedef struct tknStr256
{
   U8 pres;
   U8 len;
   U16 spare1;



   U8 val[256];
} TknStr256;

typedef struct tknOid
{
   U8 pres;
   U8 len;
   U16 spare1;






   U32 val[32];



} TknOid;

typedef struct tknBits
{
   U8 pres;
   U8 len;
   U16 spare1;




   U8 val[(7 + 3) & 0xffc];

} TknBits;

typedef struct elmtStr
{
   ElmtHdr eh;
   TknStr str;
} ElmtStr;

typedef struct cdPtyNmb
{
   ElmtHdr eh;
   TknU8 nmbPlanId;
   TknU8 typeNmb0;



   TknStrS nmbDigits;

} CdPtyNmb;

typedef struct redirNmb
{
   ElmtHdr eh;
   TknU8 nmbPlanId;
   TknU8 typeNmb;
   TknU8 screenInd;
   TknU8 presInd;
   TknU8 rsnRedirect;
   TknStrS nmbDigits;
} RedirNmb;

typedef struct srvClass
{
   U8 type;
   union
   {
      struct
      {
         Bool cr;
         Bool de;
      } fr;
      struct
      {
         Prior prior;
      } ma;
   } s;
} SrvClass;



typedef struct ip
{
   U8 ip_hl;
   Prec ip_tos;
   U16 ip_len;
   U16 ip_id;
   U16 ip_off;
   Ttl ip_ttl;
   U8 ip_p;
   U16 ip_sum;
   IpAddr ip_src;
   IpAddr ip_dst;
} Ip;
# 1585 "../..//cm/gen.x"
typedef struct smCfg
{
   Ent ent;
   Inst inst;
   Region region;
   Pool pool;
   Priority prior;
   Route route;
   Selector selector;
} SmCfg;

typedef struct mem
{
   Region region;
   Pool pool;
   U16 spare;
} Mem;

typedef Mem MemoryId;


typedef struct resp
{
   Selector selector;
   Priority prior;
   Route route;
   MemoryId mem;
}Resp;

typedef struct tds_header
{
   U16 msgLen;
   U8 msgType;
   U8 version;
   U16 seqNmb;
   EntityId entId;
   ElmntId elmId;

   TranId transId;
   Resp response;

} Header;

typedef struct tmrCfg
{
   Bool enb;
   U16 val;
} TmrCfg;

typedef struct asyncCfg
{
   StopBits stopBits;
   CharLength charLength;
   Parity rxParity;
   Parity txParity;
} AsyncCfg;




typedef struct dateTime
{
   U8 month;
   U8 day;
   U8 year;
   U8 hour;
   U8 min;
   U8 sec;
   U8 tenths;




} DateTime;


typedef U64 EpcTime;


typedef struct cmStatus
{
   U16 status;
   U16 reason;
}CmStatus;


typedef struct cmAlarm
{
   DateTime dt;
   U16 category;
   U16 event;
   U16 cause;
}CmAlarm;



typedef struct duration
{
   U8 days;
   U8 hours;
   U8 mins;
   U8 secs;
   U8 tenths;
} Duration;
# 1697 "../..//cm/gen.x"
typedef struct ssmsgb Buffer;
# 1712 "../..//cm/gen.x"
typedef struct tknBuf
{
   U8 pres;
   U8 spare1;
   U16 spare2;



   Buffer *val;
} TknBuf;



typedef U32 CmIpAddr;







extern S16 cmPkDateTime (DateTime *dateTime, Buffer *mBuf);
extern S16 cmPkDuration (Duration *duration, Buffer *mBuf);
extern S16 cmPkPtr (U32 ptr, Buffer *mBuf);
extern S16 cmPkEntityId (EntityId *entityId, Buffer *mBuf);
extern S16 cmPkElmntId (ElmntId *elmntId, Buffer *mBuf);
extern S16 cmPkMemoryId (MemoryId *memoryId, Buffer *mBuf);


extern S16 cmPkSystemId (SystemId *systemId, Buffer *mBuf);
extern S16 cmPkAddrs (Addrs *addrs, Buffer *mBuf);
extern S16 cmPkProtAddr (ProtAddr *protAddr, Buffer *mBuf);
extern S16 cmPkProtAddrTbl (ProtAddrTbl *protAddr, Buffer *mBuf);
extern S16 cmPkShrtAddrs (ShrtAddrs *addrs, Buffer *mBuf);
extern S16 cmPkAddrMask (U8 *mask, Buffer *mBuf);
extern S16 cmPkBndCfg (BndCfg *bndCfg, Buffer *mBuf);
extern S16 cmPkPst (Pst *pst, Buffer *mBuf);
extern S16 cmPkElmtHdr (ElmtHdr *m, Buffer *mBuf);
extern S16 cmPkTknU8 (TknU8 *tknU8, Buffer *mBuf);
extern S16 cmPkTknS8 (TknS8 *tknS8, Buffer *mBuf);
extern S16 cmPkTknU16 (TknU16 *tknU16, Buffer *mBuf);
extern S16 cmPkTknU32 (TknU32 *tknU32, Buffer *mBuf);
extern S16 cmPkTknStr (TknStr *tknStr, Buffer *mBuf);
extern S16 cmPkTknStrM (TknStrM *tknStr, Buffer *mBuf);
extern S16 cmPkTknStrS (TknStrS *tknStr, Buffer *mBuf);
extern S16 cmPkTknStrE (TknStrE *tknStr, Buffer *mBuf);

extern S16 cmPkTknStr4 (TknStr4 *tknStr, Buffer *mBuf);
extern S16 cmPkTknStr12 (TknStr12 *tknStr, Buffer *mBuf);
extern S16 cmPkTknStr32 (TknStr32 *tknStr, Buffer *mBuf);
extern S16 cmPkTknStr64 (TknStr64 *tknStr, Buffer *mBuf);
extern S16 cmPkTknStr132 (TknStr132 *tknStr, Buffer *mBuf);
extern S16 cmPkTknStr256 (TknStr256 *tknStr, Buffer *mBuf);

 S16 cmPkTknS32 (TknS32 *tknS32, Buffer *mBuf);
 S16 cmPkTknOid (TknOid *tknOid, Buffer *mBuf);
 S16 cmPkTknBuf (TknBuf *tknBuf, Buffer *mBuf);






extern S16 cmPkHeader (Header *header, Buffer *mBuf);
extern S16 cmPkSmCfg (SmCfg *smCfg, Buffer *mBuf);
extern S16 cmPkTmrCfg (TmrCfg *tmrCfg, Buffer *mBuf);
extern S16 cmPkCmStatus (CmStatus *status, Buffer *mBuf);
extern S16 cmPkCmAlarm (CmAlarm *alrm, Buffer *mBuf);





extern S16 cmUnpkDateTime (DateTime *dateTime, Buffer *mBuf);
extern S16 cmUnpkDuration (Duration *duration, Buffer *mBuf);
extern S16 cmUnpkPtr (U32 *ptr, Buffer *mBuf);
extern S16 cmUnpkEntityId (EntityId *entityId, Buffer *mBuf);
extern S16 cmUnpkElmntId (ElmntId *elmntId, Buffer *mBuf);
extern S16 cmUnpkMemoryId (MemoryId *memoryId, Buffer *mBuf);


extern S16 cmUnpkSystemId (SystemId *systemId, Buffer *mBuf);
extern S16 cmUnpkAddrs (Addrs *addrs, Buffer *mBuf);
extern S16 cmUnpkProtAddr (ProtAddr *protAddr, Buffer *mBuf);
extern S16 cmUnpkProtAddrTbl (ProtAddrTbl *protAddr, Buffer *mBuf);
extern S16 cmUnpkShrtAddrs (ShrtAddrs *addrs, Buffer *mBuf);
extern S16 cmUnpkAddrMask (U8 *mask, Buffer *mBuf);
extern S16 cmUnpkBndCfg (BndCfg *bndCfg, Buffer *mBuf);
extern S16 cmUnpkPst (Pst *pst, Buffer *mBuf);
extern S16 cmUnpkElmtHdr (ElmtHdr *m, Buffer *mBuf);
extern S16 cmUnpkTknU8 (TknU8 *tknU8, Buffer *mBuf);
extern S16 cmUnpkTknS8 (TknS8 *tknS8, Buffer *mBuf);
extern S16 cmUnpkTknU16 (TknU16 *tknU16, Buffer *mBuf);
extern S16 cmUnpkTknU32 (TknU32 *tknU32, Buffer *mBuf);
extern S16 cmUnpkTknStr (TknStr *tknStr, Buffer *mBuf);
extern S16 cmUnpkTknStrM (TknStrM *tknStr, Buffer *mBuf);
extern S16 cmUnpkTknStrS (TknStrS *tknStr, Buffer *mBuf);
extern S16 cmUnpkTknStrE (TknStrE *tknStr, Buffer *mBuf);

extern S16 cmUnpkTknStr4 (TknStr4 *tknStr, Buffer *mBuf);
extern S16 cmUnpkTknStr12 (TknStr12 *tknStr, Buffer *mBuf);
extern S16 cmUnpkTknStr32 (TknStr32 *tknStr, Buffer *mBuf);
extern S16 cmUnpkTknStr64 (TknStr64 *tknStr, Buffer *mBuf);
extern S16 cmUnpkTknStr132 (TknStr132 *tknStr, Buffer *mBuf);
extern S16 cmUnpkTknStr256 (TknStr256 *tknStr, Buffer *mBuf);

 S16 cmUnpkTknS32 (TknS32 *tknS32, Buffer *mBuf);
 S16 cmUnpkTknOid (TknOid *tknOid, Buffer *mBuf);
 S16 cmUnpkTknBuf (TknBuf *tknBuf, Buffer **mBuf);






extern S16 cmUnpkHeader (Header *header, Buffer *mBuf);
extern S16 cmUnpkSmCfg (SmCfg *smCfg, Buffer *mBuf);
extern S16 cmUnpkTmrCfg (TmrCfg *tmrCfg, Buffer *mBuf);
extern S16 cmUnpkCmStatus (CmStatus *status, Buffer *mBuf);
extern S16 cmUnpkCmAlarm (CmAlarm *alrm, Buffer *mBuf);
# 116 "../..//enbapp/src/wr.h" 2
# 1 "../..//cm/ssi.x" 1
# 92 "../..//cm/ssi.x"
#define __SSIX__ 
# 152 "../..//cm/ssi.x"
typedef S16 Status;

typedef U32 Ticks;




typedef S16 MsgLen;


typedef S16 Order;




typedef U32 Size;
typedef S32 PtrOff;


typedef U32 QLen;

typedef QLen BufQLen;

typedef S16 RegSize;

typedef S16 DPoolSize;

typedef U16 Random;

typedef S16 Seq;

typedef U32 CoreId;


typedef U32 ErrCls;

typedef U32 ErrCode;

typedef U32 ErrVal;

typedef S16 VectNmb;

typedef S16 Ttype;

typedef S8 Sema;
# 813 "../..//cm/ssi.x"
extern S16 msOptInd;
extern S8 *msOptArg;
extern Txt **msArgv;
extern S16 msArgc;




typedef U8 SSTskId;




typedef S32 SSTskPrior;
# 836 "../..//cm/ssi.x"
struct ssmsgb
{
   struct ssmsgb *b_next;
   struct ssmsgb *b_prev;
   struct ssmsgb *b_cont;
   U8 *b_rptr;
   U8 *b_wptr;
   struct ssdatab *b_datap;
};


typedef struct ssQueue
{
   Buffer *head;
   Buffer *tail;
   QLen crntSize;

} Queue;



typedef struct sMemCtl
{
   U8 op;

   union
   {
      struct
      {
         Data *vaddr;
         Data **paddr;
      } vtop;

      struct
      {
         Size size;
         Status *status;
      } chkres;
   } u;

} SMemCtl;
# 894 "../..//cm/ssi.x"
typedef S16 (*SsAlloc) (Void *, Size *, U32, Data **);

typedef S16 (*SsFree) (Void *, Data *, Size);
typedef S16 (*SsCtl) (Void *, Event, SMemCtl *);




typedef struct sRegInfo
{
   Void *regCb;
   U32 flags;




   Data *start;
   Size size;
   SsAlloc alloc;
   SsFree free;
   SsCtl ctl;

} SRegInfo;
# 934 "../..//cm/ssi.x"
# 1 "/u/prd/rtr/mt/ss_dep.x" 1
# 93 "/u/prd/rtr/mt/ss_dep.x"
#define __SSDEPX__ 
# 110 "/u/prd/rtr/mt/ss_dep.x"
# 1 "../..//cm/cm5.x" 1
# 91 "../..//cm/cm5.x"
#define __CM5X__ 
# 100 "../..//cm/cm5.x"
typedef struct cmTimer
{
   S16 tmrEvnt;
   U32 tqExpire;
   U32 cb;
   struct cmTimer *next;
   struct cmTimer *prev;
   U8 ent2bUpd;

   U16 entIdx;
} CmTimer;

typedef struct cmTqCp
{
   U32 nxtEnt;
   U32 tmrLen;
   CmTimer *tmp;
} CmTqCp;

typedef struct cmTqType
{
   CmTimer *first;
   CmTimer *tail;
} CmTqType;

typedef struct cmTmrArg
{
   CmTqCp *tqCp;
   CmTqType *tq;
   CmTimer *timers;
   U32 cb;
   S16 evnt;
   U32 wait;
   U8 tNum;
   U8 max;
} CmTmrArg;




typedef Void (*PFV) (U32, S16);

extern Void cmInitTimers (CmTimer* timers, U8 max);
extern Void cmPlcCbTq (CmTmrArg* arg);
extern Void cmRmvCbTq (CmTmrArg* arg);
extern Void cmPrcTmr (CmTqCp* tqCp, CmTqType* tq, PFV func);
extern Void cmRstCbTq (CmTmrArg* arg);
# 111 "/u/prd/rtr/mt/ss_dep.x" 2
# 1 "/u/prd/rtr/mt/mt_ss.x" 1
# 93 "/u/prd/rtr/mt/mt_ss.x"
#define __MTSSX__ 
# 103 "/u/prd/rtr/mt/mt_ss.x"
typedef S8 SsdTTskEntry;



typedef struct ssdSTskEntry
{
   pthread_t tId;
   Ent ent;
   Inst inst;
   pthread_mutex_t lock;




} SsdSTskEntry;
# 131 "/u/prd/rtr/mt/mt_ss.x"
typedef struct ssdTmrEntry
{
   CmTimer timers[1];

} SsdTmrEntry;



typedef S8 SsdDPoolEntry;



typedef S8 SsdSPoolEntry;



typedef S8 SsdPoolEntry;



typedef S8 SsdRegionEntry;





typedef struct ssdOs
{
   unsigned randSeed;

   Ticks sysTicks;

   pthread_t tmrHdlrTID;
   CmTqCp tmrTqCp;
   CmTqType tmrTq[45];

   sem_t ssStarted;

   FILE *conInFp;
   FILE *conOutFp;
   pthread_t conHdlrTID;



   FILE *fileOutFp;






   Bool sigEvnt;

} SsdOs;


typedef struct mtBktCfg
{
   Size blkSize;
   U32 numBlks;
} MtBktCfg;

typedef struct mtRegCfg
{
   Region regionId;
   U16 numBkts;
   Size heapsize;
   MtBktCfg bkt[5];
} MtRegCfg;

typedef struct mtMemCfg
{
   U8 numRegions;
   MtRegCfg region[1];
} MtMemCfg;
# 112 "/u/prd/rtr/mt/ss_dep.x" 2
# 935 "../..//cm/ssi.x" 2
# 972 "../..//cm/ssi.x"
typedef S16 (*PAIFS16) (Ent ent,Inst inst,Region region,Reason reason );





typedef S16 (*PAIFTMRS16) (Ent ent, Inst inst);
# 994 "../..//cm/ssi.x"
typedef S16 (*PATFS16) (Prior prior,Route route,Ent ent,Inst inst,Buffer *mBuf);



typedef S16 (*ActvTsk) (Pst *pst, Buffer *mBuf);
# 1023 "../..//cm/ssi.x"
extern Void prntMem (Data *strtAdr,S16 len);
extern Void prntMsg (Buffer *mBuf);
extern Void prntMsg1 (Buffer *mBuf,S16 src,S16 dst);
extern S16 tst (void );
extern S16 rdConQ (Data data);

extern S16 SPkS8 (S8 val,Buffer *mBuf);
extern S16 SPkU8 (U8 val,Buffer *mBuf);
extern S16 SPkS16 (S16 val,Buffer *mBuf);
extern S16 SPkU16 (U16 val,Buffer *mBuf);
extern S16 SPkS32 (S32 val,Buffer *mBuf);
extern S16 SPkU32 (U32 val,Buffer *mBuf);


extern S16 SPkF32 (F32 val,Buffer *mBuf);
extern S16 SPkF64 (F64 val,Buffer *mBuf);

extern S16 SUnpkS8 (S8 *val,Buffer *mBuf);
extern S16 SUnpkU8 (U8 *val,Buffer *mBuf);
extern S16 SUnpkS16 (S16 *val,Buffer *mBuf);
extern S16 SUnpkU16 (U16 *val,Buffer *mBuf);
extern S16 SUnpkS32 (S32 *val,Buffer *mBuf);
extern S16 SUnpkU32 (U32 *val,Buffer *mBuf);


extern S16 SUnpkF32 (F32 *val,Buffer *mBuf);
extern S16 SUnpkF64 (F64 *val,Buffer *mBuf);

extern S16 SPrint (Txt *buf);
extern S16 SDisplay (S16 chan,Txt *buf);
extern S16 SPrntMsg (Buffer *mBuf,S16 src,S16 dst);
extern S16 SInitQueue (Queue *q);

extern S16 SQueueFirst (Buffer *buf,Queue *q);
extern S16 SQueueLast (Buffer *buf,Queue *q);
extern S16 SDequeueFirst (Buffer * *bufPtr,Queue *q);
extern S16 SDequeueLast (Buffer * *bufPtr,Queue *q);

extern S16 SFlushQueue (Queue *q);
extern S16 SCatQueue (Queue *q1,Queue *q2,Order order);
extern S16 SFndLenQueue (Queue *q,QLen *lngPtr);
extern S16 SExamQueue (Buffer **bufPtr,Queue *q,QLen idx);
extern S16 SAddQueue (Buffer *buf,Queue *q,QLen idx);
extern S16 SRemQueue (Buffer **bufPtr,Queue *q,QLen idx);

extern S16 SGetDBuf (Region region,Pool pool,Buffer * *bufPtr);
extern S16 SPutDBuf (Region region,Pool pool,Buffer *buf);
# 1084 "../..//cm/ssi.x"
extern S16 SPutMsg (Buffer *mBuf);
extern S16 SGetMsg (Region region, Pool pool, Buffer * *mBufPtr);






extern S16 SGetSBuf (Region region,Pool pool, Data * *bufPtr, Size size);
extern S16 SPutSBuf (Region region, Pool pool, Data *buf, Size size);
# 1105 "../..//cm/ssi.x"
extern S16 SGetSMem (Region region,Size size,Pool *poolPtr);
extern S16 SPutSMem (Region region,Pool pool);
extern S16 SInitMsg (Buffer *mBuf);
extern S16 SAddPreMsg (Data data,Buffer *mBuf);
extern S16 SAddPstMsg (Data data,Buffer *mBuf);

extern S16 SAddPreMsgMultInOrder (Data *src,MsgLen cnt,Buffer *mBuf);
extern S16 SRemPreMsg (Data *dataPtr,Buffer *mBuf);
extern S16 SRemPstMsg (Data *dataPtr,Buffer *mBuf);
extern S16 SAddPreMsgMult (Data *src,MsgLen cnt,Buffer *mBuf);
extern S16 SAddPstMsgMult (Data *src,MsgLen cnt,Buffer *mBuf);
extern S16 SGetPstMsgMult (MsgLen cnt,Buffer *mBuf);
extern S16 SRemPreMsgMult (Data *dst,MsgLen cnt,Buffer *mBuf);
extern S16 SRemPstMsgMult (Data *dst,MsgLen cnt,Buffer *mBuf);
extern S16 SRepMsg (Data data,Buffer *mBuf,MsgLen idx);
extern S16 SExamMsg (Data *dataPtr,Buffer *mBuf,MsgLen idx);

extern S16 SGetDataFrmMsg (Buffer *mBuf, Data *dataPtr, MsgLen idx, MsgLen dataLen);
extern S16 SFndLenMsg (Buffer *mBuf,MsgLen *lngPtr);
extern S16 SCatMsg (Buffer *mBuf1,Buffer *mBuf2,Order order);
extern S16 SSegMsg (Buffer *mBuf1,MsgLen idx,Buffer **mBuf2);
extern S16 SSwapMsg (Buffer *mBuf1, Buffer *mBuf2);
extern S16 SCpyMsgFix (Buffer *srcMbuf,MsgLen srcIdx,MsgLen cnt, Data *dstBuf,MsgLen *cCnt);

extern S16 SCpyFixMsg (Data *srcBuf,Buffer *dstMbuf, MsgLen dstIdx,MsgLen cnt,MsgLen *cCnt);

extern S16 SCompressMsg (Buffer *mBuf);
extern S16 SCpyMsgMsg (Buffer *mBuf, Region region, Pool pool, Buffer **dstBuf);

extern S16 SAddMsgRef (Buffer *mBuf, Region region, Pool pool, Buffer **dstBuf);

extern S16 SChkRes (Region region,Pool pool,Status *status);
extern S16 SSetDateTime (DateTime *dt);
extern S16 SGetDateTime (DateTime *dt);



extern S16 SGetEpcTime (EpcTime *et);

extern S16 SGetTimeStamp ( S8 *ts);
extern S16 SGetSysTime (Ticks *sysTime);
extern S16 SGetRefTime (U32 refTime, U32 *sec, U32 *usec);
extern S16 SRandom (Random *value);
extern S16 SError (Seq seq,Reason reason);
extern Void SLogError (Ent ent, Inst inst, ProcId procId, Txt *file, S32 line, ErrCls errCls, ErrCode errCode, ErrVal errVal, Txt *errDesc);



extern U32 SGetSystemTsk (Void);




extern S16 SRegInit (Ent ent,Inst inst,PAIFS16 initFnct);
extern S16 SRegActvTsk (Ent ent,Inst inst,Ttype ttype,Prior prior, ActvTsk actvTsk);





extern S16 SRegCfgTmr (Ent ent, Inst inst, S16 period, S16 units, PFS16 tmrFnct);






extern S16 SRegCfgTmrMt (Ent ent, Inst inst, S16 period, S16 units, PAIFTMRS16 tmrFnctMt);





extern S16 SDeregCfgTmr (Ent ent, Inst inst, S16 period, S16 units, PFS16 tmrFnct);






extern S16 SDeregCfgTmrMt (Ent ent, Inst inst, S16 period, S16 units, PAIFTMRS16 tmrFnctMt);
# 1206 "../..//cm/ssi.x"
extern S16 SPstTsk (Pst *pst, Buffer *mBuf);
# 1216 "../..//cm/ssi.x"
extern S16 SRegRtrTsk (Route *, Cntr, ActvTsk);
extern S16 SDeregRtrTsk (Route *, Cntr);
# 1243 "../..//cm/ssi.x"
extern S16 SAddDBufPst (Buffer *mBuf, Buffer *dBuf);
extern S16 SAddDBufPre (Buffer *mBuf, Buffer *dBuf);
extern S16 SRemDBufPst (Buffer *mBuf, Buffer **dBuf);
extern S16 SRemDBufPre (Buffer *mBuf, Buffer **dBuf);
extern S16 SGetDataRx (Buffer *dBuf, MsgLen pad, Data **dat, MsgLen *mLen);
extern S16 SGetDataTx (Buffer *dBuf, Data **dat, MsgLen *mLen);
extern S16 SUpdMsg (Buffer *mBuf, Buffer *dBuf, MsgLen mLen);
extern S16 SCacheFlush (U16 cache_type, Data *addr, Size size);
extern S16 SCacheInvalidate (U16 cache_type, Data *addr, Size size);
extern S16 SAlignDBufEven (Buffer *dBuf);
extern S16 SAlignDBuf (Buffer *dBuf, U32 align);
extern S16 SInitNxtDBuf (Buffer *mBuf);
extern S16 SGetNxtDBuf (Buffer *mBuf, Buffer **dBuf);
extern S16 SChkNxtDBuf (Buffer *mBuf);
extern S16 SSetIntPend (U16 id, Bool flag);
extern S16 SChkMsg (Buffer *mBuf);
extern S16 SDeregInitTskTmr (Ent ent,Inst inst);
extern S16 SExitTsk (void );
extern S16 SExitInt (void );
extern S16 SHoldInt (void );
extern S16 SRelInt (void );
extern S16 SEnbInt (void );
extern S16 SDisInt (void );
extern S16 SGetVect (VectNmb vectNmb,PIF *vectFnct);
extern S16 SPutVect (VectNmb vectNmb,PIF vectFnct);






extern S16 SInitSema (Region region, Sema *sema);
extern S16 SRelSema (Region region, Sema sema);
extern S16 SGetSema (Region region, Sema sema);
extern S16 SActvInit (Ent ent,Inst inst,Region region,Reason reason);
extern S16 SActvTsk (Prior prior,Route route,Ent srcEnt, Inst srcInst,Buffer *mBuf);

extern S16 SActvTmr (void );
extern S16 SGetOpt (int argc,char **argv,char *opts);



extern S16 SGetEntInst (Ent *ent, Inst *inst);
extern S16 SSetEntInst (Ent ent, Inst inst);
extern ProcId SFndProcId (void);
extern Void SSetProcId (ProcId pId);


extern S16 SGetDBufSiz (Region region, Pool pool, S16 *size);
extern S16 SGetStrtIdx (Region region, Pool pool, S16 *idx);
extern S16 SGetEndIdx (Region region, Pool pool, S16 *idx);
extern S16 SGetStrtPad (Region region, Pool pool, S16 *pad);
# 1328 "../..//cm/ssi.x"
extern S16 SRegTTsk (Ent ent, Inst inst, Ttype type, Prior prior, PAIFS16 initTsk, ActvTsk actvTsk);






extern S16 SRegCbTsk (Ent ent, Inst inst, ActvTsk actvTsk);


extern S16 SDeregTTsk (Ent ent, Inst inst);
# 1357 "../..//cm/ssi.x"
extern S16 SCreateSTsk (SSTskPrior tskPrior, SSTskId *tskId);
extern S16 SDestroySTsk (SSTskId tskId);



extern S16 SAttachTTsk (Ent ent, Inst inst, SSTskId tskId);
extern S16 SDetachTTsk (Ent ent, Inst inst);







extern S16 SRegRegion (Region region, SRegInfo *regInfo);
extern S16 SDeregRegion (Region region);







extern S16 SAlloc (Region region, Size *size, U32 flags, Data **ptr);
extern S16 SFree (Region region, Data *ptr, Size size);



extern S16 SGetBufRegionPool (Buffer *mBuf, Region *region, Pool *pool);
# 1407 "../..//cm/ssi.x"
extern S16 SThreadYield (void);


extern S16 SInitLock (pthread_mutex_t *lock,U8 type);
extern S16 SLock (pthread_mutex_t *lock);
extern S16 SUnlock (pthread_mutex_t *lock);
extern S16 SDestroyLock (pthread_mutex_t *lock);


extern S16 SInitSemaphore (sem_t *sem, U8 value);
extern S16 SWaitSemaphore (sem_t *sem);
extern S16 SPostSemaphore (sem_t *sem);
extern S16 SDestroySemaphore (sem_t *sem);
# 1494 "../..//cm/ssi.x"
extern S16 smActvInit (Ent ent, Inst inst, Region region, Reason reason);
# 1505 "../..//cm/ssi.x"
extern S16 smInitExt (void);


extern S16 smActvTsk (Pst *pst, Buffer *mBuf);
# 1519 "../..//cm/ssi.x"
#define SS_INITDCHN(chn) (chn)->next = NULLP; (chn)->prev = NULLP
#define SS_INITQUE(qu) SS_INITDCHN(&(qu)->dChn); (qu)->crntSize = 0

#define SS_QLEN(bq) ((bq)->crntSize)
#define SS_MLEN(mb) ((mb)->t.msg.msgLen)
# 1559 "../..//cm/ssi.x"
extern S16 SCpyPartMsg (Buffer *srcBuf, MsgLen idx, MsgLen cnt, Buffer *dstBuf);
extern S16 SRepPartMsg (Buffer *srcBuf, MsgLen idx, MsgLen cnt, Buffer *dstBuf);
extern S16 SMovPartMsg (Buffer *srcBuf, MsgLen idx, Buffer *dstBuf);
extern S16 SPkMsgMult (Data *src, MsgLen cnt, Buffer *mBuf);
# 1596 "../..//cm/ssi.x"
#define MSPD_DBG(...) 
#define MSPD_DBG_RAW(...) 
#define MSPD_LOG(...) 
#define MSPD_ERR(...) 
# 117 "../..//enbapp/src/wr.h" 2

# 1 "../..//cm/cm5.x" 1
# 119 "../..//enbapp/src/wr.h" 2
# 1 "../..//cm/cm_tkns.x" 1
# 91 "../..//cm/cm_tkns.x"
#define __CMTKNSX 
# 121 "../..//cm/cm_tkns.x"
typedef TknU8 TknPres;


typedef TknU8 TknBool;

typedef struct tknS16
{
   U8 pres;
   U8 spare1;
   S16 val;



} TknS16;


typedef struct tknStr8
{
   U8 pres;
   U8 len;
   U16 spare1;



   U8 val[8];
} TknStr8;


typedef struct tknStr16
{
   U8 pres;
   U8 len;
   U16 spare1;



   U8 val[16];
} TknStr16;

typedef struct tknStrOSXL
{
   U8 pres;
   U8 spare1;
   U16 len;



   U8 *val;
} TknStrOSXL;


typedef TknStr4 TknBStr32;


typedef TknStrOSXL TknStrBSXL;







typedef struct tknStrBMP4
{
   U8 pres;
   U8 len;
   U16 spare1;



   U16 val[4];
} TknStrBMP4;


typedef struct tknStrBMPXL
{
   U8 pres;
   U8 spare1;
   U16 len;



   U16 *val;
} TknStrBMPXL;







typedef struct tknStrUNI4
{
   U8 pres;
   U8 len;
   U16 spare1;



   U32 val[4];
} TknStrUNI4;

typedef struct tknStrUNIXL
{
   U8 pres;
   U8 spare1;
   U16 len;



   U32 *val;
} TknStrUNIXL;


extern S16 cmPkTknPres (TknPres *tknPres, Buffer *mBuf);
extern S16 cmPkTknS16 (TknS16 *tknS16, Buffer *mBuf);
extern S16 cmPkTknBStr32 (TknBStr32 *tknbStr32, Buffer *mBuf);
extern S16 cmPkTknStr8 (TknStr8 *tknStr8, Buffer *mBuf);
extern S16 cmPkTknStr16 (TknStr16 *tknStr16, Buffer *mBuf);
extern S16 cmPkTknStrOSXL (TknStrOSXL *tknStrOSXL, Buffer *mBuf);
extern S16 cmPkTknStrBSXL (TknStrBSXL *tknStrBSXL, Buffer *mBuf);
extern S16 cmPkTknStrBMP4 (TknStrBMP4 *tknStrBMP4, Buffer *mBuf);
extern S16 cmPkTknStrBMPXL (TknStrBMPXL *tknStrBMPXL, Buffer *mBuf);
extern S16 cmPkTknStrUNI4 (TknStrUNI4 *tknStrUNI4, Buffer *mBuf);
extern S16 cmPkTknStrUNIXL (TknStrUNIXL *tknStrUNIXL, Buffer *mBuf);




extern S16 cmUnpkTknPres (TknPres *tknPres, Buffer *mBuf);
extern S16 cmUnpkTknS16 (TknS16 *tknS16, Buffer *mBuf);
extern S16 cmUnpkTknBStr32 (TknBStr32 *tknBStr32, Buffer *mBuf);
extern S16 cmUnpkTknStr8 (TknStr8 *tknStr8, Buffer *mBuf);
extern S16 cmUnpkTknStr16 (TknStr16 *tknStr16, Buffer *mBuf);
extern S16 cmUnpkTknStrOSXL (TknStrOSXL *tknStrOSXL, Buffer *mBuf, Ptr ptr);

extern S16 cmUnpkTknStrBSXL (TknStrBSXL *tknStrBSXL, Ptr ptr, Buffer *mBuf);

extern S16 cmUnpkTknStrBMP4 (TknStrBMP4 *tknStrBMP4, Buffer *mBuf);
extern S16 cmUnpkTknStrBMPXL (TknStrBMPXL *tknStrBMPXL, Buffer *mBuf, Ptr ptr);

extern S16 cmUnpkTknStrUNI4 (TknStrUNI4 *tknStrUNI4, Buffer *mBuf);
extern S16 cmUnpkTknStrUNIXL (TknStrUNIXL *tknStrUNIXL, Buffer *mBuf, Ptr ptr);
# 120 "../..//enbapp/src/wr.h" 2
# 1 "../..//cm/cm_mblk.x" 1
# 91 "../..//cm/cm_mblk.x"
#define __CMMBLKX__ 
# 101 "../..//cm/cm_mblk.x"
typedef struct cmMemCb
{
   Size maxSize;
   Mem sMem;
   U32 memAllocated;
   U32 initPtr;
   U32 runPtr;
} CmMemCb;




typedef struct cmMemList CmMemList;

struct cmMemList
{
   CmMemList *next;
   CmMemList *prev;

   Size size;
};





typedef struct cmMemListCp
{
   CmMemList *first;
   CmMemList *last;
   U32 count;
   CmMemCb memCb;
}CmMemListCp;




typedef struct cmMemStatus
{
   Mem sMem;
   U32 memBlkCnt;
   Size maxBlkSize;
   Size memAllocated;
} CmMemStatus;






extern S16 cmAllocEvnt ( Size evntSize, Size maxBlkSize, Mem *sMem, Ptr *ptr);





extern Void cmInitMemCp ( CmMemListCp *memCp, Size maxBlkSize, Mem *sMem );




extern S16 cmGetMem ( Ptr memPtr, Size size, Ptr *allocPtr);




extern Void cmFreeMem ( Ptr memPtr);


extern Void cmGetMemStatus ( Ptr memPtr, CmMemStatus *status);
# 121 "../..//enbapp/src/wr.h" 2
# 1 "../..//cm/cm_llist.x" 1
# 91 "../..//cm/cm_llist.x"
#define __CMLLISTX__ 






typedef struct cmLList CmLList;
typedef struct cmLListCp CmLListCp;


struct cmLList
{
   CmLList *next;
   CmLList *prev;
   U32 node;
};

struct cmLListCp
{
   CmLList *first;
   CmLList *last;
   CmLList *crnt;
   U32 count;
};

extern Void cmLListInit (CmLListCp *lList);
extern Void cmLListAdd2Tail (CmLListCp *lList, CmLList *node);
extern Void cmLListInsCrnt (CmLListCp *lList, CmLList *node);

extern Void cmLListInsAfterCrnt (CmLListCp *lList, CmLList *node);
extern CmLList *cmLListDelFrm (CmLListCp *lList, CmLList *node);
# 122 "../..//enbapp/src/wr.h" 2
# 1 "../..//cm/cm_hash.x" 1
# 92 "../..//cm/cm_hash.x"
#define __CMHASHX__ 
# 102 "../..//cm/cm_hash.x"
typedef struct cmHashListCp CmHashListCp;




typedef S16 (* CmHashFunc) (CmHashListCp *hashListCp, U8 *key, U16 keyLen, U16 *idx);



typedef struct cmListEnt CmListEnt;

struct cmListEnt
{
   CmListEnt *next;
   CmListEnt *prev;
};
# 133 "../..//cm/cm_hash.x"
typedef struct cmHashListEnt
{
   CmListEnt list;
   U8 *key;
   U16 keyLen;
   U16 hashVal;
} CmHashListEnt;



struct cmHashListCp
{

   CmListEnt *hl;



   Region region;
   Pool pool;
   U16 nmbBins;
   U16 binBitMask;
   U8 nmbBinBits;

   U16 nmbEnt;

   U16 offset;
   Bool dupFlg;
   U16 keyType;
   CmHashFunc hashFunc;
};




extern S16 cmHashListInit ( CmHashListCp *hashListCp, U16 nmbBins, U16 offset, Bool dupFlg, U16 keyType, Region region, Pool pool);
# 176 "../..//cm/cm_hash.x"
extern S16 cmHashListDeinit ( CmHashListCp *hashListCp);


extern S16 cmHashListInsert ( CmHashListCp *hashListCp, U32 entry, U8 *key, U16 keyLen);





extern S16 cmHashListDelete ( CmHashListCp *hashListCp, U32 entry);



extern S16 cmHashListFind ( CmHashListCp *hashListCp, U8 *key, U16 keyLen, U16 seqNmb, U32 *entry);






extern S16 cmHashListGetNext ( CmHashListCp *hashListCp, U32 prevEnt, U32 *entry);
# 211 "../..//cm/cm_hash.x"
extern S16 cmHashListQuery ( CmHashListCp *hashListCp, U8 queryType, U16 *result);






extern S16 cmHashListOAInsert ( CmHashListCp *hashListCp, U32 entry, U8 *key, U16 keyLen);
# 123 "../..//enbapp/src/wr.h" 2
# 1 "../..//cm/cm_lte.x" 1
# 91 "../..//cm/cm_lte.x"
#define __CM_LTE_X__ 


#define cmPkLteRbId SPkU8
#define cmPkLteRnti SPkU16
#define cmPkLteCellId SPkU16
#define cmPkLteRlcMode SPkU8
#define cmPkLteLcId SPkU8
#define cmPkLteLcType SPkU8
#define cmPkLteAggrLvl SPkU32


#define cmUnpkLteRbId SUnpkU8
#define cmUnpkLteRnti SUnpkU16
#define cmUnpkLteCellId SUnpkU16
#define cmUnpkLteRlcMode SUnpkU8
#define cmUnpkLteLcId SUnpkU8
#define cmUnpkLteLcType SUnpkU8
#define cmUnpkLteAggrLvl SUnpkU32
# 122 "../..//cm/cm_lte.x"
typedef U8 CmLteRbId;


typedef U16 CmLteCellId;


typedef U16 CmLteRnti;


typedef U8 CmLteRlcMode;


typedef U8 CmLteLcId;


typedef U8 CmLteLcType;


typedef U8 CmLteTrchType;


typedef U8 CmLteContResId[6];


typedef struct cmLteRlcId
{
  CmLteRbId rbId;
  U8 rbType;
  CmLteRnti ueId;
  CmLteCellId cellId;
}CmLteRlcId;


typedef struct cmLteTimingInfo
{
   U16 sfn;
   U8 subframe;
} CmLteTimingInfo;


typedef struct cmLtePdcpId
{
   CmLteCellId cellId;
   CmLteRnti ueId;
   CmLteRbId rbId;
   U8 rbType;
} CmLtePdcpId;


typedef enum cmLteAggrLvl
{
   CM_LTE_AGGR_LVL1 = 1,
   CM_LTE_AGGR_LVL2 = 2,
   CM_LTE_AGGR_LVL4 = 3,
   CM_LTE_AGGR_LVL8 = 4
} CmLteAggrLvl;


typedef enum cmLteUeCategory
{
   CM_LTE_UE_CAT_1 = 1,
   CM_LTE_UE_CAT_2,
   CM_LTE_UE_CAT_3,
   CM_LTE_UE_CAT_4,
   CM_LTE_UE_CAT_5
} CmLteUeCategory;





extern S16 cmPkLteRlcId ( CmLteRlcId *param, Buffer *mBuf );




extern S16 cmPkLteTimingInfo ( CmLteTimingInfo *param, Buffer *mBuf );




extern S16 cmPkLtePdcpId ( CmLtePdcpId *param, Buffer *mBuf );





extern S16 cmUnpkLteRlcId ( CmLteRlcId *param, Buffer *mBuf );




extern S16 cmUnpkLteTimingInfo ( CmLteTimingInfo *param, Buffer *mBuf );




extern S16 cmUnpkLtePdcpId ( CmLtePdcpId *param, Buffer *mBuf );
# 124 "../..//enbapp/src/wr.h" 2
# 1 "../..//cm/cm_lib.x" 1
# 94 "../..//cm/cm_lib.x"
#define __CMLIBX__ 





 U8 *cmMemcpy (U8 *tgt, const U8 *src, U32 len);
 S16 cmMemcmp (const U8 *s1, const U8 *s2, U32 len);
 U8 *cmMemset (U8 *src, U8 val, U32 len);

 S16 cmStrcmp (const U8 *s1, const U8 *s2);

 S16 cmStrncmp (const U8 *s1, const U8 *s2, MsgLen len);
 MsgLen cmStrlen (const U8 *s);
# 125 "../..//enbapp/src/wr.h" 2
# 1 "../..//cm/cm_inet.x" 1
# 104 "../..//cm/cm_inet.x"
#define __CMINETX__ 
# 158 "../..//cm/cm_inet.x"
# 1 "/usr/include/netdb.h" 1 3 4
# 24 "/usr/include/netdb.h" 3 4
#define _NETDB_H 1
# 33 "/usr/include/netdb.h" 3 4
# 1 "/usr/include/rpc/netdb.h" 1 3 4
# 37 "/usr/include/rpc/netdb.h" 3 4
#define _RPC_NETDB_H 1



#define __need_size_t 
# 1 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 1 3 4
# 236 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 3 4
#undef __need_size_t
# 409 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 3 4
#undef __need_NULL
# 43 "/usr/include/rpc/netdb.h" 2 3 4



struct rpcent
{
  char *r_name;
  char **r_aliases;
  int r_number;
};

extern void setrpcent (int __stayopen) __attribute__ ((__nothrow__));
extern void endrpcent (void) __attribute__ ((__nothrow__));
extern struct rpcent *getrpcbyname (__const char *__name) __attribute__ ((__nothrow__));
extern struct rpcent *getrpcbynumber (int __number) __attribute__ ((__nothrow__));
extern struct rpcent *getrpcent (void) __attribute__ ((__nothrow__));


extern int getrpcbyname_r (__const char *__name, struct rpcent *__result_buf,
      char *__buffer, size_t __buflen,
      struct rpcent **__result) __attribute__ ((__nothrow__));

extern int getrpcbynumber_r (int __number, struct rpcent *__result_buf,
        char *__buffer, size_t __buflen,
        struct rpcent **__result) __attribute__ ((__nothrow__));

extern int getrpcent_r (struct rpcent *__result_buf, char *__buffer,
   size_t __buflen, struct rpcent **__result) __attribute__ ((__nothrow__));



# 34 "/usr/include/netdb.h" 2 3 4



#define __need_sigevent_t 
# 1 "/usr/include/bits/siginfo.h" 1 3 4
# 25 "/usr/include/bits/siginfo.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 19 "/usr/include/bits/wordsize.h" 3 4
#define __WORDSIZE 32
# 26 "/usr/include/bits/siginfo.h" 2 3 4




#define __have_sigval_t 1


typedef union sigval
  {
    int sival_int;
    void *sival_ptr;
  } sigval_t;
# 263 "/usr/include/bits/siginfo.h" 3 4
#define __have_sigevent_t 1


#define __SIGEV_MAX_SIZE 64



#define __SIGEV_PAD_SIZE ((__SIGEV_MAX_SIZE / sizeof (int)) - 3)


typedef struct sigevent
  {
    sigval_t sigev_value;
    int sigev_signo;
    int sigev_notify;

    union
      {
 int _pad[((64 / sizeof (int)) - 3)];



 __pid_t _tid;

 struct
   {
     void (*_function) (sigval_t);
     void *_attribute;
   } _sigev_thread;
      } _sigev_un;
  } sigevent_t;


#define sigev_notify_function _sigev_un._sigev_thread._function
#define sigev_notify_attributes _sigev_un._sigev_thread._attribute


enum
{
  SIGEV_SIGNAL = 0,
#define SIGEV_SIGNAL SIGEV_SIGNAL
  SIGEV_NONE,
#define SIGEV_NONE SIGEV_NONE
  SIGEV_THREAD,
#define SIGEV_THREAD SIGEV_THREAD

  SIGEV_THREAD_ID = 4
#define SIGEV_THREAD_ID SIGEV_THREAD_ID
};
# 39 "/usr/include/netdb.h" 2 3 4
#define __need_timespec 



# 1 "/usr/include/bits/netdb.h" 1 3 4
# 27 "/usr/include/bits/netdb.h" 3 4
struct netent
{
  char *n_name;
  char **n_aliases;
  int n_addrtype;
  uint32_t n_net;
};
# 44 "/usr/include/netdb.h" 2 3 4


#define _PATH_HEQUIV "/etc/hosts.equiv"
#define _PATH_HOSTS "/etc/hosts"
#define _PATH_NETWORKS "/etc/networks"
#define _PATH_NSSWITCH_CONF "/etc/nsswitch.conf"
#define _PATH_PROTOCOLS "/etc/protocols"
#define _PATH_SERVICES "/etc/services"






#define h_errno (*__h_errno_location ())


extern int *__h_errno_location (void) __attribute__ ((__nothrow__)) __attribute__ ((__const__));



#define NETDB_INTERNAL -1
#define NETDB_SUCCESS 0
#define HOST_NOT_FOUND 1
#define TRY_AGAIN 2

#define NO_RECOVERY 3

#define NO_DATA 4

#define NO_ADDRESS NO_DATA



#define IPPORT_RESERVED 1024




#define SCOPE_DELIMITER '%'




extern void herror (__const char *__str) __attribute__ ((__nothrow__));


extern __const char *hstrerror (int __err_num) __attribute__ ((__nothrow__));




struct hostent
{
  char *h_name;
  char **h_aliases;
  int h_addrtype;
  int h_length;
  char **h_addr_list;
#define h_addr h_addr_list[0]
};






extern void sethostent (int __stay_open);





extern void endhostent (void);






extern struct hostent *gethostent (void);






extern struct hostent *gethostbyaddr (__const void *__addr, __socklen_t __len,
          int __type);





extern struct hostent *gethostbyname (__const char *__name);
# 149 "/usr/include/netdb.h" 3 4
extern struct hostent *gethostbyname2 (__const char *__name, int __af);
# 161 "/usr/include/netdb.h" 3 4
extern int gethostent_r (struct hostent *__restrict __result_buf,
    char *__restrict __buf, size_t __buflen,
    struct hostent **__restrict __result,
    int *__restrict __h_errnop);

extern int gethostbyaddr_r (__const void *__restrict __addr, __socklen_t __len,
       int __type,
       struct hostent *__restrict __result_buf,
       char *__restrict __buf, size_t __buflen,
       struct hostent **__restrict __result,
       int *__restrict __h_errnop);

extern int gethostbyname_r (__const char *__restrict __name,
       struct hostent *__restrict __result_buf,
       char *__restrict __buf, size_t __buflen,
       struct hostent **__restrict __result,
       int *__restrict __h_errnop);

extern int gethostbyname2_r (__const char *__restrict __name, int __af,
        struct hostent *__restrict __result_buf,
        char *__restrict __buf, size_t __buflen,
        struct hostent **__restrict __result,
        int *__restrict __h_errnop);
# 192 "/usr/include/netdb.h" 3 4
extern void setnetent (int __stay_open);





extern void endnetent (void);






extern struct netent *getnetent (void);






extern struct netent *getnetbyaddr (uint32_t __net, int __type);





extern struct netent *getnetbyname (__const char *__name);
# 231 "/usr/include/netdb.h" 3 4
extern int getnetent_r (struct netent *__restrict __result_buf,
   char *__restrict __buf, size_t __buflen,
   struct netent **__restrict __result,
   int *__restrict __h_errnop);

extern int getnetbyaddr_r (uint32_t __net, int __type,
      struct netent *__restrict __result_buf,
      char *__restrict __buf, size_t __buflen,
      struct netent **__restrict __result,
      int *__restrict __h_errnop);

extern int getnetbyname_r (__const char *__restrict __name,
      struct netent *__restrict __result_buf,
      char *__restrict __buf, size_t __buflen,
      struct netent **__restrict __result,
      int *__restrict __h_errnop);




struct servent
{
  char *s_name;
  char **s_aliases;
  int s_port;
  char *s_proto;
};






extern void setservent (int __stay_open);





extern void endservent (void);






extern struct servent *getservent (void);






extern struct servent *getservbyname (__const char *__name,
          __const char *__proto);






extern struct servent *getservbyport (int __port, __const char *__proto);
# 303 "/usr/include/netdb.h" 3 4
extern int getservent_r (struct servent *__restrict __result_buf,
    char *__restrict __buf, size_t __buflen,
    struct servent **__restrict __result);

extern int getservbyname_r (__const char *__restrict __name,
       __const char *__restrict __proto,
       struct servent *__restrict __result_buf,
       char *__restrict __buf, size_t __buflen,
       struct servent **__restrict __result);

extern int getservbyport_r (int __port, __const char *__restrict __proto,
       struct servent *__restrict __result_buf,
       char *__restrict __buf, size_t __buflen,
       struct servent **__restrict __result);




struct protoent
{
  char *p_name;
  char **p_aliases;
  int p_proto;
};






extern void setprotoent (int __stay_open);





extern void endprotoent (void);






extern struct protoent *getprotoent (void);





extern struct protoent *getprotobyname (__const char *__name);





extern struct protoent *getprotobynumber (int __proto);
# 369 "/usr/include/netdb.h" 3 4
extern int getprotoent_r (struct protoent *__restrict __result_buf,
     char *__restrict __buf, size_t __buflen,
     struct protoent **__restrict __result);

extern int getprotobyname_r (__const char *__restrict __name,
        struct protoent *__restrict __result_buf,
        char *__restrict __buf, size_t __buflen,
        struct protoent **__restrict __result);

extern int getprotobynumber_r (int __proto,
          struct protoent *__restrict __result_buf,
          char *__restrict __buf, size_t __buflen,
          struct protoent **__restrict __result);
# 390 "/usr/include/netdb.h" 3 4
extern int setnetgrent (__const char *__netgroup);







extern void endnetgrent (void);
# 407 "/usr/include/netdb.h" 3 4
extern int getnetgrent (char **__restrict __hostp,
   char **__restrict __userp,
   char **__restrict __domainp);
# 418 "/usr/include/netdb.h" 3 4
extern int innetgr (__const char *__netgroup, __const char *__host,
      __const char *__user, __const char *domain);







extern int getnetgrent_r (char **__restrict __hostp,
     char **__restrict __userp,
     char **__restrict __domainp,
     char *__restrict __buffer, size_t __buflen);
# 446 "/usr/include/netdb.h" 3 4
extern int rcmd (char **__restrict __ahost, unsigned short int __rport,
   __const char *__restrict __locuser,
   __const char *__restrict __remuser,
   __const char *__restrict __cmd, int *__restrict __fd2p);
# 458 "/usr/include/netdb.h" 3 4
extern int rcmd_af (char **__restrict __ahost, unsigned short int __rport,
      __const char *__restrict __locuser,
      __const char *__restrict __remuser,
      __const char *__restrict __cmd, int *__restrict __fd2p,
      sa_family_t __af);
# 474 "/usr/include/netdb.h" 3 4
extern int rexec (char **__restrict __ahost, int __rport,
    __const char *__restrict __name,
    __const char *__restrict __pass,
    __const char *__restrict __cmd, int *__restrict __fd2p);
# 486 "/usr/include/netdb.h" 3 4
extern int rexec_af (char **__restrict __ahost, int __rport,
       __const char *__restrict __name,
       __const char *__restrict __pass,
       __const char *__restrict __cmd, int *__restrict __fd2p,
       sa_family_t __af);
# 500 "/usr/include/netdb.h" 3 4
extern int ruserok (__const char *__rhost, int __suser,
      __const char *__remuser, __const char *__locuser);
# 510 "/usr/include/netdb.h" 3 4
extern int ruserok_af (__const char *__rhost, int __suser,
         __const char *__remuser, __const char *__locuser,
         sa_family_t __af);
# 522 "/usr/include/netdb.h" 3 4
extern int rresvport (int *__alport);
# 531 "/usr/include/netdb.h" 3 4
extern int rresvport_af (int *__alport, sa_family_t __af);






struct addrinfo
{
  int ai_flags;
  int ai_family;
  int ai_socktype;
  int ai_protocol;
  socklen_t ai_addrlen;
  struct sockaddr *ai_addr;
  char *ai_canonname;
  struct addrinfo *ai_next;
};



struct gaicb
{
  const char *ar_name;
  const char *ar_service;
  const struct addrinfo *ar_request;
  struct addrinfo *ar_result;

  int __return;
  int __unused[5];
};


#define GAI_WAIT 0
#define GAI_NOWAIT 1



#define AI_PASSIVE 0x0001
#define AI_CANONNAME 0x0002
#define AI_NUMERICHOST 0x0004
#define AI_V4MAPPED 0x0008
#define AI_ALL 0x0010
#define AI_ADDRCONFIG 0x0020


#define AI_IDN 0x0040


#define AI_CANONIDN 0x0080
#define AI_IDN_ALLOW_UNASSIGNED 0x0100

#define AI_IDN_USE_STD3_ASCII_RULES 0x0200


#define AI_NUMERICSERV 0x0400


#define EAI_BADFLAGS -1
#define EAI_NONAME -2
#define EAI_AGAIN -3
#define EAI_FAIL -4
#define EAI_NODATA -5
#define EAI_FAMILY -6
#define EAI_SOCKTYPE -7
#define EAI_SERVICE -8
#define EAI_ADDRFAMILY -9
#define EAI_MEMORY -10
#define EAI_SYSTEM -11
#define EAI_OVERFLOW -12

#define EAI_INPROGRESS -100
#define EAI_CANCELED -101
#define EAI_NOTCANCELED -102
#define EAI_ALLDONE -103
#define EAI_INTR -104
#define EAI_IDN_ENCODE -105


#define NI_MAXHOST 1025
#define NI_MAXSERV 32

#define NI_NUMERICHOST 1
#define NI_NUMERICSERV 2
#define NI_NOFQDN 4
#define NI_NAMEREQD 8
#define NI_DGRAM 16

#define NI_IDN 32
#define NI_IDN_ALLOW_UNASSIGNED 64

#define NI_IDN_USE_STD3_ASCII_RULES 128
# 631 "/usr/include/netdb.h" 3 4
extern int getaddrinfo (__const char *__restrict __name,
   __const char *__restrict __service,
   __const struct addrinfo *__restrict __req,
   struct addrinfo **__restrict __pai);


extern void freeaddrinfo (struct addrinfo *__ai) __attribute__ ((__nothrow__));


extern __const char *gai_strerror (int __ecode) __attribute__ ((__nothrow__));





extern int getnameinfo (__const struct sockaddr *__restrict __sa,
   socklen_t __salen, char *__restrict __host,
   socklen_t __hostlen, char *__restrict __serv,
   socklen_t __servlen, unsigned int __flags);
# 661 "/usr/include/netdb.h" 3 4
extern int getaddrinfo_a (int __mode, struct gaicb *__list[__restrict],
     int __ent, struct sigevent *__restrict __sig);
# 672 "/usr/include/netdb.h" 3 4
extern int gai_suspend (__const struct gaicb *__const __list[], int __ent,
   __const struct timespec *__timeout);


extern int gai_error (struct gaicb *__req) __attribute__ ((__nothrow__));


extern int gai_cancel (struct gaicb *__gaicbp) __attribute__ ((__nothrow__));



# 159 "../..//cm/cm_inet.x" 2



typedef CmIpAddr CmInetIpAddr;




typedef struct cmInetIpAddrTbl
{
   U16 count;
   CmInetIpAddr netAddr[16];
}CmInetIpAddrTbl;

typedef CmInetIpAddrTbl CmInetIpv4AddrArr;
# 183 "../..//cm/cm_inet.x"
typedef struct cmInetIpAddrArr
{
   U8 type;
   union
   {
      CmInetIpv4AddrArr ipv4AddrArr;



   } u;

} CmInetIpAddrArr;






typedef S32 CmInetFdType;
# 211 "../..//cm/cm_inet.x"
typedef struct cmInetFd
{
   CmInetFdType fd;
   U8 blocking;
   U8 type;




}CmInetFd;

typedef fd_set CmInetFdSet;
# 256 "../..//cm/cm_inet.x"
typedef struct cmInetAddr1
{
   U16 port;
   CmInetIpAddr address;
} CmInetAddr;
typedef CmInetAddr CmInetIpv4Addr;


typedef struct cmInetMemInfo
{
   Region region;
   Pool pool;
} CmInetMemInfo;

typedef struct cmInetMCastInf
{
   CmInetIpAddr mCastAddr;
   CmInetIpAddr localAddr;
}CmInetMCastInf;



typedef struct cmInetNetAddr
{
   U8 type;
   union
   {
      CmInetIpAddr ipv4NetAddr;



   }u;
} CmInetNetAddr;
# 390 "../..//cm/cm_inet.x"
typedef struct cmInetIpHdrParm
{
   U8 type;






} CmInetIpHdrParm;
# 411 "../..//cm/cm_inet.x"
typedef struct cmInetFdSetInfo
{
   Bool initDone;
   Bool bigEndian;
   U16 arIdx;
   U32 numArElems;
   U8 ar[256];
} CmInetFdSetInfo;
# 595 "../..//cm/cm_inet.x"
typedef struct iovec CmInetIovec;



typedef struct sockaddr CmInetSockAddr;
# 623 "../..//cm/cm_inet.x"
typedef struct addrinfo CmInetAddrInfo;
# 633 "../..//cm/cm_inet.x"
extern S16 cmInetSocket (U8 type, CmInetFd *sockFd, U8 protocol);
# 647 "../..//cm/cm_inet.x"
extern S16 cmInetBind (CmInetFd *sockFd, CmInetAddr *myAddr);
extern S16 cmInetConnect (CmInetFd *sockFd, CmInetAddr *servAddr);
extern S16 cmInetListen (CmInetFd *sockFd, S16 backLog);
extern S16 cmInetAccept (CmInetFd *sockFd, CmInetAddr *fromAddr, CmInetFd *newSockFd);
# 671 "../..//cm/cm_inet.x"
extern S16 cmInetRecvMsg (CmInetFd *sockFd, CmInetAddr *dstAddr, CmInetMemInfo *info, Buffer **mPtr, MsgLen *len, S32 flags);
# 682 "../..//cm/cm_inet.x"
extern S16 cmInetSendMsg (CmInetFd *sockFd, CmInetAddr *dstAddr, CmInetMemInfo *info, Buffer *mBuf, MsgLen *len, S16 flags);



extern S16 cmInetPeek (CmInetFd *sockFd, CmInetAddr *fromAddr, CmInetMemInfo *info, MsgLen dataPos, MsgLen dataLen, U8 *data);



extern S16 cmInetPeekNew (CmInetFd *sockFd, CmInetAddr *fromAddr, CmInetMemInfo *info, MsgLen dataPos, MsgLen dataLen, U8 *data);


extern S16 cmInetClose (CmInetFd *sockFd);
extern S16 cmInetShutdown (CmInetFd *sockFd, S32 howTo);
extern S16 cmInetSelect (CmInetFdSet *readFdS, CmInetFdSet *writeFdS, U32 *mSecTimeout, S16 *numFdS);

extern S16 cmInetSetOpt (CmInetFd *sockFd, U32 level, U32 type, Ptr value);

extern S16 cmInetGetNumRead (CmInetFd *sockFd, U32 *dataLen);

extern S16 cmInetGetHostByName (S8 *hostName, CmInetIpAddrTbl *addrTbl);
extern S16 cmInetGetIpNodeByName (S8 *hostName, CmInetIpAddrArr *addrArr);
extern S16 cmInetAddr (S8 *asciiAddr, CmInetIpAddr *address);
extern S16 cmInetNtoa (CmInetIpAddr address, S8 **asciiAddr);
extern S16 cmInetPton (CmInetIpAddr *address, S8 *asciiAddr);







extern S16 cmInetFdSetInfoInit (CmInetFdSetInfo *fdSetInfo);
extern S16 cmInetGetFd (CmInetFdSetInfo *fdSetInfo, CmInetFdSet *fdSet, CmInetFdType *sockFd);



extern S16 cmInetGetMemSize (S32 *size);
extern S16 cmInetInit (Void);
extern S16 cmInetDeInit (Void);
extern S16 cmInetGetSockName (CmInetFd *sockFd, CmInetAddr *locAddr);

extern S16 cmInetConvertStrToIpAddr (U16 len, U8 *val, CmInetNetAddr *address);

extern S16 cmInetAsciiToIpv4 (U8 numBytes, U8 *ipv4Addr, U16 len, U8 *val);





extern S32 cmInetGetAddrInfo (const S8* node, const S8* service, const CmInetAddrInfo *hints, CmInetAddrInfo **res);

extern Void cmInetFreeAddrInfo (CmInetAddrInfo *res);
# 126 "../..//enbapp/src/wr.h" 2
# 1 "../..//cm/cm_tpt.x" 1
# 95 "../..//cm/cm_tpt.x"
#define __CMTPTX__ 


# 1 "../..//cm/cm_inet.x" 1
# 99 "../..//cm/cm_tpt.x" 2
# 110 "../..//cm/cm_tpt.x"
typedef CmInetIpv4Addr CmIpv4TptAddr;
typedef CmInetIpAddr CmIpv4NetAddr;


typedef U8 CmInetIpAddr6[16];


typedef struct cmInetIpv6Addr
{
   U16 port;
   CmInetIpAddr6 ipv6NetAddr;
} CmInetIpv6Addr;



typedef CmInetIpv6Addr CmIpv6TptAddr;
typedef CmInetIpAddr6 CmIpv6NetAddr;




typedef struct cmNetAddr
{
   U8 type;
   union
   {
      CmIpv4NetAddr ipv4NetAddr;
      CmIpv6NetAddr ipv6NetAddr;
   }u;
} CmNetAddr;


typedef struct _cmNetAddrTbl
{
   U16 count;
   CmNetAddr netAddr[16];
}CmNetAddrTbl;
# 161 "../..//cm/cm_tpt.x"
typedef struct cmNetMCastInf
{
   CmNetAddr mCastAddr;
   CmNetAddr localAddr;
} CmNetMCastInf;







typedef struct cmTptAddr
{
   U8 type;
   union
   {
      CmIpv4TptAddr ipv4TptAddr;
      CmIpv6TptAddr ipv6TptAddr;



   }u;
} CmTptAddr;
# 207 "../..//cm/cm_tpt.x"
typedef struct cmSockOpts
{
   U32 level;
   U32 option;
   union
   {





      CmNetMCastInf mCastInfo;



      CmNetAddr lclAddr;
      U32 value;
# 238 "../..//cm/cm_tpt.x"
   }optVal;
}CmSockOpts;


typedef struct cmSockParam
{
   U8 listenQSize;
   U8 numOpts;
   CmSockOpts sockOpts[8];
} CmSockParam;
# 270 "../..//cm/cm_tpt.x"
typedef struct cmTptParam
{
   U8 type;

   union
   {
      CmSockParam sockParam;
# 287 "../..//cm/cm_tpt.x"
   } u;

} CmTptParam;



typedef struct cmIpv4HdrParm
{
   TknU8 proto;
   TknU8 dfBit;
   TknU8 tos;
   TknU8 ttl;




} CmIpv4HdrParm;
# 376 "../..//cm/cm_tpt.x"
typedef struct cmIpHdrParm
{
   U8 type;
   union
   {
      CmIpv4HdrParm hdrParmIpv4;



   }u;

} CmIpHdrParm;


typedef struct cmIpv4Hdr
{
   U8 hdrVer;
   U8 tos;
   S16 length;
   U16 id;
   S16 off;
   U8 ttl;
   U8 proto;
   U16 chkSum;
   U32 srcAddr;
   U32 destAddr;

} CmIpv4Hdr;
# 425 "../..//cm/cm_tpt.x"
typedef struct cmIcmpError
{
   U8 errType;
   U32 errCodeMask;

} CmIcmpError;


typedef struct cmIcmpv4Filter
{
   U8 icmpMsgFlag;
   U8 allMsg;
   U8 protocol;
   U8 num;

   CmIcmpError icmpError[5];

}CmIcmpv4Filter;
# 457 "../..//cm/cm_tpt.x"
typedef struct cmIcmpFilter
{
  U8 type;
  union
  {
    CmIcmpv4Filter icmpv4Filter;



  }u;

} CmIcmpFilter;


typedef struct cmIcmpv4Hdr
{
   U8 icmpType;
   U8 icmpCode;
   U16 chkSum;

   union
   {
      U8 ihPptr;
      U32 rdrctAddr;
      struct idSeq
      {
         S16 icdId;
         S16 icdSeq;
      } u1;
      U32 ihVoid;
   } u2;

   union
   {
      struct idTime
      {
         U32 itOtime;
         U32 itRtime;
         U32 itTtime;
      } s;
      CmIpv4Hdr icmpIpHdr;
      U32 id_mask;
   } u3;

} CmIcmpv4Hdr;
# 523 "../..//cm/cm_tpt.x"
extern S16 cmPkCmIpv4TptAddr (CmIpv4TptAddr *pkParam, Buffer *mBuf);
extern S16 cmPkCmNetAddrTbl (CmNetAddrTbl *pkParam, Buffer *mBuf);
extern S16 cmPkCmNetAddr (CmNetAddr *pkParam, Buffer *mBuf);
extern S16 cmPkCmTptAddr (CmTptAddr *pkParam, Buffer *mBuf);



extern S16 cmPkCmTptParam (CmTptParam *pkParam, Buffer *mBuf);
extern S16 cmUnpkCmNetAddrTbl (CmNetAddrTbl *unpkParam, Buffer *mBuf);
extern S16 cmUnpkCmIpv4TptAddr (CmIpv4TptAddr *unpkParam, Buffer *mBuf);
extern S16 cmUnpkCmNetAddr (CmNetAddr *unpkParam, Buffer *mBuf);
extern S16 cmUnpkCmTptAddr (CmTptAddr *unpkParam, Buffer *mBuf);




extern S16 cmUnpkCmTptParam (CmTptParam *unpkParam, Buffer *mBuf);


extern S16 cmPkCmIpHdrParm (CmIpHdrParm *pkParam, Buffer *mBuf);







extern S16 cmUnpkCmIpHdrParm (CmIpHdrParm *unpkParam, Buffer *mBuf);
# 559 "../..//cm/cm_tpt.x"
extern S16 cmPkCmIcmpFilter (CmIcmpFilter *pkParam, Buffer *mBuf);
extern S16 cmUnpkCmIcmpFilter (CmIcmpFilter *unpkParam, Buffer *mBuf);
# 127 "../..//enbapp/src/wr.h" 2


# 1 "../..//cm/nhu.h" 1
# 101 "../..//cm/nhu.h"
#define __NHU_H__ 


# 1 "../..//cm/nhu_asn.h" 1
# 89 "../..//cm/nhu_asn.h"
#define __NHUASNH__ 



#define NHUCHKUNPKPTR(func,val,ptr,mBuf) { S16 ret; if ((ret = func(val, mBuf, ptr)) != ROK) RETVALUE(ret);}




#define Nhuid_Invalid 0xffffffff

#define SOUNDINGRS_UL_CONFIGCMN_RELEASE 0
#define SOUNDINGRS_UL_CONFIGCMN_SETUP 1

#define SUBFRAMEALLOCN_ONEFRAME 0
#define SUBFRAMEALLOCN_FOURFRAMES 1

#define FOLLOWINGARFCNS_EXPLICITLSTOFARFCNS 0
#define FOLLOWINGARFCNS_EQUALLYSPACEDARFCNS 1
#define FOLLOWINGARFCNS_VARIABLEBITMAPOFARFCNS 2

#define CDMA_SYSTIME_SYNCHRONOUSSYSTIME 0
#define CDMA_SYSTIME_ASYNCHRONOUSSYSTIME 1

#define MEMBER_SIB2 0
#define MEMBER_SIB3 1
#define MEMBER_SIB4 2
#define MEMBER_SIB5 3
#define MEMBER_SIB6 4
#define MEMBER_SIB7 5
#define MEMBER_SIB8 6
#define MEMBER_SIB9 7
#define MEMBER_SIB10 8
#define MEMBER_SIB11 9
#define MEMBER_SIB12_V920 10
#define MEMBER_SIB13_V920 11

#define CRITICALEXTNS_SYSTEMINFO_R8 0

#define C1_SYSTEMINFO 0
#define C1_SYSTEMINFOBLOCKTYP1 1
#define BCCH_DL_SCH_MSGTYP_C1 0
#define BCCH_DL_SCH_MSGTYP_MESSAGECLASSEXTN 1
#define PLMN_ID_R9_PLMN_IDX_R9 0
#define PLMN_ID_R9_EXPLICITVALUE_R9 1

#define C26_MBSFNAREACFG_R9 0
#define MCCH_MSGTYP_C26 0
#define MCCH_MSGTYP_MESSAGECLASSEXTN 1

#define PAGUE_IDENTITY_S_TMSI 0
#define PAGUE_IDENTITY_IMSI 1

#define C2_PAGING 0
#define PCCH_MSGTYP_C2 0
#define PCCH_MSGTYP_MESSAGECLASSEXTN 1

#define RLC_CONFIG_AM 0
#define RLC_CONFIG_UM_BI_DIRECTIONAL 1
#define RLC_CONFIG_UM_UNI_DIRECTIONAL_UL 2
#define RLC_CONFIG_UM_UNI_DIRECTIONAL_DL 3

#define RLC_CONFIG_EXPLICITVALUE 0
#define RLC_CONFIG_DEFAULTVALUE 1
#define LOGICALCHANNELCONFIG_EXPLICITVALUE 0
#define LOGICALCHANNELCONFIG_DEFAULTVALUE 1
#define HEADERCOMPRESSION_NOTUSED 0
#define HEADERCOMPRESSION_ROHC 1

#define LONGDRX_CYCLESTARTOFFSET_SF10 0
#define LONGDRX_CYCLESTARTOFFSET_SF20 1
#define LONGDRX_CYCLESTARTOFFSET_SF32 2
#define LONGDRX_CYCLESTARTOFFSET_SF40 3
#define LONGDRX_CYCLESTARTOFFSET_SF64 4
#define LONGDRX_CYCLESTARTOFFSET_SF80 5
#define LONGDRX_CYCLESTARTOFFSET_SF128 6
#define LONGDRX_CYCLESTARTOFFSET_SF160 7
#define LONGDRX_CYCLESTARTOFFSET_SF256 8
#define LONGDRX_CYCLESTARTOFFSET_SF320 9
#define LONGDRX_CYCLESTARTOFFSET_SF512 10
#define LONGDRX_CYCLESTARTOFFSET_SF640 11
#define LONGDRX_CYCLESTARTOFFSET_SF1024 12
#define LONGDRX_CYCLESTARTOFFSET_SF1280 13
#define LONGDRX_CYCLESTARTOFFSET_SF2048 14
#define LONGDRX_CYCLESTARTOFFSET_SF2560 15
#define DRX_CONFIG_RELEASE 0
#define DRX_CONFIG_SETUP 1
#define PHR_CONFIG_RELEASE 0
#define PHR_CONFIG_SETUP 1

#define SPS_CONFIGDL_RELEASE 0
#define SPS_CONFIGDL_SETUP 1

#define SPS_CONFIGUL_RELEASE 0
#define SPS_CONFIGUL_SETUP 1

#define ACKNACKREPETITION_RELEASE 0
#define ACKNACKREPETITION_SETUP 1

#define TPC_IDX_INDEXOFFORMAT3 0
#define TPC_IDX_INDEXOFFORMAT3A 1

#define TPC_PDCCH_CONFIG_RELEASE 0
#define TPC_PDCCH_CONFIG_SETUP 1

#define CQI_FORMATINDICATORPERIODIC_WIDEBANDCQI 0
#define CQI_FORMATINDICATORPERIODIC_SUBBANDCQI 1
#define CQI_REPORTPERIODIC_RELEASE 0
#define CQI_REPORTPERIODIC_SETUP 1
#define SOUNDINGRS_UL_CONFIGDEDICATED_RELEASE 0
#define SOUNDINGRS_UL_CONFIGDEDICATED_SETUP 1

#define CODEBOOKSUBSETRESTRN_N2TXANTENNA_TM3 0
#define CODEBOOKSUBSETRESTRN_N4TXANTENNA_TM3 1
#define CODEBOOKSUBSETRESTRN_N2TXANTENNA_TM4 2
#define CODEBOOKSUBSETRESTRN_N4TXANTENNA_TM4 3
#define CODEBOOKSUBSETRESTRN_N2TXANTENNA_TM5 4
#define CODEBOOKSUBSETRESTRN_N4TXANTENNA_TM5 5
#define CODEBOOKSUBSETRESTRN_N2TXANTENNA_TM6 6
#define CODEBOOKSUBSETRESTRN_N4TXANTENNA_TM6 7
#define UE_TRANSMITANTENNASELECTION_RELEASE 0
#define UE_TRANSMITANTENNASELECTION_SETUP 1
#define SCHEDULINGRQSTCONFIG_RELEASE 0
#define SCHEDULINGRQSTCONFIG_SETUP 1

#define CODEBOOKSUBSETRESTRN_V920_N2TXANTENNA_TM8_R9 0
#define CODEBOOKSUBSETRESTRN_V920_N4TXANTENNA_TM8_R9 1

#define ANTENNAINFO_EXPLICITVALUE 0
#define ANTENNAINFO_DEFAULTVALUE 1

#define RLF_TMRSANDCONSTS_R9_RELEASE 0
#define RLF_TMRSANDCONSTS_R9_SETUP 1

#define MAC_MAINCONFIG_EXPLICITVALUE 0
#define MAC_MAINCONFIG_DEFAULTVALUE 1

#define C13_RRCCONREESTB_R8 0
#define C13_SPARE7 1
#define C13_SPARE6 2
#define C13_SPARE5 3
#define C13_SPARE4 4
#define C13_SPARE3 5
#define C13_SPARE2 6
#define C13_SPARE1 7
#define CRITICALEXTNS_C13 0
#define CRITICALEXTNS_RRCCONREESTBREJ_R8 0

#define C14_RRCCONREJ_R8 0
#define C14_SPARE3 1
#define C14_SPARE2 2
#define C14_SPARE1 3
#define CRITICALEXTNS_C14 0
#define C16_RRCCONSETUP_R8 0
#define C16_SPARE7 1
#define C16_SPARE6 2
#define C16_SPARE5 3
#define C16_SPARE4 4
#define C16_SPARE3 5
#define C16_SPARE2 6
#define C16_SPARE1 7
#define CRITICALEXTNS_C16 0
#define C3_RRCCONREESTB 0
#define C3_RRCCONREESTBREJ 1
#define C3_RRCCONREJ 2
#define C3_RRCCONSETUP 3
#define DL_CCCH_MSGTYP_C3 0
#define DL_CCCH_MSGTYP_MESSAGECLASSEXTN 1
#define CRITICALEXTNS_CSFBPARAMSRSPCDMA2000_R8 0

#define DEDICATEDINFOTYP_DEDICATEDINFONAS 0
#define DEDICATEDINFOTYP_DEDICATEDINFOCDMA2000_1XRTT 1
#define DEDICATEDINFOTYP_DEDICATEDINFOCDMA2000_HRPD 2

#define C8_DLINFOTFR_R8 0
#define C8_SPARE3 1
#define C8_SPARE2 2
#define C8_SPARE1 3
#define CRITICALEXTNS_C8 0
#define C9_HANDOVERFROMEUTRAPREPRQST_R8 0
#define C9_SPARE3 1
#define C9_SPARE2 2
#define C9_SPARE1 3
#define CRITICALEXTNS_C9 0
#define SI_ORPSI_GERAN_SI 0
#define SI_ORPSI_GERAN_PSI 1

#define TARGETRAT_TYP_GERAN 0

#define PURPOSE_HANDOVER 0
#define PURPOSE_CELLCHANGEORDER 1

#define PURPOSE_HANDOVER 0
#define PURPOSE_CELLCHANGEORDER 1
#define PURPOSE_E_CSFB_R9 2

#define C11_MOBILITYFROMEUTRACMD_R8 0
#define C11_MOBILITYFROMEUTRACMD_R9 1
#define C11_SPARE2 2
#define C11_SPARE1 3
#define CRITICALEXTNS_C11 0
#define CELLSTOADDMODLST_CELLSTOADDMODLSTUTRA_FDD 0
#define CELLSTOADDMODLST_CELLSTOADDMODLSTUTRA_TDD 1
#define CELLFORWHICHTOREPORTCGI_UTRA_FDD 0
#define CELLFORWHICHTOREPORTCGI_UTRA_TDD 1
#define MEASOBJECT_MEASOBJECTEUTRA 0
#define MEASOBJECT_MEASOBJECTUTRA 1
#define MEASOBJECT_MEASOBJECTGERAN 2
#define MEASOBJECT_MEASOBJECTCDMA2000 3

#define THRESHOLDEUTRA_THRESHOLD_RSRP 0
#define THRESHOLDEUTRA_THRESHOLD_RSRQ 1

#define EVENTID_EVENTA1 0
#define EVENTID_EVENTA2 1
#define EVENTID_EVENTA3 2
#define EVENTID_EVENTA4 3
#define EVENTID_EVENTA5 4
#define TRIGGERTYP_EVENT 0
#define TRIGGERTYP_PERIODICAL 1
#define THRESHOLDUTRA_UTRA_RSCP 0
#define THRESHOLDUTRA_UTRA_ECN0 1

#define B1_THRESHOLD_B1_THRESHOLDUTRA 0
#define B1_THRESHOLD_B1_THRESHOLDGERAN 1
#define B1_THRESHOLD_B1_THRESHOLDCDMA2000 2
#define B2_THRESHOLD2_B2_THRESHOLD2UTRA 0
#define B2_THRESHOLD2_B2_THRESHOLD2GERAN 1
#define B2_THRESHOLD2_B2_THRESHOLD2CDMA2000 2
#define EVENTID_EVENTB1 0
#define EVENTID_EVENTB2 1
#define TRIGGERTYP_EVENT 0
#define TRIGGERTYP_PERIODICAL 1
#define REPORTCONFIG_REPORTCONFIGEUTRA 0
#define REPORTCONFIG_REPORTCONFIGINTERRAT 1

#define GAPOFFSET_GP0 0
#define GAPOFFSET_GP1 1
#define MEASGAPCONFIG_RELEASE 0
#define MEASGAPCONFIG_SETUP 1
#define SPEEDSTATEPARS_RELEASE 0
#define SPEEDSTATEPARS_SETUP 1

#define HANDOVERTYP_INTRALTE 0
#define HANDOVERTYP_INTERRAT 1

#define C12_RRCCONRECFGN_R8 0
#define C12_SPARE7 1
#define C12_SPARE6 2
#define C12_SPARE5 3
#define C12_SPARE4 4
#define C12_SPARE3 5
#define C12_SPARE2 6
#define C12_SPARE1 7
#define CRITICALEXTNS_C12 0
#define REDIRECTEDCARRIERINFO_EUTRA 0
#define REDIRECTEDCARRIERINFO_GERAN 1
#define REDIRECTEDCARRIERINFO_UTRA_FDD 2
#define REDIRECTEDCARRIERINFO_UTRA_TDD 3
#define REDIRECTEDCARRIERINFO_CDMA2000_HRPD 4
#define REDIRECTEDCARRIERINFO_CDMA2000_1XRTT 5

#define CELLINFOLST_R9_GERAN_R9 0
#define CELLINFOLST_R9_UTRA_FDD_R9 1
#define CELLINFOLST_R9_UTRA_TDD_R9 2

#define C15_RRCCONRLS_R8 0
#define C15_SPARE3 1
#define C15_SPARE2 2
#define C15_SPARE1 3
#define CRITICALEXTNS_C15 0
#define C18_SECURITYMODECMD_R8 0
#define C18_SPARE3 1
#define C18_SPARE2 2
#define C18_SPARE1 3
#define CRITICALEXTNS_C18 0
#define C19_UECAPENQUIRY_R8 0
#define C19_SPARE3 1
#define C19_SPARE2 2
#define C19_SPARE1 3
#define CRITICALEXTNS_C19 0
#define C7_COUNTERCHECK_R8 0
#define C7_SPARE3 1
#define C7_SPARE2 2
#define C7_SPARE1 3
#define CRITICALEXTNS_C7 0
#define C28_UEINFORQST_R9 0
#define C28_SPARE3 1
#define C28_SPARE2 2
#define C28_SPARE1 3
#define CRITICALEXTNS_C28 0
#define C4_CSFBPARAMSRSPCDMA2000 0
#define C4_DLINFOTFR 1
#define C4_HANDOVERFROMEUTRAPREPRQST 2
#define C4_MOBILITYFROMEUTRACMD 3
#define C4_RRCCONRECFGN 4
#define C4_RRCCONRLS 5
#define C4_SECURITYMODECMD 6
#define C4_UECAPENQUIRY 7
#define C4_COUNTERCHECK 8
#define C4_UEINFORQST_R9 9
#define C4_SPARE6 10
#define C4_SPARE5 11
#define C4_SPARE4 12
#define C4_SPARE3 13
#define C4_SPARE2 14
#define C4_SPARE1 15
#define DL_DCCH_MSGTYP_C4 0
#define DL_DCCH_MSGTYP_MESSAGECLASSEXTN 1
#define CRITICALEXTNS_RRCCONREESTBRQST_R8 0

#define INITUE_IDENTITY_S_TMSI 0
#define INITUE_IDENTITY_RANDOMVALUE 1

#define CRITICALEXTNS_RRCCONRQST_R8 0

#define C5_RRCCONREESTBRQST 0
#define C5_RRCCONRQST 1
#define UL_CCCH_MSGTYP_C5 0
#define UL_CCCH_MSGTYP_MESSAGECLASSEXTN 1
#define CRITICALEXTNS_CSFBPARAMSRQSTCDMA2000_R8 0

#define PHYSCELLID_FDD 0
#define PHYSCELLID_TDD 1

#define CELLGLOBALIDCDMA2000_CELLGLOBALID1XRTT 0
#define CELLGLOBALIDCDMA2000_CELLGLOBALIDHRPD 1

#define MEASRESULTNEIGHCELLS_MEASRESULTLSTEUTRA 0
#define MEASRESULTNEIGHCELLS_MEASRESULTLSTUTRA 1
#define MEASRESULTNEIGHCELLS_MEASRESULTLSTGERAN 2
#define MEASRESULTNEIGHCELLS_MEASRESULTSCDMA2000 3

#define C10_MEASUREMENTREPORT_R8 0
#define C10_SPARE7 1
#define C10_SPARE6 2
#define C10_SPARE5 3
#define C10_SPARE4 4
#define C10_SPARE3 5
#define C10_SPARE2 6
#define C10_SPARE1 7
#define CRITICALEXTNS_C10 0
#define CRITICALEXTNS_RRCCONRECFGNCOMPL_R8 0

#define CRITICALEXTNS_RRCCONREESTBCOMPL_R8 0

#define C17_RRCCONSETUPCOMPL_R8 0
#define C17_SPARE3 1
#define C17_SPARE2 2
#define C17_SPARE1 3
#define CRITICALEXTNS_C17 0
#define CRITICALEXTNS_SECURITYMODECOMPL_R8 0

#define CRITICALEXTNS_SECURITYMODEFAIL_R8 0

#define C20_UECAPINFO_R8 0
#define C20_SPARE7 1
#define C20_SPARE6 2
#define C20_SPARE5 3
#define C20_SPARE4 4
#define C20_SPARE3 5
#define C20_SPARE2 6
#define C20_SPARE1 7
#define CRITICALEXTNS_C20 0
#define C21_ULHOVRPREPTFR_R8 0
#define C21_SPARE3 1
#define C21_SPARE2 2
#define C21_SPARE1 3
#define CRITICALEXTNS_C21 0
#define DEDICATEDINFOTYP_DEDICATEDINFONAS 0
#define DEDICATEDINFOTYP_DEDICATEDINFOCDMA2000_1XRTT 1
#define DEDICATEDINFOTYP_DEDICATEDINFOCDMA2000_HRPD 2

#define C25_ULINFOTFR_R8 0
#define C25_SPARE3 1
#define C25_SPARE2 2
#define C25_SPARE1 3
#define CRITICALEXTNS_C25 0
#define CRITICALEXTNS_COUNTERCHECKRSP_R8 0

#define C29_UEINFORSP_R9 0
#define C29_SPARE3 1
#define C29_SPARE2 2
#define C29_SPARE1 3
#define CRITICALEXTNS_C29 0
#define CARRIERFREQ_R9_EUTRA_R9 0
#define CARRIERFREQ_R9_UTRA_R9 1

#define C27_PROXIMITYIND_R9 0
#define C27_SPARE3 1
#define C27_SPARE2 2
#define C27_SPARE1 3
#define CRITICALEXTNS_C27 0
#define C6_CSFBPARAMSRQSTCDMA2000 0
#define C6_MEASUREMENTREPORT 1
#define C6_RRCCONRECFGNCOMPL 2
#define C6_RRCCONREESTBCOMPL 3
#define C6_RRCCONSETUPCOMPL 4
#define C6_SECURITYMODECOMPL 5
#define C6_SECURITYMODEFAIL 6
#define C6_UECAPINFO 7
#define C6_ULHOVRPREPTFR 8
#define C6_ULINFOTFR 9
#define C6_COUNTERCHECKRSP 10
#define C6_UEINFORSP_R9 11
#define C6_PROXIMITYIND_R9 12
#define C6_SPARE3 13
#define C6_SPARE2 14
#define C6_SPARE1 15
#define UL_DCCH_MSGTYP_C6 0
#define UL_DCCH_MSGTYP_MESSAGECLASSEXTN 1
#define NhumaxBands 64
#define NhumaxCDMA_BandClass 32
#define NhumaxCellBlack 16
#define NhumaxCellInfoGERAN_r9 32
#define NhumaxCellInfoUTRA_r9 16
#define NhumaxCellInter 16
#define NhumaxCellIntra 16
#define NhumaxCellMeas 32
#define NhumaxCellReport 8
#define NhumaxDRB 11
#define NhumaxEARFCN 65535
#define NhumaxFreq 8
#define NhumaxGERAN_SI 10
#define NhumaxGNFG 16
#define NhumaxMBSFN_Allocns 8
#define NhumaxMBSFN_Area 8
#define NhumaxMeasId 32
#define NhumaxObjectId 32
#define NhumaxPageRec 16
#define NhumaxPhysCellIdRange_r9 4
#define NhumaxPNOffset 511
#define NhumaxPMCH_PerMBSFN 15
#define NhumaxRAT_Capabilities 8
#define NhumaxReportConfigId 32
#define NhumaxSessionPerPMCH 29
#define NhumaxSessionPerPMCH_1 28
#define NhumaxSIB 32
#define NhumaxSIB_1 31
#define NhumaxSI_Msg 32
#define NhumaxUTRA_FDD_Carrier 16
#define NhumaxUTRA_TDD_Carrier 16

#define SPEEDSTATEPARS_RELEASE 0
#define SPEEDSTATEPARS_SETUP 1

#define PHYSCELLIDUTRA_FDD 0
#define PHYSCELLIDUTRA_TDD 1
#define MEMBER_PHYSCELLIDEUTRA 0
#define MEMBER_PHYSCELLIDUTRA 1
#define MEMBER_PHYSCELLIDGERAN 2
#define MEMBER_PHYSCELLIDCDMA2000 3

#define C22_HANDOVERCMD_R8 0
#define C22_SPARE7 1
#define C22_SPARE6 2
#define C22_SPARE5 3
#define C22_SPARE4 4
#define C22_SPARE3 5
#define C22_SPARE2 6
#define C22_SPARE1 7
#define CRITICALEXTNS_C22 0
#define C23_HANDOVERPREPINFO_R8 0
#define C23_SPARE7 1
#define C23_SPARE6 2
#define C23_SPARE5 3
#define C23_SPARE4 4
#define C23_SPARE3 5
#define C23_SPARE2 6
#define C23_SPARE1 7
#define CRITICALEXTNS_C23 0
#define C24_UERADIOACCESSCAPINFO_R8 0
#define C24_SPARE7 1
#define C24_SPARE6 2
#define C24_SPARE5 3
#define C24_SPARE4 4
#define C24_SPARE3 5
#define C24_SPARE2 6
#define C24_SPARE1 7
#define CRITICALEXTNS_C24 0
#define NhumaxReestabInfo 32

#define CRITICALEXTNS_CRITICALEXTNSFUTURE 1
# 105 "../..//cm/nhu.h" 2


#define EVTNHUBNDREQ 0x01
#define EVTNHUBNDCFM 0x02
#define EVTNHUUBNDREQ 0x03
#define EVTNHUDATREQ 0x04
#define EVTNHUDATIND 0x05
#define EVTNHUDATRSP 0x06
#define EVTNHUERRIND 0x07
#define EVTNHUCFGREQ 0x08
#define EVTNHUCFGCFM 0x09
#define EVTNHUCNCLUEREQ 0x0A
#define EVTNHUCELLCFGREQ 0x0B
#define EVTNHUCELLCFGCFM 0x0C
#define EVTNHUDELETETRANSREQ 0x0D
#define EVTNHUDATCFM 0x0E
#define EVTNHUSTAIND 0x0F
#define EVTNHUUEIDREQ 0x10
#define EVTNHUUEIDCFM 0x11
#define EVTNHUPDCPSDUSTAREQ 0x12
#define EVTNHUPDCPSDUSTACFM 0x13
#define EVTNHUCOUNTREQ 0x14
#define EVTNHUCOUNTCFM 0x15
#define EVTNHUDCODEREQ 0x16
#define EVTNHUDCODECFM 0x17
#define EVTNHUENCODEREQ 0x18
#define EVTNHUENCODECFM 0x19



#define NHU_MSG_DLDCCH 0x01
#define NHU_MSG_ULDCCH 0x02
#define NHU_MSG_DLCCCH 0x03
#define NHU_MSG_ULCCCH 0x04
#define NHU_MSG_DLPCCH 0x05
#define NHU_MSG_DLBCCHBCH 0x06
#define NHU_MSG_DLBCCHDLSCH 0x07
#define NHU_MSG_HOCMD 0x08
#define NHU_MSG_UERACAPINFO 0x09
#define NHU_MSG_UECAPINFO 0x0A
#define NHU_MSG_HOPREPINFO 0x0B


#define NHU_DEC_SDUTYPE_EUTRA_UECAP_IE 0x0C
#define NHU_DEC_SDUTYPE_UTRA_INTR_HOVR_MESSGE 0x0D
#define NHU_DEC_SDUTYPE_UTRA_UECAP_IE 0x0E






#define NHU_SIB_TYPE1 0x01
#define NHU_SIB_TYPE2 0x02
#define NHU_SIB_TYPE3 0x03
#define NHU_SIB_TYPE4 0x04
#define NHU_SIB_TYPE5 0x05
#define NHU_SIB_TYPE6 0x06
#define NHU_SIB_TYPE7 0x07
#define NHU_SIB_TYPE8 0x08
#define NHU_SIB_TYPE9 0x09
#define NHU_SIB_TYPE10 0x0A
#define NHU_SIB_TYPE11 0x0B



#define NHU_SIB_TYPE12 0x0C
#define NHU_SIB_TYPE13 0x0D



#define NHU_DECODE_SUCCESS 0
#define NHU_DECODE_FAIL 1


#define NHU_ENCODE_SUCCESS 0
#define NHU_ENCODE_FAIL 1


#define NHU_ERRTYPE_NONE 0x00
#define NHU_ERRTYPE_RLC_DAT_IND 0x01
#define NHU_ERRTYPE_PDCP_DAT_IND 0x02
#define NHU_ERRTYPE_PDCP_DAT_CFM 0x03
#define NHU_ERRTYPE_INV_DEL_TRANS_REQ 0x04
#define NUU_ERRTYPE_INV_CNCL_UE_REQ 0x05
#define NHU_ERRTYPE_INV_SDU_PARAM 0x06
#define NHU_ERRTYPE_ENC_FAILED 0x07
#define NHU_ERRTYPE_DEC_FAILED 0x08
#define NHU_ERRTYPE_INV_NHU_HDR 0x09
#define NHU_ERRTYPE_INV_UE_MSG_PARAM 0x0a
#define NHU_ERRTYPE_INV_CFG 0x0b
#define NHU_ERRTYPE_TX_FAILED 0x0c
#define NHU_ERRTYPE_INV_RLS_REQ 0x0d
#define NHU_ERRTYPE_MSG_SEND_FAILED 0x0e
#define NHU_ERRTYPE_UE_CFG 0x0f
#define NHU_ERRTYPE_CELL_CFG 0x10
#define NHU_ERRTYPE_MAX_CONN 0x11


#define NHU_ERRCAUSE_NONE 0x00
#define NHU_ERRCAUSE_WRONG_RB_ID 0x01
#define NHU_ERRCAUSE_CELL_NOT_CONFIGURED 0x02
#define NHU_ERRCAUSE_UE_NOT_CONFIGURED 0x03
#define NHU_ERRCAUSE_RB_NOT_CONFIGURED 0x04
#define NHU_ERRCAUSE_CFG_IN_PROGRESS 0x05
#define NHU_ERRCAUSE_INV_HDR_CELLID 0x06
#define NHU_ERRCAUSE_INV_HDR_UEID 0x07
#define NHU_ERRCAUSE_DUPLICATE_RXTRANSID 0x08
#define NHU_ERRCAUSE_DUPLICATE_RRCTRANSID 0x09
#define NHU_ERRCAUSE_TRANSCB_UPD_FAIL 0x0a
#define NHU_ERRCAUSE_LOW_LYR_CFG_FAIL 0x0b
#define NHU_ERRCAUSE_TRANSCB_NOT_FOUND 0x0c
#define NHU_ERRCAUSE_INVALID_CFG_INFO 0x0d
#define NHU_ERRCAUSE_INV_BITMASK 0x0e
#define NHU_ERRCAUSE_INV_SDU_CHOICE_VAL 0x0f
#define NHU_ERRCAUSE_INV_MSG_CATEGORY 0x10
#define NHU_ERRCAUSE_INV_TRCH 0x11
#define NHU_ERRCAUSE_INV_CFG_TYPE 0x12
#define NHU_ERRCAUSE_RLS_IN_PROGRESS 0x13
#define NHU_ERRCAUSE_FAILED_SENDTORLC 0x14
#define NHU_ERRCAUSE_INV_RB_CFG_INFO 0x15
#define NHU_ERRCAUSE_CFG_PARAM_OUT_OF_BOUNDS 0x16
#define NHU_ERRCAUSE_TIMEOUT 0x17
#define NHU_ERRCAUSE_INVALID_TBS_SIZE 0x18
#define NHU_ERRCAUSE_WRONG_PDCP_ID 0x19
#define NHU_ERRCAUSE_SRB1_NOT_CONFIGURED 0x1A
#define NHU_ERRCAUSE_SEC_NOT_CONFIGURED 0x1B
#define NHU_ERRCAUSE_DUPLICATE_CELL 0x1C
#define NHU_ERRCAUSE_INVALID_CELLID 0x1D
#define NHU_ERRCAUSE_DAT_CFM_DISCARD 0x1E
#define NHU_ERRCAUSE_CRNTI_NOT_CFG 0x1F
#define NHU_ERRCAUSE_CRNTI_MISMATCH 0x20
#define NHU_ERRCAUSE_INTEGRITY_FAILED 0x21
#define NHU_ERRCAUSE_DECIPHERING_FAILED 0x22
#define NHU_ERRCAUSE_MAX_RLC_TRANS_REACH 0x23
#define NHU_ERRCAUSE_PDCP_SDU_DIS_TMR_EXP 0x24
#define NHU_ERRCAUSE_INVALID_MUI 0x25
#define NHU_ERRCAUSE_UE_CB_CREATE_FAILED 0x26
#define NHU_ERRCAUSE_UE_WRONG_MSG_TYP_SEL 0x27
#define NHU_ERRCAUSE_INV_SDU_TYP 0x28




#define NHU_ERRCAUSE_UNPROTECTED_PENDING 0x2B




#define NHU_ERRCAUSE_INV_SEC_CFG 0x2D
#define NHU_ERRCAUSE_MAX_DRB 0x2E
#define NHU_ERRCAUSE_DECOMPRESSION_FAILED 0x2F
#define NHU_ERRCAUSE_COMPRESSION_FAILED 0x30
#define NHU_ERRCAUSE_INTEG_PROT_FAILED 0x31
#define NHU_ERRCAUSE_CIPHERING_FAILED 0x32



#define NHU_ERRCAUSE_LLYR_SAP_NOT_EXIST 0x33


#define NHU_ERRCAUSE_SRB2_NOT_ESTABLISHED 0x34
#define NHU_ERRCAUSE_DRBS_NOT_ESTABLISHED 0x35



#define NHU_CFGTYPE_SETUP 0x01
#define NHU_CFGTYPE_MODIFY 0x02
#define NHU_CFGTYPE_RELEASE 0x04



#define NHU_DAT_UE_MSG 0x01
#define NHU_DAT_UE_CFG 0x02


#define NHU_CFG_RB_ADD 0x01
#define NHU_CFG_RB_MODIFY 0x02
#define NHU_CFG_RB_RLS 0x04


#define NHU_CFGERRTYPE_RLC 0x01
#define NHU_CFGERRTYPE_MAC 0x02
#define NHU_CFGERRTYPE_PDCP 0x04





#define NHU_CFGERRCAUSE_INV_PARAM 0x01
#define NHU_CFGERRCAUSE_INV_STATE 0x02
#define NHU_CFGERRCAUSE_INCOMPATIBLE 0x03
#define NHU_CFGERRCAUSE_UNKNOWN 0x04
#define NHU_CFGERRCAUSE_TMR_EXPIRED 0x05


#define NHU_CONN_RECFG_AT_HNDOVR 0x01

#define NHU_CONN_RECFG_AFTER_RESTB 0x02

#define NHU_CONN_RESTB_EVNT 0x04
#define NHU_CONN_RECFG_FOR_MESR_CFG 0x08


#define NHU_CFG_TYPE_EXPLICIT 0x01
#define NHU_CFG_TYPE_MSAP 0x02


#define NHU_CFG_TYPE_DFLT 0x04


#define NHU_SEL_LC 0
#define NHU_SEL_TC 1
#define NHU_SEL_LWLC 2

#define NHU_MAX_SUB_FRAME_NUM 10

#define NHU_MAX_ROHC_PROF_LST_LEN 9

#define NHU_CIPH_KEY_LEN 16
#define NHU_INTG_KEY_LEN 16

#define NHU_MAX_DIR 2
#define NHU_DIR_UPLINK 0
#define NHU_DIR_DOWNLINK 1


#define NHU_PDCP_DISCARD_TMR 0x01
#define NHU_PDCP_FLUSH_TMR 0x02
#define NHU_PDCP_SN_SIZE 0x04
#define NHU_PDCP_STATUS_RPT 0x08
#define NHU_PDCP_HDR_COMPR_INFO 0x10
#define NHU_PDCP_SDU_STA_INFO 0x20
#define NHU_PDCP_CFM_REQD 0x40


#define NHU_SEC_CIPHER_ALGO 0x01
#define NHU_SEC_INTG_ALGO 0x02


#define NHU_ACTION_ADD 0x01
#define NHU_ACTION_MODIFY 0x02
#define NHU_ACTION_RLS 0x03


#define NHU_RLC_MODE_TM 0x01
#define NHU_RLC_MODE_UM 0x02
#define NHU_RLC_MODE_AM 0x03



#define NHU_UL_LOGCH_MAP_GRP 0x04


#define NHU_EXP_CFG_RB_CFG 0x01
#define NHU_EXP_CFG_TRCH_CFG 0x02
#define NHU_EXP_CFG_SEC_CFG 0x04
#define NHU_EXP_CFG_UE_CFG 0x08





#define NHU_TRCH_CFG_UL_HARQ 0x01



#define NHU_CELL_CFG_RB 0x01
#define NHU_CELL_CFG_MSAP 0x02
#define NHU_CELL_PHY_CFG 0x04
#define NHU_CELL_CFG_MAC_CMN 0x08


#define NHU_CELL_RECFG_RB 0x01
#define NHU_CELL_RECFG_RACH 0x02
#define NHU_CELL_RECFG_MSAP 0x04



#define NHU_CELL_CFG_INFO 0x01
#define NHU_CELL_RECFG_INFO 0x02
#define NHU_CELL_RLS_INFO 0x04



#define NHU_KWU_SAP_ID_INFO 0x01
#define NHU_CKW_SAP_ID_INFO 0x02
#define NHU_CRG_SAP_ID_INFO 0x04
#define NhU_CDM_SAP_ID_INFO 0x08
#define NhU_DMU_SAP_ID_INFO 0x10


#define NHU_RB_CFG_LOGCH_MAP_UL 0x01
#define NHU_RB_CFG_RLC_MODE_UL 0x02


#define NHU_RB_CFG_LOGCH_MAP_DL 0x01
#define NHU_RB_CFG_RLC_MODE_DL 0x02


#define NHU_RB_CFG_UL 0x01
#define NHU_RB_CFG_DL 0x02
#define NHU_RB_CFG_PDCP_INFO 0x04

#define NHU_CONRES_ID_LEN 6


#define NHU_RAT_TYP_EUTRA 1
#define NHU_RAT_TYP_UTRA 2



#define NHU_MAX_DRB 11
# 461 "../..//cm/nhu.h"
#define NHU_HO_NOT_PRSNT 0x00
#define NHU_HO_UL 0x01
#define NHU_HO_DL 0x02


#define ENHUXXX 0
#define ERRNHU 0

#define ENHU001 (ERRNHU + 1)
#define ENHU002 (ERRNHU + 2)
#define ENHU003 (ERRNHU + 3)
#define ENHU004 (ERRNHU + 4)
#define ENHU005 (ERRNHU + 5)
#define ENHU006 (ERRNHU + 6)
#define ENHU007 (ERRNHU + 7)
#define ENHU008 (ERRNHU + 8)
#define ENHU009 (ERRNHU + 9)
#define ENHU010 (ERRNHU + 10)
#define ENHU011 (ERRNHU + 11)
#define ENHU012 (ERRNHU + 12)
#define ENHU013 (ERRNHU + 13)
#define ENHU014 (ERRNHU + 14)
#define ENHU015 (ERRNHU + 15)
#define ENHU016 (ERRNHU + 16)
#define ENHU017 (ERRNHU + 17)
#define ENHU018 (ERRNHU + 18)
#define ENHU019 (ERRNHU + 19)
#define ENHU020 (ERRNHU + 20)
#define ENHU021 (ERRNHU + 21)
#define ENHU022 (ERRNHU + 22)
#define ENHU023 (ERRNHU + 23)
#define ENHU024 (ERRNHU + 24)
#define ENHU025 (ERRNHU + 25)
#define ENHU026 (ERRNHU + 26)
#define ENHU027 (ERRNHU + 27)
#define ENHU028 (ERRNHU + 28)
#define ENHU029 (ERRNHU + 29)
#define ENHU030 (ERRNHU + 30)
#define ENHU031 (ERRNHU + 31)
#define ENHU032 (ERRNHU + 32)
#define ENHU033 (ERRNHU + 33)
#define ENHU034 (ERRNHU + 34)
#define ENHU035 (ERRNHU + 35)
#define ENHU036 (ERRNHU + 36)
#define ENHU037 (ERRNHU + 37)
#define ENHU038 (ERRNHU + 38)
#define ENHU039 (ERRNHU + 39)
#define ENHU040 (ERRNHU + 40)
#define ENHU041 (ERRNHU + 41)
#define ENHU042 (ERRNHU + 42)
#define ENHU043 (ERRNHU + 43)
#define ENHU044 (ERRNHU + 44)
#define ENHU045 (ERRNHU + 45)
#define ENHU046 (ERRNHU + 46)
#define ENHU047 (ERRNHU + 47)
#define ENHU048 (ERRNHU + 48)
#define ENHU049 (ERRNHU + 49)
#define ENHU050 (ERRNHU + 50)
#define ENHU051 (ERRNHU + 51)
#define ENHU052 (ERRNHU + 52)
#define ENHU053 (ERRNHU + 53)
#define ENHU054 (ERRNHU + 54)
#define ENHU055 (ERRNHU + 55)
#define ENHU056 (ERRNHU + 56)
#define ENHU057 (ERRNHU + 57)
#define ENHU058 (ERRNHU + 58)
#define ENHU059 (ERRNHU + 59)
#define ENHU060 (ERRNHU + 60)
#define ENHU061 (ERRNHU + 61)
#define ENHU062 (ERRNHU + 62)
#define ENHU063 (ERRNHU + 63)
#define ENHU064 (ERRNHU + 64)
#define ENHU065 (ERRNHU + 65)
#define ENHU066 (ERRNHU + 66)
#define ENHU067 (ERRNHU + 67)
#define ENHU068 (ERRNHU + 68)
#define ENHU069 (ERRNHU + 69)
#define ENHU070 (ERRNHU + 70)
#define ENHU071 (ERRNHU + 71)
#define ENHU072 (ERRNHU + 72)
#define ENHU073 (ERRNHU + 73)
#define ENHU074 (ERRNHU + 74)
#define ENHU075 (ERRNHU + 75)
#define ENHU076 (ERRNHU + 76)
#define ENHU077 (ERRNHU + 77)
#define ENHU078 (ERRNHU + 78)
#define ENHU079 (ERRNHU + 79)
#define ENHU080 (ERRNHU + 80)
#define ENHU081 (ERRNHU + 81)
#define ENHU082 (ERRNHU + 82)
#define ENHU083 (ERRNHU + 83)
#define ENHU084 (ERRNHU + 84)
#define ENHU085 (ERRNHU + 85)
#define ENHU086 (ERRNHU + 86)
#define ENHU087 (ERRNHU + 87)
#define ENHU088 (ERRNHU + 88)
#define ENHU089 (ERRNHU + 89)
#define ENHU090 (ERRNHU + 90)
#define ENHU091 (ERRNHU + 91)
#define ENHU092 (ERRNHU + 92)
#define ENHU093 (ERRNHU + 93)
#define ENHU094 (ERRNHU + 94)
#define ENHU095 (ERRNHU + 95)
#define ENHU096 (ERRNHU + 96)
#define ENHU097 (ERRNHU + 97)
#define ENHU098 (ERRNHU + 98)
#define ENHU099 (ERRNHU + 99)
#define ENHU100 (ERRNHU + 100)
#define ENHU101 (ERRNHU + 101)
#define ENHU102 (ERRNHU + 102)
#define ENHU103 (ERRNHU + 103)
#define ENHU104 (ERRNHU + 104)
#define ENHU105 (ERRNHU + 105)
#define ENHU106 (ERRNHU + 106)
#define ENHU107 (ERRNHU + 107)
#define ENHU108 (ERRNHU + 108)
#define ENHU109 (ERRNHU + 109)
#define ENHU110 (ERRNHU + 110)
#define ENHU111 (ERRNHU + 111)
#define ENHU112 (ERRNHU + 112)
#define ENHU113 (ERRNHU + 113)
#define ENHU114 (ERRNHU + 114)
#define ENHU115 (ERRNHU + 115)
#define ENHU116 (ERRNHU + 116)
#define ENHU117 (ERRNHU + 117)
#define ENHU118 (ERRNHU + 118)
#define ENHU119 (ERRNHU + 119)
#define ENHU120 (ERRNHU + 120)
#define ENHU121 (ERRNHU + 121)
#define ENHU122 (ERRNHU + 122)
#define ENHU123 (ERRNHU + 123)
#define ENHU124 (ERRNHU + 124)
#define ENHU125 (ERRNHU + 125)
#define ENHU126 (ERRNHU + 126)
#define ENHU127 (ERRNHU + 127)
#define ENHU128 (ERRNHU + 128)
#define ENHU129 (ERRNHU + 129)
#define ENHU130 (ERRNHU + 130)
#define ENHU131 (ERRNHU + 131)
#define ENHU132 (ERRNHU + 132)
#define ENHU133 (ERRNHU + 133)
#define ENHU134 (ERRNHU + 134)
#define ENHU135 (ERRNHU + 135)
#define ENHU136 (ERRNHU + 136)
#define ENHU137 (ERRNHU + 137)
#define ENHU138 (ERRNHU + 138)
#define ENHU139 (ERRNHU + 139)
#define ENHU140 (ERRNHU + 140)
#define ENHU141 (ERRNHU + 141)
#define ENHU142 (ERRNHU + 142)
#define ENHU143 (ERRNHU + 143)
#define ENHU144 (ERRNHU + 144)
#define ENHU145 (ERRNHU + 145)
#define ENHU146 (ERRNHU + 146)
#define ENHU147 (ERRNHU + 147)
#define ENHU148 (ERRNHU + 148)
#define ENHU149 (ERRNHU + 149)
#define ENHU150 (ERRNHU + 150)
#define ENHU151 (ERRNHU + 151)
#define ENHU152 (ERRNHU + 152)
#define ENHU153 (ERRNHU + 153)
#define ENHU154 (ERRNHU + 154)
#define ENHU155 (ERRNHU + 155)
#define ENHU156 (ERRNHU + 156)
#define ENHU157 (ERRNHU + 157)
#define ENHU158 (ERRNHU + 158)
#define ENHU159 (ERRNHU + 159)
#define ENHU160 (ERRNHU + 160)
#define ENHU161 (ERRNHU + 161)
#define ENHU162 (ERRNHU + 162)
#define ENHU163 (ERRNHU + 163)
#define ENHU164 (ERRNHU + 164)
#define ENHU165 (ERRNHU + 165)
#define ENHU166 (ERRNHU + 166)
# 130 "../..//enbapp/src/wr.h" 2
# 1 "../..//cm/pju.h" 1
# 90 "../..//cm/pju.h"
#define __PJU_H__ 
# 102 "../..//cm/pju.h"
#define PJU_SEL_LC 0


#define PJU_INTVER_FAILED 1
#define PJU_DCIP_FAILED 2
#define PJU_DCOMP_FAILED 3
#define PJU_COMP_FAILED 4
#define PJU_INTPROT_FAILED 5
#define PJU_CIPHER_FAILED 6
#define PJU_MAX_SDU_SIZ_EXCEED 7



#define EVTPJUBNDREQ 0x40
#define EVTPJUBNDCFM 0x41
#define EVTPJUUBNDREQ 0x42
#define EVTPJUDATREQ 0x43
#define EVTPJUDATIND 0x44
#define EVTPJUDATCFM 0x45
#define EVTPJUSTAIND 0x46
#define EVTPJUDATFWDREQ 0x47
#define EVTPJUDATFWDIND 0x48

#define PJU_DAT_CFM_SUCCESS 0
#define PJU_RLC_TRANS_FAIL 1
#define PJU_DISCARD_TMR_EXP 2


#define PJU_MAX_SDU_CFM 25



#define EPJUXXX 0
#define ERRPJU 0

#define EPJU001 (ERRPJU + 1)
#define EPJU002 (ERRPJU + 2)
#define EPJU003 (ERRPJU + 3)
#define EPJU004 (ERRPJU + 4)
#define EPJU005 (ERRPJU + 5)
#define EPJU006 (ERRPJU + 6)
#define EPJU007 (ERRPJU + 7)
#define EPJU008 (ERRPJU + 8)
#define EPJU009 (ERRPJU + 9)
#define EPJU010 (ERRPJU + 10)
#define EPJU011 (ERRPJU + 11)
#define EPJU012 (ERRPJU + 12)
#define EPJU013 (ERRPJU + 13)
#define EPJU014 (ERRPJU + 14)
#define EPJU015 (ERRPJU + 15)
#define EPJU016 (ERRPJU + 16)
#define EPJU017 (ERRPJU + 17)
#define EPJU018 (ERRPJU + 18)
#define EPJU019 (ERRPJU + 19)
#define EPJU020 (ERRPJU + 20)
#define EPJU021 (ERRPJU + 21)
#define EPJU022 (ERRPJU + 22)
#define EPJU023 (ERRPJU + 23)
#define EPJU024 (ERRPJU + 24)
#define EPJU025 (ERRPJU + 25)
#define EPJU026 (ERRPJU + 26)
#define EPJU027 (ERRPJU + 27)
#define EPJU028 (ERRPJU + 28)
#define EPJU029 (ERRPJU + 29)
#define EPJU030 (ERRPJU + 30)
#define EPJU031 (ERRPJU + 31)
#define EPJU032 (ERRPJU + 32)
#define EPJU033 (ERRPJU + 33)
#define EPJU034 (ERRPJU + 34)
#define EPJU035 (ERRPJU + 35)
#define EPJU036 (ERRPJU + 36)
#define EPJU037 (ERRPJU + 37)
#define EPJU038 (ERRPJU + 38)
#define EPJU039 (ERRPJU + 39)
#define EPJU040 (ERRPJU + 40)
#define EPJU041 (ERRPJU + 41)
#define EPJU042 (ERRPJU + 42)
#define EPJU043 (ERRPJU + 43)
#define EPJU044 (ERRPJU + 44)
#define EPJU045 (ERRPJU + 45)
#define EPJU046 (ERRPJU + 46)
#define EPJU047 (ERRPJU + 47)
#define EPJU048 (ERRPJU + 48)
#define EPJU049 (ERRPJU + 49)
#define EPJU050 (ERRPJU + 50)
#define EPJU051 (ERRPJU + 51)
#define EPJU052 (ERRPJU + 52)
#define EPJU053 (ERRPJU + 53)
#define EPJU054 (ERRPJU + 54)
#define EPJU055 (ERRPJU + 55)
#define EPJU056 (ERRPJU + 56)
#define EPJU057 (ERRPJU + 57)
#define EPJU058 (ERRPJU + 58)
#define EPJU059 (ERRPJU + 59)
#define EPJU060 (ERRPJU + 60)
#define EPJU061 (ERRPJU + 61)
#define EPJU062 (ERRPJU + 62)
#define EPJU063 (ERRPJU + 63)
#define EPJU064 (ERRPJU + 64)
#define EPJU065 (ERRPJU + 65)
#define EPJU066 (ERRPJU + 66)
#define EPJU067 (ERRPJU + 67)
#define EPJU068 (ERRPJU + 68)
#define EPJU069 (ERRPJU + 69)
#define EPJU070 (ERRPJU + 70)
#define EPJU071 (ERRPJU + 71)
#define EPJU072 (ERRPJU + 72)
#define EPJU073 (ERRPJU + 73)
#define EPJU074 (ERRPJU + 74)
#define EPJU075 (ERRPJU + 75)
#define EPJU076 (ERRPJU + 76)
#define EPJU077 (ERRPJU + 77)
#define EPJU078 (ERRPJU + 78)
#define EPJU079 (ERRPJU + 79)
#define EPJU080 (ERRPJU + 80)
#define EPJU081 (ERRPJU + 81)
#define EPJU082 (ERRPJU + 82)
#define EPJU083 (ERRPJU + 83)
#define EPJU084 (ERRPJU + 84)
#define EPJU085 (ERRPJU + 85)
#define EPJU086 (ERRPJU + 86)
#define EPJU087 (ERRPJU + 87)
#define EPJU088 (ERRPJU + 88)
#define EPJU089 (ERRPJU + 89)
#define EPJU090 (ERRPJU + 90)
#define EPJU091 (ERRPJU + 91)
# 131 "../..//enbapp/src/wr.h" 2
# 1 "../..//cm/cpj.h" 1
# 88 "../..//cm/cpj.h"
#define __CPJ_H__ 
# 99 "../..//cm/cpj.h"
#define CPJ_SEL_LC 0

#define CPJ_7BIT_SN_SIZE 7
#define CPJ_12BIT_SN_SIZE 12
#define CPJ_MAX_CFG 10
#define CPJ_MAX_DRB 12


#define CPJ_CFG_REAS_NONE 0
#define CPJ_CFG_REAS_ENT_CREAT_FAIL 1
#define CPJ_CFG_REAS_UE_CREAT_FAIL 2
#define CPJ_CFG_REAS_INVALID_PDCPID 3
#define CPJ_CFG_REAS_PDCPID_PRSNT 4
#define CPJ_CFG_REAS_INVALID_RLCMODE 5
#define CPJ_CFG_REAS_PDCPID_UNKWN 6
#define CPJ_CFG_REAS_UE_UNKWN 7
#define CPJ_CFG_REAS_CIPHER_ALGO_INVALID 8
#define CPJ_CFG_REAS_ENT_DEL_FAIL 9
#define CPJ_CFG_REAS_UE_DEL_FAIL 10
#define CPJ_CFG_REAS_REEST_FAIL 11
#define CPJ_CFG_REAS_COMP_ALGO_INVALID 12

#define CPJ_CFG_REAS_RECFG_FAIL 13
#define CPJ_CFG_REAS_INVALID_CFG 14
#define CPJ_CFG_REAS_SAME_UEID 15

#define CPJ_CFG_REAS_SAME_RBID 16

#define CPJ_CFG_REAS_INVALID_RBID 17

#define CPJ_CFG_REAS_INTINIT_FAILED 18
#define CPJ_CFG_REAS_CCIPHR_FAILED 19
#define CPJ_CFG_REAS_UCIPHR_FAILED 20

#define CPJ_CFG_REAS_NO_DRBS 21
#define CPJ_CFG_REAS_OBD_TIMEOUT 22
#define CPJ_CFG_REAS_INVALID_STATE 23


#define CPJ_CFG_CFM_OK 1
#define CPJ_CFG_CFM_NOK 2


#define CPJ_EVC_RESET_FAILED 1

#define EVTCPJBNDREQ 0x20
#define EVTCPJBNDCFM 0x21
#define EVTCPJUBNDREQ 0x22
#define EVTCPJCFGREQ 0x23
#define EVTCPJCFGCFM 0x24
#define EVTCPJUEIDCHGREQ 0x25
#define EVTCPJUEIDCHGCFM 0x26
#define EVTCPJSECCFGREQ 0x27
#define EVTCPJSECCFGCFM 0x28
#define EVTCPJREESTREQ 0x29
#define EVTCPJREESTCFM 0x2A
#define EVTCPJCOUNTREQ 0x2B
#define EVTCPJCOUNTCFM 0x2C
#define EVTCPJSDUSTAREQ 0x2D
#define EVTCPJSDUSTACFM 0x2E

#define CPJ_CIPHER_KEY_LEN 16
#define CPJ_INTG_KEY_LEN 16
#define CPJ_MAX_ROHC_PROF_LIST 9
#define CPJ_MAX_CFM 10

#define CPJ_CFG_ADD 0x01

#define CPJ_CFG_MODIFY 0x02

#define CPJ_CFG_DELETE 0x03

#define CPJ_CFG_REESTABLISH 0x04

#define CPJ_CFG_DELETE_UE 0x05


#define CPJ_SEC_INTG_INFO 0x01
#define CPJ_SEC_CIPHER_INFO 0x02

#define CPJ_SEC_ALG_NULL 0x01
#define CPJ_SEC_ALG_SNOW3G 0x02
#define CPJ_SEC_ALG_AES 0x03




#define CPJ_RECFG_DISRQD 0x01
#define CPJ_RECFG_CFMREQ 0x02


#define CPJ_HO_NOT_PRSNT 0
#define CPJ_HO_UL 1
#define CPJ_HO_DL 2







#define ECPJXXX 0
#define ERRCPJ 0

#define ECPJ001 (ERRCPJ + 1)
#define ECPJ002 (ERRCPJ + 2)
#define ECPJ003 (ERRCPJ + 3)
#define ECPJ004 (ERRCPJ + 4)
#define ECPJ005 (ERRCPJ + 5)
#define ECPJ006 (ERRCPJ + 6)
#define ECPJ007 (ERRCPJ + 7)
#define ECPJ008 (ERRCPJ + 8)
#define ECPJ009 (ERRCPJ + 9)
#define ECPJ010 (ERRCPJ + 10)
#define ECPJ011 (ERRCPJ + 11)
#define ECPJ012 (ERRCPJ + 12)
#define ECPJ013 (ERRCPJ + 13)
#define ECPJ014 (ERRCPJ + 14)
#define ECPJ015 (ERRCPJ + 15)
#define ECPJ016 (ERRCPJ + 16)
#define ECPJ017 (ERRCPJ + 17)
#define ECPJ018 (ERRCPJ + 18)
#define ECPJ019 (ERRCPJ + 19)
#define ECPJ020 (ERRCPJ + 20)
#define ECPJ021 (ERRCPJ + 21)
#define ECPJ022 (ERRCPJ + 22)
#define ECPJ023 (ERRCPJ + 23)
#define ECPJ024 (ERRCPJ + 24)
#define ECPJ025 (ERRCPJ + 25)
#define ECPJ026 (ERRCPJ + 26)
#define ECPJ027 (ERRCPJ + 27)
#define ECPJ028 (ERRCPJ + 28)
#define ECPJ029 (ERRCPJ + 29)
#define ECPJ030 (ERRCPJ + 30)
#define ECPJ031 (ERRCPJ + 31)
#define ECPJ032 (ERRCPJ + 32)
#define ECPJ033 (ERRCPJ + 33)
#define ECPJ034 (ERRCPJ + 34)
#define ECPJ035 (ERRCPJ + 35)
#define ECPJ036 (ERRCPJ + 36)
#define ECPJ037 (ERRCPJ + 37)
#define ECPJ038 (ERRCPJ + 38)
#define ECPJ039 (ERRCPJ + 39)
#define ECPJ040 (ERRCPJ + 40)
#define ECPJ041 (ERRCPJ + 41)
#define ECPJ042 (ERRCPJ + 42)
#define ECPJ043 (ERRCPJ + 43)
#define ECPJ044 (ERRCPJ + 44)
#define ECPJ045 (ERRCPJ + 45)
#define ECPJ046 (ERRCPJ + 46)
#define ECPJ047 (ERRCPJ + 47)
#define ECPJ048 (ERRCPJ + 48)
#define ECPJ049 (ERRCPJ + 49)
#define ECPJ050 (ERRCPJ + 50)
#define ECPJ051 (ERRCPJ + 51)
#define ECPJ052 (ERRCPJ + 52)
#define ECPJ053 (ERRCPJ + 53)
#define ECPJ054 (ERRCPJ + 54)
#define ECPJ055 (ERRCPJ + 55)
#define ECPJ056 (ERRCPJ + 56)
#define ECPJ057 (ERRCPJ + 57)
#define ECPJ058 (ERRCPJ + 58)
#define ECPJ059 (ERRCPJ + 59)
#define ECPJ060 (ERRCPJ + 60)
#define ECPJ061 (ERRCPJ + 61)
#define ECPJ062 (ERRCPJ + 62)
#define ECPJ063 (ERRCPJ + 63)
#define ECPJ064 (ERRCPJ + 64)
#define ECPJ065 (ERRCPJ + 65)
#define ECPJ066 (ERRCPJ + 66)
#define ECPJ067 (ERRCPJ + 67)
#define ECPJ068 (ERRCPJ + 68)
#define ECPJ069 (ERRCPJ + 69)
#define ECPJ070 (ERRCPJ + 70)
#define ECPJ071 (ERRCPJ + 71)
#define ECPJ072 (ERRCPJ + 72)
#define ECPJ073 (ERRCPJ + 73)
#define ECPJ074 (ERRCPJ + 74)
#define ECPJ075 (ERRCPJ + 75)
#define ECPJ076 (ERRCPJ + 76)
#define ECPJ077 (ERRCPJ + 77)
#define ECPJ078 (ERRCPJ + 78)
#define ECPJ079 (ERRCPJ + 79)
#define ECPJ080 (ERRCPJ + 80)
#define ECPJ081 (ERRCPJ + 81)
#define ECPJ082 (ERRCPJ + 82)
#define ECPJ083 (ERRCPJ + 83)
#define ECPJ084 (ERRCPJ + 84)
#define ECPJ085 (ERRCPJ + 85)
#define ECPJ086 (ERRCPJ + 86)
#define ECPJ087 (ERRCPJ + 87)
#define ECPJ088 (ERRCPJ + 88)
#define ECPJ089 (ERRCPJ + 89)
#define ECPJ090 (ERRCPJ + 90)
#define ECPJ091 (ERRCPJ + 91)
#define ECPJ092 (ERRCPJ + 92)
#define ECPJ093 (ERRCPJ + 93)
#define ECPJ094 (ERRCPJ + 94)
#define ECPJ095 (ERRCPJ + 95)
#define ECPJ096 (ERRCPJ + 96)
#define ECPJ097 (ERRCPJ + 97)
#define ECPJ098 (ERRCPJ + 98)
#define ECPJ099 (ERRCPJ + 99)
#define ECPJ100 (ERRCPJ + 100)
#define ECPJ101 (ERRCPJ + 101)
#define ECPJ102 (ERRCPJ + 102)
#define ECPJ103 (ERRCPJ + 103)
#define ECPJ104 (ERRCPJ + 104)
#define ECPJ105 (ERRCPJ + 105)
#define ECPJ106 (ERRCPJ + 106)
#define ECPJ107 (ERRCPJ + 107)
#define ECPJ108 (ERRCPJ + 108)
#define ECPJ109 (ERRCPJ + 109)
#define ECPJ110 (ERRCPJ + 110)
#define ECPJ111 (ERRCPJ + 111)
#define ECPJ112 (ERRCPJ + 112)
#define ECPJ113 (ERRCPJ + 113)
#define ECPJ114 (ERRCPJ + 114)
#define ECPJ115 (ERRCPJ + 115)
#define ECPJ116 (ERRCPJ + 116)
#define ECPJ117 (ERRCPJ + 117)
#define ECPJ118 (ERRCPJ + 118)
#define ECPJ119 (ERRCPJ + 119)
#define ECPJ120 (ERRCPJ + 120)
#define ECPJ121 (ERRCPJ + 121)
#define ECPJ122 (ERRCPJ + 122)
# 132 "../..//enbapp/src/wr.h" 2
# 1 "../..//cm/rgr.h" 1
# 89 "../..//cm/rgr.h"
#define __RGR_H__ 




#define RGR_MAX_SUBBANDS 110
#define RGR_MIN_CMN_LC_PER_CELL 4

#define RGR_MAX_CMN_LC_PER_CELL 6







#define RGR_CONFIG 1
#define RGR_RECONFIG 2
#define RGR_DELETE 3
#define RGR_RESET 4


#define RGR_CELL_CFG 1
#define RGR_UE_CFG 2
#define RGR_LCH_CFG 3
#define RGR_LCG_CFG 4


#define RGR_CELL_DL_CMNRATE_RECFG (1<<0)
#define RGR_CELL_CFI_RECFG (1<<1)
#define RGR_CELL_TRGCQI_RECFG (1<<2)
#define RGR_CELL_PUSCH_SB_RECFG (1<<3)
#define RGR_CELL_UL_CMNRATE_RECFG (1<<4)
#define RGR_CELL_DL_HARQ_RECFG (1<<5)
#define RGR_CELL_PUCCH_RECFG (1<<6)
#define RGR_CELL_SRS_RECFG (1<<7)
#define RGR_CELL_RACH_RECFG (1<<8)
#define RGR_CELL_DLFS_RECFG (1<<9)
#define RGR_CELL_PWR_RECFG (1<<10)




#define RGR_CELL_SI_RECFG (1<<11)





#define RGR_UE_TXMODE_RECFG (1<<0)
#define RGR_UE_APRD_DLCQI_RECFG (1<<1)
#define RGR_UE_PRD_DLCQI_RECFG (1<<2)
#define RGR_UE_ULHARQ_RECFG (1<<3)
#define RGR_UE_QOS_RECFG (1<<4)
#define RGR_UE_TATMR_RECFG (1<<5)
#define RGR_UE_ULPWR_RECFG (1<<6)
#define RGR_UE_ACKNACK_RECFG (1<<7)
#define RGR_UE_MEASGAP_RECFG (1<<8)

#define RGR_UE_ACKNACK_MEASGAP_RECFG (RGR_UE_ACKNACK_RECFG | RGR_UE_MEASGAP_RECFG)





#define RGR_UE_BSRTMR_RECFG (1<<9)
# 166 "../..//cm/rgr.h"
#define RGR_UE_UECAT_RECFG (1<<11)
# 221 "../..//cm/rgr.h"
#define RGR_UE_PA_RECFG (1<<19)



#define RGR_SCH_TYPE_SC1 0
#define RGR_SCH_TYPE_PFS 1
#define RGR_SCH_TYPE_RR 2
#define RGR_SCH_TYPE_MAXCI 3


#define RGR_MAX_SUBFRAME_NUM 10
#define RGR_CFG_TRANSID_SIZE 12


#define RGR_DIR_TX (1<<0)
#define RGR_DIR_RX (1<<1)
#define RGR_DIR_TX_RX RGR_DIR_TX | RGR_DIR_RX
# 249 "../..//cm/rgr.h"
#define RGR_CFG_CFM_OK 0x00
#define RGR_CFG_CFM_NOK 0x0F


#define EVTRGRBNDREQ 1
#define EVTRGRBNDCFM 2
#define EVTRGRUBNDREQ 3
#define EVTRGRCFGREQ 4
#define EVTRGRCFGCFM 5




#define EVTRGRTTIIND 6






#define EVTRGRSICFGREQ 7
#define EVTRGRSICFGCFM 8
# 284 "../..//cm/rgr.h"
#define RGR_ACTV_WIN_SIZE 20


#define RGR_PFS_PRIO_LVLS 17






#define RGR_MAX_NUM_SI 8
# 310 "../..//cm/rgr.h"
#define RGR_SEL_TC 1
#define RGR_SEL_LC 0


#define ERGRXXX 0
#define ERRRGR 0


#define ERGR001 (ERRRGR + 1)
#define ERGR002 (ERRRGR + 2)
#define ERGR003 (ERRRGR + 3)
#define ERGR004 (ERRRGR + 4)
#define ERGR005 (ERRRGR + 5)
#define ERGR006 (ERRRGR + 6)
#define ERGR007 (ERRRGR + 7)
#define ERGR008 (ERRRGR + 8)
#define ERGR009 (ERRRGR + 9)
#define ERGR010 (ERRRGR + 10)
#define ERGR011 (ERRRGR + 11)
#define ERGR012 (ERRRGR + 12)
#define ERGR013 (ERRRGR + 13)
#define ERGR014 (ERRRGR + 14)
#define ERGR015 (ERRRGR + 15)
#define ERGR016 (ERRRGR + 16)
#define ERGR017 (ERRRGR + 17)
#define ERGR018 (ERRRGR + 18)
#define ERGR019 (ERRRGR + 19)
#define ERGR020 (ERRRGR + 20)
#define ERGR021 (ERRRGR + 21)
#define ERGR022 (ERRRGR + 22)
#define ERGR023 (ERRRGR + 23)
#define ERGR024 (ERRRGR + 24)
#define ERGR025 (ERRRGR + 25)
#define ERGR026 (ERRRGR + 26)
#define ERGR027 (ERRRGR + 27)
#define ERGR028 (ERRRGR + 28)
#define ERGR029 (ERRRGR + 29)
#define ERGR030 (ERRRGR + 30)
#define ERGR031 (ERRRGR + 31)
#define ERGR032 (ERRRGR + 32)
#define ERGR033 (ERRRGR + 33)
#define ERGR034 (ERRRGR + 34)
#define ERGR035 (ERRRGR + 35)
#define ERGR036 (ERRRGR + 36)
#define ERGR037 (ERRRGR + 37)
#define ERGR038 (ERRRGR + 38)
#define ERGR039 (ERRRGR + 39)
#define ERGR040 (ERRRGR + 40)
#define ERGR041 (ERRRGR + 41)
#define ERGR042 (ERRRGR + 42)
#define ERGR043 (ERRRGR + 43)
#define ERGR044 (ERRRGR + 44)
#define ERGR045 (ERRRGR + 45)
#define ERGR046 (ERRRGR + 46)
#define ERGR047 (ERRRGR + 47)
#define ERGR048 (ERRRGR + 48)
#define ERGR049 (ERRRGR + 49)
#define ERGR050 (ERRRGR + 50)
#define ERGR051 (ERRRGR + 51)
#define ERGR052 (ERRRGR + 52)
#define ERGR053 (ERRRGR + 53)
#define ERGR054 (ERRRGR + 54)
#define ERGR055 (ERRRGR + 55)
#define ERGR056 (ERRRGR + 56)
#define ERGR057 (ERRRGR + 57)
#define ERGR058 (ERRRGR + 58)
#define ERGR059 (ERRRGR + 59)
#define ERGR060 (ERRRGR + 60)
# 133 "../..//enbapp/src/wr.h" 2
# 1 "../..//cm/ctf.h" 1
# 88 "../..//cm/ctf.h"
#define __CTF_H__ 
# 100 "../..//cm/ctf.h"
#define EVTCTFBNDREQ 1

#define EVTCTFBNDCFM 2

#define EVTCTFUBNDREQ 3

#define EVTCTFCFGREQ 4

#define EVTCTFCFGCFM 5

#define EVTCTFUEIDCHGREQ 6

#define EVTCTFUEIDCHGCFM 7
# 123 "../..//cm/ctf.h"
#define CTF_CFG_CFM_OK 1

#define CTF_CFG_CFM_NOK 2


#define CTF_CONFIG 1

#define CTF_RECONFIG 2

#define CTF_DELETE 3
# 141 "../..//cm/ctf.h"
#define CTF_CELL_CFG 1

#define CTF_UE_CFG 2


#define CTF_TX_PWR_CFG 3


#define CTF_IE_CFG_SETUP 1

#define CTF_IE_CFG_RELEASE 2




#define CTF_CQI_RPTMODE_PRDIOC 1



#define CTF_CQI_RPTMODE_APRDIOC 2




#define CTF_CQI_PRDIC_FMT_IND_WIDEBAND 1



#define CTF_CQI_PRDIC_FMT_IND_SUBBAND 2


#define CTF_CFG_TRANSID_SIZE 9


#define CTF_SEL_LC 0
#define CTF_SEL_TC 1
#define CTF_SEL_LWLC 2
# 189 "../..//cm/ctf.h"
#define ECTFXXX 0

#define ERRCTF 0

#define ECTF001 (ERRCTF + 1)
#define ECTF002 (ERRCTF + 2)
#define ECTF003 (ERRCTF + 3)
#define ECTF004 (ERRCTF + 4)
#define ECTF005 (ERRCTF + 5)
#define ECTF006 (ERRCTF + 6)
#define ECTF007 (ERRCTF + 7)
#define ECTF008 (ERRCTF + 8)
#define ECTF009 (ERRCTF + 9)
#define ECTF010 (ERRCTF + 10)
#define ECTF011 (ERRCTF + 11)
#define ECTF012 (ERRCTF + 12)
#define ECTF013 (ERRCTF + 13)
#define ECTF014 (ERRCTF + 14)
#define ECTF015 (ERRCTF + 15)
#define ECTF016 (ERRCTF + 16)
#define ECTF017 (ERRCTF + 17)
#define ECTF018 (ERRCTF + 18)
#define ECTF019 (ERRCTF + 19)
#define ECTF020 (ERRCTF + 20)
#define ECTF021 (ERRCTF + 21)
#define ECTF022 (ERRCTF + 22)
#define ECTF023 (ERRCTF + 23)
#define ECTF024 (ERRCTF + 24)
#define ECTF025 (ERRCTF + 25)
#define ECTF026 (ERRCTF + 26)
#define ECTF027 (ERRCTF + 27)
#define ECTF028 (ERRCTF + 28)
#define ECTF029 (ERRCTF + 29)
#define ECTF030 (ERRCTF + 30)
#define ECTF031 (ERRCTF + 31)
#define ECTF032 (ERRCTF + 32)
#define ECTF033 (ERRCTF + 33)
#define ECTF034 (ERRCTF + 34)
#define ECTF035 (ERRCTF + 35)
#define ECTF036 (ERRCTF + 36)
#define ECTF037 (ERRCTF + 37)
#define ECTF038 (ERRCTF + 38)
#define ECTF039 (ERRCTF + 39)
#define ECTF040 (ERRCTF + 40)
#define ECTF041 (ERRCTF + 41)
#define ECTF042 (ERRCTF + 42)
#define ECTF043 (ERRCTF + 43)
#define ECTF044 (ERRCTF + 44)
#define ECTF045 (ERRCTF + 45)
#define ECTF046 (ERRCTF + 46)
#define ECTF047 (ERRCTF + 47)
#define ECTF048 (ERRCTF + 48)
#define ECTF049 (ERRCTF + 49)
#define ECTF050 (ERRCTF + 50)
#define ECTF051 (ERRCTF + 51)
#define ECTF052 (ERRCTF + 52)
#define ECTF053 (ERRCTF + 53)
#define ECTF054 (ERRCTF + 54)
#define ECTF055 (ERRCTF + 55)
#define ECTF056 (ERRCTF + 56)
#define ECTF057 (ERRCTF + 57)
#define ECTF058 (ERRCTF + 58)
#define ECTF059 (ERRCTF + 59)
# 134 "../..//enbapp/src/wr.h" 2
# 1 "../..//cm/szt.h" 1
# 90 "../..//cm/szt.h"
#define __SZT_H__ 
# 99 "../..//cm/szt.h"
#define SZTIFVER 0x0100
# 108 "../..//cm/szt.h"
#define EVTSZTBNDREQ 1
#define EVTSZTBNDCFM 2
#define EVTSZTUBNDREQ 3

#define EVTSZTAUDREQ 4
#define EVTSZTAUDCFM 5
#define EVTSZTAUDIND 6
#define EVTSZTSTAIND 7
#define EVTSZTERRIND 8
#define EVTSZTUDATREQ 9
#define EVTSZTUDATIND 10
#define EVTSZTCONREQ 11
#define EVTSZTCONIND 12
#define EVTSZTCONRSP 13
#define EVTSZTCONCFM 14
#define EVTSZTRELREQ 15
#define EVTSZTRELIND 16
#define EVTSZTRELRSP 17
#define EVTSZTRELCFM 18
#define EVTSZTDATREQ 19
#define EVTSZTDATIND 20
#define EVTSZTENCDECREQ 21
#define EVTSZTENCDECCFM 22
#define EVTSZTPEERASSOCIND 23
#define EVTSZTPEERASSOCRSP 24
#define EVTSZTFLCIND 25


#define EVTSZTABORTS1REQ 26
#define EVTSZTABORTS1CFM 27



#define SZT_SEL_LC 0
#define SZT_SEL_LWLC 1


#define SZT_MAX_AUD_CONN 10
#define SZT_AUD_CONN 1
#define SZT_AUD_PEER 2
#define SZT_AUD_FLC 3


#define SZT_CON_ST_IDLE 0
#define SZT_CON_ST_CONNECTING 1
#define SZT_CON_ST_ESTBLD 2
#define SZT_CON_ST_RELEASING 3
#define SZT_CON_ST_NON_EXST 0xF


#define SZT_ND_ST_IDLE 4
#define SZT_ND_ST_SETUP_IN_PRG 3
#define SZT_ND_ST_NORMAL 2
#define SZT_ND_ST_RESET 1


#define SZT_REQ_TYPE_ENCODE 1
#define SZT_REQ_TYPE_DECODE 2


#define SZT_REQ_TYPE_ENCODE_IE 3
#define SZT_REQ_TYPE_DECODE_IE 4



#define SZT_REQ_TYPE_ENCDEC_IE_SRCTGET 1
#define SZT_REQ_TYPE_ENCDEC_IE_TGETSRC 2



#define SZT_CXT_REL 0
#define SZT_LOCAL_REL 1


#define SZT_CONN_TYPE_SU 0
#define SZT_CONN_TYPE_SP 1

#define SZT_MEM_SDU_SIZE 2048




#define SZT_MAX_PROC_ID 48

#define SZT_MAX_MSG_TYPE 3


#define SZT_MSG_ID_E_RAB_BRR_SETUP_REQ 0
#define SZT_MSG_ID_E_RAB_BRR_SETUP_RSP 1
#define SZT_MSG_ID_E_RAB_BRR_MOD_REQ 2
#define SZT_MSG_ID_E_RAB_BRR_MOD_RSP 3
#define SZT_MSG_ID_E_RAB_BRR_REL_CMD 4
#define SZT_MSG_ID_E_RAB_BRR_REL_CMPLT 5
#define SZT_MSG_ID_E_RAB_BRR_REL_REQ 6
#define SZT_MSG_ID_CXT_SETUP_REQ 7
#define SZT_MSG_ID_CXT_SETUP_RSP 8
#define SZT_MSG_ID_INIT_CXT_SETUP_FAIL 9
#define SZT_MSG_ID_UE_CXT_REL_REQ 10
#define SZT_MSG_ID_UE_CXT_REL_CMD 11
#define SZT_MSG_ID_UE_CXT_REL_CMPL 12
#define SZT_MSG_ID_UE_CXT_MOD_REQ 13
#define SZT_MSG_ID_UE_CXT_MOD_RSP 14
#define SZT_MSG_ID_UE_CXT_MOD_FAIL 15
#define SZT_MSG_ID_INIT_UE_MSG 16
#define SZT_MSG_ID_DL_NAS_TPT 17
#define SZT_MSG_ID_UL_NAS_TPT 18
#define SZT_MSG_ID_NAS_NON_DEL_IND 19
#define SZT_MSG_ID_ERR_IND 20
#define SZT_MSG_ID_NO_DATA 21
#define SZT_MSG_ID_RESET 22
#define SZT_MSG_ID_RESET_ACK 23
#define SZT_MSG_ID_SETUP_REQ 24
#define SZT_MSG_ID_SETUP_RSP 25
#define SZT_MSG_ID_SETUP_FAIL 26
#define SZT_MSG_ID_PAGING 27
#define SZT_MSG_ID_HO_REQD 28
#define SZT_MSG_ID_HO_CMD 29
#define SZT_MSG_ID_HO_PREP_FAIL 30
#define SZT_MSG_ID_HO_REQ 31
#define SZT_MSG_ID_HO_REQ_ACK 32
#define SZT_MSG_ID_HO_FAIL 33
#define SZT_MSG_ID_HO_NTFY 34
#define SZT_MSG_ID_PATH_SWTCH_REQ 35
#define SZT_MSG_ID_PATH_SWTCH_REQ_ACK 36
#define SZT_MSG_ID_PATH_SWTCH_REQ_FAIL 37
#define SZT_MSG_ID_HO_CANCEL 38
#define SZT_MSG_ID_HO_CANCEL_ACK 39
#define SZT_MSG_ID_ENB_STA_TRFR 40
#define SZT_MSG_ID_MME_STA_TRFR 41
#define SZT_MSG_ID_DEACTV_TRACE 42
#define SZT_MSG_ID_TRACE_START 43
#define SZT_MSG_ID_TRACE_FAIL_IND 44
#define SZT_MSG_ID_LOC_REPORT_CNTRL 45
#define SZT_MSG_ID_LOC_REPORT_FAIL_IND 46
#define SZT_MSG_ID_LOC_REPORT 47
#define SZT_MSG_ID_ENB_CFG_UPD 48
#define SZT_MSG_ID_ENB_CFG_UPD_ACK 49
#define SZT_MSG_ID_ENB_CFG_UPD_FAIL 50
#define SZT_MSG_ID_MME_CFG_UPD 51
#define SZT_MSG_ID_MME_CFG_UPD_ACK 52
#define SZT_MSG_ID_MME_CFG_UPD_FAIL 53
#define SZT_MSG_ID_UPLNK_CDMA_TUNNL 54
#define SZT_MSG_ID_DNLNK_CDMA_TUNNL 55
#define SZT_MSG_ID_UE_CAP_INFO 56
#define SZT_MSG_ID_OVLD_START 57
#define SZT_MSG_ID_OVLD_STOP 58
#define SZT_MSG_ID_WARNING_REQ 59
#define SZT_MSG_ID_WARNING_RSP 60
#define SZT_MSG_ID_ENB_DIR_TRANS 61
#define SZT_MSG_ID_MME_DIR_TRANS 62
#define SZT_MSG_ID_PRIVATE_MSG 63
#define SZT_MSG_ID_ENB_CONFIG_TRANS 64
#define SZT_MSG_ID_MME_CONFIG_TRANS 65
#define SZT_MSG_ID_CELL_TRAFFIC_TRACE 66

#define SZT_MSG_ID_KILL_REQ 67
#define SZT_MSG_ID_KILL_RSP 68
#define SZT_MSG_ID_DNLNK_UE_ASSOC_LPPA_TPRT 69
#define SZT_MSG_ID_UPLNK_UE_ASSOC_LPPA_TPRT 70
#define SZT_MSG_ID_DNLNK_NON_UE_ASSOC_LPPA_TPRT 71
#define SZT_MSG_ID_UPLNK_NON_UE_ASSOC_LPPA_TPRT 72


#define SZT_MSG_ID_NO_MSG 255

#define SZT_ERR_MSG_NOT_DELIVERD 5


#define SZT_STA_TYPE_FLC 1
#define SZT_STA_TYPE_ASSOC 2






#define SZT_STATUS_ASSOC_DOWN 1
#define SZT_STATUS_ASSOC_UP 2
#define SZT_STATUS_FLOW 3







#define SZT_REASON_NOT_APPL 0
#define SZT_REASON_RCVD_TERMIND 1
#define SZT_REASON_RCVD_COMM_UP 2
#define SZT_REASON_UBND_SAP 3
#define SZT_REASON_FLC_START 4




#define SZT_REASON_INV_PARAM 6


#define SZT_FLC_START 1
#define SZT_FLC_DROP 2
#define SZT_FLC_STOP 3
#define SZT_FLC_ACTIVE 4
#define SZT_FLC_INACTIVE 5






#define SZT_FULL_RESET 0
#define SZT_PARTIAL_RESET 1


#define SZT_ELM_ID_UE_ASSOC_LOG_S1_CON_ITM 91
#define SZT_ELM_ID_RESET_TYPE 92
#define SZT_ELM_ID_UE_ASSOC_LOG_S1_CON_LST_RES_ACK 93



#define SZT_TRGR_INTI_MSG 0
#define SZT_TRGR_SUCCESS_OUTCOME 1
#define SZT_TRGR_UNSUCCESS_OUTCOME 2


#define SZT_CAUSE_UNEXP_MSG 1
#define SZT_CAUSE_NODE_RESET 2
#define SZT_CAUSE_MEM_ALLOC_FAIL 3
#define SZT_CAUSE_INV_CONID 4
#define SZT_CAUSE_INV_TYPE 5
#define SZT_CAUSE_NOT_APPL 6
#define SZT_CAUSE_PC_TX_SYNTAX_ERR 7
#define SZT_CAUSE_PC_ABS_SYNTAX_ERR 8
#define SZT_CAUSE_MSG_NOT_DELIVERED 9
#define SZT_CAUSE_LOWER_LAYER_SND_FAILED 10
#define SZT_CAUSE_INV_STATE 11
#define SZT_CAUSE_INV_PEERID 12
#define SZT_CAUSE_SAP_NOTPRST 13
#define SZT_CAUSE_ASSOC_NOTPRST 14
#define SZT_CAUSE_HASH_INS_FAIL 15
#define SZT_CAUSE_RX_ERRONEOUS_RSP 16


#define SZT_CAUSE_INV_STREAMS 17

#define SZT_PRIM_OK 0
#define SZT_PRIM_NOK 1
# 365 "../..//cm/szt.h"
#define SZT_MAX_ERR_IE 10

#define ESZTXXX 0
#define ERRSZT 0

#define ESZT001 (ERRSZT + 1)
#define ESZT002 (ERRSZT + 2)
#define ESZT003 (ERRSZT + 3)
#define ESZT004 (ERRSZT + 4)
#define ESZT005 (ERRSZT + 5)
#define ESZT006 (ERRSZT + 6)
#define ESZT007 (ERRSZT + 7)
#define ESZT008 (ERRSZT + 8)
#define ESZT009 (ERRSZT + 9)
#define ESZT010 (ERRSZT + 10)
#define ESZT011 (ERRSZT + 11)
#define ESZT012 (ERRSZT + 12)
#define ESZT013 (ERRSZT + 13)
#define ESZT014 (ERRSZT + 14)
#define ESZT015 (ERRSZT + 15)
#define ESZT016 (ERRSZT + 16)
#define ESZT017 (ERRSZT + 17)
#define ESZT018 (ERRSZT + 18)
#define ESZT019 (ERRSZT + 19)
#define ESZT020 (ERRSZT + 20)
#define ESZT021 (ERRSZT + 21)
#define ESZT022 (ERRSZT + 22)
#define ESZT023 (ERRSZT + 23)
#define ESZT024 (ERRSZT + 24)
#define ESZT025 (ERRSZT + 25)
#define ESZT026 (ERRSZT + 26)
#define ESZT027 (ERRSZT + 27)
#define ESZT028 (ERRSZT + 28)
#define ESZT029 (ERRSZT + 29)
#define ESZT030 (ERRSZT + 30)
#define ESZT031 (ERRSZT + 31)
#define ESZT032 (ERRSZT + 32)
#define ESZT033 (ERRSZT + 33)
#define ESZT034 (ERRSZT + 34)
#define ESZT035 (ERRSZT + 35)
#define ESZT036 (ERRSZT + 36)
#define ESZT037 (ERRSZT + 37)
#define ESZT038 (ERRSZT + 38)
#define ESZT039 (ERRSZT + 39)
#define ESZT040 (ERRSZT + 40)
#define ESZT041 (ERRSZT + 41)
#define ESZT042 (ERRSZT + 42)
#define ESZT043 (ERRSZT + 43)
#define ESZT044 (ERRSZT + 44)
#define ESZT045 (ERRSZT + 45)
#define ESZT046 (ERRSZT + 46)
#define ESZT047 (ERRSZT + 47)
#define ESZT048 (ERRSZT + 48)
#define ESZT049 (ERRSZT + 49)
#define ESZT050 (ERRSZT + 50)
#define ESZT051 (ERRSZT + 51)
#define ESZT052 (ERRSZT + 52)
#define ESZT053 (ERRSZT + 53)
#define ESZT054 (ERRSZT + 54)
#define ESZT055 (ERRSZT + 55)
#define ESZT056 (ERRSZT + 56)
#define ESZT057 (ERRSZT + 57)
#define ESZT058 (ERRSZT + 58)
#define ESZT059 (ERRSZT + 59)
#define ESZT060 (ERRSZT + 60)
#define ESZT061 (ERRSZT + 61)
#define ESZT062 (ERRSZT + 62)
#define ESZT063 (ERRSZT + 63)
#define ESZT064 (ERRSZT + 64)
#define ESZT065 (ERRSZT + 65)
#define ESZT066 (ERRSZT + 66)
#define ESZT067 (ERRSZT + 67)
#define ESZT068 (ERRSZT + 68)
#define ESZT069 (ERRSZT + 69)
#define ESZT070 (ERRSZT + 70)
#define ESZT071 (ERRSZT + 71)
#define ESZT072 (ERRSZT + 72)
#define ESZT073 (ERRSZT + 73)
#define ESZT074 (ERRSZT + 74)
#define ESZT075 (ERRSZT + 75)
#define ESZT076 (ERRSZT + 76)
#define ESZT077 (ERRSZT + 77)
#define ESZT078 (ERRSZT + 78)
#define ESZT079 (ERRSZT + 79)
#define ESZT080 (ERRSZT + 80)
#define ESZT081 (ERRSZT + 81)
#define ESZT082 (ERRSZT + 82)
#define ESZT083 (ERRSZT + 83)
#define ESZT084 (ERRSZT + 84)
#define ESZT085 (ERRSZT + 85)
#define ESZT086 (ERRSZT + 86)
#define ESZT087 (ERRSZT + 87)
#define ESZT088 (ERRSZT + 88)
#define ESZT089 (ERRSZT + 89)
#define ESZT090 (ERRSZT + 90)
#define ESZT091 (ERRSZT + 91)
#define ESZT092 (ERRSZT + 92)
#define ESZT093 (ERRSZT + 93)
#define ESZT094 (ERRSZT + 94)
#define ESZT095 (ERRSZT + 95)
#define ESZT096 (ERRSZT + 96)
#define ESZT097 (ERRSZT + 97)
#define ESZT098 (ERRSZT + 98)
#define ESZT099 (ERRSZT + 99)
#define ESZT100 (ERRSZT + 100)
#define ESZT101 (ERRSZT + 101)
#define ESZT102 (ERRSZT + 102)
#define ESZT103 (ERRSZT + 103)
#define ESZT104 (ERRSZT + 104)
#define ESZT105 (ERRSZT + 105)
#define ESZT106 (ERRSZT + 106)
#define ESZT107 (ERRSZT + 107)
#define ESZT108 (ERRSZT + 108)
#define ESZT109 (ERRSZT + 109)
#define ESZT110 (ERRSZT + 110)
#define ESZT111 (ERRSZT + 111)
#define ESZT112 (ERRSZT + 112)
#define ESZT113 (ERRSZT + 113)
#define ESZT114 (ERRSZT + 114)
#define ESZT115 (ERRSZT + 115)
#define ESZT116 (ERRSZT + 116)
#define ESZT117 (ERRSZT + 117)
#define ESZT118 (ERRSZT + 118)
#define ESZT119 (ERRSZT + 119)
#define ESZT120 (ERRSZT + 120)
#define ESZT121 (ERRSZT + 121)
#define ESZT122 (ERRSZT + 122)
#define ESZT123 (ERRSZT + 123)
#define ESZT124 (ERRSZT + 124)
#define ESZT125 (ERRSZT + 125)
#define ESZT126 (ERRSZT + 126)
#define ESZT127 (ERRSZT + 127)
#define ESZT128 (ERRSZT + 128)
#define ESZT129 (ERRSZT + 129)
#define ESZT130 (ERRSZT + 130)
#define ESZT131 (ERRSZT + 131)
#define ESZT132 (ERRSZT + 132)
#define ESZT133 (ERRSZT + 133)
#define ESZT134 (ERRSZT + 134)
#define ESZT135 (ERRSZT + 135)
#define ESZT136 (ERRSZT + 136)
#define ESZT137 (ERRSZT + 137)
#define ESZT138 (ERRSZT + 138)
#define ESZT139 (ERRSZT + 139)
#define ESZT140 (ERRSZT + 140)
#define ESZT141 (ERRSZT + 141)
#define ESZT142 (ERRSZT + 142)
#define ESZT143 (ERRSZT + 143)
#define ESZT144 (ERRSZT + 144)
#define ESZT145 (ERRSZT + 145)
#define ESZT146 (ERRSZT + 146)
#define ESZT147 (ERRSZT + 147)
#define ESZT148 (ERRSZT + 148)
#define ESZT149 (ERRSZT + 149)
#define ESZT150 (ERRSZT + 150)
#define ESZT151 (ERRSZT + 151)
#define ESZT152 (ERRSZT + 152)
#define ESZT153 (ERRSZT + 153)
#define ESZT154 (ERRSZT + 154)
#define ESZT155 (ERRSZT + 155)
#define ESZT156 (ERRSZT + 156)
#define ESZT157 (ERRSZT + 157)
#define ESZT158 (ERRSZT + 158)
#define ESZT159 (ERRSZT + 159)
#define ESZT160 (ERRSZT + 160)
#define ESZT161 (ERRSZT + 161)
#define ESZT162 (ERRSZT + 162)
#define ESZT163 (ERRSZT + 163)
#define ESZT164 (ERRSZT + 164)
#define ESZT165 (ERRSZT + 165)
#define ESZT166 (ERRSZT + 166)
#define ESZT167 (ERRSZT + 167)
#define ESZT168 (ERRSZT + 168)
#define ESZT169 (ERRSZT + 169)
#define ESZT170 (ERRSZT + 170)
#define ESZT171 (ERRSZT + 171)
#define ESZT172 (ERRSZT + 172)
#define ESZT173 (ERRSZT + 173)
#define ESZT174 (ERRSZT + 174)
#define ESZT175 (ERRSZT + 175)
#define ESZT176 (ERRSZT + 176)
#define ESZT177 (ERRSZT + 177)
#define ESZT178 (ERRSZT + 178)
#define ESZT179 (ERRSZT + 179)
#define ESZT180 (ERRSZT + 180)
#define ESZT181 (ERRSZT + 181)
#define ESZT182 (ERRSZT + 182)
#define ESZT183 (ERRSZT + 183)
#define ESZT184 (ERRSZT + 184)
#define ESZT185 (ERRSZT + 185)
#define ESZT186 (ERRSZT + 186)
#define ESZT187 (ERRSZT + 187)
#define ESZT188 (ERRSZT + 188)
#define ESZT189 (ERRSZT + 189)
#define ESZT190 (ERRSZT + 190)
#define ESZT191 (ERRSZT + 191)
#define ESZT192 (ERRSZT + 192)
#define ESZT193 (ERRSZT + 193)
#define ESZT194 (ERRSZT + 194)
#define ESZT195 (ERRSZT + 195)
#define ESZT196 (ERRSZT + 196)
#define ESZT197 (ERRSZT + 197)
#define ESZT198 (ERRSZT + 198)
#define ESZT199 (ERRSZT + 199)
#define ESZT200 (ERRSZT + 200)
#define ESZT201 (ERRSZT + 201)
#define ESZT202 (ERRSZT + 202)
#define ESZT203 (ERRSZT + 203)
#define ESZT204 (ERRSZT + 204)
#define ESZT205 (ERRSZT + 205)
#define ESZT206 (ERRSZT + 206)
#define ESZT207 (ERRSZT + 207)
#define ESZT208 (ERRSZT + 208)
#define ESZT209 (ERRSZT + 209)
#define ESZT210 (ERRSZT + 210)
#define ESZT211 (ERRSZT + 211)
#define ESZT212 (ERRSZT + 212)
#define ESZT213 (ERRSZT + 213)
#define ESZT214 (ERRSZT + 214)
#define ESZT215 (ERRSZT + 215)
#define ESZT216 (ERRSZT + 216)
#define ESZT217 (ERRSZT + 217)
#define ESZT218 (ERRSZT + 218)
#define ESZT219 (ERRSZT + 219)
#define ESZT220 (ERRSZT + 220)
#define ESZT221 (ERRSZT + 221)
#define ESZT222 (ERRSZT + 222)
#define ESZT223 (ERRSZT + 223)
#define ESZT224 (ERRSZT + 224)
#define ESZT225 (ERRSZT + 225)
#define ESZT226 (ERRSZT + 226)
#define ESZT227 (ERRSZT + 227)
#define ESZT228 (ERRSZT + 228)
#define ESZT229 (ERRSZT + 229)
#define ESZT230 (ERRSZT + 230)
#define ESZT231 (ERRSZT + 231)
#define ESZT232 (ERRSZT + 232)
#define ESZT233 (ERRSZT + 233)
#define ESZT234 (ERRSZT + 234)
#define ESZT235 (ERRSZT + 235)
#define ESZT236 (ERRSZT + 236)
#define ESZT237 (ERRSZT + 237)
#define ESZT238 (ERRSZT + 238)
#define ESZT239 (ERRSZT + 239)
#define ESZT240 (ERRSZT + 240)
#define ESZT241 (ERRSZT + 241)
#define ESZT242 (ERRSZT + 242)
#define ESZT243 (ERRSZT + 243)
#define ESZT244 (ERRSZT + 244)
#define ESZT245 (ERRSZT + 245)
#define ESZT246 (ERRSZT + 246)
#define ESZT247 (ERRSZT + 247)
#define ESZT248 (ERRSZT + 248)
#define ESZT249 (ERRSZT + 249)
#define ESZT250 (ERRSZT + 250)
#define ESZT251 (ERRSZT + 251)
#define ESZT252 (ERRSZT + 252)
#define ESZT253 (ERRSZT + 253)
#define ESZT254 (ERRSZT + 254)
#define ESZT255 (ERRSZT + 255)
#define ESZT256 (ERRSZT + 256)
#define ESZT257 (ERRSZT + 257)
#define ESZT258 (ERRSZT + 258)
#define ESZT259 (ERRSZT + 259)
#define ESZT260 (ERRSZT + 260)
#define ESZT261 (ERRSZT + 261)
#define ESZT262 (ERRSZT + 262)
#define ESZT263 (ERRSZT + 263)
#define ESZT264 (ERRSZT + 264)
#define ESZT265 (ERRSZT + 265)
# 135 "../..//enbapp/src/wr.h" 2
# 1 "../..//cm/sct.h" 1
# 91 "../..//cm/sct.h"
#define __SCTH__ 
# 145 "../..//cm/sct.h"
#define SCTIFVER 0x0700






#define SCT_MAX_NET_ADDRS 5



#define SB_RTTMAX MAX16BIT

#define SCT_DNAME_LEN 255


#define SCT_OK 0
#define SCT_NOK 1


#define SCT_PORT_M2UA 2904
#define SCT_PORT_M3UA 2905
#define SCT_PORT_NBAP 2914
#define SCT_PORT_NBAP_PEER 2916
#define SCT_PORT_IUA 9900
#define SCT_PORT_SUA 14001
#define SCT_PORT_V5UA 5675
#define SCT_PORT_DUA 9902


#define SCT_PROTID_NONE 0
#define SCT_PROTID_IUA 1
#define SCT_PROTID_M2UA 2
#define SCT_PROTID_M3UA 3
#define SCT_PROTID_SUA 4
#define SCT_PROTID_M2PA 5
#define SCT_PROTID_V5UA 6
#define SCT_PROTID_H248 7
#define SCT_PROTID_DUA 10
#define SCT_PROTID_NBAP 11
#define SCT_PROTID_SIP 12

#define SCT_PROTID_RUA 19
#define SCT_PROTID_HNBAP 20


#define SCT_STATUS_COMM_UP 0x01

#define SCT_STATUS_NET_UP 0x02


#define SCT_STATUS_NET_DOWN 0x03


#define SCT_STATUS_SND_FAIL 0x04

#define SCT_STATUS_RESTART 0x05
#define SCT_STATUS_ABRT 0x06
#define SCT_STATUS_SHUTDOWN 0x07
#define SCT_STATUS_INV 0x08
#define SCT_STATUS_COMM_LOST 0x09
#define SCT_STATUS_SHUTDOWN_CMPLT 0x0a





#define SCT_STATUS_MAX_INIT_SENT 0x0b
#define SCT_STATUS_ABORT_SENT 0x0c
#define SCT_STATUS_NOUSR_DATA 0x0d

#define SCT_STATUS_DUP_ASSOC 0x0e



#define SCT_STATUS_NET_REMOVED 0x0f
#define SCT_STATUS_NET_ADDED 0x10
#define SCT_STATUS_NET_MADE_PRIM 0x11
#define SCT_STATUS_NET_CONFIRMED 0x12


#define SCT_ASSOC_STATE_CLOSED 0x0

#define SCT_ASSOC_STATE_OPEN 0x1

#define SCT_ASSOC_STATE_COOKIE_WAIT 0x2

#define SCT_ASSOC_STATE_ESTABLISHED 0x3

#define SCT_ASSOC_STATE_COOKIE_SENT 0x4


#define SCT_ASSOC_STATE_SDOWN_PEND 0x5

#define SCT_ASSOC_STATE_SDOWN_SENT 0x6

#define SCT_ASSOC_STATE_SDOWN_RCVD 0x7



#define SCT_ASSOC_STATE_SDOWNACK_SENT 0x8

#define SCT_ASSOC_STATE_AWTDNS_RSP_COOKIE 0x9

#define SCT_ASSOC_STATE_AWTDNS_RSP_COOKIEACK 0xa



#define SCT_CAUSE_NOT_APPL 0
#define SCT_CAUSE_ENDP_OPEN 1
#define SCT_CAUSE_TERM_FAILED 2

#define SCT_CAUSE_OUTRES 3
#define SCT_CAUSE_EXCEED_CONF_VAL 4
#define SCT_CAUSE_REM_UNREACH 5
#define SCT_CAUSE_INIT_FAILED 6

#define SCT_CAUSE_INV_STATE 7
#define SCT_CAUSE_QFULL 8
#define SCT_CAUSE_LTIME_EXPIRE 9

#define SCT_CAUSE_SHUTDOWN_PRGS 10
#define SCT_CAUSE_INV_PAR_VAL 11
#define SCT_CAUSE_UNKNOWN 12


#define SCT_CAUSE_UNRSLVD_ADDRS 13
#define SCT_CAUSE_NOUSR_DATA 14


#define SCT_CAUSE_SOCK_ERR 15




#define SCT_CAUSE_NO_ASSOC 16


#define SCT_ASSOCID_SU 1
#define SCT_ASSOCID_SP 2


#define SCT_ENDPID_SU 1
#define SCT_ENDPID_SP 2


#define SCT_ASSOC_IND_INIT 1
#define SCT_ASSOC_IND_COOKIE 2


#define SCT_HBEAT_ENB_DTA 1

#define SCT_HBEAT_DIS_DTA 2

#define SCT_HBEAT_ENB_ASSOC 3

#define SCT_HBEAT_DIS_ASSOC 4



#define SCT_RTRV_UNSENT_DGMS 1
#define SCT_RTRV_UNACK_DGMS 2
#define SCT_RTRV_UNDEL_DGMS 3
#define SCT_GET_ASSOC_INFO 4
#define SCT_GET_ADDR_INFO 5
#define SCT_GET_RTRV_INFO 6
#define SCT_GET_FLC_INFO 7


#define SCT_UNSENT_DAT 1
#define SCT_UNACK_DAT 2
#define SCT_UNDEL_DAT 3


#define SCT_PARTIAL_DAT 4

#define SCT_PEER_DAT 6
#define SCT_UNORDER_DAT 5





#define SCT_FLC_START 1
#define SCT_FLC_DROP 2
#define SCT_FLC_STOP 3
#define SCT_FLC_ACTIVE 4
#define SCT_FLC_INACTIVE 5


#define SCT_PATH_INACTIVE 0
#define SCT_PATH_ACTIVE 1



#define SCTIF_VER2_ASSOCREQ_DEF_TOS_VAL 0



#define SCTIF_VER2_ASSOCRSP_DEF_TOS_VAL 0
# 354 "../..//cm/sct.h"
#define SCT_EVTBNDREQ 0x21
#define SCT_EVTBNDCFM 0x22
#define SCT_EVTASSOCREQ 0x24
#define SCT_EVTASSOCIND 0x25
#define SCT_EVTASSOCRSP 0x26
#define SCT_EVTASSOCCFM 0x27
#define SCT_EVTTERMREQ 0x28
#define SCT_EVTTERMIND 0x29
#define SCT_EVTTERMCFM 0x2A

#define SCT_EVTSETPRIREQ 0x2B
#define SCT_EVTSETPRICFM 0x2C
#define SCT_EVTHBEATREQ 0x2D
#define SCT_EVTHBEATCFM 0x2E

#define SCT_EVTDATREQ 0x2F
#define SCT_EVTDATIND 0x30

#define SCT_EVTSTAREQ 0x31
#define SCT_EVTSTACFM 0x32
#define SCT_EVTSTAIND 0x33
#define SCT_EVTFLCIND 0x34

#define SCT_EVTENDPOPENREQ 0x35
#define SCT_EVTENDPOPENCFM 0x36
#define SCT_EVTENDPCLOSEREQ 0x37
#define SCT_EVTENDPCLOSECFM 0x38


#define cmPkSctStrmId(x,mBuf) SPkU16(x, mBuf)
#define cmPkSctResult(x,mBuf) SPkU16(x, mBuf)
#define cmPkSctCause(x,mBuf) SPkU16(x, mBuf)
#define cmPkSctStatus(x,mBuf) SPkU16(x, mBuf)
#define cmPkSctTSN(x,mBuf) SPkU32(x, mBuf)
#define cmPkSctWinSize(x,mBuf) SPkS32(x, mBuf)
#define cmPkSctPort(x,mBuf) SPkU16(x, mBuf)
#define cmPkSctRTT(x,mBuf) SPkU16(x, mBuf)




#define cmUnpkSctStrmId(x,mBuf) SUnpkU16(x, mBuf)
#define cmUnpkSctResult(x,mBuf) SUnpkU16(x, mBuf)
#define cmUnpkSctCause(x,mBuf) SUnpkU16(x, mBuf)
#define cmUnpkSctStatus(x,mBuf) SUnpkU16(x, mBuf)
#define cmUnpkSctTSN(x,mBuf) SUnpkU32(x, mBuf)
#define cmUnpkSctWinSize(x,mBuf) SUnpkS32(x, mBuf)
#define cmUnpkSctPort(x,mBuf) SUnpkU16(x, mBuf)
#define cmUnpkSctRTT(x,mBuf) SUnpkU16(x, mBuf)






#define SCTLOGERROR(errCls,errCode,errVal,errDesc) SLogError(pst->srcEnt, pst->srcInst, pst->srcProcId, __FILE__, __LINE__, (ErrCls)errCls, (ErrCode)errCode, (ErrVal)errVal, errDesc)





#define SCT_GETMSG(p,m,e) { S16 ret; ret = SGetMsg((p)->region, (p)->pool, &(m)); if (ret != ROK) { SCTLOGERROR(ERRCLS_ADD_RES, e, (ErrVal) ret,"SGetMsg failed"); RETVALUE(ret); } }
# 426 "../..//cm/sct.h"
#define ESCTBASE 000
#define ESCTXXX (ESCTBASE)

#define ESCT001 (ESCTBASE + 1)
#define ESCT002 (ESCTBASE + 2)
#define ESCT003 (ESCTBASE + 3)
#define ESCT004 (ESCTBASE + 4)
#define ESCT005 (ESCTBASE + 5)
#define ESCT006 (ESCTBASE + 6)
#define ESCT007 (ESCTBASE + 7)
#define ESCT008 (ESCTBASE + 8)
#define ESCT009 (ESCTBASE + 9)
#define ESCT010 (ESCTBASE + 10)
#define ESCT011 (ESCTBASE + 11)
#define ESCT012 (ESCTBASE + 12)
#define ESCT013 (ESCTBASE + 13)
#define ESCT014 (ESCTBASE + 14)
#define ESCT015 (ESCTBASE + 15)
#define ESCT016 (ESCTBASE + 16)
#define ESCT017 (ESCTBASE + 17)
#define ESCT018 (ESCTBASE + 18)
#define ESCT019 (ESCTBASE + 19)
#define ESCT020 (ESCTBASE + 20)
#define ESCT021 (ESCTBASE + 21)
#define ESCT022 (ESCTBASE + 22)
#define ESCT023 (ESCTBASE + 23)
#define ESCT024 (ESCTBASE + 24)
#define ESCT025 (ESCTBASE + 25)
#define ESCT026 (ESCTBASE + 26)
#define ESCT027 (ESCTBASE + 27)
#define ESCT028 (ESCTBASE + 28)
#define ESCT029 (ESCTBASE + 29)
#define ESCT030 (ESCTBASE + 30)
#define ESCT031 (ESCTBASE + 31)
#define ESCT032 (ESCTBASE + 32)
#define ESCT033 (ESCTBASE + 33)
#define ESCT034 (ESCTBASE + 34)
#define ESCT035 (ESCTBASE + 35)
#define ESCT036 (ESCTBASE + 36)
#define ESCT037 (ESCTBASE + 37)
#define ESCT038 (ESCTBASE + 38)
#define ESCT039 (ESCTBASE + 39)
#define ESCT040 (ESCTBASE + 40)
#define ESCT041 (ESCTBASE + 41)
#define ESCT042 (ESCTBASE + 42)
#define ESCT043 (ESCTBASE + 43)
#define ESCT044 (ESCTBASE + 44)
#define ESCT045 (ESCTBASE + 45)
#define ESCT046 (ESCTBASE + 46)
#define ESCT047 (ESCTBASE + 47)
#define ESCT048 (ESCTBASE + 48)
#define ESCT049 (ESCTBASE + 49)
#define ESCT050 (ESCTBASE + 50)
#define ESCT051 (ESCTBASE + 51)
#define ESCT052 (ESCTBASE + 52)
#define ESCT053 (ESCTBASE + 53)
#define ESCT054 (ESCTBASE + 54)
#define ESCT055 (ESCTBASE + 55)
#define ESCT056 (ESCTBASE + 56)
#define ESCT057 (ESCTBASE + 57)
#define ESCT058 (ESCTBASE + 58)
#define ESCT059 (ESCTBASE + 59)
#define ESCT060 (ESCTBASE + 60)
#define ESCT061 (ESCTBASE + 61)
#define ESCT062 (ESCTBASE + 62)
#define ESCT063 (ESCTBASE + 63)
#define ESCT064 (ESCTBASE + 64)
#define ESCT065 (ESCTBASE + 65)
#define ESCT066 (ESCTBASE + 66)
#define ESCT067 (ESCTBASE + 67)
#define ESCT068 (ESCTBASE + 68)
#define ESCT069 (ESCTBASE + 69)
#define ESCT070 (ESCTBASE + 70)
#define ESCT071 (ESCTBASE + 71)
#define ESCT072 (ESCTBASE + 72)
#define ESCT073 (ESCTBASE + 73)
#define ESCT074 (ESCTBASE + 74)
#define ESCT075 (ESCTBASE + 75)
#define ESCT076 (ESCTBASE + 76)
#define ESCT077 (ESCTBASE + 77)
#define ESCT078 (ESCTBASE + 78)
#define ESCT079 (ESCTBASE + 79)
#define ESCT080 (ESCTBASE + 80)
#define ESCT081 (ESCTBASE + 81)
#define ESCT082 (ESCTBASE + 82)
#define ESCT083 (ESCTBASE + 83)
#define ESCT084 (ESCTBASE + 84)
#define ESCT085 (ESCTBASE + 85)
#define ESCT086 (ESCTBASE + 86)
#define ESCT087 (ESCTBASE + 87)
#define ESCT088 (ESCTBASE + 88)
#define ESCT089 (ESCTBASE + 89)
#define ESCT090 (ESCTBASE + 90)
#define ESCT091 (ESCTBASE + 91)
#define ESCT092 (ESCTBASE + 92)
#define ESCT093 (ESCTBASE + 93)
#define ESCT094 (ESCTBASE + 94)
#define ESCT095 (ESCTBASE + 95)
#define ESCT096 (ESCTBASE + 96)
#define ESCT097 (ESCTBASE + 97)
#define ESCT098 (ESCTBASE + 98)
#define ESCT099 (ESCTBASE + 99)
#define ESCT100 (ESCTBASE + 100)
#define ESCT101 (ESCTBASE + 101)
#define ESCT102 (ESCTBASE + 102)
#define ESCT103 (ESCTBASE + 103)
#define ESCT104 (ESCTBASE + 104)
#define ESCT105 (ESCTBASE + 105)
#define ESCT106 (ESCTBASE + 106)
#define ESCT107 (ESCTBASE + 107)
#define ESCT108 (ESCTBASE + 108)
#define ESCT109 (ESCTBASE + 109)
#define ESCT110 (ESCTBASE + 110)
#define ESCT111 (ESCTBASE + 111)
#define ESCT112 (ESCTBASE + 112)
#define ESCT113 (ESCTBASE + 113)
#define ESCT114 (ESCTBASE + 114)
#define ESCT115 (ESCTBASE + 115)
#define ESCT116 (ESCTBASE + 116)
#define ESCT117 (ESCTBASE + 117)
#define ESCT118 (ESCTBASE + 118)
#define ESCT119 (ESCTBASE + 119)
#define ESCT120 (ESCTBASE + 120)
#define ESCT121 (ESCTBASE + 121)
#define ESCT122 (ESCTBASE + 122)
#define ESCT123 (ESCTBASE + 123)
#define ESCT124 (ESCTBASE + 124)
#define ESCT125 (ESCTBASE + 125)
#define ESCT126 (ESCTBASE + 126)
#define ESCT127 (ESCTBASE + 127)
#define ESCT128 (ESCTBASE + 128)
#define ESCT129 (ESCTBASE + 129)
#define ESCT130 (ESCTBASE + 130)
#define ESCT131 (ESCTBASE + 131)
#define ESCT132 (ESCTBASE + 132)
#define ESCT133 (ESCTBASE + 133)
#define ESCT134 (ESCTBASE + 134)
#define ESCT135 (ESCTBASE + 135)
#define ESCT136 (ESCTBASE + 136)
#define ESCT137 (ESCTBASE + 137)
#define ESCT138 (ESCTBASE + 138)
#define ESCT139 (ESCTBASE + 139)
#define ESCT140 (ESCTBASE + 140)
#define ESCT141 (ESCTBASE + 141)
#define ESCT142 (ESCTBASE + 142)
#define ESCT143 (ESCTBASE + 143)
#define ESCT144 (ESCTBASE + 144)
#define ESCT145 (ESCTBASE + 145)
#define ESCT146 (ESCTBASE + 146)
#define ESCT147 (ESCTBASE + 147)
#define ESCT148 (ESCTBASE + 148)
#define ESCT149 (ESCTBASE + 149)
#define ESCT150 (ESCTBASE + 150)
#define ESCT151 (ESCTBASE + 151)
#define ESCT152 (ESCTBASE + 152)
#define ESCT153 (ESCTBASE + 153)
#define ESCT154 (ESCTBASE + 154)
#define ESCT155 (ESCTBASE + 155)
#define ESCT156 (ESCTBASE + 156)
#define ESCT157 (ESCTBASE + 157)
#define ESCT158 (ESCTBASE + 158)
#define ESCT159 (ESCTBASE + 159)
#define ESCT160 (ESCTBASE + 160)
#define ESCT161 (ESCTBASE + 161)
#define ESCT162 (ESCTBASE + 162)
#define ESCT163 (ESCTBASE + 163)
#define ESCT164 (ESCTBASE + 164)
#define ESCT165 (ESCTBASE + 165)
#define ESCT166 (ESCTBASE + 166)
#define ESCT167 (ESCTBASE + 167)
#define ESCT168 (ESCTBASE + 168)
#define ESCT169 (ESCTBASE + 169)
#define ESCT170 (ESCTBASE + 170)
#define ESCT171 (ESCTBASE + 171)
#define ESCT172 (ESCTBASE + 172)
#define ESCT173 (ESCTBASE + 173)
#define ESCT174 (ESCTBASE + 174)
#define ESCT175 (ESCTBASE + 175)
#define ESCT176 (ESCTBASE + 176)
#define ESCT177 (ESCTBASE + 177)
#define ESCT178 (ESCTBASE + 178)
#define ESCT179 (ESCTBASE + 179)
#define ESCT180 (ESCTBASE + 180)
#define ESCT181 (ESCTBASE + 181)
#define ESCT182 (ESCTBASE + 182)
#define ESCT183 (ESCTBASE + 183)
#define ESCT184 (ESCTBASE + 184)
#define ESCT185 (ESCTBASE + 185)
#define ESCT186 (ESCTBASE + 186)
#define ESCT187 (ESCTBASE + 187)
#define ESCT188 (ESCTBASE + 188)
#define ESCT189 (ESCTBASE + 189)
#define ESCT190 (ESCTBASE + 190)
#define ESCT191 (ESCTBASE + 191)
#define ESCT192 (ESCTBASE + 192)
#define ESCT193 (ESCTBASE + 193)
#define ESCT194 (ESCTBASE + 194)
#define ESCT195 (ESCTBASE + 195)
#define ESCT196 (ESCTBASE + 196)
#define ESCT197 (ESCTBASE + 197)
#define ESCT198 (ESCTBASE + 198)
#define ESCT199 (ESCTBASE + 199)
#define ESCT200 (ESCTBASE + 200)
#define ESCT201 (ESCTBASE + 201)
#define ESCT202 (ESCTBASE + 202)
#define ESCT203 (ESCTBASE + 203)
#define ESCT204 (ESCTBASE + 204)
#define ESCT205 (ESCTBASE + 205)
#define ESCT206 (ESCTBASE + 206)
#define ESCT207 (ESCTBASE + 207)
#define ESCT208 (ESCTBASE + 208)
#define ESCT209 (ESCTBASE + 209)
#define ESCT210 (ESCTBASE + 210)
#define ESCT211 (ESCTBASE + 211)
#define ESCT212 (ESCTBASE + 212)
#define ESCT213 (ESCTBASE + 213)
#define ESCT214 (ESCTBASE + 214)
#define ESCT215 (ESCTBASE + 215)
#define ESCT216 (ESCTBASE + 216)
#define ESCT217 (ESCTBASE + 217)
#define ESCT218 (ESCTBASE + 218)
#define ESCT219 (ESCTBASE + 219)
#define ESCT220 (ESCTBASE + 220)
#define ESCT221 (ESCTBASE + 221)
#define ESCT222 (ESCTBASE + 222)
#define ESCT223 (ESCTBASE + 223)
#define ESCT224 (ESCTBASE + 224)
#define ESCT225 (ESCTBASE + 225)
#define ESCT226 (ESCTBASE + 226)
#define ESCT227 (ESCTBASE + 227)
#define ESCT228 (ESCTBASE + 228)
#define ESCT229 (ESCTBASE + 229)
#define ESCT230 (ESCTBASE + 230)
#define ESCT231 (ESCTBASE + 231)
#define ESCT232 (ESCTBASE + 232)
#define ESCT233 (ESCTBASE + 233)
#define ESCT234 (ESCTBASE + 234)
#define ESCT235 (ESCTBASE + 235)
#define ESCT236 (ESCTBASE + 236)
#define ESCT237 (ESCTBASE + 237)
#define ESCT238 (ESCTBASE + 238)
#define ESCT239 (ESCTBASE + 239)
#define ESCT240 (ESCTBASE + 240)
#define ESCT241 (ESCTBASE + 241)
#define ESCT242 (ESCTBASE + 242)
#define ESCT243 (ESCTBASE + 243)
# 136 "../..//enbapp/src/wr.h" 2

# 1 "../..//cm/czt.h" 1
# 90 "../..//cm/czt.h"
#define __CZTH__ 
# 101 "../..//cm/czt.h"
#define EVTCZTBNDREQ 1
#define EVTCZTBNDCFM 2
#define EVTCZTUBNDREQ 3
#define EVTCZTGPREQ 4
#define EVTCZTGPIND 5
#define EVTCZTGPRSP 6
#define EVTCZTGPCFM 7
#define EVTCZTGPRETXREQ 8
#define EVTCZTBMPREQ 9
#define EVTCZTBMPIND 10
#define EVTCZTBMPRSP 11
#define EVTCZTBMPCFM 12
#define EVTCZTGPERRREQ 13
#define EVTCZTGPERRIND 14
#define EVTCZTERRIND 15
#define EVTCZTASSOCTERMREQ 16
#define EVTCZTASSOCTERMCFM 17
#define EVTCZTSTAIND 18
#define EVTCZTPEERASSOCIND 19
#define EVTCZTPEERASSOCRSP 20
#define EVTCZTLOCALRELREQ 21
#define EVTCZTLOCALRELCFM 22
#define EVTCZTAUDREQ 23
#define EVTCZTAUDCFM 24


#define CZT_SEL_LC 0
#define CZT_SEL_LWLC 1


#define CZT_PRIM_OK 0
#define CZT_PRIM_NOK 1


#define CZT_MAX_NET_ADDRS 5


#define CZT_MSG_HO_REQ 0
#define CZT_MSG_HO_ACK 1
#define CZT_MSG_HO_FAIL 2
#define CZT_MSG_HO_CANCEL 3
#define CZT_MSG_SN_STATUS_TRFR 4
#define CZT_MSG_UE_CXT_RELEASE 5
#define CZT_MSG_LOAD_IND 6
#define CZT_MSG_ERR_IND 7
#define CZT_MSG_X2_SETUP 8
#define CZT_MSG_X2_SETUP_RSP 9
#define CZT_MSG_X2_SETUP_FAIL 10
#define CZT_MSG_RESET 11
#define CZT_MSG_RESET_RSP 12
#define CZT_MSG_CFG_UPD_REQ 13
#define CZT_MSG_CFG_UPD_ACK 14
#define CZT_MSG_CFG_UPD_FAIL 15
#define CZT_MSG_RSRC_ST_REQ 16
#define CZT_MSG_RSRC_ST_RSP 17
#define CZT_MSG_RSRC_ST_FAIL 18
#define CZT_MSG_RSRC_ST_UPD 19

#define CZT_MSG_MOB_CHANGE_REQ 20
#define CZT_MSG_MOB_CHANGE_ACK 21
#define CZT_MSG_MOB_CHANGE_FAIL 22
#define CZT_MSG_RLF_INDICATION 23
#define CZT_MSG_HO_REPORT 24
#define CZT_MSG_CELL_ACTIVATION_REQ 25
#define CZT_MSG_CELL_ACTIVATION_RES 26
#define CZT_MSG_CELL_ACTIVATION_FAIL 27
#define CZT_MSG_PRIV_MSG 28
#define CZT_MSG_MAX (CZT_MSG_PRIV_MSG+1)
#define CZT_MSG_UNKNOWN 255

#define CZT_MAXBLK_SIZE 2048
#define CZT_MSG_ERR_ENC_DEC (CZT_MSG_PRIV_MSG+1)

#define CZT_STA_TYPE_FLC 1
#define CZT_STA_TYPE_ASSOC 2
#define CZT_STA_TYPE_PEER 3
#define CZT_STA_TYPE_TMR_EXPIRY 4
#define CZT_STA_TYPE_TMR_START 5


#define CZT_STATUS_ASSOC_DOWN 1
#define CZT_STATUS_ASSOC_UP 2
#define CZT_STATUS_FLOW 3
#define CZT_STATUS_DYNAM_PEERCFG_OK 4

#define CZT_STATUS_DYNAM_PEERCFG_NOK 5

#define CZT_STATUS_UE_TRELOCPREP_EXPIRY 6

#define CZT_STATUS_UE_TX2RELOCOVERALL_EXPIRY 7
#define CZT_STATUS_SETUPREQ_TMR_STARTED 8


#define CZT_STATUS_CFGUPD_TMR_STARTED 9


#define CZT_STATUS_SETUPREQ_TW_EXPIRY 10

#define CZT_STATUS_CFGUPD_TW_EXPIRY 11

#define CZT_STATUS_NET_DOWN 12
#define CZT_STATUS_NET_UP 13


#define CZT_STATUS_FLC_START 1
#define CZT_STATUS_FLC_DROP 2
#define CZT_STATUS_FLC_STOP 3
#define CZT_STATUS_FLC_ACTIVE 4
#define CZT_STATUS_FLC_INACTIVE 5



#define CZT_REASON_NOT_APPL 0

#define CZT_REASON_RCVD_TERMIND 1

#define CZT_REASON_RCVD_COMM_UP 2

#define CZT_REASON_RCVD_NET_UP 3

#define CZT_REASON_RCVD_NET_DOWN 4

#define CZT_REASON_SCT_SEND_FAIL 5

#define CZT_REASON_UBND_SAP 6
#define CZT_REASON_FLC_START 7
#define CZT_REASON_DUP_PEERID 8
#define CZT_REASON_INV_PARAM 9
#define CZT_REASON_HASH_INS_FAIL 10
#define CZT_REASON_ASSOC_NOTFOUND 11
#define CZT_REASON_INV_PEERID 12
#define CZT_REASON_INV_RELTYPE 13
#define CZT_REASON_FAIL_ASSOCTERM 14

#define CZT_REASON_DYNAM_PEER_NOT_CFG 15
#define CZT_REASON_INV_UEID 16
#define CZT_REASON_INV_RSRCID 17

#define CZT_REASON_INV_IDTYPE 18



#define CZT_STACAUSE_INV_TYPE 1
#define CZT_STACAUSE_NOT_APPL 2



#define CZT_ERRTYPE_NONE 0x00
#define CZT_ERRTYPE_INV_SDU_PARAM 0x10

#define CZT_ERRTYPE_ENC_FAILED 0x20
#define CZT_ERRTYPE_DEC_FAILED 0x30
#define CZT_ERRTYPE_INV_PARAM 0x40

#define CZT_ERRTYPE_MSG_SEND_FAILED 0x50
#define CZT_ERRTYPE_INTERNAL 0x60
#define CZT_ERRTYPE_SYS 0x70
#define CZT_ERRTYPE_FROM_PEER 0x80






#define CZT_ERRCAUSE_MEM_ALLOC_FAIL (CZT_ERRTYPE_SYS + 0x01)
#define CZT_ERRCAUSE_HASH_INS_FAIL (CZT_ERRTYPE_SYS + 0x02)
#define CZT_ERRCAUSE_UE_CB_CREATE_FAILED (CZT_ERRTYPE_SYS + 0x03)
#define CZT_ERRCAUSE_RSRC_CB_CREATE_FAILED (CZT_ERRTYPE_SYS + 0x04)
#define CZT_ERRCAUSE_TMR_ERR (CZT_ERRTYPE_SYS + 0x05)
#define CZT_ERRCAUSE_PEER_CB_CREATE_FAILED (CZT_ERRTYPE_SYS + 0x06)


#define CZT_ERRCAUSE_SYNTAX_ERR (CZT_ERRTYPE_ENC_FAILED + 0x01)
#define CZT_ERRCAUSE_MAND_PARAM_MISSING (CZT_ERRTYPE_ENC_FAILED + 0x02)


#define CZT_ERRCAUSE_INV_STATE (CZT_ERRTYPE_INTERNAL + 0x01)
#define CZT_ERRCAUSE_UNEXP_MSG (CZT_ERRTYPE_INTERNAL + 0x02)
#define CZT_ERRCAUSE_NODE_RESET (CZT_ERRTYPE_INTERNAL + 0x03)
#define CZT_ERRCAUSE_MAX_PEER_CONN (CZT_ERRTYPE_INTERNAL + 0x04)
#define CZT_ERRCAUSE_MAX_UE_CONN (CZT_ERRTYPE_INTERNAL + 0x05)
#define CZT_ERRCAUSE_WAIT_TMR_ON (CZT_ERRTYPE_INTERNAL + 0x06)
#define CZT_ERRCAUSE_PARALLEL_CFGUPD_TRANS (CZT_ERRTYPE_INTERNAL + 0x07)



#define CZT_ERRCAUSE_INV_PEERID (CZT_ERRTYPE_INV_PARAM + 0x01)
#define CZT_ERRCAUSE_INV_OLD_UE_X2AP_ID (CZT_ERRTYPE_INV_PARAM + 0x02)
#define CZT_ERRCAUSE_INV_NEW_UE_X2AP_ID (CZT_ERRTYPE_INV_PARAM + 0x03)
#define CZT_ERRCAUSE_INV_ENB_ID (CZT_ERRTYPE_INV_PARAM + 0x04)
#define CZT_ERRCAUSE_INV_ENB1_MEAS_ID (CZT_ERRTYPE_INV_PARAM + 0x05)
#define CZT_ERRCAUSE_INV_ENB2_MEAS_ID (CZT_ERRTYPE_INV_PARAM + 0x06)
#define CZT_ERRCAUSE_DUPLICATE_PEERID (CZT_ERRTYPE_INV_PARAM + 0x07)
#define CZT_ERRCAUSE_DUPLICATE_OLD_UE_X2AP_ID (CZT_ERRTYPE_INV_PARAM + 0x08)
#define CZT_ERRCAUSE_DUPLICATE_ENB1_MEAS_ID (CZT_ERRTYPE_INV_PARAM + 0x09)
#define CZT_ERRCAUSE_DUPLICATE_ENB2_MEAS_ID (CZT_ERRTYPE_INV_PARAM + 0x0A)
#define CZT_ERRCAUSE_PARAM_OUT_OF_BOUNDS (CZT_ERRTYPE_INV_PARAM + 0x0B)


#define CZT_ERRCAUSE_SAP_NOTPRST (CZT_ERRTYPE_MSG_SEND_FAILED + 0x01)
#define CZT_ERRCAUSE_SAP_NOT_BOUND (CZT_ERRTYPE_MSG_SEND_FAILED + 0x02)
#define CZT_ERRCAUSE_ASSOC_NOTPRST (CZT_ERRTYPE_MSG_SEND_FAILED + 0x03)
#define CZT_ERRCAUSE_ENC_FAILED (CZT_ERRTYPE_MSG_SEND_FAILED + 0x04)
#define CZT_ERRCAUSE_MSG_NOT_DELIVERED (CZT_ERRTYPE_MSG_SEND_FAILED + 0x05)



#define CZT_RELTYPE_RESET 1

#define CZT_RELTYPE_TERM 2


#define CZT_RELTYPE_UE 3
#define CZT_RELTYPE_RSRC 4



#define CZT_IDTYPE_LOCAL 1


#define CZT_IDTYPE_REMOTE 2




#define CZT_AUD_PEER 1
#define CZT_AUD_FLC 2




#define ERRCZT 0
#define ECZT000 ERRCZT

#define ECZT001 (ERRCZT + 1)
#define ECZT002 (ERRCZT + 2)
#define ECZT003 (ERRCZT + 3)
#define ECZT004 (ERRCZT + 4)
#define ECZT005 (ERRCZT + 5)
#define ECZT006 (ERRCZT + 6)
#define ECZT007 (ERRCZT + 7)
#define ECZT008 (ERRCZT + 8)
#define ECZT009 (ERRCZT + 9)
#define ECZT010 (ERRCZT + 10)
#define ECZT011 (ERRCZT + 11)
#define ECZT012 (ERRCZT + 12)
#define ECZT013 (ERRCZT + 13)
#define ECZT014 (ERRCZT + 14)
#define ECZT015 (ERRCZT + 15)
#define ECZT016 (ERRCZT + 16)
#define ECZT017 (ERRCZT + 17)
#define ECZT018 (ERRCZT + 18)
#define ECZT019 (ERRCZT + 19)
#define ECZT020 (ERRCZT + 20)
#define ECZT021 (ERRCZT + 21)
#define ECZT022 (ERRCZT + 22)
#define ECZT023 (ERRCZT + 23)
#define ECZT024 (ERRCZT + 24)
#define ECZT025 (ERRCZT + 25)
#define ECZT026 (ERRCZT + 26)
#define ECZT027 (ERRCZT + 27)
#define ECZT028 (ERRCZT + 28)
#define ECZT029 (ERRCZT + 29)
#define ECZT030 (ERRCZT + 30)
#define ECZT031 (ERRCZT + 31)
#define ECZT032 (ERRCZT + 32)
#define ECZT033 (ERRCZT + 33)
#define ECZT034 (ERRCZT + 34)
#define ECZT035 (ERRCZT + 35)
#define ECZT036 (ERRCZT + 36)
#define ECZT037 (ERRCZT + 37)
#define ECZT038 (ERRCZT + 38)
#define ECZT039 (ERRCZT + 39)
#define ECZT040 (ERRCZT + 40)
#define ECZT041 (ERRCZT + 41)
#define ECZT042 (ERRCZT + 42)
#define ECZT043 (ERRCZT + 43)
#define ECZT044 (ERRCZT + 44)
#define ECZT045 (ERRCZT + 45)
#define ECZT046 (ERRCZT + 46)
#define ECZT047 (ERRCZT + 47)
#define ECZT048 (ERRCZT + 48)
#define ECZT049 (ERRCZT + 49)
#define ECZT050 (ERRCZT + 50)
#define ECZT051 (ERRCZT + 51)
#define ECZT052 (ERRCZT + 52)
#define ECZT053 (ERRCZT + 53)
#define ECZT054 (ERRCZT + 54)
#define ECZT055 (ERRCZT + 55)
#define ECZT056 (ERRCZT + 56)
#define ECZT057 (ERRCZT + 57)
#define ECZT058 (ERRCZT + 58)
#define ECZT059 (ERRCZT + 59)
#define ECZT060 (ERRCZT + 60)
#define ECZT061 (ERRCZT + 61)
#define ECZT062 (ERRCZT + 62)
#define ECZT063 (ERRCZT + 63)
#define ECZT064 (ERRCZT + 64)
#define ECZT065 (ERRCZT + 65)
#define ECZT066 (ERRCZT + 66)
#define ECZT067 (ERRCZT + 67)
#define ECZT068 (ERRCZT + 68)
#define ECZT069 (ERRCZT + 69)
#define ECZT070 (ERRCZT + 70)
#define ECZT071 (ERRCZT + 71)
#define ECZT072 (ERRCZT + 72)
#define ECZT073 (ERRCZT + 73)
#define ECZT074 (ERRCZT + 74)
#define ECZT075 (ERRCZT + 75)
#define ECZT076 (ERRCZT + 76)
#define ECZT077 (ERRCZT + 77)
#define ECZT078 (ERRCZT + 78)
#define ECZT079 (ERRCZT + 79)
#define ECZT080 (ERRCZT + 80)
#define ECZT081 (ERRCZT + 81)
#define ECZT082 (ERRCZT + 82)
#define ECZT083 (ERRCZT + 83)
#define ECZT084 (ERRCZT + 84)
#define ECZT085 (ERRCZT + 85)
#define ECZT086 (ERRCZT + 86)
#define ECZT087 (ERRCZT + 87)
#define ECZT088 (ERRCZT + 88)
#define ECZT089 (ERRCZT + 89)
#define ECZT090 (ERRCZT + 90)
#define ECZT091 (ERRCZT + 91)
#define ECZT092 (ERRCZT + 92)
#define ECZT093 (ERRCZT + 93)
#define ECZT094 (ERRCZT + 94)
#define ECZT095 (ERRCZT + 95)
#define ECZT096 (ERRCZT + 96)
#define ECZT097 (ERRCZT + 97)
#define ECZT098 (ERRCZT + 98)
#define ECZT099 (ERRCZT + 99)
#define ECZT100 (ERRCZT + 100)
#define ECZT101 (ERRCZT + 101)
#define ECZT102 (ERRCZT + 102)
#define ECZT103 (ERRCZT + 103)
#define ECZT104 (ERRCZT + 104)
#define ECZT105 (ERRCZT + 105)
#define ECZT106 (ERRCZT + 106)
#define ECZT107 (ERRCZT + 107)
#define ECZT108 (ERRCZT + 108)
#define ECZT109 (ERRCZT + 109)
#define ECZT110 (ERRCZT + 110)
#define ECZT111 (ERRCZT + 111)
#define ECZT112 (ERRCZT + 112)
#define ECZT113 (ERRCZT + 113)
#define ECZT114 (ERRCZT + 114)
#define ECZT115 (ERRCZT + 115)
#define ECZT116 (ERRCZT + 116)
#define ECZT117 (ERRCZT + 117)
#define ECZT118 (ERRCZT + 118)
#define ECZT119 (ERRCZT + 119)
#define ECZT120 (ERRCZT + 120)
#define ECZT121 (ERRCZT + 121)
#define ECZT122 (ERRCZT + 122)
#define ECZT123 (ERRCZT + 123)
#define ECZT124 (ERRCZT + 124)
#define ECZT125 (ERRCZT + 125)
#define ECZT126 (ERRCZT + 126)
#define ECZT127 (ERRCZT + 127)
#define ECZT128 (ERRCZT + 128)
#define ECZT129 (ERRCZT + 129)
#define ECZT130 (ERRCZT + 130)
#define ECZT131 (ERRCZT + 131)
#define ECZT132 (ERRCZT + 132)
#define ECZT133 (ERRCZT + 133)
#define ECZT134 (ERRCZT + 134)
#define ECZT135 (ERRCZT + 135)
#define ECZT136 (ERRCZT + 136)
#define ECZT137 (ERRCZT + 137)
#define ECZT138 (ERRCZT + 138)
#define ECZT139 (ERRCZT + 139)
#define ECZT140 (ERRCZT + 140)
#define ECZT141 (ERRCZT + 141)
#define ECZT142 (ERRCZT + 142)
# 138 "../..//enbapp/src/wr.h" 2

# 1 "../..//cm/lrg.h" 1
# 102 "../..//cm/lrg.h"
#define __LRGH__ 

#define EVTLRGCFGREQ 0
#define EVTLRGCFGCFM 1
#define EVTLRGCNTRLREQ 2
#define EVTLRGCNTRLCFM 3
#define EVTLRGSTSREQ 4
#define EVTLRGSTSCFM 5
#define EVTLRGSSTAREQ 6
#define EVTLRGSSTACFM 7
#define EVTLRGUSTAIND 8
#define EVTLRGTRCIND 9
#define EVTLRGSCHCFGREQ 10
#define EVTLRGSCHCFGCFM 11
#define EVTLRGSCHSTAIND 12
#define EVTLRGSCHCNTRLREQ 13
#define EVTLRGSCHCNTRLCFM 14
#define EVTLRGSCHUSTAIND 15







#define MAXRGLRG 2

#define LRG_MAX_PT_NUM_SIZE 8
#define LRG_NOT_CFG 0
#define LRG_UNBND 1
#define LRG_BND 2
#define LRG_WAIT_BNDCFM 3



#define LRG_EVENT_RGUSAP_ENB (LCM_EVENT_LYR_SPECIFIC + 0)

#define LRG_EVENT_CRGSAP_ENB (LCM_EVENT_LYR_SPECIFIC + 1)

#define LRG_EVENT_RGRSAP_ENB (LCM_EVENT_LYR_SPECIFIC + 2)


#define LRG_CAUSE_HQ_PROC_BUSY (LCM_CAUSE_LYR_SPECIFIC + 0)
#define LRG_CAUSE_DELAYED_DATREQ (LCM_CAUSE_LYR_SPECIFIC + 1)






#define DBGMASK_INFO (DBGMASK_LYR << 0)
#define DBGMASK_ERR (DBGMASK_LYR << 1)
#define DBGMASK_PRM (DBGMASK_LYR << 2)



#define STCRGSAP STGEN + 1
#define STRGRSAP STGEN + 2
#define STTFUSAP STGEN + 4
#define STSCHINST STGEN + 5

#define LRG_USTA_DGNVAL_MEM 1
#define LRG_USTA_DGNVAL_HARQ 2

#define LRG_SEL_TC 1
#define LRG_SEL_LC 0


#define LRG_NO_TRACE 0
#define LRG_FULL_TRACE -1
#define LRG_MAX_SAPS_PER_INST 2

#define ELRGXXX 0
#define ERRLRG 0
# 192 "../..//cm/lrg.h"
#define ELRG001 (ERRLRG + 1)
#define ELRG002 (ERRLRG + 2)
#define ELRG003 (ERRLRG + 3)
#define ELRG004 (ERRLRG + 4)
#define ELRG005 (ERRLRG + 5)
#define ELRG006 (ERRLRG + 6)
#define ELRG007 (ERRLRG + 7)
#define ELRG008 (ERRLRG + 8)
#define ELRG009 (ERRLRG + 9)
#define ELRG010 (ERRLRG + 10)
#define ELRG011 (ERRLRG + 11)
#define ELRG012 (ERRLRG + 12)
#define ELRG013 (ERRLRG + 13)
#define ELRG014 (ERRLRG + 14)
#define ELRG015 (ERRLRG + 15)
#define ELRG016 (ERRLRG + 16)
#define ELRG017 (ERRLRG + 17)
#define ELRG018 (ERRLRG + 18)
#define ELRG019 (ERRLRG + 19)
#define ELRG020 (ERRLRG + 20)
#define ELRG021 (ERRLRG + 21)
#define ELRG022 (ERRLRG + 22)
#define ELRG023 (ERRLRG + 23)
#define ELRG024 (ERRLRG + 24)
#define ELRG025 (ERRLRG + 25)
#define ELRG026 (ERRLRG + 26)
#define ELRG027 (ERRLRG + 27)
#define ELRG028 (ERRLRG + 28)
#define ELRG029 (ERRLRG + 29)
#define ELRG030 (ERRLRG + 30)
#define ELRG031 (ERRLRG + 31)
#define ELRG032 (ERRLRG + 32)
#define ELRG033 (ERRLRG + 33)
#define ELRG034 (ERRLRG + 34)
#define ELRG035 (ERRLRG + 35)
#define ELRG036 (ERRLRG + 36)
#define ELRG037 (ERRLRG + 37)
#define ELRG038 (ERRLRG + 38)
#define ELRG039 (ERRLRG + 39)
#define ELRG040 (ERRLRG + 40)
#define ELRG041 (ERRLRG + 41)
#define ELRG042 (ERRLRG + 42)
#define ELRG043 (ERRLRG + 43)
#define ELRG044 (ERRLRG + 44)
#define ELRG045 (ERRLRG + 45)
#define ELRG046 (ERRLRG + 46)
#define ELRG047 (ERRLRG + 47)
#define ELRG048 (ERRLRG + 48)
#define ELRG049 (ERRLRG + 49)
#define ELRG050 (ERRLRG + 50)
# 140 "../..//enbapp/src/wr.h" 2
# 1 "../..//cm/egt.h" 1
# 90 "../..//cm/egt.h"
#define __EGTH__ 






#define EGT_CONNID_NOTUSED 0
#define EEGTXXX 1

#define EGT_U_MAX_EXT_TYPES 2



#define EGT_GTP_VER_2 2
#define EG_MAX_STR_LEN 2048
#define EG_MAX_NMB_BEARER 10
#define EGT_GTP_VER_INV 0xFF

#define EG_MAX_IE_LEVEL 5
#define EG_MAX_AUTH_TRIP 5
#define EG_AUTH_TRIP_LEN 0x30
#define EG_UE_NTWRK_CAPB_LEN 0x0E
#define EG_MS_NTWRK_CAPB_LEN 0x0A
#define EG_KASME_LEN 0x1F


#define EGT_U_MAX_EXT_HDR 2


#define EVTEGTBNDREQ 1
#define EVTEGTBNDCFM 2
#define EVTEGTUBNDREQ 3
#define EVTEGTSIGREQ 4
#define EVTEGTSIGIND 5
#define EVTEGTSIGRSP 6
#define EVTEGTSIGCFM 7
#define EVTEGTSTAREQ 8
#define EVTEGTSTACFM 9
#define EVTEGTSTAIND 10
#define EVTEGTLCLDELCFM 11
#define EVTEGTLCLDELREQ 12
#define EVTEGTERRIND 13


#define EVTEGTUDATREQ 14
#define EVTEGTUDATIND 15
#define EVTEGTULCLTNLMGMTREQ 16
#define EVTEGTULCLTNLMGMTCFM 17
#define EVTEGTUSTAREQ 18
#define EVTEGTUSTACFM 19
#define EVTEGTUUSTAIND 20
#define EVTEGTUERRIND 21







#define EGT_STATYPE_PATH 1
#define EGT_STATYPE_TUNNEL 2


#define EG_DUMMY_TUNN 2


#define EGT_STA_INVALID 0x00
#define EGT_STA_MSG_NOT_DELIVERD 0x01
#define EGT_STA_MSG_ENCODE_ERR 0x03
#define EGT_STA_MSG_DECODE_ERR 0x04
#define EGT_STA_PATH_FAILURE 0x05
#define EGT_STA_PATH_EST_FAILURE 0x06
#define EGT_STA_PATH_EST_SUCCESS 0x07
#define EGT_STA_VER_NOT_SUPP 0x09
#define EGT_STA_ERROR_IND 0x0b
#define EGT_STA_ERROR_IND_SENT 0x0c
#define EGT_STA_SRV_NOT_EXISTENT 0x0d
#define EGT_STA_REQRSP_REJ 0x0e
#define EGT_STA_TNL_QTHR_REACHED 0x0f
#define EGT_STA_SRV_FAILURE 0x10
#define EGT_STA_SRV_EST_SUCCESS 0x11
#define EGT_STA_SRVC_PRVDR_FAILED 0x12
#define EGT_STA_SRVC_PRVDR_AVLBL 0x13


#define EGT_CAUSE_INVALID 0x00
#define EGT_CAUSE_N3_REQ_EXCEEDED 0x01
#define EGT_CAUSE_INV_REMADDR 0x02
#define EGT_CAUSE_INV_LOCALADDR 0x03
#define EGT_CAUSE_TID_NOT_EXISTENT 0x04
#define EGT_CAUSE_TCP_CON_FAILED 0x05
#define EGT_CAUSE_RESUNAVAIL 0x06
#define EGT_CAUSE_SOCKERROR 0x07
#define EGT_CAUSE_PATH_EST_FAILURE 0x08
#define EGT_CAUSE_SEQNUM_MISSING 0x09
#define EGT_CAUSE_SRV_NOT_EXISTENT 0x0d
#define EGT_CAUSE_SRV_NOT_STARTED 0x0e
#define EGT_CAUSE_TEID_NOT_EXISTENT 0x0f
#define EGT_CAUSE_INV_TNL_STATE 0x10
#define EGT_CAUSE_TEARDOWN_NOT_PRSNT 0x11
#define EGT_CAUSE_INV_SEQNUM 0x12

#define EGT_CAUSE_DST_REACHABLE 0x13



#define EGT_CAUSE_MISSING_MANDIE 0x41
#define EGT_CAUSE_INCORR_MANDIE 0x42
#define EGT_CAUSE_INCORR_OPTIE 0x43
#define EGT_CAUSE_INVALID_MANDIE 0x44
#define EGT_CAUSE_INVALID_OPTIE 0x45
#define EGT_CAUSE_INVALID_MSG_FMT 0x46
#define EGT_CAUSE_MF_UNKNOWN 0x47




#define EGT_GTPC_CAUSE_PAGE 1
#define EGT_GTPC_CAUSE_LOC_DETACH 2
#define EGT_GTPC_CAUSE_COMP_DETACH 3
#define EGT_GTPC_CAUSE_RAT_3GPP_TO_NON3GPP 4
#define EGT_GTPC_CAUSE_ISR_DEACTIVATION 5
#define EGT_GTPC_CAUSE_ERR_IND_FRM_RNC_ENODEB 6


#define EGT_GTPC_CAUSE_ACC_REQ 16
#define EGT_GTPC_CAUSE_ACC_REQ_PART 17
#define EGT_GTPC_CAUSE_NEW_PDN_SL 18
#define EGT_GTPC_CAUSE_NEW_PDN_NP 19

#define EGT_GTPC_CAUSE_NEW_PDN_SAB 20


#define EGT_GTPC_CAUSE_REJ_CXT_NON_EXISTENT 64
#define EGT_GTPC_CAUSE_REJ_INV_MSG_FMT 65
#define EGT_GTPC_CAUSE_VER_NOT_SUPP 66
#define EGT_GTPC_CAUSE_INVALIED_LEN 67
#define EGT_GTPC_CAUSE_SERVICE_NOT_SUPP 68
#define EGT_GTPC_CAUSE_REJ_MAND_IE_INCORR 69
#define EGT_GTPC_CAUSE_REJ_MAND_IE_MISSING 70

#define EGT_GTPC_CAUSE_REJ_OPT_IE_INCORR 71
#define EGT_GTPC_CAUSE_SYS_FAIL 72
#define EGT_GTPC_CAUSE_NO_RES_AVAIL 73
#define EGT_GTPC_CAUSE_TFT_SEMANT_ERR 74
#define EGT_GTPC_CAUSE_TFT_SYNTAC_ERR 75
#define EGT_GTPC_CAUSE_PKT_FILT_SEMANT_ERR 76
#define EGT_GTPC_CAUSE_PKT_FILT_SYNTAC_ERR 77
#define EGT_GTPC_CAUSE_APN_UNKNOWN 78

#define EGT_GTPC_CAUSE_UNEXPD_IE 79
#define EGT_GTPC_CAUSE_GRE_NOTFOUND 80
#define EGT_GTPC_CAUSE_RELOC_FAIL 81
#define EGT_GTPC_CAUSE_RAT_DENIED 82
#define EGT_GTPC_CAUSE_PDN_NOT_SUPP 83
#define EGT_GTPC_CAUSE_ALL_DYN_ADDR_OCC 84
#define EGT_GTPC_CAUSE_CTXT_ACTIVE_NO_TFT 85
#define EGT_GTPC_CAUSE_PROT_NOT_SUPP 86
#define EGT_GTPC_CAUSE_UE_NO_RSP 87
#define EGT_GTPC_CAUSE_UE_REFUSE 88
#define EGT_GTPC_CAUSE_SERVICE_DENIED 89
#define EGT_GTPC_CAUSE_UE_NO_PAGE 90
#define EGT_GTPC_CAUSE_NO_MEM_AVAIL 91
#define EGT_GTPC_CAUSE_USER_AUTH_FAIL 92
#define EGT_GTPC_CAUSE_APN_ACCESS_DEN 93
#define EGT_GTPC_CAUSE_REQ_REJECT 94
#define EGT_GTPC_CAUSE_PTMSI_SIGN_MISMATCH 95
#define EGT_GTPC_CAUSE_IMSI_NOT_KNOWN 96
#define EGT_GTPC_CAUSE_SEMANTIC_ERR_TADOP 97
#define EGT_GTPC_CAUSE_SYNTAX_ERR_TADOP 98
#define EGT_GTPC_CAUSE_RESR_VAL_RECEIVED 99
#define EGT_GTPC_CAUSE_PEER_NOT_RESPOND 100
#define EGT_GTPC_CAUSE_COLL_NW_INIT_REQ 101
#define EGT_GTPC_CAUSE_UNBLE_PAGE_UE_SUSPEN 102
#define EGT_GTPC_CAUSE_COND_IE_MISS 103
#define EGT_GTPC_CAUSE_APN_INCOMP_ACT_PDN 104
#define EGT_GTPC_CAUSE_INV_RSP_AND_PIGGY_MSG_LEN 105
#define EGT_GTPC_CAUSE_DAT_FWD_NOT_SUPP 106
#define EGT_GTPC_CAUSE_INV_RPL_FRM_PEER 107
#define EGT_GTPC_CAUSE_FALLBACK_TO_V1 108

#define EGT_STA_MSG_NOT_DELIVERD 0x01
#define EGT_STA_MSG_ENCODE_ERR 0x03
#define EGT_STA_MSG_DECODE_ERR 0x04
#define EGT_STA_PATH_FAILURE 0x05
#define EGT_STA_PATH_EST_FAILURE 0x06
#define EGT_STA_PATH_EST_SUCCESS 0x07
#define EGT_STA_VER_NOT_SUPP 0x09
#define EGT_STA_ERROR_IND 0x0b
#define EGT_STA_ERROR_IND_SENT 0x0c
#define EGT_STA_SRV_NOT_EXISTENT 0x0d
#define EGT_STA_REQRSP_REJ 0x0e
#define EGT_STA_TNL_QTHR_REACHED 0x0f
#define EGT_STA_SRV_FAILURE 0x10
#define EGT_STA_SRV_EST_SUCCESS 0x11
#define EGT_STA_SRVC_PRVDR_FAILED 0x12

#define EGT_GTPU_CAUSE_INV_SRC_IP 94
#define EGT_GTPU_CAUSE_INV_PORT 95
#define EGT_GTPU_CAUSE_INV_DST_IP 96
#define EGT_GTPU_CAUSE_NO_RES_AVAIL 97
#define EGT_GTPU_CAUSE_INV_TEID 98
#define EGT_EGTPU_CAUSE_RETURN_OK 99
#define EGT_GTPU_CAUSE_INV_ACTION 100
#define EGT_GTPU_CAUSE_DST_MULT_IP 101
#define EGT_EGTPU_CAUSE_PENDING_CNTRL_OP 102
#define EGT_EGTPU_CAUSE_PROC_FAIL 103

#define EGT_MAX_STR_LEN 256
#define EGT_GTPC_MSG_INVALID 0
#define EGT_GTPC_MSG_MAX 180


#define EGT_MAX_INTF 13


#define EGT_CONSTATE_NOTCONNECTED 1
#define EGT_CONSTATE_CONNECTING 2
#define EGT_CONSTATE_CONNECTED 3


#define EGT_TMGMT_REQTYPE_ADD 1
#define EGT_TMGMT_REQTYPE_DEL 2
#define EGT_TMGMT_REQTYPE_MOD 3
#define EGT_TMGMT_REQTYPE_STOP_QING 4
#define EGT_TMGMT_REQTYPE_DEL_ALL 5

#define EGT_TMGMT_REQTYPE_REORD_ENA 6
#define EGT_TMGMT_REQTYPE_REORD_DIS 7


#define EGT_REQ_ACC_TPT_CONNECTED 1


#define EGT_REQ_REJ EGT_REQ_REJECTED


#define EGT_REQ_ACC_TPT_CONNECTING 3


#define EGT_REQ_ACC_TNL_DELETED 4


#define EGT_REASON_NOT_APPL 1
#define EGT_REASON_MEM_NOAVAIL 2
#define EGT_REASON_INVALID_TEID 3


#define EGT_LCLTNL_DELETE_SUCCESS 1
#define EGT_LCLTNL_DELETE_FAILED 2





#define EGT_SUCCESS 0




#define EGT_SEL_LC 0
#define EGT_SEL_TC 2
#define EGT_SEL_LWLC 1

#define EGTU_EVENT_TYPE_TNLMGMT 0
#define EGTU_EVENT_TYPE_MSG 1
#define EGTU_EVENT_TYPE_STAREQ 2
#define EGTU_EVENT_TYPE_USTAIND 3
#define EGTU_EVENT_TYPE_ERRIND 4






#define EGT_SEC_MODE_GSMKEY_TRIP 0
#define EGT_SEC_MODE_UMTSKEY_USED_CIPH_QUINTUP 1
#define EGT_SEC_MODE_GSMKEY_USED_CIPH_QUINTUP 2
#define EGT_SEC_MODE_UMTSKEY_QUINTUP 3
#define EGT_SEC_MODE_EPS_SECCTXT_QUADRU_QUINTUP 4
#define EGT_SEC_MODE_UMTSKEY_QUADRU_QUINTUP 5


#define EGT_NAS_CIPHER_ALGO_NO 0
#define EGT_NAS_CIPHER_ALGO_128_EEA1 1
#define EGT_NAS_CIPHER_ALGO_128_EEA2 2


#define EGT_NAS_CIPHER_VALUE_NO 0
#define EGT_NAS_CIPHER_VALUE_GEA1 1
#define EGT_NAS_CIPHER_VALUE_GEA2 2
#define EGT_NAS_CIPHER_VALUE_GEA3 3
#define EGT_NAS_CIPHER_VALUE_GEA4 4
#define EGT_NAS_CIPHER_VALUE_GEA5 5
#define EGT_NAS_CIPHER_VALUE_GEA6 6
#define EGT_NAS_CIPHER_VALUE_GEA7 7


#define EGT_TGT_RNC_ID 0
#define EGT_TGT_ENODEB_ID 1



#define EGT_GTPU_PORT_ACTIVE 0
#define EGT_GTPU_PORT_INACTIVE 1
#define EGT_GTPU_DEST_REACHABLE 2
#define EGT_GTPU_DEST_UNREACHABLE 3

#define EG_REORDER_TYPE_1 1
#define EG_REORDER_TYPE_2 2



#define EG_NORMAL_DATA_TUNN 1
#define EG_FWD_DATA_TUNN 2




#define EGTLOGERROR(errCls,errCode,errVal,errDesc) SLogError(pst->srcEnt, pst->srcInst, pst->srcProcId, __FILE__, __LINE__, (ErrCls)errCls, (ErrCode)errCode, (ErrVal)errVal, errDesc)






#define EGTGETMSG(p,m,e) { S16 ret; ret = SGetMsg((p)->region, (p)->pool, &(m)); if (ret != ROK) { EGTLOGERROR(ERRCLS_ADD_RES, e, (ErrVal) ret,"SGetMsg failed"); RETVALUE(ret); } }
# 431 "../..//cm/egt.h"
#define EGTCHKPKLOGMEM(func,val,mBuf,errCode,pst,mem) { S16 ret; if ((ret = func(val, mBuf, mem)) != ROK) { SPutMsg(mBuf); SLogError(pst->dstEnt, pst->dstInst, pst->dstProcId, __FILE__, __LINE__, (ErrCls) ERRCLS_DEBUG, (ErrVal)errCode, (ErrVal)ret, "Packing failure"); RETVALUE(ret); } }
# 445 "../..//cm/egt.h"
#define EGDEALLOC(egMsg,mBuf,freeMbuf) { if (EgUtilDeAllocGmMsg(&egMsg) != ROK) { if ( freeMbuf ) SPutMsg(mBuf); RETVALUE(RFAILED); } }
# 454 "../..//cm/egt.h"
#define EGTCHKUNPKLOGMEM(func,val,mBuf,errCode,pst,mem) { S16 ret; if ((ret = func(val, mBuf, mem)) != ROK) { SPutMsg(mBuf); SLogError(pst->dstEnt, pst->dstInst, pst->dstProcId, __FILE__, __LINE__, (ErrCls) ERRCLS_DEBUG, (ErrVal)errCode, (ErrVal)ret, "Unpacking failure"); RETVALUE(ret); } }
# 469 "../..//cm/egt.h"
#define EGTCHKPKMEM(func,val,mBuf,mem) { S16 ret; if ((ret = func(val, mBuf, mem)) != ROK) RETVALUE(ret); }
# 478 "../..//cm/egt.h"
#define EGTCHKUNPKMEM(func,val,mBuf,mem) { S16 ret; if ((ret = func(val, mBuf, mem)) != ROK) RETVALUE(ret); }






#define ERREGT 0

#define EEGT001 (ERREGT + 1)
#define EEGT002 (ERREGT + 2)
#define EEGT003 (ERREGT + 3)
#define EEGT004 (ERREGT + 4)
#define EEGT005 (ERREGT + 5)
#define EEGT006 (ERREGT + 6)
#define EEGT007 (ERREGT + 7)
#define EEGT008 (ERREGT + 8)
#define EEGT009 (ERREGT + 9)
#define EEGT010 (ERREGT + 10)
#define EEGT011 (ERREGT + 11)
#define EEGT012 (ERREGT + 12)
#define EEGT013 (ERREGT + 13)
#define EEGT014 (ERREGT + 14)
#define EEGT015 (ERREGT + 15)
#define EEGT016 (ERREGT + 16)
#define EEGT017 (ERREGT + 17)
#define EEGT018 (ERREGT + 18)
#define EEGT019 (ERREGT + 19)
#define EEGT020 (ERREGT + 20)
#define EEGT021 (ERREGT + 21)
#define EEGT022 (ERREGT + 22)
#define EEGT023 (ERREGT + 23)
#define EEGT024 (ERREGT + 24)
#define EEGT025 (ERREGT + 25)
#define EEGT026 (ERREGT + 26)
#define EEGT027 (ERREGT + 27)
#define EEGT028 (ERREGT + 28)
#define EEGT029 (ERREGT + 29)
#define EEGT030 (ERREGT + 30)
#define EEGT031 (ERREGT + 31)
#define EEGT032 (ERREGT + 32)
#define EEGT033 (ERREGT + 33)
#define EEGT034 (ERREGT + 34)
#define EEGT035 (ERREGT + 35)
#define EEGT036 (ERREGT + 36)
#define EEGT037 (ERREGT + 37)
#define EEGT038 (ERREGT + 38)
#define EEGT039 (ERREGT + 39)
#define EEGT040 (ERREGT + 40)
#define EEGT041 (ERREGT + 41)
#define EEGT042 (ERREGT + 42)
#define EEGT043 (ERREGT + 43)
#define EEGT044 (ERREGT + 44)
#define EEGT045 (ERREGT + 45)
#define EEGT046 (ERREGT + 46)
#define EEGT047 (ERREGT + 47)
#define EEGT048 (ERREGT + 48)
#define EEGT049 (ERREGT + 49)
#define EEGT050 (ERREGT + 50)
#define EEGT051 (ERREGT + 51)
#define EEGT052 (ERREGT + 52)
#define EEGT053 (ERREGT + 53)
#define EEGT054 (ERREGT + 54)
#define EEGT055 (ERREGT + 55)
#define EEGT056 (ERREGT + 56)
#define EEGT057 (ERREGT + 57)
#define EEGT058 (ERREGT + 58)
#define EEGT059 (ERREGT + 59)
#define EEGT060 (ERREGT + 60)
#define EEGT061 (ERREGT + 61)
#define EEGT062 (ERREGT + 62)
#define EEGT063 (ERREGT + 63)
#define EEGT064 (ERREGT + 64)
#define EEGT065 (ERREGT + 65)
#define EEGT066 (ERREGT + 66)
#define EEGT067 (ERREGT + 67)
#define EEGT068 (ERREGT + 68)
#define EEGT069 (ERREGT + 69)
#define EEGT070 (ERREGT + 70)
#define EEGT071 (ERREGT + 71)
#define EEGT072 (ERREGT + 72)
#define EEGT073 (ERREGT + 73)
#define EEGT074 (ERREGT + 74)
#define EEGT075 (ERREGT + 75)
#define EEGT076 (ERREGT + 76)
#define EEGT077 (ERREGT + 77)
#define EEGT078 (ERREGT + 78)
#define EEGT079 (ERREGT + 79)
#define EEGT080 (ERREGT + 80)
#define EEGT081 (ERREGT + 81)
#define EEGT082 (ERREGT + 82)
#define EEGT083 (ERREGT + 83)
#define EEGT084 (ERREGT + 84)
#define EEGT085 (ERREGT + 85)
#define EEGT086 (ERREGT + 86)
#define EEGT087 (ERREGT + 87)
#define EEGT088 (ERREGT + 88)
#define EEGT089 (ERREGT + 89)
#define EEGT090 (ERREGT + 90)
#define EEGT091 (ERREGT + 91)
#define EEGT092 (ERREGT + 92)
# 141 "../..//enbapp/src/wr.h" 2

# 1 "../..//cm/nhu.x" 1
# 105 "../..//cm/nhu.x"
#define __NHUX__ 







# 1 "../..//cm/nhu_asn.x" 1
# 89 "../..//cm/nhu_asn.x"
#define __NHUASNX__ 




typedef enum enumNhuPHICH_Configphich_Duration
{
 NhuPHICH_Configphich_DurationnormalEnum,
 NhuPHICH_Configphich_DurationextendedEnum
} EnumNhuPHICH_Configphich_Duration;
typedef TknU32 NhuPHICH_Configphich_Duration;


typedef enum enumNhuPHICH_Configphich_Resource
{
 NhuPHICH_Configphich_ResourceoneSixthEnum,
 NhuPHICH_Configphich_ResourcehalfEnum,
 NhuPHICH_Configphich_ResourceoneEnum,
 NhuPHICH_Configphich_ResourcetwoEnum
} EnumNhuPHICH_Configphich_Resource;
typedef TknU32 NhuPHICH_Configphich_Resource;

typedef struct NhuPHICH_Config
{
 TknPres pres;
 NhuPHICH_Configphich_Duration phich_Duration;
 NhuPHICH_Configphich_Resource phich_Resource;
} NhuPHICH_Config;


typedef enum enumNhuMasterInfoBlockdl_Bandwidth
{
 NhuMasterInfoBlockdl_Bandwidthn6Enum,
 NhuMasterInfoBlockdl_Bandwidthn15Enum,
 NhuMasterInfoBlockdl_Bandwidthn25Enum,
 NhuMasterInfoBlockdl_Bandwidthn50Enum,
 NhuMasterInfoBlockdl_Bandwidthn75Enum,
 NhuMasterInfoBlockdl_Bandwidthn100Enum
} EnumNhuMasterInfoBlockdl_Bandwidth;
typedef TknU32 NhuMasterInfoBlockdl_Bandwidth;


typedef TknStrBSXL NhuMasterInfoBlocksystemFrameNumber;

typedef TknStrBSXL NhuMasterInfoBlockspare;
typedef struct NhuMasterInfoBlock
{
 TknPres pres;
 NhuMasterInfoBlockdl_Bandwidth dl_Bandwidth;
 NhuPHICH_Config phich_Config;
 NhuMasterInfoBlocksystemFrameNumber systemFrameNumber;
 NhuMasterInfoBlockspare spare;
} NhuMasterInfoBlock;


typedef NhuMasterInfoBlock NhuBCCH_BCH_MsgTyp;
typedef struct NhuBCCH_BCH_Msg
{
 TknPres pres;
 NhuBCCH_BCH_MsgTyp message;
} NhuBCCH_BCH_Msg;


typedef enum enumNhuAC_BarringConfigac_BarringFactor
{
 NhuAC_BarringConfigac_BarringFactorp00Enum,
 NhuAC_BarringConfigac_BarringFactorp05Enum,
 NhuAC_BarringConfigac_BarringFactorp10Enum,
 NhuAC_BarringConfigac_BarringFactorp15Enum,
 NhuAC_BarringConfigac_BarringFactorp20Enum,
 NhuAC_BarringConfigac_BarringFactorp25Enum,
 NhuAC_BarringConfigac_BarringFactorp30Enum,
 NhuAC_BarringConfigac_BarringFactorp40Enum,
 NhuAC_BarringConfigac_BarringFactorp50Enum,
 NhuAC_BarringConfigac_BarringFactorp60Enum,
 NhuAC_BarringConfigac_BarringFactorp70Enum,
 NhuAC_BarringConfigac_BarringFactorp75Enum,
 NhuAC_BarringConfigac_BarringFactorp80Enum,
 NhuAC_BarringConfigac_BarringFactorp85Enum,
 NhuAC_BarringConfigac_BarringFactorp90Enum,
 NhuAC_BarringConfigac_BarringFactorp95Enum
} EnumNhuAC_BarringConfigac_BarringFactor;
typedef TknU32 NhuAC_BarringConfigac_BarringFactor;


typedef enum enumNhuAC_BarringConfigac_BarringTime
{
 NhuAC_BarringConfigac_BarringTimes4Enum,
 NhuAC_BarringConfigac_BarringTimes8Enum,
 NhuAC_BarringConfigac_BarringTimes16Enum,
 NhuAC_BarringConfigac_BarringTimes32Enum,
 NhuAC_BarringConfigac_BarringTimes64Enum,
 NhuAC_BarringConfigac_BarringTimes128Enum,
 NhuAC_BarringConfigac_BarringTimes256Enum,
 NhuAC_BarringConfigac_BarringTimes512Enum
} EnumNhuAC_BarringConfigac_BarringTime;
typedef TknU32 NhuAC_BarringConfigac_BarringTime;


typedef TknStrBSXL NhuAC_BarringConfigac_BarringForSpecialAC;
typedef struct NhuAC_BarringConfig
{
 TknPres pres;
 NhuAC_BarringConfigac_BarringFactor ac_BarringFactor;
 NhuAC_BarringConfigac_BarringTime ac_BarringTime;
 NhuAC_BarringConfigac_BarringForSpecialAC ac_BarringForSpecialAC;
} NhuAC_BarringConfig;


typedef enum enumNhuRACH_ConfigCmnpreambleInfonumberOfRA_Preambles
{
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn4Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn8Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn12Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn16Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn20Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn24Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn28Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn32Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn36Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn40Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn44Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn48Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn52Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn56Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn60Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn64Enum
} EnumNhuRACH_ConfigCmnpreambleInfonumberOfRA_Preambles;
typedef TknU32 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preambles;


typedef enum enumNhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupA
{
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn4Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn8Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn12Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn16Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn20Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn24Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn28Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn32Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn36Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn40Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn44Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn48Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn52Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn56Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn60Enum
} EnumNhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupA;
typedef TknU32 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupA;


typedef enum enumNhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessageSizeGroupA
{
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessageSizeGroupAb56Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessageSizeGroupAb144Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessageSizeGroupAb208Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessageSizeGroupAb256Enum
} EnumNhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessageSizeGroupA;
typedef TknU32 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessageSizeGroupA;


typedef enum enumNhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessagePowerOffsetGroupB
{
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessagePowerOffsetGroupBminusinfinityEnum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessagePowerOffsetGroupBdB0Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessagePowerOffsetGroupBdB5Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessagePowerOffsetGroupBdB8Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessagePowerOffsetGroupBdB10Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessagePowerOffsetGroupBdB12Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessagePowerOffsetGroupBdB15Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessagePowerOffsetGroupBdB18Enum
} EnumNhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessagePowerOffsetGroupB;
typedef TknU32 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessagePowerOffsetGroupB;

typedef struct NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfig
{
 TknPres pres;
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupA sizeOfRA_PreamblesGroupA;
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessageSizeGroupA messageSizeGroupA;
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessagePowerOffsetGroupB messagePowerOffsetGroupB;
} NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfig;

typedef struct NhuRACH_ConfigCmnpreambleInfo
{
 TknPres pres;
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preambles numberOfRA_Preambles;
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfig preamblesGroupAConfig;
} NhuRACH_ConfigCmnpreambleInfo;


typedef enum enumNhuRACH_ConfigCmnpowerRampingParamspowerRampingStep
{
 NhuRACH_ConfigCmnpowerRampingParamspowerRampingStepdB0Enum,
 NhuRACH_ConfigCmnpowerRampingParamspowerRampingStepdB2Enum,
 NhuRACH_ConfigCmnpowerRampingParamspowerRampingStepdB4Enum,
 NhuRACH_ConfigCmnpowerRampingParamspowerRampingStepdB6Enum
} EnumNhuRACH_ConfigCmnpowerRampingParamspowerRampingStep;
typedef TknU32 NhuRACH_ConfigCmnpowerRampingParamspowerRampingStep;


typedef enum enumNhuRACH_ConfigCmnpowerRampingParamspreambleInitReceivedTgtPower
{
 NhuRACH_ConfigCmnpowerRampingParamspreambleInitReceivedTgtPowerdBm_120Enum,
 NhuRACH_ConfigCmnpowerRampingParamspreambleInitReceivedTgtPowerdBm_118Enum,
 NhuRACH_ConfigCmnpowerRampingParamspreambleInitReceivedTgtPowerdBm_116Enum,
 NhuRACH_ConfigCmnpowerRampingParamspreambleInitReceivedTgtPowerdBm_114Enum,
 NhuRACH_ConfigCmnpowerRampingParamspreambleInitReceivedTgtPowerdBm_112Enum,
 NhuRACH_ConfigCmnpowerRampingParamspreambleInitReceivedTgtPowerdBm_110Enum,
 NhuRACH_ConfigCmnpowerRampingParamspreambleInitReceivedTgtPowerdBm_108Enum,
 NhuRACH_ConfigCmnpowerRampingParamspreambleInitReceivedTgtPowerdBm_106Enum,
 NhuRACH_ConfigCmnpowerRampingParamspreambleInitReceivedTgtPowerdBm_104Enum,
 NhuRACH_ConfigCmnpowerRampingParamspreambleInitReceivedTgtPowerdBm_102Enum,
 NhuRACH_ConfigCmnpowerRampingParamspreambleInitReceivedTgtPowerdBm_100Enum,
 NhuRACH_ConfigCmnpowerRampingParamspreambleInitReceivedTgtPowerdBm_98Enum,
 NhuRACH_ConfigCmnpowerRampingParamspreambleInitReceivedTgtPowerdBm_96Enum,
 NhuRACH_ConfigCmnpowerRampingParamspreambleInitReceivedTgtPowerdBm_94Enum,
 NhuRACH_ConfigCmnpowerRampingParamspreambleInitReceivedTgtPowerdBm_92Enum,
 NhuRACH_ConfigCmnpowerRampingParamspreambleInitReceivedTgtPowerdBm_90Enum
} EnumNhuRACH_ConfigCmnpowerRampingParamspreambleInitReceivedTgtPower;
typedef TknU32 NhuRACH_ConfigCmnpowerRampingParamspreambleInitReceivedTgtPower;

typedef struct NhuRACH_ConfigCmnpowerRampingParams
{
 TknPres pres;
 NhuRACH_ConfigCmnpowerRampingParamspowerRampingStep powerRampingStep;
 NhuRACH_ConfigCmnpowerRampingParamspreambleInitReceivedTgtPower preambleInitReceivedTgtPower;
} NhuRACH_ConfigCmnpowerRampingParams;


typedef enum enumNhuRACH_ConfigCmnra_SupervisionInfopreambleTransMax
{
 NhuRACH_ConfigCmnra_SupervisionInfopreambleTransMaxn3Enum,
 NhuRACH_ConfigCmnra_SupervisionInfopreambleTransMaxn4Enum,
 NhuRACH_ConfigCmnra_SupervisionInfopreambleTransMaxn5Enum,
 NhuRACH_ConfigCmnra_SupervisionInfopreambleTransMaxn6Enum,
 NhuRACH_ConfigCmnra_SupervisionInfopreambleTransMaxn7Enum,
 NhuRACH_ConfigCmnra_SupervisionInfopreambleTransMaxn8Enum,
 NhuRACH_ConfigCmnra_SupervisionInfopreambleTransMaxn10Enum,
 NhuRACH_ConfigCmnra_SupervisionInfopreambleTransMaxn20Enum,
 NhuRACH_ConfigCmnra_SupervisionInfopreambleTransMaxn50Enum,
 NhuRACH_ConfigCmnra_SupervisionInfopreambleTransMaxn100Enum,
 NhuRACH_ConfigCmnra_SupervisionInfopreambleTransMaxn200Enum
} EnumNhuRACH_ConfigCmnra_SupervisionInfopreambleTransMax;
typedef TknU32 NhuRACH_ConfigCmnra_SupervisionInfopreambleTransMax;


typedef enum enumNhuRACH_ConfigCmnra_SupervisionInfora_RspWindowSize
{
 NhuRACH_ConfigCmnra_SupervisionInfora_RspWindowSizesf2Enum,
 NhuRACH_ConfigCmnra_SupervisionInfora_RspWindowSizesf3Enum,
 NhuRACH_ConfigCmnra_SupervisionInfora_RspWindowSizesf4Enum,
 NhuRACH_ConfigCmnra_SupervisionInfora_RspWindowSizesf5Enum,
 NhuRACH_ConfigCmnra_SupervisionInfora_RspWindowSizesf6Enum,
 NhuRACH_ConfigCmnra_SupervisionInfora_RspWindowSizesf7Enum,
 NhuRACH_ConfigCmnra_SupervisionInfora_RspWindowSizesf8Enum,
 NhuRACH_ConfigCmnra_SupervisionInfora_RspWindowSizesf10Enum
} EnumNhuRACH_ConfigCmnra_SupervisionInfora_RspWindowSize;
typedef TknU32 NhuRACH_ConfigCmnra_SupervisionInfora_RspWindowSize;


typedef enum enumNhuRACH_ConfigCmnra_SupervisionInfomac_ContentionResolutionTimer
{
 NhuRACH_ConfigCmnra_SupervisionInfomac_ContentionResolutionTimersf8Enum,
 NhuRACH_ConfigCmnra_SupervisionInfomac_ContentionResolutionTimersf16Enum,
 NhuRACH_ConfigCmnra_SupervisionInfomac_ContentionResolutionTimersf24Enum,
 NhuRACH_ConfigCmnra_SupervisionInfomac_ContentionResolutionTimersf32Enum,
 NhuRACH_ConfigCmnra_SupervisionInfomac_ContentionResolutionTimersf40Enum,
 NhuRACH_ConfigCmnra_SupervisionInfomac_ContentionResolutionTimersf48Enum,
 NhuRACH_ConfigCmnra_SupervisionInfomac_ContentionResolutionTimersf56Enum,
 NhuRACH_ConfigCmnra_SupervisionInfomac_ContentionResolutionTimersf64Enum
} EnumNhuRACH_ConfigCmnra_SupervisionInfomac_ContentionResolutionTimer;
typedef TknU32 NhuRACH_ConfigCmnra_SupervisionInfomac_ContentionResolutionTimer;

typedef struct NhuRACH_ConfigCmnra_SupervisionInfo
{
 TknPres pres;
 NhuRACH_ConfigCmnra_SupervisionInfopreambleTransMax preambleTransMax;
 NhuRACH_ConfigCmnra_SupervisionInfora_RspWindowSize ra_RspWindowSize;
 NhuRACH_ConfigCmnra_SupervisionInfomac_ContentionResolutionTimer mac_ContentionResolutionTimer;
} NhuRACH_ConfigCmnra_SupervisionInfo;


typedef TknU32 NhuRACH_ConfigCmnmaxHARQ_Msg3Tx;

typedef struct NhuRACH_ConfigCmn
{
 TknPres pres;
 NhuRACH_ConfigCmnpreambleInfo preambleInfo;
 NhuRACH_ConfigCmnpowerRampingParams powerRampingParams;
 NhuRACH_ConfigCmnra_SupervisionInfo ra_SupervisionInfo;
 NhuRACH_ConfigCmnmaxHARQ_Msg3Tx maxHARQ_Msg3Tx;
} NhuRACH_ConfigCmn;


typedef enum enumNhuBCCH_ConfigmodificationPeriodCoeff
{
 NhuBCCH_ConfigmodificationPeriodCoeffn2Enum,
 NhuBCCH_ConfigmodificationPeriodCoeffn4Enum,
 NhuBCCH_ConfigmodificationPeriodCoeffn8Enum,
 NhuBCCH_ConfigmodificationPeriodCoeffn16Enum
} EnumNhuBCCH_ConfigmodificationPeriodCoeff;
typedef TknU32 NhuBCCH_ConfigmodificationPeriodCoeff;

typedef struct NhuBCCH_Config
{
 TknPres pres;
 NhuBCCH_ConfigmodificationPeriodCoeff modificationPeriodCoeff;
} NhuBCCH_Config;


typedef enum enumNhuPCCH_ConfigdefaultPagCycle
{
 NhuPCCH_ConfigdefaultPagCyclerf32Enum,
 NhuPCCH_ConfigdefaultPagCyclerf64Enum,
 NhuPCCH_ConfigdefaultPagCyclerf128Enum,
 NhuPCCH_ConfigdefaultPagCyclerf256Enum
} EnumNhuPCCH_ConfigdefaultPagCycle;
typedef TknU32 NhuPCCH_ConfigdefaultPagCycle;


typedef enum enumNhuPCCH_ConfignB
{
 NhuPCCH_ConfignBfourTEnum,
 NhuPCCH_ConfignBtwoTEnum,
 NhuPCCH_ConfignBoneTEnum,
 NhuPCCH_ConfignBhalfTEnum,
 NhuPCCH_ConfignBquarterTEnum,
 NhuPCCH_ConfignBoneEighthTEnum,
 NhuPCCH_ConfignBoneSixteenthTEnum,
 NhuPCCH_ConfignBoneThirtySecondTEnum
} EnumNhuPCCH_ConfignB;
typedef TknU32 NhuPCCH_ConfignB;

typedef struct NhuPCCH_Config
{
 TknPres pres;
 NhuPCCH_ConfigdefaultPagCycle defaultPagCycle;
 NhuPCCH_ConfignB nB;
} NhuPCCH_Config;


typedef TknU32 NhuPRACH_ConfigInfoprach_ConfigIdx;


typedef TknU8 NhuPRACH_ConfigInfohighSpeedFlag;


typedef TknU32 NhuPRACH_ConfigInfozeroCorrelationZoneConfig;


typedef TknU32 NhuPRACH_ConfigInfoprach_FreqOffset;

typedef struct NhuPRACH_ConfigInfo
{
 TknPres pres;
 NhuPRACH_ConfigInfoprach_ConfigIdx prach_ConfigIdx;
 NhuPRACH_ConfigInfohighSpeedFlag highSpeedFlag;
 NhuPRACH_ConfigInfozeroCorrelationZoneConfig zeroCorrelationZoneConfig;
 NhuPRACH_ConfigInfoprach_FreqOffset prach_FreqOffset;
} NhuPRACH_ConfigInfo;


typedef TknU32 NhuPRACH_ConfigSIBrootSequenceIdx;

typedef struct NhuPRACH_ConfigSIB
{
 TknPres pres;
 NhuPRACH_ConfigSIBrootSequenceIdx rootSequenceIdx;
 NhuPRACH_ConfigInfo prach_ConfigInfo;
} NhuPRACH_ConfigSIB;


typedef TknS32 NhuPDSCH_ConfigCmnreferenceSignalPower;


typedef TknU32 NhuPDSCH_ConfigCmnp_b;

typedef struct NhuPDSCH_ConfigCmn
{
 TknPres pres;
 NhuPDSCH_ConfigCmnreferenceSignalPower referenceSignalPower;
 NhuPDSCH_ConfigCmnp_b p_b;
} NhuPDSCH_ConfigCmn;


typedef TknU8 NhuUL_ReferenceSignalsPUSCHgroupHoppingEnabled;


typedef TknU32 NhuUL_ReferenceSignalsPUSCHgroupAssignmentPUSCH;


typedef TknU8 NhuUL_ReferenceSignalsPUSCHsequenceHoppingEnabled;


typedef TknU32 NhuUL_ReferenceSignalsPUSCHcyclicShift;

typedef struct NhuUL_ReferenceSignalsPUSCH
{
 TknPres pres;
 NhuUL_ReferenceSignalsPUSCHgroupHoppingEnabled groupHoppingEnabled;
 NhuUL_ReferenceSignalsPUSCHgroupAssignmentPUSCH groupAssignmentPUSCH;
 NhuUL_ReferenceSignalsPUSCHsequenceHoppingEnabled sequenceHoppingEnabled;
 NhuUL_ReferenceSignalsPUSCHcyclicShift cyclicShift;
} NhuUL_ReferenceSignalsPUSCH;


typedef TknU32 NhuPUSCH_ConfigCmnpusch_ConfigBasicn_SB;


typedef enum enumNhuPUSCH_ConfigCmnpusch_ConfigBasichoppingMode
{
 NhuPUSCH_ConfigCmnpusch_ConfigBasichoppingModeinterSubFrameEnum,
 NhuPUSCH_ConfigCmnpusch_ConfigBasichoppingModeintraAndInterSubFrameEnum
} EnumNhuPUSCH_ConfigCmnpusch_ConfigBasichoppingMode;
typedef TknU32 NhuPUSCH_ConfigCmnpusch_ConfigBasichoppingMode;


typedef TknU32 NhuPUSCH_ConfigCmnpusch_ConfigBasicpusch_HoppingOffset;


typedef TknU8 NhuPUSCH_ConfigCmnpusch_ConfigBasicenable64QAM;

typedef struct NhuPUSCH_ConfigCmnpusch_ConfigBasic
{
 TknPres pres;
 NhuPUSCH_ConfigCmnpusch_ConfigBasicn_SB n_SB;
 NhuPUSCH_ConfigCmnpusch_ConfigBasichoppingMode hoppingMode;
 NhuPUSCH_ConfigCmnpusch_ConfigBasicpusch_HoppingOffset pusch_HoppingOffset;
 NhuPUSCH_ConfigCmnpusch_ConfigBasicenable64QAM enable64QAM;
} NhuPUSCH_ConfigCmnpusch_ConfigBasic;

typedef struct NhuPUSCH_ConfigCmn
{
 TknPres pres;
 NhuPUSCH_ConfigCmnpusch_ConfigBasic pusch_ConfigBasic;
 NhuUL_ReferenceSignalsPUSCH ul_ReferenceSignalsPUSCH;
} NhuPUSCH_ConfigCmn;


typedef enum enumNhuPUCCH_ConfigCmndeltaPUCCH_Shift
{
 NhuPUCCH_ConfigCmndeltaPUCCH_Shiftds1Enum,
 NhuPUCCH_ConfigCmndeltaPUCCH_Shiftds2Enum,
 NhuPUCCH_ConfigCmndeltaPUCCH_Shiftds3Enum
} EnumNhuPUCCH_ConfigCmndeltaPUCCH_Shift;
typedef TknU32 NhuPUCCH_ConfigCmndeltaPUCCH_Shift;


typedef TknU32 NhuPUCCH_ConfigCmnnRB_CQI;


typedef TknU32 NhuPUCCH_ConfigCmnnCS_AN;


typedef TknU32 NhuPUCCH_ConfigCmnn1PUCCH_AN;

typedef struct NhuPUCCH_ConfigCmn
{
 TknPres pres;
 NhuPUCCH_ConfigCmndeltaPUCCH_Shift deltaPUCCH_Shift;
 NhuPUCCH_ConfigCmnnRB_CQI nRB_CQI;
 NhuPUCCH_ConfigCmnnCS_AN nCS_AN;
 NhuPUCCH_ConfigCmnn1PUCCH_AN n1PUCCH_AN;
} NhuPUCCH_ConfigCmn;


typedef enum enumNhuSoundingRS_UL_ConfigCmnsetupsrs_BandwidthConfig
{
 NhuSoundingRS_UL_ConfigCmnsetupsrs_BandwidthConfigbw0Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_BandwidthConfigbw1Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_BandwidthConfigbw2Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_BandwidthConfigbw3Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_BandwidthConfigbw4Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_BandwidthConfigbw5Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_BandwidthConfigbw6Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_BandwidthConfigbw7Enum
} EnumNhuSoundingRS_UL_ConfigCmnsetupsrs_BandwidthConfig;
typedef TknU32 NhuSoundingRS_UL_ConfigCmnsetupsrs_BandwidthConfig;


typedef enum enumNhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfig
{
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc0Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc1Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc2Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc3Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc4Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc5Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc6Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc7Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc8Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc9Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc10Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc11Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc12Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc13Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc14Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc15Enum
} EnumNhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfig;
typedef TknU32 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfig;


typedef TknU8 NhuSoundingRS_UL_ConfigCmnsetupackNackSRS_SimultaneousTransmission;


typedef enum enumNhuSoundingRS_UL_ConfigCmnsetupsrs_MaxUpPts
{
 NhuSoundingRS_UL_ConfigCmnsetupsrs_MaxUpPtstrueEnum
} EnumNhuSoundingRS_UL_ConfigCmnsetupsrs_MaxUpPts;
typedef TknU32 NhuSoundingRS_UL_ConfigCmnsetupsrs_MaxUpPts;

typedef struct NhuSoundingRS_UL_ConfigCmnsetup
{
 TknPres pres;
 NhuSoundingRS_UL_ConfigCmnsetupsrs_BandwidthConfig srs_BandwidthConfig;
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfig srs_SubfrmConfig;
 NhuSoundingRS_UL_ConfigCmnsetupackNackSRS_SimultaneousTransmission ackNackSRS_SimultaneousTransmission;
 NhuSoundingRS_UL_ConfigCmnsetupsrs_MaxUpPts srs_MaxUpPts;
} NhuSoundingRS_UL_ConfigCmnsetup;

typedef struct NhuSoundingRS_UL_ConfigCmn
{
 TknU8 choice;
 union {
  NhuSoundingRS_UL_ConfigCmnsetup setup;
 } val;
} NhuSoundingRS_UL_ConfigCmn;


typedef enum enumNhuDeltaFLst_PUCCHdeltaF_PUCCH_Format1
{
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format1deltaF_2Enum,
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format1deltaF0Enum,
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format1deltaF2Enum
} EnumNhuDeltaFLst_PUCCHdeltaF_PUCCH_Format1;
typedef TknU32 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format1;


typedef enum enumNhuDeltaFLst_PUCCHdeltaF_PUCCH_Format1b
{
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format1bdeltaF1Enum,
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format1bdeltaF3Enum,
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format1bdeltaF5Enum
} EnumNhuDeltaFLst_PUCCHdeltaF_PUCCH_Format1b;
typedef TknU32 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format1b;


typedef enum enumNhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2
{
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2deltaF_2Enum,
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2deltaF0Enum,
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2deltaF1Enum,
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2deltaF2Enum
} EnumNhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2;
typedef TknU32 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2;


typedef enum enumNhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2a
{
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2adeltaF_2Enum,
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2adeltaF0Enum,
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2adeltaF2Enum
} EnumNhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2a;
typedef TknU32 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2a;


typedef enum enumNhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2b
{
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2bdeltaF_2Enum,
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2bdeltaF0Enum,
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2bdeltaF2Enum
} EnumNhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2b;
typedef TknU32 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2b;

typedef struct NhuDeltaFLst_PUCCH
{
 TknPres pres;
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format1 deltaF_PUCCH_Format1;
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format1b deltaF_PUCCH_Format1b;
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2 deltaF_PUCCH_Format2;
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2a deltaF_PUCCH_Format2a;
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2b deltaF_PUCCH_Format2b;
} NhuDeltaFLst_PUCCH;


typedef TknS32 NhuUlnkPowerCntrlCmnp0_NominalPUSCH;


typedef enum enumNhuUlnkPowerCntrlCmnalpha
{
 NhuUlnkPowerCntrlCmnalphaal0Enum,
 NhuUlnkPowerCntrlCmnalphaal04Enum,
 NhuUlnkPowerCntrlCmnalphaal05Enum,
 NhuUlnkPowerCntrlCmnalphaal06Enum,
 NhuUlnkPowerCntrlCmnalphaal07Enum,
 NhuUlnkPowerCntrlCmnalphaal08Enum,
 NhuUlnkPowerCntrlCmnalphaal09Enum,
 NhuUlnkPowerCntrlCmnalphaal1Enum
} EnumNhuUlnkPowerCntrlCmnalpha;
typedef TknU32 NhuUlnkPowerCntrlCmnalpha;


typedef TknS32 NhuUlnkPowerCntrlCmnp0_NominalPUCCH;


typedef TknS32 NhuUlnkPowerCntrlCmndeltaPreambleMsg3;

typedef struct NhuUlnkPowerCntrlCmn
{
 TknPres pres;
 NhuUlnkPowerCntrlCmnp0_NominalPUSCH p0_NominalPUSCH;
 NhuUlnkPowerCntrlCmnalpha alpha;
 NhuUlnkPowerCntrlCmnp0_NominalPUCCH p0_NominalPUCCH;
 NhuDeltaFLst_PUCCH deltaFLst_PUCCH;
 NhuUlnkPowerCntrlCmndeltaPreambleMsg3 deltaPreambleMsg3;
} NhuUlnkPowerCntrlCmn;


typedef enum enumNhuUL_CyclicPrefixLength
{
 NhuUL_CyclicPrefixLengthlen1Enum,
 NhuUL_CyclicPrefixLengthlen2Enum
} EnumNhuUL_CyclicPrefixLength;
typedef TknU32 NhuUL_CyclicPrefixLength;

typedef struct NhuRadioResourceConfigCmnSIB
{
 TknPres pres;
 NhuRACH_ConfigCmn rach_ConfigCmn;
 NhuBCCH_Config bcch_Config;
 NhuPCCH_Config pcch_Config;
 NhuPRACH_ConfigSIB prach_Config;
 NhuPDSCH_ConfigCmn pdsch_ConfigCmn;
 NhuPUSCH_ConfigCmn pusch_ConfigCmn;
 NhuPUCCH_ConfigCmn pucch_ConfigCmn;
 NhuSoundingRS_UL_ConfigCmn soundingRS_UL_ConfigCmn;
 NhuUlnkPowerCntrlCmn uplinkPowerCntrlCmn;
 NhuUL_CyclicPrefixLength ul_CyclicPrefixLength;
} NhuRadioResourceConfigCmnSIB;


typedef enum enumNhuUE_TmrsAndConstst300
{
 NhuUE_TmrsAndConstst300ms100Enum,
 NhuUE_TmrsAndConstst300ms200Enum,
 NhuUE_TmrsAndConstst300ms300Enum,
 NhuUE_TmrsAndConstst300ms400Enum,
 NhuUE_TmrsAndConstst300ms600Enum,
 NhuUE_TmrsAndConstst300ms1000Enum,
 NhuUE_TmrsAndConstst300ms1500Enum,
 NhuUE_TmrsAndConstst300ms2000Enum
} EnumNhuUE_TmrsAndConstst300;
typedef TknU32 NhuUE_TmrsAndConstst300;


typedef enum enumNhuUE_TmrsAndConstst301
{
 NhuUE_TmrsAndConstst301ms100Enum,
 NhuUE_TmrsAndConstst301ms200Enum,
 NhuUE_TmrsAndConstst301ms300Enum,
 NhuUE_TmrsAndConstst301ms400Enum,
 NhuUE_TmrsAndConstst301ms600Enum,
 NhuUE_TmrsAndConstst301ms1000Enum,
 NhuUE_TmrsAndConstst301ms1500Enum,
 NhuUE_TmrsAndConstst301ms2000Enum
} EnumNhuUE_TmrsAndConstst301;
typedef TknU32 NhuUE_TmrsAndConstst301;


typedef enum enumNhuUE_TmrsAndConstst310
{
 NhuUE_TmrsAndConstst310ms0Enum,
 NhuUE_TmrsAndConstst310ms50Enum,
 NhuUE_TmrsAndConstst310ms100Enum,
 NhuUE_TmrsAndConstst310ms200Enum,
 NhuUE_TmrsAndConstst310ms500Enum,
 NhuUE_TmrsAndConstst310ms1000Enum,
 NhuUE_TmrsAndConstst310ms2000Enum
} EnumNhuUE_TmrsAndConstst310;
typedef TknU32 NhuUE_TmrsAndConstst310;


typedef enum enumNhuUE_TmrsAndConstsn310
{
 NhuUE_TmrsAndConstsn310n1Enum,
 NhuUE_TmrsAndConstsn310n2Enum,
 NhuUE_TmrsAndConstsn310n3Enum,
 NhuUE_TmrsAndConstsn310n4Enum,
 NhuUE_TmrsAndConstsn310n6Enum,
 NhuUE_TmrsAndConstsn310n8Enum,
 NhuUE_TmrsAndConstsn310n10Enum,
 NhuUE_TmrsAndConstsn310n20Enum
} EnumNhuUE_TmrsAndConstsn310;
typedef TknU32 NhuUE_TmrsAndConstsn310;


typedef enum enumNhuUE_TmrsAndConstst311
{
 NhuUE_TmrsAndConstst311ms1000Enum,
 NhuUE_TmrsAndConstst311ms3000Enum,
 NhuUE_TmrsAndConstst311ms5000Enum,
 NhuUE_TmrsAndConstst311ms10000Enum,
 NhuUE_TmrsAndConstst311ms15000Enum,
 NhuUE_TmrsAndConstst311ms20000Enum,
 NhuUE_TmrsAndConstst311ms30000Enum
} EnumNhuUE_TmrsAndConstst311;
typedef TknU32 NhuUE_TmrsAndConstst311;


typedef enum enumNhuUE_TmrsAndConstsn311
{
 NhuUE_TmrsAndConstsn311n1Enum,
 NhuUE_TmrsAndConstsn311n2Enum,
 NhuUE_TmrsAndConstsn311n3Enum,
 NhuUE_TmrsAndConstsn311n4Enum,
 NhuUE_TmrsAndConstsn311n5Enum,
 NhuUE_TmrsAndConstsn311n6Enum,
 NhuUE_TmrsAndConstsn311n8Enum,
 NhuUE_TmrsAndConstsn311n10Enum
} EnumNhuUE_TmrsAndConstsn311;
typedef TknU32 NhuUE_TmrsAndConstsn311;

typedef struct NhuUE_TmrsAndConsts
{
 TknPres pres;
 NhuUE_TmrsAndConstst300 t300;
 NhuUE_TmrsAndConstst301 t301;
 NhuUE_TmrsAndConstst310 t310;
 NhuUE_TmrsAndConstsn310 n310;
 NhuUE_TmrsAndConstst311 t311;
 NhuUE_TmrsAndConstsn311 n311;
} NhuUE_TmrsAndConsts;


typedef TknU32 NhuARFCN_ValueEUTRA;


typedef TknU32 NhuAdditionalSpectrumEmission;


typedef enum enumNhuMBSFN_SubfrmConfigradioframeAllocnPeriod
{
 NhuMBSFN_SubfrmConfigradioframeAllocnPeriodn1Enum,
 NhuMBSFN_SubfrmConfigradioframeAllocnPeriodn2Enum,
 NhuMBSFN_SubfrmConfigradioframeAllocnPeriodn4Enum,
 NhuMBSFN_SubfrmConfigradioframeAllocnPeriodn8Enum,
 NhuMBSFN_SubfrmConfigradioframeAllocnPeriodn16Enum,
 NhuMBSFN_SubfrmConfigradioframeAllocnPeriodn32Enum
} EnumNhuMBSFN_SubfrmConfigradioframeAllocnPeriod;
typedef TknU32 NhuMBSFN_SubfrmConfigradioframeAllocnPeriod;


typedef TknU32 NhuMBSFN_SubfrmConfigradioframeAllocnOffset;


typedef TknStrBSXL NhuMBSFN_SubfrmConfigsubframeAllocnoneFrame;

typedef TknStrBSXL NhuMBSFN_SubfrmConfigsubframeAllocnfourFrames;
typedef struct NhuMBSFN_SubfrmConfigsubframeAllocn
{
 TknU8 choice;
 union {
  NhuMBSFN_SubfrmConfigsubframeAllocnoneFrame oneFrame;
  NhuMBSFN_SubfrmConfigsubframeAllocnfourFrames fourFrames;
 } val;
} NhuMBSFN_SubfrmConfigsubframeAllocn;

typedef struct NhuMBSFN_SubfrmConfig
{
 TknPres pres;
 NhuMBSFN_SubfrmConfigradioframeAllocnPeriod radioframeAllocnPeriod;
 NhuMBSFN_SubfrmConfigradioframeAllocnOffset radioframeAllocnOffset;
 NhuMBSFN_SubfrmConfigsubframeAllocn subframeAllocn;
} NhuMBSFN_SubfrmConfig;

typedef struct NhuMBSFN_SubfrmConfigLst
{
 TknU16 noComp;
 NhuMBSFN_SubfrmConfig *member;
}NhuMBSFN_SubfrmConfigLst;


typedef enum enumNhuTimeAlignmentTimer
{
 NhuTimeAlignmentTimersf500Enum,
 NhuTimeAlignmentTimersf750Enum,
 NhuTimeAlignmentTimersf1280Enum,
 NhuTimeAlignmentTimersf1920Enum,
 NhuTimeAlignmentTimersf2560Enum,
 NhuTimeAlignmentTimersf5120Enum,
 NhuTimeAlignmentTimersf10240Enum,
 NhuTimeAlignmentTimerinfinityEnum
} EnumNhuTimeAlignmentTimer;
typedef TknU32 NhuTimeAlignmentTimer;


typedef TknU8 NhuSysInfoBlockTyp2ac_BarringInfoac_BarringForEmergency;

typedef struct NhuSysInfoBlockTyp2ac_BarringInfo
{
 TknPres pres;
 NhuSysInfoBlockTyp2ac_BarringInfoac_BarringForEmergency ac_BarringForEmergency;
 NhuAC_BarringConfig ac_BarringForMO_Signalling;
 NhuAC_BarringConfig ac_BarringForMO_Data;
} NhuSysInfoBlockTyp2ac_BarringInfo;


typedef enum enumNhuSysInfoBlockTyp2freqInfoul_Bandwidth
{
 NhuSysInfoBlockTyp2freqInfoul_Bandwidthn6Enum,
 NhuSysInfoBlockTyp2freqInfoul_Bandwidthn15Enum,
 NhuSysInfoBlockTyp2freqInfoul_Bandwidthn25Enum,
 NhuSysInfoBlockTyp2freqInfoul_Bandwidthn50Enum,
 NhuSysInfoBlockTyp2freqInfoul_Bandwidthn75Enum,
 NhuSysInfoBlockTyp2freqInfoul_Bandwidthn100Enum
} EnumNhuSysInfoBlockTyp2freqInfoul_Bandwidth;
typedef TknU32 NhuSysInfoBlockTyp2freqInfoul_Bandwidth;

typedef struct NhuSysInfoBlockTyp2freqInfo
{
 TknPres pres;
 NhuARFCN_ValueEUTRA ul_CarrierFreq;
 NhuSysInfoBlockTyp2freqInfoul_Bandwidth ul_Bandwidth;
 NhuAdditionalSpectrumEmission additionalSpectrumEmission;
} NhuSysInfoBlockTyp2freqInfo;


typedef TknStrOSXL NhuSysInfoBlockTyp2lateNonCriticalExtn;
typedef struct NhuSysInfoBlockTyp2extaddgrp_r9
{
 TknPres pres;
 NhuAC_BarringConfig ssac_BarringForMMTEL_Voice_r9;
 NhuAC_BarringConfig ssac_BarringForMMTEL_Video_r9;
} NhuSysInfoBlockTyp2extaddgrp_r9;

typedef struct NhuSysInfoBlockTyp2
{
 TknPres pres;
 NhuSysInfoBlockTyp2ac_BarringInfo ac_BarringInfo;
 NhuRadioResourceConfigCmnSIB radioResourceConfigCmn;
 NhuUE_TmrsAndConsts ue_TmrsAndConsts;
 NhuSysInfoBlockTyp2freqInfo freqInfo;
 NhuMBSFN_SubfrmConfigLst mbsfn_SubfrmConfigLst;
 NhuTimeAlignmentTimer timeAlignmentTimerCmn;
 NhuSysInfoBlockTyp2lateNonCriticalExtn lateNonCriticalExtn;
 NhuSysInfoBlockTyp2extaddgrp_r9 extaddgrp_r9;
} NhuSysInfoBlockTyp2;


typedef enum enumNhuMobilityStateParamst_Evaluation
{
 NhuMobilityStateParamst_Evaluations30Enum,
 NhuMobilityStateParamst_Evaluations60Enum,
 NhuMobilityStateParamst_Evaluations120Enum,
 NhuMobilityStateParamst_Evaluations180Enum,
 NhuMobilityStateParamst_Evaluations240Enum,
 NhuMobilityStateParamst_Evaluationspare3Enum,
 NhuMobilityStateParamst_Evaluationspare2Enum,
 NhuMobilityStateParamst_Evaluationspare1Enum
} EnumNhuMobilityStateParamst_Evaluation;
typedef TknU32 NhuMobilityStateParamst_Evaluation;


typedef enum enumNhuMobilityStateParamst_HystNormal
{
 NhuMobilityStateParamst_HystNormals30Enum,
 NhuMobilityStateParamst_HystNormals60Enum,
 NhuMobilityStateParamst_HystNormals120Enum,
 NhuMobilityStateParamst_HystNormals180Enum,
 NhuMobilityStateParamst_HystNormals240Enum,
 NhuMobilityStateParamst_HystNormalspare3Enum,
 NhuMobilityStateParamst_HystNormalspare2Enum,
 NhuMobilityStateParamst_HystNormalspare1Enum
} EnumNhuMobilityStateParamst_HystNormal;
typedef TknU32 NhuMobilityStateParamst_HystNormal;


typedef TknU32 NhuMobilityStateParamsn_CellChangeMedium;


typedef TknU32 NhuMobilityStateParamsn_CellChangeHigh;

typedef struct NhuMobilityStateParams
{
 TknPres pres;
 NhuMobilityStateParamst_Evaluation t_Evaluation;
 NhuMobilityStateParamst_HystNormal t_HystNormal;
 NhuMobilityStateParamsn_CellChangeMedium n_CellChangeMedium;
 NhuMobilityStateParamsn_CellChangeHigh n_CellChangeHigh;
} NhuMobilityStateParams;


typedef TknU32 NhuReselectionThreshold;


typedef TknU32 NhuCellReselectionPriority;


typedef TknS32 NhuQ_RxLevMin;


typedef TknS32 NhuP_Max;


typedef enum enumNhuAllowedMeasBandwidth
{
 NhuAllowedMeasBandwidthmbw6Enum,
 NhuAllowedMeasBandwidthmbw15Enum,
 NhuAllowedMeasBandwidthmbw25Enum,
 NhuAllowedMeasBandwidthmbw50Enum,
 NhuAllowedMeasBandwidthmbw75Enum,
 NhuAllowedMeasBandwidthmbw100Enum
} EnumNhuAllowedMeasBandwidth;
typedef TknU32 NhuAllowedMeasBandwidth;


typedef TknU8 NhuPresenceAntennaPort1;


typedef TknStrBSXL NhuNeighCellConfig;

typedef TknU32 NhuT_Reselection;


typedef enum enumNhuSpeedStateScaleFactorssf_Medium
{
 NhuSpeedStateScaleFactorssf_MediumoDot25Enum,
 NhuSpeedStateScaleFactorssf_MediumoDot5Enum,
 NhuSpeedStateScaleFactorssf_MediumoDot75Enum,
 NhuSpeedStateScaleFactorssf_MediumlDot0Enum
} EnumNhuSpeedStateScaleFactorssf_Medium;
typedef TknU32 NhuSpeedStateScaleFactorssf_Medium;


typedef enum enumNhuSpeedStateScaleFactorssf_High
{
 NhuSpeedStateScaleFactorssf_HighoDot25Enum,
 NhuSpeedStateScaleFactorssf_HighoDot5Enum,
 NhuSpeedStateScaleFactorssf_HighoDot75Enum,
 NhuSpeedStateScaleFactorssf_HighlDot0Enum
} EnumNhuSpeedStateScaleFactorssf_High;
typedef TknU32 NhuSpeedStateScaleFactorssf_High;

typedef struct NhuSpeedStateScaleFactors
{
 TknPres pres;
 NhuSpeedStateScaleFactorssf_Medium sf_Medium;
 NhuSpeedStateScaleFactorssf_High sf_High;
} NhuSpeedStateScaleFactors;


typedef TknU32 NhuReselectionThresholdQ_r9;


typedef TknS32 NhuQ_QualMin_r9;


typedef enum enumNhuSysInfoBlockTyp3cellReselectionInfoCmnq_Hyst
{
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB0Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB1Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB2Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB3Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB4Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB5Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB6Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB8Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB10Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB12Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB14Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB16Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB18Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB20Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB22Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB24Enum
} EnumNhuSysInfoBlockTyp3cellReselectionInfoCmnq_Hyst;
typedef TknU32 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_Hyst;


typedef enum enumNhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_Medium
{
 NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_MediumdB_6Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_MediumdB_4Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_MediumdB_2Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_MediumdB0Enum
} EnumNhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_Medium;
typedef TknU32 NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_Medium;


typedef enum enumNhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_High
{
 NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_HighdB_6Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_HighdB_4Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_HighdB_2Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_HighdB0Enum
} EnumNhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_High;
typedef TknU32 NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_High;

typedef struct NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSF
{
 TknPres pres;
 NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_Medium sf_Medium;
 NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_High sf_High;
} NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSF;

typedef struct NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionPars
{
 TknPres pres;
 NhuMobilityStateParams mobilityStateParams;
 NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSF q_HystSF;
} NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionPars;

typedef struct NhuSysInfoBlockTyp3cellReselectionInfoCmn
{
 TknPres pres;
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_Hyst q_Hyst;
 NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionPars speedStateReselectionPars;
} NhuSysInfoBlockTyp3cellReselectionInfoCmn;

typedef struct NhuSysInfoBlockTyp3cellReselectionServingFreqInfo
{
 TknPres pres;
 NhuReselectionThreshold s_NonIntraSearch;
 NhuReselectionThreshold threshServingLow;
 NhuCellReselectionPriority cellReselectionPriority;
} NhuSysInfoBlockTyp3cellReselectionServingFreqInfo;

typedef struct NhuSysInfoBlockTyp3intraFreqCellReselectionInfo
{
 TknPres pres;
 NhuQ_RxLevMin q_RxLevMin;
 NhuP_Max p_Max;
 NhuReselectionThreshold s_IntraSearch;
 NhuAllowedMeasBandwidth allowedMeasBandwidth;
 NhuPresenceAntennaPort1 presenceAntennaPort1;
 NhuNeighCellConfig neighCellConfig;
 NhuT_Reselection t_ReselectionEUTRA;
 NhuSpeedStateScaleFactors t_ReselectionEUTRA_SF;
} NhuSysInfoBlockTyp3intraFreqCellReselectionInfo;


typedef TknStrOSXL NhuSysInfoBlockTyp3lateNonCriticalExtn;
typedef struct NhuSysInfoBlockTyp3extaddgrp_r9s_IntraSearch_v920
{
 TknPres pres;
 NhuReselectionThreshold s_IntraSearchP_r9;
 NhuReselectionThresholdQ_r9 s_IntraSearchQ_r9;
} NhuSysInfoBlockTyp3extaddgrp_r9s_IntraSearch_v920;

typedef struct NhuSysInfoBlockTyp3extaddgrp_r9s_NonIntraSearch_v920
{
 TknPres pres;
 NhuReselectionThreshold s_NonIntraSearchP_r9;
 NhuReselectionThresholdQ_r9 s_NonIntraSearchQ_r9;
} NhuSysInfoBlockTyp3extaddgrp_r9s_NonIntraSearch_v920;

typedef struct NhuSysInfoBlockTyp3extaddgrp_r9
{
 TknPres pres;
 NhuSysInfoBlockTyp3extaddgrp_r9s_IntraSearch_v920 s_IntraSearch_v920;
 NhuSysInfoBlockTyp3extaddgrp_r9s_NonIntraSearch_v920 s_NonIntraSearch_v920;
 NhuQ_QualMin_r9 q_QualMin_r9;
 NhuReselectionThresholdQ_r9 threshServingLowQ_r9;
} NhuSysInfoBlockTyp3extaddgrp_r9;

typedef struct NhuSysInfoBlockTyp3
{
 TknPres pres;
 NhuSysInfoBlockTyp3cellReselectionInfoCmn cellReselectionInfoCmn;
 NhuSysInfoBlockTyp3cellReselectionServingFreqInfo cellReselectionServingFreqInfo;
 NhuSysInfoBlockTyp3intraFreqCellReselectionInfo intraFreqCellReselectionInfo;
 NhuSysInfoBlockTyp3lateNonCriticalExtn lateNonCriticalExtn;
 NhuSysInfoBlockTyp3extaddgrp_r9 extaddgrp_r9;
} NhuSysInfoBlockTyp3;


typedef TknU32 NhuPhysCellId;


typedef enum enumNhuQ_OffsetRange
{
 NhuQ_OffsetRangedB_24Enum,
 NhuQ_OffsetRangedB_22Enum,
 NhuQ_OffsetRangedB_20Enum,
 NhuQ_OffsetRangedB_18Enum,
 NhuQ_OffsetRangedB_16Enum,
 NhuQ_OffsetRangedB_14Enum,
 NhuQ_OffsetRangedB_12Enum,
 NhuQ_OffsetRangedB_10Enum,
 NhuQ_OffsetRangedB_8Enum,
 NhuQ_OffsetRangedB_6Enum,
 NhuQ_OffsetRangedB_5Enum,
 NhuQ_OffsetRangedB_4Enum,
 NhuQ_OffsetRangedB_3Enum,
 NhuQ_OffsetRangedB_2Enum,
 NhuQ_OffsetRangedB_1Enum,
 NhuQ_OffsetRangedB0Enum,
 NhuQ_OffsetRangedB1Enum,
 NhuQ_OffsetRangedB2Enum,
 NhuQ_OffsetRangedB3Enum,
 NhuQ_OffsetRangedB4Enum,
 NhuQ_OffsetRangedB5Enum,
 NhuQ_OffsetRangedB6Enum,
 NhuQ_OffsetRangedB8Enum,
 NhuQ_OffsetRangedB10Enum,
 NhuQ_OffsetRangedB12Enum,
 NhuQ_OffsetRangedB14Enum,
 NhuQ_OffsetRangedB16Enum,
 NhuQ_OffsetRangedB18Enum,
 NhuQ_OffsetRangedB20Enum,
 NhuQ_OffsetRangedB22Enum,
 NhuQ_OffsetRangedB24Enum
} EnumNhuQ_OffsetRange;
typedef TknU32 NhuQ_OffsetRange;

typedef struct NhuIntraFreqNeighCellInfo
{
 TknPres pres;
 NhuPhysCellId physCellId;
 NhuQ_OffsetRange q_OffsetCell;
} NhuIntraFreqNeighCellInfo;

typedef struct NhuIntraFreqNeighCellLst
{
 TknU16 noComp;
 NhuIntraFreqNeighCellInfo *member;
}NhuIntraFreqNeighCellLst;


typedef enum enumNhuPhysCellIdRangerange
{
 NhuPhysCellIdRangerangen4Enum,
 NhuPhysCellIdRangerangen8Enum,
 NhuPhysCellIdRangerangen12Enum,
 NhuPhysCellIdRangerangen16Enum,
 NhuPhysCellIdRangerangen24Enum,
 NhuPhysCellIdRangerangen32Enum,
 NhuPhysCellIdRangerangen48Enum,
 NhuPhysCellIdRangerangen64Enum,
 NhuPhysCellIdRangerangen84Enum,
 NhuPhysCellIdRangerangen96Enum,
 NhuPhysCellIdRangerangen128Enum,
 NhuPhysCellIdRangerangen168Enum,
 NhuPhysCellIdRangerangen252Enum,
 NhuPhysCellIdRangerangen504Enum,
 NhuPhysCellIdRangerangespare2Enum,
 NhuPhysCellIdRangerangespare1Enum
} EnumNhuPhysCellIdRangerange;
typedef TknU32 NhuPhysCellIdRangerange;

typedef struct NhuPhysCellIdRange
{
 TknPres pres;
 NhuPhysCellId start;
 NhuPhysCellIdRangerange range;
} NhuPhysCellIdRange;

typedef struct NhuIntraFreqBlackCellLst
{
 TknU16 noComp;
 NhuPhysCellIdRange *member;
}NhuIntraFreqBlackCellLst;


typedef TknStrOSXL NhuSysInfoBlockTyp4lateNonCriticalExtn;
typedef struct NhuSysInfoBlockTyp4
{
 TknPres pres;
 NhuIntraFreqNeighCellLst intraFreqNeighCellLst;
 NhuIntraFreqBlackCellLst intraFreqBlackCellLst;
 NhuPhysCellIdRange csg_PhysCellIdRange;
 NhuSysInfoBlockTyp4lateNonCriticalExtn lateNonCriticalExtn;
} NhuSysInfoBlockTyp4;

typedef struct NhuInterFreqNeighCellInfo
{
 TknPres pres;
 NhuPhysCellId physCellId;
 NhuQ_OffsetRange q_OffsetCell;
} NhuInterFreqNeighCellInfo;

typedef struct NhuInterFreqNeighCellLst
{
 TknU16 noComp;
 NhuInterFreqNeighCellInfo *member;
}NhuInterFreqNeighCellLst;

typedef struct NhuInterFreqBlackCellLst
{
 TknU16 noComp;
 NhuPhysCellIdRange *member;
}NhuInterFreqBlackCellLst;

typedef struct NhuInterFreqCarrierFreqInfoextaddgrp_r9threshX_Q_r9
{
 TknPres pres;
 NhuReselectionThresholdQ_r9 threshX_HighQ_r9;
 NhuReselectionThresholdQ_r9 threshX_LowQ_r9;
} NhuInterFreqCarrierFreqInfoextaddgrp_r9threshX_Q_r9;

typedef struct NhuInterFreqCarrierFreqInfoextaddgrp_r9
{
 TknPres pres;
 NhuQ_QualMin_r9 q_QualMin_r9;
 NhuInterFreqCarrierFreqInfoextaddgrp_r9threshX_Q_r9 threshX_Q_r9;
} NhuInterFreqCarrierFreqInfoextaddgrp_r9;

typedef struct NhuInterFreqCarrierFreqInfo
{
 TknPres pres;
 NhuARFCN_ValueEUTRA dl_CarrierFreq;
 NhuQ_RxLevMin q_RxLevMin;
 NhuP_Max p_Max;
 NhuT_Reselection t_ReselectionEUTRA;
 NhuSpeedStateScaleFactors t_ReselectionEUTRA_SF;
 NhuReselectionThreshold threshX_High;
 NhuReselectionThreshold threshX_Low;
 NhuAllowedMeasBandwidth allowedMeasBandwidth;
 NhuPresenceAntennaPort1 presenceAntennaPort1;
 NhuCellReselectionPriority cellReselectionPriority;
 NhuNeighCellConfig neighCellConfig;
 NhuQ_OffsetRange q_OffsetFreq;
 NhuInterFreqNeighCellLst interFreqNeighCellLst;
 NhuInterFreqBlackCellLst interFreqBlackCellLst;
 NhuInterFreqCarrierFreqInfoextaddgrp_r9 extaddgrp_r9;
} NhuInterFreqCarrierFreqInfo;

typedef struct NhuInterFreqCarrierFreqLst
{
 TknU16 noComp;
 NhuInterFreqCarrierFreqInfo *member;
}NhuInterFreqCarrierFreqLst;


typedef TknStrOSXL NhuSysInfoBlockTyp5lateNonCriticalExtn;
typedef struct NhuSysInfoBlockTyp5
{
 TknPres pres;
 NhuInterFreqCarrierFreqLst interFreqCarrierFreqLst;
 NhuSysInfoBlockTyp5lateNonCriticalExtn lateNonCriticalExtn;
} NhuSysInfoBlockTyp5;


typedef TknU32 NhuARFCN_ValueUTRA;


typedef TknS32 NhuCarrierFreqUTRA_FDDq_RxLevMin;


typedef TknS32 NhuCarrierFreqUTRA_FDDp_MaxUTRA;


typedef TknS32 NhuCarrierFreqUTRA_FDDq_QualMin;

typedef struct NhuCarrierFreqUTRA_FDDextaddgrp_r9threshX_Q_r9
{
 TknPres pres;
 NhuReselectionThresholdQ_r9 threshX_HighQ_r9;
 NhuReselectionThresholdQ_r9 threshX_LowQ_r9;
} NhuCarrierFreqUTRA_FDDextaddgrp_r9threshX_Q_r9;

typedef struct NhuCarrierFreqUTRA_FDDextaddgrp_r9
{
 TknPres pres;
 NhuCarrierFreqUTRA_FDDextaddgrp_r9threshX_Q_r9 threshX_Q_r9;
} NhuCarrierFreqUTRA_FDDextaddgrp_r9;

typedef struct NhuCarrierFreqUTRA_FDD
{
 TknPres pres;
 NhuARFCN_ValueUTRA carrierFreq;
 NhuCellReselectionPriority cellReselectionPriority;
 NhuReselectionThreshold threshX_High;
 NhuReselectionThreshold threshX_Low;
 NhuCarrierFreqUTRA_FDDq_RxLevMin q_RxLevMin;
 NhuCarrierFreqUTRA_FDDp_MaxUTRA p_MaxUTRA;
 NhuCarrierFreqUTRA_FDDq_QualMin q_QualMin;
 NhuCarrierFreqUTRA_FDDextaddgrp_r9 extaddgrp_r9;
} NhuCarrierFreqUTRA_FDD;

typedef struct NhuCarrierFreqLstUTRA_FDD
{
 TknU16 noComp;
 NhuCarrierFreqUTRA_FDD *member;
}NhuCarrierFreqLstUTRA_FDD;


typedef TknS32 NhuCarrierFreqUTRA_TDDq_RxLevMin;


typedef TknS32 NhuCarrierFreqUTRA_TDDp_MaxUTRA;

typedef struct NhuCarrierFreqUTRA_TDD
{
 TknPres pres;
 NhuARFCN_ValueUTRA carrierFreq;
 NhuCellReselectionPriority cellReselectionPriority;
 NhuReselectionThreshold threshX_High;
 NhuReselectionThreshold threshX_Low;
 NhuCarrierFreqUTRA_TDDq_RxLevMin q_RxLevMin;
 NhuCarrierFreqUTRA_TDDp_MaxUTRA p_MaxUTRA;
} NhuCarrierFreqUTRA_TDD;

typedef struct NhuCarrierFreqLstUTRA_TDD
{
 TknU16 noComp;
 NhuCarrierFreqUTRA_TDD *member;
}NhuCarrierFreqLstUTRA_TDD;


typedef TknStrOSXL NhuSysInfoBlockTyp6lateNonCriticalExtn;
typedef struct NhuSysInfoBlockTyp6
{
 TknPres pres;
 NhuCarrierFreqLstUTRA_FDD carrierFreqLstUTRA_FDD;
 NhuCarrierFreqLstUTRA_TDD carrierFreqLstUTRA_TDD;
 NhuT_Reselection t_ReselectionUTRA;
 NhuSpeedStateScaleFactors t_ReselectionUTRA_SF;
 NhuSysInfoBlockTyp6lateNonCriticalExtn lateNonCriticalExtn;
} NhuSysInfoBlockTyp6;


typedef TknU32 NhuARFCN_ValueGERAN;


typedef enum enumNhuBandIndicatorGERAN
{
 NhuBandIndicatorGERANdcs1800Enum,
 NhuBandIndicatorGERANpcs1900Enum
} EnumNhuBandIndicatorGERAN;
typedef TknU32 NhuBandIndicatorGERAN;

typedef struct NhuExplicitLstOfARFCNs
{
 TknU16 noComp;
 NhuARFCN_ValueGERAN *member;
}NhuExplicitLstOfARFCNs;


typedef TknU32 NhuCarrierFreqsGERANfollowingARFCNsequallySpacedARFCNsarfcn_Spacing;


typedef TknU32 NhuCarrierFreqsGERANfollowingARFCNsequallySpacedARFCNsnumberOfFollowingARFCNs;

typedef struct NhuCarrierFreqsGERANfollowingARFCNsequallySpacedARFCNs
{
 TknPres pres;
 NhuCarrierFreqsGERANfollowingARFCNsequallySpacedARFCNsarfcn_Spacing arfcn_Spacing;
 NhuCarrierFreqsGERANfollowingARFCNsequallySpacedARFCNsnumberOfFollowingARFCNs numberOfFollowingARFCNs;
} NhuCarrierFreqsGERANfollowingARFCNsequallySpacedARFCNs;


typedef TknStrOSXL NhuCarrierFreqsGERANfollowingARFCNsvariableBitMapOfARFCNs;
typedef struct NhuCarrierFreqsGERANfollowingARFCNs
{
 TknU8 choice;
 union {
  NhuExplicitLstOfARFCNs explicitLstOfARFCNs;
  NhuCarrierFreqsGERANfollowingARFCNsequallySpacedARFCNs equallySpacedARFCNs;
  NhuCarrierFreqsGERANfollowingARFCNsvariableBitMapOfARFCNs variableBitMapOfARFCNs;
 } val;
} NhuCarrierFreqsGERANfollowingARFCNs;

typedef struct NhuCarrierFreqsGERAN
{
 TknPres pres;
 NhuARFCN_ValueGERAN startingARFCN;
 NhuBandIndicatorGERAN bandIndicator;
 NhuCarrierFreqsGERANfollowingARFCNs followingARFCNs;
} NhuCarrierFreqsGERAN;


typedef TknStrBSXL NhuCarrierFreqsInfoGERANcommonInfoncc_Permitted;

typedef TknU32 NhuCarrierFreqsInfoGERANcommonInfoq_RxLevMin;


typedef TknU32 NhuCarrierFreqsInfoGERANcommonInfop_MaxGERAN;

typedef struct NhuCarrierFreqsInfoGERANcommonInfo
{
 TknPres pres;
 NhuCellReselectionPriority cellReselectionPriority;
 NhuCarrierFreqsInfoGERANcommonInfoncc_Permitted ncc_Permitted;
 NhuCarrierFreqsInfoGERANcommonInfoq_RxLevMin q_RxLevMin;
 NhuCarrierFreqsInfoGERANcommonInfop_MaxGERAN p_MaxGERAN;
 NhuReselectionThreshold threshX_High;
 NhuReselectionThreshold threshX_Low;
} NhuCarrierFreqsInfoGERANcommonInfo;

typedef struct NhuCarrierFreqsInfoGERAN
{
 TknPres pres;
 NhuCarrierFreqsGERAN carrierFreqs;
 NhuCarrierFreqsInfoGERANcommonInfo commonInfo;
} NhuCarrierFreqsInfoGERAN;

typedef struct NhuCarrierFreqsInfoLstGERAN
{
 TknU16 noComp;
 NhuCarrierFreqsInfoGERAN *member;
}NhuCarrierFreqsInfoLstGERAN;


typedef TknStrOSXL NhuSysInfoBlockTyp7lateNonCriticalExtn;
typedef struct NhuSysInfoBlockTyp7
{
 TknPres pres;
 NhuT_Reselection t_ReselectionGERAN;
 NhuSpeedStateScaleFactors t_ReselectionGERAN_SF;
 NhuCarrierFreqsInfoLstGERAN carrierFreqsInfoLst;
 NhuSysInfoBlockTyp7lateNonCriticalExtn lateNonCriticalExtn;
} NhuSysInfoBlockTyp7;


typedef TknU8 NhuSysTimeInfoCDMA2000cdma_EUTRA_Synchronisation;


typedef TknStrBSXL NhuSysTimeInfoCDMA2000cdma_SysTimesynchronousSysTime;

typedef TknStrBSXL NhuSysTimeInfoCDMA2000cdma_SysTimeasynchronousSysTime;
typedef struct NhuSysTimeInfoCDMA2000cdma_SysTime
{
 TknU8 choice;
 union {
  NhuSysTimeInfoCDMA2000cdma_SysTimesynchronousSysTime synchronousSysTime;
  NhuSysTimeInfoCDMA2000cdma_SysTimeasynchronousSysTime asynchronousSysTime;
 } val;
} NhuSysTimeInfoCDMA2000cdma_SysTime;

typedef struct NhuSysTimeInfoCDMA2000
{
 TknPres pres;
 NhuSysTimeInfoCDMA2000cdma_EUTRA_Synchronisation cdma_EUTRA_Synchronisation;
 NhuSysTimeInfoCDMA2000cdma_SysTime cdma_SysTime;
} NhuSysTimeInfoCDMA2000;


typedef TknU32 NhuPreRegistrationZoneIdHRPD;

typedef struct NhuSecondaryPreRegistrationZoneIdLstHRPD
{
 TknU16 noComp;
 NhuPreRegistrationZoneIdHRPD *member;
}NhuSecondaryPreRegistrationZoneIdLstHRPD;


typedef TknU8 NhuPreRegistrationInfoHRPDpreRegistrationAllowed;

typedef struct NhuPreRegistrationInfoHRPD
{
 TknPres pres;
 NhuPreRegistrationInfoHRPDpreRegistrationAllowed preRegistrationAllowed;
 NhuPreRegistrationZoneIdHRPD preRegistrationZoneId;
 NhuSecondaryPreRegistrationZoneIdLstHRPD secondaryPreRegistrationZoneIdLst;
} NhuPreRegistrationInfoHRPD;


typedef enum enumNhuBandclassCDMA2000
{
 NhuBandclassCDMA2000bc0Enum,
 NhuBandclassCDMA2000bc1Enum,
 NhuBandclassCDMA2000bc2Enum,
 NhuBandclassCDMA2000bc3Enum,
 NhuBandclassCDMA2000bc4Enum,
 NhuBandclassCDMA2000bc5Enum,
 NhuBandclassCDMA2000bc6Enum,
 NhuBandclassCDMA2000bc7Enum,
 NhuBandclassCDMA2000bc8Enum,
 NhuBandclassCDMA2000bc9Enum,
 NhuBandclassCDMA2000bc10Enum,
 NhuBandclassCDMA2000bc11Enum,
 NhuBandclassCDMA2000bc12Enum,
 NhuBandclassCDMA2000bc13Enum,
 NhuBandclassCDMA2000bc14Enum,
 NhuBandclassCDMA2000bc15Enum,
 NhuBandclassCDMA2000bc16Enum,
 NhuBandclassCDMA2000bc17Enum,
 NhuBandclassCDMA2000spare14Enum,
 NhuBandclassCDMA2000spare13Enum,
 NhuBandclassCDMA2000spare12Enum,
 NhuBandclassCDMA2000spare11Enum,
 NhuBandclassCDMA2000spare10Enum,
 NhuBandclassCDMA2000spare9Enum,
 NhuBandclassCDMA2000spare8Enum,
 NhuBandclassCDMA2000spare7Enum,
 NhuBandclassCDMA2000spare6Enum,
 NhuBandclassCDMA2000spare5Enum,
 NhuBandclassCDMA2000spare4Enum,
 NhuBandclassCDMA2000spare3Enum,
 NhuBandclassCDMA2000spare2Enum,
 NhuBandclassCDMA2000spare1Enum
} EnumNhuBandclassCDMA2000;
typedef TknU32 NhuBandclassCDMA2000;


typedef TknU32 NhuBandClassInfoCDMA2000threshX_High;


typedef TknU32 NhuBandClassInfoCDMA2000threshX_Low;

typedef struct NhuBandClassInfoCDMA2000
{
 TknPres pres;
 NhuBandclassCDMA2000 bandClass;
 NhuCellReselectionPriority cellReselectionPriority;
 NhuBandClassInfoCDMA2000threshX_High threshX_High;
 NhuBandClassInfoCDMA2000threshX_Low threshX_Low;
} NhuBandClassInfoCDMA2000;

typedef struct NhuBandClassLstCDMA2000
{
 TknU16 noComp;
 NhuBandClassInfoCDMA2000 *member;
}NhuBandClassLstCDMA2000;


typedef TknU32 NhuARFCN_ValueCDMA2000;


typedef TknU32 NhuPhysCellIdCDMA2000;

typedef struct NhuPhysCellIdLstCDMA2000
{
 TknU16 noComp;
 NhuPhysCellIdCDMA2000 *member;
}NhuPhysCellIdLstCDMA2000;

typedef struct NhuNeighCellsPerBandclassCDMA2000
{
 TknPres pres;
 NhuARFCN_ValueCDMA2000 arfcn;
 NhuPhysCellIdLstCDMA2000 physCellIdLst;
} NhuNeighCellsPerBandclassCDMA2000;

typedef struct NhuNeighCellsPerBandclassLstCDMA2000
{
 TknU16 noComp;
 NhuNeighCellsPerBandclassCDMA2000 *member;
}NhuNeighCellsPerBandclassLstCDMA2000;

typedef struct NhuNeighCellCDMA2000
{
 TknPres pres;
 NhuBandclassCDMA2000 bandClass;
 NhuNeighCellsPerBandclassLstCDMA2000 neighCellsPerFreqLst;
} NhuNeighCellCDMA2000;

typedef struct NhuNeighCellLstCDMA2000
{
 TknU16 noComp;
 NhuNeighCellCDMA2000 *member;
}NhuNeighCellLstCDMA2000;

typedef struct NhuCellReselectionParamsCDMA2000
{
 TknPres pres;
 NhuBandClassLstCDMA2000 bandClassLst;
 NhuNeighCellLstCDMA2000 neighCellLst;
 NhuT_Reselection t_ReselectionCDMA2000;
 NhuSpeedStateScaleFactors t_ReselectionCDMA2000_SF;
} NhuCellReselectionParamsCDMA2000;


typedef TknStrBSXL NhuCSFB_RegistrationParam1XRTTsid;

typedef TknStrBSXL NhuCSFB_RegistrationParam1XRTTnid;

typedef TknU8 NhuCSFB_RegistrationParam1XRTTmultipleSID;


typedef TknU8 NhuCSFB_RegistrationParam1XRTTmultipleNID;


typedef TknU8 NhuCSFB_RegistrationParam1XRTThomeReg;


typedef TknU8 NhuCSFB_RegistrationParam1XRTTforeignSIDReg;


typedef TknU8 NhuCSFB_RegistrationParam1XRTTforeignNIDReg;


typedef TknU8 NhuCSFB_RegistrationParam1XRTTparameterReg;


typedef TknU8 NhuCSFB_RegistrationParam1XRTTpowerUpReg;


typedef TknStrBSXL NhuCSFB_RegistrationParam1XRTTregistrationPeriod;

typedef TknStrBSXL NhuCSFB_RegistrationParam1XRTTregistrationZone;

typedef TknStrBSXL NhuCSFB_RegistrationParam1XRTTtotalZone;

typedef TknStrBSXL NhuCSFB_RegistrationParam1XRTTzoneTimer;
typedef struct NhuCSFB_RegistrationParam1XRTT
{
 TknPres pres;
 NhuCSFB_RegistrationParam1XRTTsid sid;
 NhuCSFB_RegistrationParam1XRTTnid nid;
 NhuCSFB_RegistrationParam1XRTTmultipleSID multipleSID;
 NhuCSFB_RegistrationParam1XRTTmultipleNID multipleNID;
 NhuCSFB_RegistrationParam1XRTThomeReg homeReg;
 NhuCSFB_RegistrationParam1XRTTforeignSIDReg foreignSIDReg;
 NhuCSFB_RegistrationParam1XRTTforeignNIDReg foreignNIDReg;
 NhuCSFB_RegistrationParam1XRTTparameterReg parameterReg;
 NhuCSFB_RegistrationParam1XRTTpowerUpReg powerUpReg;
 NhuCSFB_RegistrationParam1XRTTregistrationPeriod registrationPeriod;
 NhuCSFB_RegistrationParam1XRTTregistrationZone registrationZone;
 NhuCSFB_RegistrationParam1XRTTtotalZone totalZone;
 NhuCSFB_RegistrationParam1XRTTzoneTimer zoneTimer;
} NhuCSFB_RegistrationParam1XRTT;

typedef struct NhuPhysCellIdLstCDMA2000_v920
{
 TknU16 noComp;
 NhuPhysCellIdCDMA2000 *member;
}NhuPhysCellIdLstCDMA2000_v920;

typedef struct NhuNeighCellsPerBandclassCDMA2000_v920
{
 TknPres pres;
 NhuPhysCellIdLstCDMA2000_v920 physCellIdLst_v920;
} NhuNeighCellsPerBandclassCDMA2000_v920;

typedef struct NhuNeighCellsPerBandclassLstCDMA2000_v920
{
 TknU16 noComp;
 NhuNeighCellsPerBandclassCDMA2000_v920 *member;
}NhuNeighCellsPerBandclassLstCDMA2000_v920;

typedef struct NhuNeighCellCDMA2000_v920
{
 TknPres pres;
 NhuNeighCellsPerBandclassLstCDMA2000_v920 neighCellsPerFreqLst_v920;
} NhuNeighCellCDMA2000_v920;

typedef struct NhuNeighCellLstCDMA2000_v920
{
 TknU16 noComp;
 NhuNeighCellCDMA2000_v920 *member;
}NhuNeighCellLstCDMA2000_v920;

typedef struct NhuCellReselectionParamsCDMA2000_v920
{
 TknPres pres;
 NhuNeighCellLstCDMA2000_v920 neighCellLst_v920;
} NhuCellReselectionParamsCDMA2000_v920;


typedef enum enumNhuCSFB_RegistrationParam1XRTT_v920powerDownReg_r9
{
 NhuCSFB_RegistrationParam1XRTT_v920powerDownReg_r9trueEnum
} EnumNhuCSFB_RegistrationParam1XRTT_v920powerDownReg_r9;
typedef TknU32 NhuCSFB_RegistrationParam1XRTT_v920powerDownReg_r9;

typedef struct NhuCSFB_RegistrationParam1XRTT_v920
{
 TknPres pres;
 NhuCSFB_RegistrationParam1XRTT_v920powerDownReg_r9 powerDownReg_r9;
} NhuCSFB_RegistrationParam1XRTT_v920;


typedef TknU32 NhuAC_BarringConfig1XRTT_r9ac_Barring0to9_r9;


typedef TknU32 NhuAC_BarringConfig1XRTT_r9ac_Barring10_r9;


typedef TknU32 NhuAC_BarringConfig1XRTT_r9ac_Barring11_r9;


typedef TknU32 NhuAC_BarringConfig1XRTT_r9ac_Barring12_r9;


typedef TknU32 NhuAC_BarringConfig1XRTT_r9ac_Barring13_r9;


typedef TknU32 NhuAC_BarringConfig1XRTT_r9ac_Barring14_r9;


typedef TknU32 NhuAC_BarringConfig1XRTT_r9ac_Barring15_r9;


typedef TknU32 NhuAC_BarringConfig1XRTT_r9ac_BarringMsg_r9;


typedef TknU32 NhuAC_BarringConfig1XRTT_r9ac_BarringReg_r9;


typedef TknU32 NhuAC_BarringConfig1XRTT_r9ac_BarringEmg_r9;

typedef struct NhuAC_BarringConfig1XRTT_r9
{
 TknPres pres;
 NhuAC_BarringConfig1XRTT_r9ac_Barring0to9_r9 ac_Barring0to9_r9;
 NhuAC_BarringConfig1XRTT_r9ac_Barring10_r9 ac_Barring10_r9;
 NhuAC_BarringConfig1XRTT_r9ac_Barring11_r9 ac_Barring11_r9;
 NhuAC_BarringConfig1XRTT_r9ac_Barring12_r9 ac_Barring12_r9;
 NhuAC_BarringConfig1XRTT_r9ac_Barring13_r9 ac_Barring13_r9;
 NhuAC_BarringConfig1XRTT_r9ac_Barring14_r9 ac_Barring14_r9;
 NhuAC_BarringConfig1XRTT_r9ac_Barring15_r9 ac_Barring15_r9;
 NhuAC_BarringConfig1XRTT_r9ac_BarringMsg_r9 ac_BarringMsg_r9;
 NhuAC_BarringConfig1XRTT_r9ac_BarringReg_r9 ac_BarringReg_r9;
 NhuAC_BarringConfig1XRTT_r9ac_BarringEmg_r9 ac_BarringEmg_r9;
} NhuAC_BarringConfig1XRTT_r9;


typedef TknU32 NhuSysInfoBlockTyp8searchWindowSize;

typedef struct NhuSysInfoBlockTyp8parametersHRPD
{
 TknPres pres;
 NhuPreRegistrationInfoHRPD preRegistrationInfoHRPD;
 NhuCellReselectionParamsCDMA2000 cellReselectionParamsHRPD;
} NhuSysInfoBlockTyp8parametersHRPD;


typedef TknStrBSXL NhuSysInfoBlockTyp8parameters1XRTTlongCodeState1XRTT;
typedef struct NhuSysInfoBlockTyp8parameters1XRTT
{
 TknPres pres;
 NhuCSFB_RegistrationParam1XRTT csfb_RegistrationParam1XRTT;
 NhuSysInfoBlockTyp8parameters1XRTTlongCodeState1XRTT longCodeState1XRTT;
 NhuCellReselectionParamsCDMA2000 cellReselectionParams1XRTT;
} NhuSysInfoBlockTyp8parameters1XRTT;


typedef TknStrOSXL NhuSysInfoBlockTyp8lateNonCriticalExtn;

typedef TknU8 NhuSysInfoBlockTyp8extaddgrp_r9csfb_SupportForDualRxUEs_r9;

typedef struct NhuSysInfoBlockTyp8extaddgrp_r9
{
 TknPres pres;
 NhuSysInfoBlockTyp8extaddgrp_r9csfb_SupportForDualRxUEs_r9 csfb_SupportForDualRxUEs_r9;
 NhuCellReselectionParamsCDMA2000_v920 cellReselectionParamsHRPD_v920;
 NhuCellReselectionParamsCDMA2000_v920 cellReselectionParams1XRTT_v920;
 NhuCSFB_RegistrationParam1XRTT_v920 csfb_RegistrationParam1XRTT_v920;
 NhuAC_BarringConfig1XRTT_r9 ac_BarringConfig1XRTT_r9;
} NhuSysInfoBlockTyp8extaddgrp_r9;

typedef struct NhuSysInfoBlockTyp8
{
 TknPres pres;
 NhuSysTimeInfoCDMA2000 systemTimeInfo;
 NhuSysInfoBlockTyp8searchWindowSize searchWindowSize;
 NhuSysInfoBlockTyp8parametersHRPD parametersHRPD;
 NhuSysInfoBlockTyp8parameters1XRTT parameters1XRTT;
 NhuSysInfoBlockTyp8lateNonCriticalExtn lateNonCriticalExtn;
 NhuSysInfoBlockTyp8extaddgrp_r9 extaddgrp_r9;
} NhuSysInfoBlockTyp8;


typedef TknStrOSXL NhuSysInfoBlockTyp9hnb_Name;

typedef TknStrOSXL NhuSysInfoBlockTyp9lateNonCriticalExtn;
typedef struct NhuSysInfoBlockTyp9
{
 TknPres pres;
 NhuSysInfoBlockTyp9hnb_Name hnb_Name;
 NhuSysInfoBlockTyp9lateNonCriticalExtn lateNonCriticalExtn;
} NhuSysInfoBlockTyp9;


typedef TknStrBSXL NhuSysInfoBlockTyp10messageId;

typedef TknStrBSXL NhuSysInfoBlockTyp10serialNumber;

typedef TknStrOSXL NhuSysInfoBlockTyp10warningTyp;

typedef TknStrOSXL NhuSysInfoBlockTyp10warningSecInfo;

typedef TknStrOSXL NhuSysInfoBlockTyp10lateNonCriticalExtn;
typedef struct NhuSysInfoBlockTyp10
{
 TknPres pres;
 NhuSysInfoBlockTyp10messageId messageId;
 NhuSysInfoBlockTyp10serialNumber serialNumber;
 NhuSysInfoBlockTyp10warningTyp warningTyp;
 NhuSysInfoBlockTyp10warningSecInfo warningSecInfo;
 NhuSysInfoBlockTyp10lateNonCriticalExtn lateNonCriticalExtn;
} NhuSysInfoBlockTyp10;


typedef TknStrBSXL NhuSysInfoBlockTyp11messageId;

typedef TknStrBSXL NhuSysInfoBlockTyp11serialNumber;

typedef enum enumNhuSysInfoBlockTyp11warningMsgSegmentTyp
{
 NhuSysInfoBlockTyp11warningMsgSegmentTypnotLastSegmentEnum,
 NhuSysInfoBlockTyp11warningMsgSegmentTyplastSegmentEnum
} EnumNhuSysInfoBlockTyp11warningMsgSegmentTyp;
typedef TknU32 NhuSysInfoBlockTyp11warningMsgSegmentTyp;


typedef TknU32 NhuSysInfoBlockTyp11warningMsgSegmentNumber;


typedef TknStrOSXL NhuSysInfoBlockTyp11warningMsgSegment;

typedef TknStrOSXL NhuSysInfoBlockTyp11dataCodingScheme;

typedef TknStrOSXL NhuSysInfoBlockTyp11lateNonCriticalExtn;
typedef struct NhuSysInfoBlockTyp11
{
 TknPres pres;
 NhuSysInfoBlockTyp11messageId messageId;
 NhuSysInfoBlockTyp11serialNumber serialNumber;
 NhuSysInfoBlockTyp11warningMsgSegmentTyp warningMsgSegmentTyp;
 NhuSysInfoBlockTyp11warningMsgSegmentNumber warningMsgSegmentNumber;
 NhuSysInfoBlockTyp11warningMsgSegment warningMsgSegment;
 NhuSysInfoBlockTyp11dataCodingScheme dataCodingScheme;
 NhuSysInfoBlockTyp11lateNonCriticalExtn lateNonCriticalExtn;
} NhuSysInfoBlockTyp11;


typedef TknStrBSXL NhuSysInfoBlockTyp12_r9messageId_r9;

typedef TknStrBSXL NhuSysInfoBlockTyp12_r9serialNumber_r9;

typedef enum enumNhuSysInfoBlockTyp12_r9warningMsgSegmentTyp_r9
{
 NhuSysInfoBlockTyp12_r9warningMsgSegmentTyp_r9notLastSegmentEnum,
 NhuSysInfoBlockTyp12_r9warningMsgSegmentTyp_r9lastSegmentEnum
} EnumNhuSysInfoBlockTyp12_r9warningMsgSegmentTyp_r9;
typedef TknU32 NhuSysInfoBlockTyp12_r9warningMsgSegmentTyp_r9;


typedef TknU32 NhuSysInfoBlockTyp12_r9warningMsgSegmentNumber_r9;


typedef TknStrOSXL NhuSysInfoBlockTyp12_r9warningMsgSegment_r9;

typedef TknStrOSXL NhuSysInfoBlockTyp12_r9dataCodingScheme_r9;

typedef TknStrOSXL NhuSysInfoBlockTyp12_r9lateNonCriticalExtn;
typedef struct NhuSysInfoBlockTyp12_r9
{
 TknPres pres;
 NhuSysInfoBlockTyp12_r9messageId_r9 messageId_r9;
 NhuSysInfoBlockTyp12_r9serialNumber_r9 serialNumber_r9;
 NhuSysInfoBlockTyp12_r9warningMsgSegmentTyp_r9 warningMsgSegmentTyp_r9;
 NhuSysInfoBlockTyp12_r9warningMsgSegmentNumber_r9 warningMsgSegmentNumber_r9;
 NhuSysInfoBlockTyp12_r9warningMsgSegment_r9 warningMsgSegment_r9;
 NhuSysInfoBlockTyp12_r9dataCodingScheme_r9 dataCodingScheme_r9;
 NhuSysInfoBlockTyp12_r9lateNonCriticalExtn lateNonCriticalExtn;
} NhuSysInfoBlockTyp12_r9;


typedef TknU32 NhuMBSFN_AreaInfo_r9mbsfn_AreaId_r9;


typedef enum enumNhuMBSFN_AreaInfo_r9non_MBSFNregionLength
{
 NhuMBSFN_AreaInfo_r9non_MBSFNregionLengths1Enum,
 NhuMBSFN_AreaInfo_r9non_MBSFNregionLengths2Enum
} EnumNhuMBSFN_AreaInfo_r9non_MBSFNregionLength;
typedef TknU32 NhuMBSFN_AreaInfo_r9non_MBSFNregionLength;


typedef TknU32 NhuMBSFN_AreaInfo_r9notificationIndicator_r9;


typedef enum enumNhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_RepetitionPeriod_r9
{
 NhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_RepetitionPeriod_r9rf32Enum,
 NhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_RepetitionPeriod_r9rf64Enum,
 NhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_RepetitionPeriod_r9rf128Enum,
 NhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_RepetitionPeriod_r9rf256Enum
} EnumNhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_RepetitionPeriod_r9;
typedef TknU32 NhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_RepetitionPeriod_r9;


typedef TknU32 NhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_Offset_r9;


typedef enum enumNhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_ModfnPeriod_r9
{
 NhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_ModfnPeriod_r9rf512Enum,
 NhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_ModfnPeriod_r9rf1024Enum
} EnumNhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_ModfnPeriod_r9;
typedef TknU32 NhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_ModfnPeriod_r9;


typedef TknStrBSXL NhuMBSFN_AreaInfo_r9mcch_Config_r9sf_AllocInfo_r9;

typedef enum enumNhuMBSFN_AreaInfo_r9mcch_Config_r9signallingMCS_r9
{
 NhuMBSFN_AreaInfo_r9mcch_Config_r9signallingMCS_r9n2Enum,
 NhuMBSFN_AreaInfo_r9mcch_Config_r9signallingMCS_r9n7Enum,
 NhuMBSFN_AreaInfo_r9mcch_Config_r9signallingMCS_r9n13Enum,
 NhuMBSFN_AreaInfo_r9mcch_Config_r9signallingMCS_r9n19Enum
} EnumNhuMBSFN_AreaInfo_r9mcch_Config_r9signallingMCS_r9;
typedef TknU32 NhuMBSFN_AreaInfo_r9mcch_Config_r9signallingMCS_r9;

typedef struct NhuMBSFN_AreaInfo_r9mcch_Config_r9
{
 TknPres pres;
 NhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_RepetitionPeriod_r9 mcch_RepetitionPeriod_r9;
 NhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_Offset_r9 mcch_Offset_r9;
 NhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_ModfnPeriod_r9 mcch_ModfnPeriod_r9;
 NhuMBSFN_AreaInfo_r9mcch_Config_r9sf_AllocInfo_r9 sf_AllocInfo_r9;
 NhuMBSFN_AreaInfo_r9mcch_Config_r9signallingMCS_r9 signallingMCS_r9;
} NhuMBSFN_AreaInfo_r9mcch_Config_r9;

typedef struct NhuMBSFN_AreaInfo_r9
{
 TknPres pres;
 NhuMBSFN_AreaInfo_r9mbsfn_AreaId_r9 mbsfn_AreaId_r9;
 NhuMBSFN_AreaInfo_r9non_MBSFNregionLength non_MBSFNregionLength;
 NhuMBSFN_AreaInfo_r9notificationIndicator_r9 notificationIndicator_r9;
 NhuMBSFN_AreaInfo_r9mcch_Config_r9 mcch_Config_r9;
} NhuMBSFN_AreaInfo_r9;

typedef struct NhuMBSFN_AreaInfoLst_r9
{
 TknU16 noComp;
 NhuMBSFN_AreaInfo_r9 *member;
}NhuMBSFN_AreaInfoLst_r9;


typedef enum enumNhuMBMS_NotificationConfig_r9notificationRepetitionCoeff_r9
{
 NhuMBMS_NotificationConfig_r9notificationRepetitionCoeff_r9n2Enum,
 NhuMBMS_NotificationConfig_r9notificationRepetitionCoeff_r9n4Enum
} EnumNhuMBMS_NotificationConfig_r9notificationRepetitionCoeff_r9;
typedef TknU32 NhuMBMS_NotificationConfig_r9notificationRepetitionCoeff_r9;


typedef TknU32 NhuMBMS_NotificationConfig_r9notificationOffset_r9;


typedef TknU32 NhuMBMS_NotificationConfig_r9notificationSF_Idx_r9;

typedef struct NhuMBMS_NotificationConfig_r9
{
 TknPres pres;
 NhuMBMS_NotificationConfig_r9notificationRepetitionCoeff_r9 notificationRepetitionCoeff_r9;
 NhuMBMS_NotificationConfig_r9notificationOffset_r9 notificationOffset_r9;
 NhuMBMS_NotificationConfig_r9notificationSF_Idx_r9 notificationSF_Idx_r9;
} NhuMBMS_NotificationConfig_r9;


typedef TknStrOSXL NhuSysInfoBlockTyp13_r9lateNonCriticalExtn;
typedef struct NhuSysInfoBlockTyp13_r9
{
 TknPres pres;
 NhuMBSFN_AreaInfoLst_r9 mbsfn_AreaInfoLst_r9;
 NhuMBMS_NotificationConfig_r9 notificationConfig_r9;
 NhuSysInfoBlockTyp13_r9lateNonCriticalExtn lateNonCriticalExtn;
} NhuSysInfoBlockTyp13_r9;


typedef TknStrOSXL NhuSysInfo_v8a0_IEslateNonCriticalExtn;
typedef struct NhuSysInfo_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuSysInfo_v8a0_IEsnonCriticalExtn;

typedef struct NhuSysInfo_v8a0_IEs
{
 TknPres pres;
 NhuSysInfo_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuSysInfo_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuSysInfo_v8a0_IEs;

typedef struct NhuSysInfo_r8_IEssib_TypAndInfoMember
{
 TknU8 choice;
 union {
  NhuSysInfoBlockTyp2 sib2;
  NhuSysInfoBlockTyp3 sib3;
  NhuSysInfoBlockTyp4 sib4;
  NhuSysInfoBlockTyp5 sib5;
  NhuSysInfoBlockTyp6 sib6;
  NhuSysInfoBlockTyp7 sib7;
  NhuSysInfoBlockTyp8 sib8;
  NhuSysInfoBlockTyp9 sib9;
  NhuSysInfoBlockTyp10 sib10;
  NhuSysInfoBlockTyp11 sib11;
  NhuSysInfoBlockTyp12_r9 sib12_v920;
  NhuSysInfoBlockTyp13_r9 sib13_v920;
 } val;
} NhuSysInfo_r8_IEssib_TypAndInfoMember;

typedef struct NhuSysInfo_r8_IEssib_TypAndInfo
{
 TknU16 noComp;
 NhuSysInfo_r8_IEssib_TypAndInfoMember *member;
}NhuSysInfo_r8_IEssib_TypAndInfo;

typedef struct NhuSysInfo_r8_IEs
{
 TknPres pres;
 NhuSysInfo_r8_IEssib_TypAndInfo sib_TypAndInfo;
 NhuSysInfo_v8a0_IEs nonCriticalExtn;
} NhuSysInfo_r8_IEs;

typedef struct NhuSysInfocriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuSysInfocriticalExtnscriticalExtnsFuture;

typedef struct NhuSysInfocriticalExtns
{
 TknU8 choice;
 union {
  NhuSysInfo_r8_IEs systemInfo_r8;
  NhuSysInfocriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuSysInfocriticalExtns;

typedef struct NhuSysInfo
{
 TknPres pres;
 NhuSysInfocriticalExtns criticalExtns;
} NhuSysInfo;


typedef TknU32 NhuMCC_MNC_Digit;

typedef struct NhuMCC
{
 TknU16 noComp;
 NhuMCC_MNC_Digit *member;
}NhuMCC;

typedef struct NhuMNC
{
 TknU16 noComp;
 NhuMCC_MNC_Digit *member;
}NhuMNC;

typedef struct NhuPLMN_Identity
{
 TknPres pres;
 NhuMCC mcc;
 NhuMNC mnc;
} NhuPLMN_Identity;


typedef enum enumNhuPLMN_IdentityInfocellReservedForOperatorUse
{
 NhuPLMN_IdentityInfocellReservedForOperatorUsereservedEnum,
 NhuPLMN_IdentityInfocellReservedForOperatorUsenotReservedEnum
} EnumNhuPLMN_IdentityInfocellReservedForOperatorUse;
typedef TknU32 NhuPLMN_IdentityInfocellReservedForOperatorUse;

typedef struct NhuPLMN_IdentityInfo
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
 NhuPLMN_IdentityInfocellReservedForOperatorUse cellReservedForOperatorUse;
} NhuPLMN_IdentityInfo;

typedef struct NhuPLMN_IdentityLst
{
 TknU16 noComp;
 NhuPLMN_IdentityInfo *member;
}NhuPLMN_IdentityLst;


typedef TknStrBSXL NhuTrackingAreaCode;

typedef TknStrBSXL NhuCellIdentity;

typedef TknStrBSXL NhuCSG_Identity;

typedef enum enumNhuSIB_Typ
{
 NhuSIB_TypsibTyp3Enum,
 NhuSIB_TypsibTyp4Enum,
 NhuSIB_TypsibTyp5Enum,
 NhuSIB_TypsibTyp6Enum,
 NhuSIB_TypsibTyp7Enum,
 NhuSIB_TypsibTyp8Enum,
 NhuSIB_TypsibTyp9Enum,
 NhuSIB_TypsibTyp10Enum,
 NhuSIB_TypsibTyp11Enum,
 NhuSIB_TypsibTyp12_v920Enum,
 NhuSIB_TypsibTyp13_v920Enum,
 NhuSIB_Typspare5Enum,
 NhuSIB_Typspare4Enum,
 NhuSIB_Typspare3Enum,
 NhuSIB_Typspare2Enum,
 NhuSIB_Typspare1Enum
} EnumNhuSIB_Typ;
typedef TknU32 NhuSIB_Typ;

typedef struct NhuSIB_MappingInfo
{
 TknU16 noComp;
 NhuSIB_Typ *member;
}NhuSIB_MappingInfo;


typedef enum enumNhuSchedulingInfosi_Periodicity
{
 NhuSchedulingInfosi_Periodicityrf8Enum,
 NhuSchedulingInfosi_Periodicityrf16Enum,
 NhuSchedulingInfosi_Periodicityrf32Enum,
 NhuSchedulingInfosi_Periodicityrf64Enum,
 NhuSchedulingInfosi_Periodicityrf128Enum,
 NhuSchedulingInfosi_Periodicityrf256Enum,
 NhuSchedulingInfosi_Periodicityrf512Enum
} EnumNhuSchedulingInfosi_Periodicity;
typedef TknU32 NhuSchedulingInfosi_Periodicity;

typedef struct NhuSchedulingInfo
{
 TknPres pres;
 NhuSchedulingInfosi_Periodicity si_Periodicity;
 NhuSIB_MappingInfo sib_MappingInfo;
} NhuSchedulingInfo;

typedef struct NhuSchedulingInfoLst
{
 TknU16 noComp;
 NhuSchedulingInfo *member;
}NhuSchedulingInfoLst;


typedef enum enumNhuTDD_ConfigsubframeAssignment
{
 NhuTDD_ConfigsubframeAssignmentsa0Enum,
 NhuTDD_ConfigsubframeAssignmentsa1Enum,
 NhuTDD_ConfigsubframeAssignmentsa2Enum,
 NhuTDD_ConfigsubframeAssignmentsa3Enum,
 NhuTDD_ConfigsubframeAssignmentsa4Enum,
 NhuTDD_ConfigsubframeAssignmentsa5Enum,
 NhuTDD_ConfigsubframeAssignmentsa6Enum
} EnumNhuTDD_ConfigsubframeAssignment;
typedef TknU32 NhuTDD_ConfigsubframeAssignment;


typedef enum enumNhuTDD_ConfigspecialSubfrmPatterns
{
 NhuTDD_ConfigspecialSubfrmPatternsssp0Enum,
 NhuTDD_ConfigspecialSubfrmPatternsssp1Enum,
 NhuTDD_ConfigspecialSubfrmPatternsssp2Enum,
 NhuTDD_ConfigspecialSubfrmPatternsssp3Enum,
 NhuTDD_ConfigspecialSubfrmPatternsssp4Enum,
 NhuTDD_ConfigspecialSubfrmPatternsssp5Enum,
 NhuTDD_ConfigspecialSubfrmPatternsssp6Enum,
 NhuTDD_ConfigspecialSubfrmPatternsssp7Enum,
 NhuTDD_ConfigspecialSubfrmPatternsssp8Enum
} EnumNhuTDD_ConfigspecialSubfrmPatterns;
typedef TknU32 NhuTDD_ConfigspecialSubfrmPatterns;

typedef struct NhuTDD_Config
{
 TknPres pres;
 NhuTDD_ConfigsubframeAssignment subframeAssignment;
 NhuTDD_ConfigspecialSubfrmPatterns specialSubfrmPatterns;
} NhuTDD_Config;


typedef TknU32 NhuCellSelectionInfo_v920q_QualMinOffset_r9;

typedef struct NhuCellSelectionInfo_v920
{
 TknPres pres;
 NhuQ_QualMin_r9 q_QualMin_r9;
 NhuCellSelectionInfo_v920q_QualMinOffset_r9 q_QualMinOffset_r9;
} NhuCellSelectionInfo_v920;


typedef enum enumNhuSysInfoBlockTyp1_v920_IEsims_EmergencySupport_r9
{
 NhuSysInfoBlockTyp1_v920_IEsims_EmergencySupport_r9trueEnum
} EnumNhuSysInfoBlockTyp1_v920_IEsims_EmergencySupport_r9;
typedef TknU32 NhuSysInfoBlockTyp1_v920_IEsims_EmergencySupport_r9;

typedef struct NhuSysInfoBlockTyp1_v920_IEsnonCriticalExtn
{
 TknPres pres;
} NhuSysInfoBlockTyp1_v920_IEsnonCriticalExtn;

typedef struct NhuSysInfoBlockTyp1_v920_IEs
{
 TknPres pres;
 NhuSysInfoBlockTyp1_v920_IEsims_EmergencySupport_r9 ims_EmergencySupport_r9;
 NhuCellSelectionInfo_v920 cellSelectionInfo_v920;
 NhuSysInfoBlockTyp1_v920_IEsnonCriticalExtn nonCriticalExtn;
} NhuSysInfoBlockTyp1_v920_IEs;


typedef TknStrOSXL NhuSysInfoBlockTyp1_v890_IEslateNonCriticalExtn;
typedef struct NhuSysInfoBlockTyp1_v890_IEs
{
 TknPres pres;
 NhuSysInfoBlockTyp1_v890_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuSysInfoBlockTyp1_v920_IEs nonCriticalExtn;
} NhuSysInfoBlockTyp1_v890_IEs;


typedef enum enumNhuSysInfoBlockTyp1cellAccessRelatedInfocellBarred
{
 NhuSysInfoBlockTyp1cellAccessRelatedInfocellBarredbarredEnum,
 NhuSysInfoBlockTyp1cellAccessRelatedInfocellBarrednotBarredEnum
} EnumNhuSysInfoBlockTyp1cellAccessRelatedInfocellBarred;
typedef TknU32 NhuSysInfoBlockTyp1cellAccessRelatedInfocellBarred;


typedef enum enumNhuSysInfoBlockTyp1cellAccessRelatedInfointraFreqReselection
{
 NhuSysInfoBlockTyp1cellAccessRelatedInfointraFreqReselectionallowedEnum,
 NhuSysInfoBlockTyp1cellAccessRelatedInfointraFreqReselectionnotAllowedEnum
} EnumNhuSysInfoBlockTyp1cellAccessRelatedInfointraFreqReselection;
typedef TknU32 NhuSysInfoBlockTyp1cellAccessRelatedInfointraFreqReselection;


typedef TknU8 NhuSysInfoBlockTyp1cellAccessRelatedInfocsg_Ind;

typedef struct NhuSysInfoBlockTyp1cellAccessRelatedInfo
{
 TknPres pres;
 NhuPLMN_IdentityLst plmn_IdentityLst;
 NhuTrackingAreaCode trackingAreaCode;
 NhuCellIdentity cellIdentity;
 NhuSysInfoBlockTyp1cellAccessRelatedInfocellBarred cellBarred;
 NhuSysInfoBlockTyp1cellAccessRelatedInfointraFreqReselection intraFreqReselection;
 NhuSysInfoBlockTyp1cellAccessRelatedInfocsg_Ind csg_Ind;
 NhuCSG_Identity csg_Identity;
} NhuSysInfoBlockTyp1cellAccessRelatedInfo;


typedef TknU32 NhuSysInfoBlockTyp1cellSelectionInfoq_RxLevMinOffset;

typedef struct NhuSysInfoBlockTyp1cellSelectionInfo
{
 TknPres pres;
 NhuQ_RxLevMin q_RxLevMin;
 NhuSysInfoBlockTyp1cellSelectionInfoq_RxLevMinOffset q_RxLevMinOffset;
} NhuSysInfoBlockTyp1cellSelectionInfo;


typedef TknU32 NhuSysInfoBlockTyp1freqBandIndicator;


typedef enum enumNhuSysInfoBlockTyp1si_WindowLength
{
 NhuSysInfoBlockTyp1si_WindowLengthms1Enum,
 NhuSysInfoBlockTyp1si_WindowLengthms2Enum,
 NhuSysInfoBlockTyp1si_WindowLengthms5Enum,
 NhuSysInfoBlockTyp1si_WindowLengthms10Enum,
 NhuSysInfoBlockTyp1si_WindowLengthms15Enum,
 NhuSysInfoBlockTyp1si_WindowLengthms20Enum,
 NhuSysInfoBlockTyp1si_WindowLengthms40Enum
} EnumNhuSysInfoBlockTyp1si_WindowLength;
typedef TknU32 NhuSysInfoBlockTyp1si_WindowLength;


typedef TknU32 NhuSysInfoBlockTyp1systemInfoValueTag;

typedef struct NhuSysInfoBlockTyp1
{
 TknPres pres;
 NhuSysInfoBlockTyp1cellAccessRelatedInfo cellAccessRelatedInfo;
 NhuSysInfoBlockTyp1cellSelectionInfo cellSelectionInfo;
 NhuP_Max p_Max;
 NhuSysInfoBlockTyp1freqBandIndicator freqBandIndicator;
 NhuSchedulingInfoLst schedulingInfoLst;
 NhuTDD_Config tdd_Config;
 NhuSysInfoBlockTyp1si_WindowLength si_WindowLength;
 NhuSysInfoBlockTyp1systemInfoValueTag systemInfoValueTag;
 NhuSysInfoBlockTyp1_v890_IEs nonCriticalExtn;
} NhuSysInfoBlockTyp1;

typedef struct NhuBCCH_DL_SCH_MsgTypc1
{
 TknU8 choice;
 union {
  NhuSysInfo systemInfo;
  NhuSysInfoBlockTyp1 systemInfoBlockTyp1;
 } val;
} NhuBCCH_DL_SCH_MsgTypc1;

typedef struct NhuBCCH_DL_SCH_MsgTypmessageClassExtn
{
 TknPres pres;
} NhuBCCH_DL_SCH_MsgTypmessageClassExtn;

typedef struct NhuBCCH_DL_SCH_MsgTyp
{
 TknU8 choice;
 union {
  NhuBCCH_DL_SCH_MsgTypc1 c1;
  NhuBCCH_DL_SCH_MsgTypmessageClassExtn messageClassExtn;
 } val;
} NhuBCCH_DL_SCH_MsgTyp;

typedef struct NhuBCCH_DL_SCH_Msg
{
 TknPres pres;
 NhuBCCH_DL_SCH_MsgTyp message;
} NhuBCCH_DL_SCH_Msg;

typedef struct NhuCmnSF_AllocPatternLst_r9
{
 TknU16 noComp;
 NhuMBSFN_SubfrmConfig *member;
}NhuCmnSF_AllocPatternLst_r9;


typedef TknU32 NhuPMCH_Config_r9sf_AllocEnd_r9;


typedef TknU32 NhuPMCH_Config_r9dataMCS_r9;


typedef enum enumNhuPMCH_Config_r9mch_SchedulingPeriod_r9
{
 NhuPMCH_Config_r9mch_SchedulingPeriod_r9rf8Enum,
 NhuPMCH_Config_r9mch_SchedulingPeriod_r9rf16Enum,
 NhuPMCH_Config_r9mch_SchedulingPeriod_r9rf32Enum,
 NhuPMCH_Config_r9mch_SchedulingPeriod_r9rf64Enum,
 NhuPMCH_Config_r9mch_SchedulingPeriod_r9rf128Enum,
 NhuPMCH_Config_r9mch_SchedulingPeriod_r9rf256Enum,
 NhuPMCH_Config_r9mch_SchedulingPeriod_r9rf512Enum,
 NhuPMCH_Config_r9mch_SchedulingPeriod_r9rf1024Enum
} EnumNhuPMCH_Config_r9mch_SchedulingPeriod_r9;
typedef TknU32 NhuPMCH_Config_r9mch_SchedulingPeriod_r9;

typedef struct NhuPMCH_Config_r9
{
 TknPres pres;
 NhuPMCH_Config_r9sf_AllocEnd_r9 sf_AllocEnd_r9;
 NhuPMCH_Config_r9dataMCS_r9 dataMCS_r9;
 NhuPMCH_Config_r9mch_SchedulingPeriod_r9 mch_SchedulingPeriod_r9;
} NhuPMCH_Config_r9;


typedef TknU32 NhuTMGI_r9plmn_Id_r9plmn_Idx_r9;

typedef struct NhuTMGI_r9plmn_Id_r9
{
 TknU8 choice;
 union {
  NhuTMGI_r9plmn_Id_r9plmn_Idx_r9 plmn_Idx_r9;
  NhuPLMN_Identity explicitValue_r9;
 } val;
} NhuTMGI_r9plmn_Id_r9;


typedef TknStrOSXL NhuTMGI_r9serviceId_r9;
typedef struct NhuTMGI_r9
{
 TknPres pres;
 NhuTMGI_r9plmn_Id_r9 plmn_Id_r9;
 NhuTMGI_r9serviceId_r9 serviceId_r9;
} NhuTMGI_r9;


typedef TknStrOSXL NhuMBMS_SessionInfo_r9sessionId_r9;

typedef TknU32 NhuMBMS_SessionInfo_r9logicalChannelIdentity_r9;

typedef struct NhuMBMS_SessionInfo_r9
{
 TknPres pres;
 NhuTMGI_r9 tmgi_r9;
 NhuMBMS_SessionInfo_r9sessionId_r9 sessionId_r9;
 NhuMBMS_SessionInfo_r9logicalChannelIdentity_r9 logicalChannelIdentity_r9;
} NhuMBMS_SessionInfo_r9;

typedef struct NhuMBMS_SessionInfoLst_r9
{
 TknU16 noComp;
 NhuMBMS_SessionInfo_r9 *member;
}NhuMBMS_SessionInfoLst_r9;

typedef struct NhuPMCH_Info_r9
{
 TknPres pres;
 NhuPMCH_Config_r9 pmch_Config_r9;
 NhuMBMS_SessionInfoLst_r9 mbms_SessionInfoLst_r9;
} NhuPMCH_Info_r9;

typedef struct NhuPMCH_InfoLst_r9
{
 TknU16 noComp;
 NhuPMCH_Info_r9 *member;
}NhuPMCH_InfoLst_r9;


typedef TknStrOSXL NhuMBSFNAreaCfg_v930_IEslateNonCriticalExtn;
typedef struct NhuMBSFNAreaCfg_v930_IEsnonCriticalExtn
{
 TknPres pres;
} NhuMBSFNAreaCfg_v930_IEsnonCriticalExtn;

typedef struct NhuMBSFNAreaCfg_v930_IEs
{
 TknPres pres;
 NhuMBSFNAreaCfg_v930_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuMBSFNAreaCfg_v930_IEsnonCriticalExtn nonCriticalExtn;
} NhuMBSFNAreaCfg_v930_IEs;


typedef enum enumNhuMBSFNAreaCfg_r9commonSF_AllocPeriod_r9
{
 NhuMBSFNAreaCfg_r9commonSF_AllocPeriod_r9rf4Enum,
 NhuMBSFNAreaCfg_r9commonSF_AllocPeriod_r9rf8Enum,
 NhuMBSFNAreaCfg_r9commonSF_AllocPeriod_r9rf16Enum,
 NhuMBSFNAreaCfg_r9commonSF_AllocPeriod_r9rf32Enum,
 NhuMBSFNAreaCfg_r9commonSF_AllocPeriod_r9rf64Enum,
 NhuMBSFNAreaCfg_r9commonSF_AllocPeriod_r9rf128Enum,
 NhuMBSFNAreaCfg_r9commonSF_AllocPeriod_r9rf256Enum
} EnumNhuMBSFNAreaCfg_r9commonSF_AllocPeriod_r9;
typedef TknU32 NhuMBSFNAreaCfg_r9commonSF_AllocPeriod_r9;

typedef struct NhuMBSFNAreaCfg_r9
{
 TknPres pres;
 NhuCmnSF_AllocPatternLst_r9 commonSF_Alloc_r9;
 NhuMBSFNAreaCfg_r9commonSF_AllocPeriod_r9 commonSF_AllocPeriod_r9;
 NhuPMCH_InfoLst_r9 pmch_InfoLst_r9;
 NhuMBSFNAreaCfg_v930_IEs nonCriticalExtn;
} NhuMBSFNAreaCfg_r9;

typedef struct NhuMCCH_MsgTypc1
{
 TknU8 choice;
 union {
  NhuMBSFNAreaCfg_r9 mbsfnAreaCfg_r9;
 } val;
} NhuMCCH_MsgTypc1;

typedef struct NhuMCCH_MsgTypmessageClassExtn
{
 TknPres pres;
} NhuMCCH_MsgTypmessageClassExtn;

typedef struct NhuMCCH_MsgTyp
{
 TknU8 choice;
 union {
  NhuMCCH_MsgTypc1 c1;
  NhuMCCH_MsgTypmessageClassExtn messageClassExtn;
 } val;
} NhuMCCH_MsgTyp;

typedef struct NhuMCCH_Msg
{
 TknPres pres;
 NhuMCCH_MsgTyp message;
} NhuMCCH_Msg;


typedef TknStrBSXL NhuMMEC;

typedef TknStrBSXL NhuS_TMSIm_TMSI;
typedef struct NhuS_TMSI
{
 TknPres pres;
 NhuMMEC mmec;
 NhuS_TMSIm_TMSI m_TMSI;
} NhuS_TMSI;


typedef TknU32 NhuIMSI_Digit;

typedef struct NhuIMSI
{
 TknU16 noComp;
 NhuIMSI_Digit *member;
}NhuIMSI;

typedef struct NhuPagUE_Identity
{
 TknU8 choice;
 union {
  NhuS_TMSI s_TMSI;
  NhuIMSI imsi;
 } val;
} NhuPagUE_Identity;


typedef enum enumNhuPagRecordcn_Domain
{
 NhuPagRecordcn_DomainpsEnum,
 NhuPagRecordcn_DomaincsEnum
} EnumNhuPagRecordcn_Domain;
typedef TknU32 NhuPagRecordcn_Domain;

typedef struct NhuPagRecord
{
 TknPres pres;
 NhuPagUE_Identity ue_Identity;
 NhuPagRecordcn_Domain cn_Domain;
} NhuPagRecord;

typedef struct NhuPagRecordLst
{
 TknU16 noComp;
 NhuPagRecord *member;
}NhuPagRecordLst;


typedef enum enumNhuPag_v920_IEscmas_Ind_r9
{
 NhuPag_v920_IEscmas_Ind_r9trueEnum
} EnumNhuPag_v920_IEscmas_Ind_r9;
typedef TknU32 NhuPag_v920_IEscmas_Ind_r9;

typedef struct NhuPag_v920_IEsnonCriticalExtn
{
 TknPres pres;
} NhuPag_v920_IEsnonCriticalExtn;

typedef struct NhuPag_v920_IEs
{
 TknPres pres;
 NhuPag_v920_IEscmas_Ind_r9 cmas_Ind_r9;
 NhuPag_v920_IEsnonCriticalExtn nonCriticalExtn;
} NhuPag_v920_IEs;


typedef TknStrOSXL NhuPag_v890_IEslateNonCriticalExtn;
typedef struct NhuPag_v890_IEs
{
 TknPres pres;
 NhuPag_v890_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuPag_v920_IEs nonCriticalExtn;
} NhuPag_v890_IEs;


typedef enum enumNhuPagsystemInfoModfn
{
 NhuPagsystemInfoModfntrueEnum
} EnumNhuPagsystemInfoModfn;
typedef TknU32 NhuPagsystemInfoModfn;


typedef enum enumNhuPagetws_Ind
{
 NhuPagetws_IndtrueEnum
} EnumNhuPagetws_Ind;
typedef TknU32 NhuPagetws_Ind;

typedef struct NhuPag
{
 TknPres pres;
 NhuPagRecordLst pagingRecordLst;
 NhuPagsystemInfoModfn systemInfoModfn;
 NhuPagetws_Ind etws_Ind;
 NhuPag_v890_IEs nonCriticalExtn;
} NhuPag;

typedef struct NhuPCCH_MsgTypc1
{
 TknU8 choice;
 union {
  NhuPag paging;
 } val;
} NhuPCCH_MsgTypc1;

typedef struct NhuPCCH_MsgTypmessageClassExtn
{
 TknPres pres;
} NhuPCCH_MsgTypmessageClassExtn;

typedef struct NhuPCCH_MsgTyp
{
 TknU8 choice;
 union {
  NhuPCCH_MsgTypc1 c1;
  NhuPCCH_MsgTypmessageClassExtn messageClassExtn;
 } val;
} NhuPCCH_MsgTyp;

typedef struct NhuPCCH_Msg
{
 TknPres pres;
 NhuPCCH_MsgTyp message;
} NhuPCCH_Msg;


typedef TknU32 NhuRRC_TrnsxnId;


typedef enum enumNhuT_PollRetransmit
{
 NhuT_PollRetransmitms5Enum,
 NhuT_PollRetransmitms10Enum,
 NhuT_PollRetransmitms15Enum,
 NhuT_PollRetransmitms20Enum,
 NhuT_PollRetransmitms25Enum,
 NhuT_PollRetransmitms30Enum,
 NhuT_PollRetransmitms35Enum,
 NhuT_PollRetransmitms40Enum,
 NhuT_PollRetransmitms45Enum,
 NhuT_PollRetransmitms50Enum,
 NhuT_PollRetransmitms55Enum,
 NhuT_PollRetransmitms60Enum,
 NhuT_PollRetransmitms65Enum,
 NhuT_PollRetransmitms70Enum,
 NhuT_PollRetransmitms75Enum,
 NhuT_PollRetransmitms80Enum,
 NhuT_PollRetransmitms85Enum,
 NhuT_PollRetransmitms90Enum,
 NhuT_PollRetransmitms95Enum,
 NhuT_PollRetransmitms100Enum,
 NhuT_PollRetransmitms105Enum,
 NhuT_PollRetransmitms110Enum,
 NhuT_PollRetransmitms115Enum,
 NhuT_PollRetransmitms120Enum,
 NhuT_PollRetransmitms125Enum,
 NhuT_PollRetransmitms130Enum,
 NhuT_PollRetransmitms135Enum,
 NhuT_PollRetransmitms140Enum,
 NhuT_PollRetransmitms145Enum,
 NhuT_PollRetransmitms150Enum,
 NhuT_PollRetransmitms155Enum,
 NhuT_PollRetransmitms160Enum,
 NhuT_PollRetransmitms165Enum,
 NhuT_PollRetransmitms170Enum,
 NhuT_PollRetransmitms175Enum,
 NhuT_PollRetransmitms180Enum,
 NhuT_PollRetransmitms185Enum,
 NhuT_PollRetransmitms190Enum,
 NhuT_PollRetransmitms195Enum,
 NhuT_PollRetransmitms200Enum,
 NhuT_PollRetransmitms205Enum,
 NhuT_PollRetransmitms210Enum,
 NhuT_PollRetransmitms215Enum,
 NhuT_PollRetransmitms220Enum,
 NhuT_PollRetransmitms225Enum,
 NhuT_PollRetransmitms230Enum,
 NhuT_PollRetransmitms235Enum,
 NhuT_PollRetransmitms240Enum,
 NhuT_PollRetransmitms245Enum,
 NhuT_PollRetransmitms250Enum,
 NhuT_PollRetransmitms300Enum,
 NhuT_PollRetransmitms350Enum,
 NhuT_PollRetransmitms400Enum,
 NhuT_PollRetransmitms450Enum,
 NhuT_PollRetransmitms500Enum,
 NhuT_PollRetransmitspare9Enum,
 NhuT_PollRetransmitspare8Enum,
 NhuT_PollRetransmitspare7Enum,
 NhuT_PollRetransmitspare6Enum,
 NhuT_PollRetransmitspare5Enum,
 NhuT_PollRetransmitspare4Enum,
 NhuT_PollRetransmitspare3Enum,
 NhuT_PollRetransmitspare2Enum,
 NhuT_PollRetransmitspare1Enum
} EnumNhuT_PollRetransmit;
typedef TknU32 NhuT_PollRetransmit;


typedef enum enumNhuPollPDU
{
 NhuPollPDUp4Enum,
 NhuPollPDUp8Enum,
 NhuPollPDUp16Enum,
 NhuPollPDUp32Enum,
 NhuPollPDUp64Enum,
 NhuPollPDUp128Enum,
 NhuPollPDUp256Enum,
 NhuPollPDUpInfinityEnum
} EnumNhuPollPDU;
typedef TknU32 NhuPollPDU;


typedef enum enumNhuPollByte
{
 NhuPollBytekB25Enum,
 NhuPollBytekB50Enum,
 NhuPollBytekB75Enum,
 NhuPollBytekB100Enum,
 NhuPollBytekB125Enum,
 NhuPollBytekB250Enum,
 NhuPollBytekB375Enum,
 NhuPollBytekB500Enum,
 NhuPollBytekB750Enum,
 NhuPollBytekB1000Enum,
 NhuPollBytekB1250Enum,
 NhuPollBytekB1500Enum,
 NhuPollBytekB2000Enum,
 NhuPollBytekB3000Enum,
 NhuPollBytekBinfinityEnum,
 NhuPollBytespare1Enum
} EnumNhuPollByte;
typedef TknU32 NhuPollByte;


typedef enum enumNhuUL_AM_RLCmaxRetxThreshold
{
 NhuUL_AM_RLCmaxRetxThresholdt1Enum,
 NhuUL_AM_RLCmaxRetxThresholdt2Enum,
 NhuUL_AM_RLCmaxRetxThresholdt3Enum,
 NhuUL_AM_RLCmaxRetxThresholdt4Enum,
 NhuUL_AM_RLCmaxRetxThresholdt6Enum,
 NhuUL_AM_RLCmaxRetxThresholdt8Enum,
 NhuUL_AM_RLCmaxRetxThresholdt16Enum,
 NhuUL_AM_RLCmaxRetxThresholdt32Enum
} EnumNhuUL_AM_RLCmaxRetxThreshold;
typedef TknU32 NhuUL_AM_RLCmaxRetxThreshold;

typedef struct NhuUL_AM_RLC
{
 TknPres pres;
 NhuT_PollRetransmit t_PollRetransmit;
 NhuPollPDU pollPDU;
 NhuPollByte pollByte;
 NhuUL_AM_RLCmaxRetxThreshold maxRetxThreshold;
} NhuUL_AM_RLC;


typedef enum enumNhuT_Reordering
{
 NhuT_Reorderingms0Enum,
 NhuT_Reorderingms5Enum,
 NhuT_Reorderingms10Enum,
 NhuT_Reorderingms15Enum,
 NhuT_Reorderingms20Enum,
 NhuT_Reorderingms25Enum,
 NhuT_Reorderingms30Enum,
 NhuT_Reorderingms35Enum,
 NhuT_Reorderingms40Enum,
 NhuT_Reorderingms45Enum,
 NhuT_Reorderingms50Enum,
 NhuT_Reorderingms55Enum,
 NhuT_Reorderingms60Enum,
 NhuT_Reorderingms65Enum,
 NhuT_Reorderingms70Enum,
 NhuT_Reorderingms75Enum,
 NhuT_Reorderingms80Enum,
 NhuT_Reorderingms85Enum,
 NhuT_Reorderingms90Enum,
 NhuT_Reorderingms95Enum,
 NhuT_Reorderingms100Enum,
 NhuT_Reorderingms110Enum,
 NhuT_Reorderingms120Enum,
 NhuT_Reorderingms130Enum,
 NhuT_Reorderingms140Enum,
 NhuT_Reorderingms150Enum,
 NhuT_Reorderingms160Enum,
 NhuT_Reorderingms170Enum,
 NhuT_Reorderingms180Enum,
 NhuT_Reorderingms190Enum,
 NhuT_Reorderingms200Enum,
 NhuT_Reorderingspare1Enum
} EnumNhuT_Reordering;
typedef TknU32 NhuT_Reordering;


typedef enum enumNhuT_StatusProhibit
{
 NhuT_StatusProhibitms0Enum,
 NhuT_StatusProhibitms5Enum,
 NhuT_StatusProhibitms10Enum,
 NhuT_StatusProhibitms15Enum,
 NhuT_StatusProhibitms20Enum,
 NhuT_StatusProhibitms25Enum,
 NhuT_StatusProhibitms30Enum,
 NhuT_StatusProhibitms35Enum,
 NhuT_StatusProhibitms40Enum,
 NhuT_StatusProhibitms45Enum,
 NhuT_StatusProhibitms50Enum,
 NhuT_StatusProhibitms55Enum,
 NhuT_StatusProhibitms60Enum,
 NhuT_StatusProhibitms65Enum,
 NhuT_StatusProhibitms70Enum,
 NhuT_StatusProhibitms75Enum,
 NhuT_StatusProhibitms80Enum,
 NhuT_StatusProhibitms85Enum,
 NhuT_StatusProhibitms90Enum,
 NhuT_StatusProhibitms95Enum,
 NhuT_StatusProhibitms100Enum,
 NhuT_StatusProhibitms105Enum,
 NhuT_StatusProhibitms110Enum,
 NhuT_StatusProhibitms115Enum,
 NhuT_StatusProhibitms120Enum,
 NhuT_StatusProhibitms125Enum,
 NhuT_StatusProhibitms130Enum,
 NhuT_StatusProhibitms135Enum,
 NhuT_StatusProhibitms140Enum,
 NhuT_StatusProhibitms145Enum,
 NhuT_StatusProhibitms150Enum,
 NhuT_StatusProhibitms155Enum,
 NhuT_StatusProhibitms160Enum,
 NhuT_StatusProhibitms165Enum,
 NhuT_StatusProhibitms170Enum,
 NhuT_StatusProhibitms175Enum,
 NhuT_StatusProhibitms180Enum,
 NhuT_StatusProhibitms185Enum,
 NhuT_StatusProhibitms190Enum,
 NhuT_StatusProhibitms195Enum,
 NhuT_StatusProhibitms200Enum,
 NhuT_StatusProhibitms205Enum,
 NhuT_StatusProhibitms210Enum,
 NhuT_StatusProhibitms215Enum,
 NhuT_StatusProhibitms220Enum,
 NhuT_StatusProhibitms225Enum,
 NhuT_StatusProhibitms230Enum,
 NhuT_StatusProhibitms235Enum,
 NhuT_StatusProhibitms240Enum,
 NhuT_StatusProhibitms245Enum,
 NhuT_StatusProhibitms250Enum,
 NhuT_StatusProhibitms300Enum,
 NhuT_StatusProhibitms350Enum,
 NhuT_StatusProhibitms400Enum,
 NhuT_StatusProhibitms450Enum,
 NhuT_StatusProhibitms500Enum,
 NhuT_StatusProhibitspare8Enum,
 NhuT_StatusProhibitspare7Enum,
 NhuT_StatusProhibitspare6Enum,
 NhuT_StatusProhibitspare5Enum,
 NhuT_StatusProhibitspare4Enum,
 NhuT_StatusProhibitspare3Enum,
 NhuT_StatusProhibitspare2Enum,
 NhuT_StatusProhibitspare1Enum
} EnumNhuT_StatusProhibit;
typedef TknU32 NhuT_StatusProhibit;

typedef struct NhuDL_AM_RLC
{
 TknPres pres;
 NhuT_Reordering t_Reordering;
 NhuT_StatusProhibit t_StatusProhibit;
} NhuDL_AM_RLC;


typedef enum enumNhuSN_FieldLength
{
 NhuSN_FieldLengthsize5Enum,
 NhuSN_FieldLengthsize10Enum
} EnumNhuSN_FieldLength;
typedef TknU32 NhuSN_FieldLength;

typedef struct NhuUL_UM_RLC
{
 TknPres pres;
 NhuSN_FieldLength sn_FieldLength;
} NhuUL_UM_RLC;

typedef struct NhuDL_UM_RLC
{
 TknPres pres;
 NhuSN_FieldLength sn_FieldLength;
 NhuT_Reordering t_Reordering;
} NhuDL_UM_RLC;

typedef struct NhuRLC_Configam
{
 TknPres pres;
 NhuUL_AM_RLC ul_AM_RLC;
 NhuDL_AM_RLC dl_AM_RLC;
} NhuRLC_Configam;

typedef struct NhuRLC_Configum_Bi_Directional
{
 TknPres pres;
 NhuUL_UM_RLC ul_UM_RLC;
 NhuDL_UM_RLC dl_UM_RLC;
} NhuRLC_Configum_Bi_Directional;

typedef struct NhuRLC_Configum_Uni_Directional_UL
{
 TknPres pres;
 NhuUL_UM_RLC ul_UM_RLC;
} NhuRLC_Configum_Uni_Directional_UL;

typedef struct NhuRLC_Configum_Uni_Directional_DL
{
 TknPres pres;
 NhuDL_UM_RLC dl_UM_RLC;
} NhuRLC_Configum_Uni_Directional_DL;

typedef struct NhuRLC_Config
{
 TknU8 choice;
 union {
  NhuRLC_Configam am;
  NhuRLC_Configum_Bi_Directional um_Bi_Directional;
  NhuRLC_Configum_Uni_Directional_UL um_Uni_Directional_UL;
  NhuRLC_Configum_Uni_Directional_DL um_Uni_Directional_DL;
 } val;
} NhuRLC_Config;


typedef TknU32 NhuLogChannelConfigul_SpecificParamspriority;


typedef enum enumNhuLogChannelConfigul_SpecificParamsprioritisedBitRate
{
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatekBps0Enum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatekBps8Enum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatekBps16Enum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatekBps32Enum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatekBps64Enum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatekBps128Enum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatekBps256Enum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRateinfinityEnum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatespare8Enum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatespare7Enum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatespare6Enum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatespare5Enum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatespare4Enum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatespare3Enum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatespare2Enum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatespare1Enum
} EnumNhuLogChannelConfigul_SpecificParamsprioritisedBitRate;
typedef TknU32 NhuLogChannelConfigul_SpecificParamsprioritisedBitRate;


typedef enum enumNhuLogChannelConfigul_SpecificParamsbucketSizeDuration
{
 NhuLogChannelConfigul_SpecificParamsbucketSizeDurationms50Enum,
 NhuLogChannelConfigul_SpecificParamsbucketSizeDurationms100Enum,
 NhuLogChannelConfigul_SpecificParamsbucketSizeDurationms150Enum,
 NhuLogChannelConfigul_SpecificParamsbucketSizeDurationms300Enum,
 NhuLogChannelConfigul_SpecificParamsbucketSizeDurationms500Enum,
 NhuLogChannelConfigul_SpecificParamsbucketSizeDurationms1000Enum,
 NhuLogChannelConfigul_SpecificParamsbucketSizeDurationspare2Enum,
 NhuLogChannelConfigul_SpecificParamsbucketSizeDurationspare1Enum
} EnumNhuLogChannelConfigul_SpecificParamsbucketSizeDuration;
typedef TknU32 NhuLogChannelConfigul_SpecificParamsbucketSizeDuration;


typedef TknU32 NhuLogChannelConfigul_SpecificParamslogicalChannelGroup;

typedef struct NhuLogChannelConfigul_SpecificParams
{
 TknPres pres;
 NhuLogChannelConfigul_SpecificParamspriority priority;
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRate prioritisedBitRate;
 NhuLogChannelConfigul_SpecificParamsbucketSizeDuration bucketSizeDuration;
 NhuLogChannelConfigul_SpecificParamslogicalChannelGroup logicalChannelGroup;
} NhuLogChannelConfigul_SpecificParams;


typedef enum enumNhuLogChannelConfigextaddgrp_r9logicalChannelSR_Mask_r9
{
 NhuLogChannelConfigextaddgrp_r9logicalChannelSR_Mask_r9setupEnum
} EnumNhuLogChannelConfigextaddgrp_r9logicalChannelSR_Mask_r9;
typedef TknU32 NhuLogChannelConfigextaddgrp_r9logicalChannelSR_Mask_r9;

typedef struct NhuLogChannelConfigextaddgrp_r9
{
 TknPres pres;
 NhuLogChannelConfigextaddgrp_r9logicalChannelSR_Mask_r9 logicalChannelSR_Mask_r9;
} NhuLogChannelConfigextaddgrp_r9;

typedef struct NhuLogChannelConfig
{
 TknPres pres;
 NhuLogChannelConfigul_SpecificParams ul_SpecificParams;
 NhuLogChannelConfigextaddgrp_r9 extaddgrp_r9;
} NhuLogChannelConfig;


typedef TknU32 NhuSRB_ToAddModsrb_Identity;

typedef struct NhuSRB_ToAddModrlc_Config
{
 TknU8 choice;
 union {
  NhuRLC_Config explicitValue;
 } val;
} NhuSRB_ToAddModrlc_Config;

typedef struct NhuSRB_ToAddModlogicalChannelConfig
{
 TknU8 choice;
 union {
  NhuLogChannelConfig explicitValue;
 } val;
} NhuSRB_ToAddModlogicalChannelConfig;

typedef struct NhuSRB_ToAddMod
{
 TknPres pres;
 NhuSRB_ToAddModsrb_Identity srb_Identity;
 NhuSRB_ToAddModrlc_Config rlc_Config;
 NhuSRB_ToAddModlogicalChannelConfig logicalChannelConfig;
} NhuSRB_ToAddMod;

typedef struct NhuSRB_ToAddModLst
{
 TknU16 noComp;
 NhuSRB_ToAddMod *member;
}NhuSRB_ToAddModLst;


typedef TknU32 NhuDRB_Identity;


typedef enum enumNhuPDCP_ConfigdiscardTimer
{
 NhuPDCP_ConfigdiscardTimerms50Enum,
 NhuPDCP_ConfigdiscardTimerms100Enum,
 NhuPDCP_ConfigdiscardTimerms150Enum,
 NhuPDCP_ConfigdiscardTimerms300Enum,
 NhuPDCP_ConfigdiscardTimerms500Enum,
 NhuPDCP_ConfigdiscardTimerms750Enum,
 NhuPDCP_ConfigdiscardTimerms1500Enum,
 NhuPDCP_ConfigdiscardTimerinfinityEnum
} EnumNhuPDCP_ConfigdiscardTimer;
typedef TknU32 NhuPDCP_ConfigdiscardTimer;


typedef TknU8 NhuPDCP_Configrlc_AMstatusReportReqd;

typedef struct NhuPDCP_Configrlc_AM
{
 TknPres pres;
 NhuPDCP_Configrlc_AMstatusReportReqd statusReportReqd;
} NhuPDCP_Configrlc_AM;


typedef enum enumNhuPDCP_Configrlc_UMpdcp_SN_Size
{
 NhuPDCP_Configrlc_UMpdcp_SN_Sizelen7bitsEnum,
 NhuPDCP_Configrlc_UMpdcp_SN_Sizelen12bitsEnum
} EnumNhuPDCP_Configrlc_UMpdcp_SN_Size;
typedef TknU32 NhuPDCP_Configrlc_UMpdcp_SN_Size;

typedef struct NhuPDCP_Configrlc_UM
{
 TknPres pres;
 NhuPDCP_Configrlc_UMpdcp_SN_Size pdcp_SN_Size;
} NhuPDCP_Configrlc_UM;


typedef TknU32 NhuPDCP_ConfigheaderCompressionrohcmaxCID;


typedef TknU8 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0001;


typedef TknU8 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0002;


typedef TknU8 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0003;


typedef TknU8 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0004;


typedef TknU8 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0006;


typedef TknU8 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0101;


typedef TknU8 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0102;


typedef TknU8 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0103;


typedef TknU8 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0104;

typedef struct NhuPDCP_ConfigheaderCompressionrohcprofiles
{
 TknPres pres;
 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0001 profile0x0001;
 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0002 profile0x0002;
 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0003 profile0x0003;
 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0004 profile0x0004;
 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0006 profile0x0006;
 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0101 profile0x0101;
 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0102 profile0x0102;
 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0103 profile0x0103;
 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0104 profile0x0104;
} NhuPDCP_ConfigheaderCompressionrohcprofiles;

typedef struct NhuPDCP_ConfigheaderCompressionrohc
{
 TknPres pres;
 NhuPDCP_ConfigheaderCompressionrohcmaxCID maxCID;
 NhuPDCP_ConfigheaderCompressionrohcprofiles profiles;
} NhuPDCP_ConfigheaderCompressionrohc;

typedef struct NhuPDCP_ConfigheaderCompression
{
 TknU8 choice;
 union {
  NhuPDCP_ConfigheaderCompressionrohc rohc;
 } val;
} NhuPDCP_ConfigheaderCompression;

typedef struct NhuPDCP_Config
{
 TknPres pres;
 NhuPDCP_ConfigdiscardTimer discardTimer;
 NhuPDCP_Configrlc_AM rlc_AM;
 NhuPDCP_Configrlc_UM rlc_UM;
 NhuPDCP_ConfigheaderCompression headerCompression;
} NhuPDCP_Config;


typedef TknU32 NhuDRB_ToAddModeps_BrIdentity;


typedef TknU32 NhuDRB_ToAddModlogicalChannelIdentity;

typedef struct NhuDRB_ToAddMod
{
 TknPres pres;
 NhuDRB_ToAddModeps_BrIdentity eps_BrIdentity;
 NhuDRB_Identity drb_Identity;
 NhuPDCP_Config pdcp_Config;
 NhuRLC_Config rlc_Config;
 NhuDRB_ToAddModlogicalChannelIdentity logicalChannelIdentity;
 NhuLogChannelConfig logicalChannelConfig;
} NhuDRB_ToAddMod;

typedef struct NhuDRB_ToAddModLst
{
 TknU16 noComp;
 NhuDRB_ToAddMod *member;
}NhuDRB_ToAddModLst;

typedef struct NhuDRB_ToRlsLst
{
 TknU16 noComp;
 NhuDRB_Identity *member;
}NhuDRB_ToRlsLst;


typedef enum enumNhuDRX_ConfigsetuponDurationTimer
{
 NhuDRX_ConfigsetuponDurationTimerpsf1Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf2Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf3Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf4Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf5Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf6Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf8Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf10Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf20Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf30Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf40Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf50Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf60Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf80Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf100Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf200Enum
} EnumNhuDRX_ConfigsetuponDurationTimer;
typedef TknU32 NhuDRX_ConfigsetuponDurationTimer;


typedef enum enumNhuDRX_Configsetupdrx_InactivityTimer
{
 NhuDRX_Configsetupdrx_InactivityTimerpsf1Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf2Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf3Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf4Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf5Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf6Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf8Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf10Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf20Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf30Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf40Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf50Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf60Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf80Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf100Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf200Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf300Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf500Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf750Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf1280Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf1920Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf2560Enum,
 NhuDRX_Configsetupdrx_InactivityTimerspare10Enum,
 NhuDRX_Configsetupdrx_InactivityTimerspare9Enum,
 NhuDRX_Configsetupdrx_InactivityTimerspare8Enum,
 NhuDRX_Configsetupdrx_InactivityTimerspare7Enum,
 NhuDRX_Configsetupdrx_InactivityTimerspare6Enum,
 NhuDRX_Configsetupdrx_InactivityTimerspare5Enum,
 NhuDRX_Configsetupdrx_InactivityTimerspare4Enum,
 NhuDRX_Configsetupdrx_InactivityTimerspare3Enum,
 NhuDRX_Configsetupdrx_InactivityTimerspare2Enum,
 NhuDRX_Configsetupdrx_InactivityTimerspare1Enum
} EnumNhuDRX_Configsetupdrx_InactivityTimer;
typedef TknU32 NhuDRX_Configsetupdrx_InactivityTimer;


typedef enum enumNhuDRX_Configsetupdrx_ReTxTimer
{
 NhuDRX_Configsetupdrx_ReTxTimerpsf1Enum,
 NhuDRX_Configsetupdrx_ReTxTimerpsf2Enum,
 NhuDRX_Configsetupdrx_ReTxTimerpsf4Enum,
 NhuDRX_Configsetupdrx_ReTxTimerpsf6Enum,
 NhuDRX_Configsetupdrx_ReTxTimerpsf8Enum,
 NhuDRX_Configsetupdrx_ReTxTimerpsf16Enum,
 NhuDRX_Configsetupdrx_ReTxTimerpsf24Enum,
 NhuDRX_Configsetupdrx_ReTxTimerpsf33Enum
} EnumNhuDRX_Configsetupdrx_ReTxTimer;
typedef TknU32 NhuDRX_Configsetupdrx_ReTxTimer;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf10;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf20;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf32;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf40;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf64;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf80;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf128;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf160;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf256;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf320;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf512;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf640;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf1024;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf1280;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf2048;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf2560;

typedef struct NhuDRX_ConfigsetuplongDRX_CycleStartOffset
{
 TknU8 choice;
 union {
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf10 sf10;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf20 sf20;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf32 sf32;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf40 sf40;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf64 sf64;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf80 sf80;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf128 sf128;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf160 sf160;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf256 sf256;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf320 sf320;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf512 sf512;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf640 sf640;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf1024 sf1024;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf1280 sf1280;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf2048 sf2048;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf2560 sf2560;
 } val;
} NhuDRX_ConfigsetuplongDRX_CycleStartOffset;


typedef enum enumNhuDRX_ConfigsetupshortDRXshortDRX_Cycle
{
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf2Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf5Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf8Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf10Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf16Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf20Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf32Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf40Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf64Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf80Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf128Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf160Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf256Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf320Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf512Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf640Enum
} EnumNhuDRX_ConfigsetupshortDRXshortDRX_Cycle;
typedef TknU32 NhuDRX_ConfigsetupshortDRXshortDRX_Cycle;


typedef TknU32 NhuDRX_ConfigsetupshortDRXdrxShortCycleTimer;

typedef struct NhuDRX_ConfigsetupshortDRX
{
 TknPres pres;
 NhuDRX_ConfigsetupshortDRXshortDRX_Cycle shortDRX_Cycle;
 NhuDRX_ConfigsetupshortDRXdrxShortCycleTimer drxShortCycleTimer;
} NhuDRX_ConfigsetupshortDRX;

typedef struct NhuDRX_Configsetup
{
 TknPres pres;
 NhuDRX_ConfigsetuponDurationTimer onDurationTimer;
 NhuDRX_Configsetupdrx_InactivityTimer drx_InactivityTimer;
 NhuDRX_Configsetupdrx_ReTxTimer drx_ReTxTimer;
 NhuDRX_ConfigsetuplongDRX_CycleStartOffset longDRX_CycleStartOffset;
 NhuDRX_ConfigsetupshortDRX shortDRX;
} NhuDRX_Configsetup;

typedef struct NhuDRX_Config
{
 TknU8 choice;
 union {
  NhuDRX_Configsetup setup;
 } val;
} NhuDRX_Config;


typedef enum enumNhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Tx
{
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txn1Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txn2Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txn3Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txn4Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txn5Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txn6Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txn7Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txn8Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txn10Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txn12Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txn16Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txn20Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txn24Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txn28Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txspare2Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txspare1Enum
} EnumNhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Tx;
typedef TknU32 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Tx;


typedef enum enumNhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timer
{
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timersf5Enum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timersf10Enum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timersf16Enum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timersf20Enum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timersf32Enum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timersf40Enum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timersf64Enum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timersf80Enum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timersf128Enum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timersf160Enum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timersf320Enum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timersf640Enum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timersf1280Enum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timersf2560Enum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_TimerinfinityEnum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timerspare1Enum
} EnumNhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timer;
typedef TknU32 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timer;


typedef enum enumNhuMAC_MainConfigul_SCH_ConfigretxBSR_Timer
{
 NhuMAC_MainConfigul_SCH_ConfigretxBSR_Timersf320Enum,
 NhuMAC_MainConfigul_SCH_ConfigretxBSR_Timersf640Enum,
 NhuMAC_MainConfigul_SCH_ConfigretxBSR_Timersf1280Enum,
 NhuMAC_MainConfigul_SCH_ConfigretxBSR_Timersf2560Enum,
 NhuMAC_MainConfigul_SCH_ConfigretxBSR_Timersf5120Enum,
 NhuMAC_MainConfigul_SCH_ConfigretxBSR_Timersf10240Enum,
 NhuMAC_MainConfigul_SCH_ConfigretxBSR_Timerspare2Enum,
 NhuMAC_MainConfigul_SCH_ConfigretxBSR_Timerspare1Enum
} EnumNhuMAC_MainConfigul_SCH_ConfigretxBSR_Timer;
typedef TknU32 NhuMAC_MainConfigul_SCH_ConfigretxBSR_Timer;


typedef TknU8 NhuMAC_MainConfigul_SCH_ConfigttiBundling;

typedef struct NhuMAC_MainConfigul_SCH_Config
{
 TknPres pres;
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Tx maxHARQ_Tx;
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timer periodicBSR_Timer;
 NhuMAC_MainConfigul_SCH_ConfigretxBSR_Timer retxBSR_Timer;
 NhuMAC_MainConfigul_SCH_ConfigttiBundling ttiBundling;
} NhuMAC_MainConfigul_SCH_Config;


typedef enum enumNhuMAC_MainConfigphr_ConfigsetupperiodicPHR_Timer
{
 NhuMAC_MainConfigphr_ConfigsetupperiodicPHR_Timersf10Enum,
 NhuMAC_MainConfigphr_ConfigsetupperiodicPHR_Timersf20Enum,
 NhuMAC_MainConfigphr_ConfigsetupperiodicPHR_Timersf50Enum,
 NhuMAC_MainConfigphr_ConfigsetupperiodicPHR_Timersf100Enum,
 NhuMAC_MainConfigphr_ConfigsetupperiodicPHR_Timersf200Enum,
 NhuMAC_MainConfigphr_ConfigsetupperiodicPHR_Timersf500Enum,
 NhuMAC_MainConfigphr_ConfigsetupperiodicPHR_Timersf1000Enum,
 NhuMAC_MainConfigphr_ConfigsetupperiodicPHR_TimerinfinityEnum
} EnumNhuMAC_MainConfigphr_ConfigsetupperiodicPHR_Timer;
typedef TknU32 NhuMAC_MainConfigphr_ConfigsetupperiodicPHR_Timer;


typedef enum enumNhuMAC_MainConfigphr_ConfigsetupprohibitPHR_Timer
{
 NhuMAC_MainConfigphr_ConfigsetupprohibitPHR_Timersf0Enum,
 NhuMAC_MainConfigphr_ConfigsetupprohibitPHR_Timersf10Enum,
 NhuMAC_MainConfigphr_ConfigsetupprohibitPHR_Timersf20Enum,
 NhuMAC_MainConfigphr_ConfigsetupprohibitPHR_Timersf50Enum,
 NhuMAC_MainConfigphr_ConfigsetupprohibitPHR_Timersf100Enum,
 NhuMAC_MainConfigphr_ConfigsetupprohibitPHR_Timersf200Enum,
 NhuMAC_MainConfigphr_ConfigsetupprohibitPHR_Timersf500Enum,
 NhuMAC_MainConfigphr_ConfigsetupprohibitPHR_Timersf1000Enum
} EnumNhuMAC_MainConfigphr_ConfigsetupprohibitPHR_Timer;
typedef TknU32 NhuMAC_MainConfigphr_ConfigsetupprohibitPHR_Timer;


typedef enum enumNhuMAC_MainConfigphr_Configsetupdl_PathlossChange
{
 NhuMAC_MainConfigphr_Configsetupdl_PathlossChangedB1Enum,
 NhuMAC_MainConfigphr_Configsetupdl_PathlossChangedB3Enum,
 NhuMAC_MainConfigphr_Configsetupdl_PathlossChangedB6Enum,
 NhuMAC_MainConfigphr_Configsetupdl_PathlossChangeinfinityEnum
} EnumNhuMAC_MainConfigphr_Configsetupdl_PathlossChange;
typedef TknU32 NhuMAC_MainConfigphr_Configsetupdl_PathlossChange;

typedef struct NhuMAC_MainConfigphr_Configsetup
{
 TknPres pres;
 NhuMAC_MainConfigphr_ConfigsetupperiodicPHR_Timer periodicPHR_Timer;
 NhuMAC_MainConfigphr_ConfigsetupprohibitPHR_Timer prohibitPHR_Timer;
 NhuMAC_MainConfigphr_Configsetupdl_PathlossChange dl_PathlossChange;
} NhuMAC_MainConfigphr_Configsetup;

typedef struct NhuMAC_MainConfigphr_Config
{
 TknU8 choice;
 union {
  NhuMAC_MainConfigphr_Configsetup setup;
 } val;
} NhuMAC_MainConfigphr_Config;


typedef TknU32 NhuMAC_MainConfigextaddgrp_r9sr_ProhibitTimer_r9;

typedef struct NhuMAC_MainConfigextaddgrp_r9
{
 TknPres pres;
 NhuMAC_MainConfigextaddgrp_r9sr_ProhibitTimer_r9 sr_ProhibitTimer_r9;
} NhuMAC_MainConfigextaddgrp_r9;

typedef struct NhuMAC_MainConfig
{
 TknPres pres;
 NhuMAC_MainConfigul_SCH_Config ul_SCH_Config;
 NhuDRX_Config drx_Config;
 NhuTimeAlignmentTimer timeAlignmentTimerDedicated;
 NhuMAC_MainConfigphr_Config phr_Config;
 NhuMAC_MainConfigextaddgrp_r9 extaddgrp_r9;
} NhuMAC_MainConfig;


typedef TknStrBSXL NhuC_RNTI;
typedef TknU32 NhuN1_PUCCH_AN_PersistentLstMember;

typedef struct NhuN1_PUCCH_AN_PersistentLst
{
 TknU16 noComp;
 NhuN1_PUCCH_AN_PersistentLstMember *member;
}NhuN1_PUCCH_AN_PersistentLst;


typedef enum enumNhuSPS_ConfigDLsetupsemiPersistSchedIntervalDL
{
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLsf10Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLsf20Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLsf32Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLsf40Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLsf64Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLsf80Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLsf128Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLsf160Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLsf320Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLsf640Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLspare6Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLspare5Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLspare4Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLspare3Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLspare2Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLspare1Enum
} EnumNhuSPS_ConfigDLsetupsemiPersistSchedIntervalDL;
typedef TknU32 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDL;


typedef TknU32 NhuSPS_ConfigDLsetupnumberOfConfSPS_Processes;

typedef struct NhuSPS_ConfigDLsetup
{
 TknPres pres;
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDL semiPersistSchedIntervalDL;
 NhuSPS_ConfigDLsetupnumberOfConfSPS_Processes numberOfConfSPS_Processes;
 NhuN1_PUCCH_AN_PersistentLst n1_PUCCH_AN_PersistentLst;
} NhuSPS_ConfigDLsetup;

typedef struct NhuSPS_ConfigDL
{
 TknU8 choice;
 union {
  NhuSPS_ConfigDLsetup setup;
 } val;
} NhuSPS_ConfigDL;


typedef enum enumNhuSPS_ConfigULsetupsemiPersistSchedIntervalUL
{
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULsf10Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULsf20Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULsf32Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULsf40Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULsf64Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULsf80Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULsf128Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULsf160Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULsf320Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULsf640Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULspare6Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULspare5Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULspare4Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULspare3Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULspare2Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULspare1Enum
} EnumNhuSPS_ConfigULsetupsemiPersistSchedIntervalUL;
typedef TknU32 NhuSPS_ConfigULsetupsemiPersistSchedIntervalUL;


typedef enum enumNhuSPS_ConfigULsetupimplicitRlsAfter
{
 NhuSPS_ConfigULsetupimplicitRlsAftere2Enum,
 NhuSPS_ConfigULsetupimplicitRlsAftere3Enum,
 NhuSPS_ConfigULsetupimplicitRlsAftere4Enum,
 NhuSPS_ConfigULsetupimplicitRlsAftere8Enum
} EnumNhuSPS_ConfigULsetupimplicitRlsAfter;
typedef TknU32 NhuSPS_ConfigULsetupimplicitRlsAfter;


typedef TknS32 NhuSPS_ConfigULsetupp0_Persistentp0_NominalPUSCH_Persistent;


typedef TknS32 NhuSPS_ConfigULsetupp0_Persistentp0_UE_PUSCH_Persistent;

typedef struct NhuSPS_ConfigULsetupp0_Persistent
{
 TknPres pres;
 NhuSPS_ConfigULsetupp0_Persistentp0_NominalPUSCH_Persistent p0_NominalPUSCH_Persistent;
 NhuSPS_ConfigULsetupp0_Persistentp0_UE_PUSCH_Persistent p0_UE_PUSCH_Persistent;
} NhuSPS_ConfigULsetupp0_Persistent;


typedef enum enumNhuSPS_ConfigULsetuptwoIntervalsConfig
{
 NhuSPS_ConfigULsetuptwoIntervalsConfigtrueEnum
} EnumNhuSPS_ConfigULsetuptwoIntervalsConfig;
typedef TknU32 NhuSPS_ConfigULsetuptwoIntervalsConfig;

typedef struct NhuSPS_ConfigULsetup
{
 TknPres pres;
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalUL semiPersistSchedIntervalUL;
 NhuSPS_ConfigULsetupimplicitRlsAfter implicitRlsAfter;
 NhuSPS_ConfigULsetupp0_Persistent p0_Persistent;
 NhuSPS_ConfigULsetuptwoIntervalsConfig twoIntervalsConfig;
} NhuSPS_ConfigULsetup;

typedef struct NhuSPS_ConfigUL
{
 TknU8 choice;
 union {
  NhuSPS_ConfigULsetup setup;
 } val;
} NhuSPS_ConfigUL;

typedef struct NhuSPS_Config
{
 TknPres pres;
 NhuC_RNTI semiPersistSchedC_RNTI;
 NhuSPS_ConfigDL sps_ConfigDL;
 NhuSPS_ConfigUL sps_ConfigUL;
} NhuSPS_Config;


typedef enum enumNhuPDSCH_ConfigDedicatedp_a
{
 NhuPDSCH_ConfigDedicatedp_adB_6Enum,
 NhuPDSCH_ConfigDedicatedp_adB_4dot77Enum,
 NhuPDSCH_ConfigDedicatedp_adB_3Enum,
 NhuPDSCH_ConfigDedicatedp_adB_1dot77Enum,
 NhuPDSCH_ConfigDedicatedp_adB0Enum,
 NhuPDSCH_ConfigDedicatedp_adB1Enum,
 NhuPDSCH_ConfigDedicatedp_adB2Enum,
 NhuPDSCH_ConfigDedicatedp_adB3Enum
} EnumNhuPDSCH_ConfigDedicatedp_a;
typedef TknU32 NhuPDSCH_ConfigDedicatedp_a;

typedef struct NhuPDSCH_ConfigDedicated
{
 TknPres pres;
 NhuPDSCH_ConfigDedicatedp_a p_a;
} NhuPDSCH_ConfigDedicated;


typedef enum enumNhuPUCCH_ConfigDedicatedackNackRepetitionsetuprepetitionFactor
{
 NhuPUCCH_ConfigDedicatedackNackRepetitionsetuprepetitionFactorn2Enum,
 NhuPUCCH_ConfigDedicatedackNackRepetitionsetuprepetitionFactorn4Enum,
 NhuPUCCH_ConfigDedicatedackNackRepetitionsetuprepetitionFactorn6Enum,
 NhuPUCCH_ConfigDedicatedackNackRepetitionsetuprepetitionFactorspare1Enum
} EnumNhuPUCCH_ConfigDedicatedackNackRepetitionsetuprepetitionFactor;
typedef TknU32 NhuPUCCH_ConfigDedicatedackNackRepetitionsetuprepetitionFactor;


typedef TknU32 NhuPUCCH_ConfigDedicatedackNackRepetitionsetupn1PUCCH_AN_Rep;

typedef struct NhuPUCCH_ConfigDedicatedackNackRepetitionsetup
{
 TknPres pres;
 NhuPUCCH_ConfigDedicatedackNackRepetitionsetuprepetitionFactor repetitionFactor;
 NhuPUCCH_ConfigDedicatedackNackRepetitionsetupn1PUCCH_AN_Rep n1PUCCH_AN_Rep;
} NhuPUCCH_ConfigDedicatedackNackRepetitionsetup;

typedef struct NhuPUCCH_ConfigDedicatedackNackRepetition
{
 TknU8 choice;
 union {
  NhuPUCCH_ConfigDedicatedackNackRepetitionsetup setup;
 } val;
} NhuPUCCH_ConfigDedicatedackNackRepetition;


typedef enum enumNhuPUCCH_ConfigDedicatedtdd_AckNackFeedbackMode
{
 NhuPUCCH_ConfigDedicatedtdd_AckNackFeedbackModebundlingEnum,
 NhuPUCCH_ConfigDedicatedtdd_AckNackFeedbackModemultiplexingEnum
} EnumNhuPUCCH_ConfigDedicatedtdd_AckNackFeedbackMode;
typedef TknU32 NhuPUCCH_ConfigDedicatedtdd_AckNackFeedbackMode;

typedef struct NhuPUCCH_ConfigDedicated
{
 TknPres pres;
 NhuPUCCH_ConfigDedicatedackNackRepetition ackNackRepetition;
 NhuPUCCH_ConfigDedicatedtdd_AckNackFeedbackMode tdd_AckNackFeedbackMode;
} NhuPUCCH_ConfigDedicated;


typedef TknU32 NhuPUSCH_ConfigDedicatedbetaOffset_ACK_Idx;


typedef TknU32 NhuPUSCH_ConfigDedicatedbetaOffset_RI_Idx;


typedef TknU32 NhuPUSCH_ConfigDedicatedbetaOffset_CQI_Idx;

typedef struct NhuPUSCH_ConfigDedicated
{
 TknPres pres;
 NhuPUSCH_ConfigDedicatedbetaOffset_ACK_Idx betaOffset_ACK_Idx;
 NhuPUSCH_ConfigDedicatedbetaOffset_RI_Idx betaOffset_RI_Idx;
 NhuPUSCH_ConfigDedicatedbetaOffset_CQI_Idx betaOffset_CQI_Idx;
} NhuPUSCH_ConfigDedicated;


typedef enum enumNhuFilterCoefficient
{
 NhuFilterCoefficientfc0Enum,
 NhuFilterCoefficientfc1Enum,
 NhuFilterCoefficientfc2Enum,
 NhuFilterCoefficientfc3Enum,
 NhuFilterCoefficientfc4Enum,
 NhuFilterCoefficientfc5Enum,
 NhuFilterCoefficientfc6Enum,
 NhuFilterCoefficientfc7Enum,
 NhuFilterCoefficientfc8Enum,
 NhuFilterCoefficientfc9Enum,
 NhuFilterCoefficientfc11Enum,
 NhuFilterCoefficientfc13Enum,
 NhuFilterCoefficientfc15Enum,
 NhuFilterCoefficientfc17Enum,
 NhuFilterCoefficientfc19Enum,
 NhuFilterCoefficientspare1Enum
} EnumNhuFilterCoefficient;
typedef TknU32 NhuFilterCoefficient;


typedef TknS32 NhuUlnkPowerCntrlDedicatedp0_UE_PUSCH;


typedef enum enumNhuUlnkPowerCntrlDedicateddeltaMCS_Enabled
{
 NhuUlnkPowerCntrlDedicateddeltaMCS_Enableden0Enum,
 NhuUlnkPowerCntrlDedicateddeltaMCS_Enableden1Enum
} EnumNhuUlnkPowerCntrlDedicateddeltaMCS_Enabled;
typedef TknU32 NhuUlnkPowerCntrlDedicateddeltaMCS_Enabled;


typedef TknU8 NhuUlnkPowerCntrlDedicatedaccumulationEnabled;


typedef TknS32 NhuUlnkPowerCntrlDedicatedp0_UE_PUCCH;


typedef TknU32 NhuUlnkPowerCntrlDedicatedpSRS_Offset;

typedef struct NhuUlnkPowerCntrlDedicated
{
 TknPres pres;
 NhuUlnkPowerCntrlDedicatedp0_UE_PUSCH p0_UE_PUSCH;
 NhuUlnkPowerCntrlDedicateddeltaMCS_Enabled deltaMCS_Enabled;
 NhuUlnkPowerCntrlDedicatedaccumulationEnabled accumulationEnabled;
 NhuUlnkPowerCntrlDedicatedp0_UE_PUCCH p0_UE_PUCCH;
 NhuUlnkPowerCntrlDedicatedpSRS_Offset pSRS_Offset;
 NhuFilterCoefficient filterCoefficient;
} NhuUlnkPowerCntrlDedicated;


typedef TknU32 NhuTPC_IdxindexOfFormat3;


typedef TknU32 NhuTPC_IdxindexOfFormat3A;

typedef struct NhuTPC_Idx
{
 TknU8 choice;
 union {
  NhuTPC_IdxindexOfFormat3 indexOfFormat3;
  NhuTPC_IdxindexOfFormat3A indexOfFormat3A;
 } val;
} NhuTPC_Idx;


typedef TknStrBSXL NhuTPC_PDCCH_Configsetuptpc_RNTI;
typedef struct NhuTPC_PDCCH_Configsetup
{
 TknPres pres;
 NhuTPC_PDCCH_Configsetuptpc_RNTI tpc_RNTI;
 NhuTPC_Idx tpc_Idx;
} NhuTPC_PDCCH_Configsetup;

typedef struct NhuTPC_PDCCH_Config
{
 TknU8 choice;
 union {
  NhuTPC_PDCCH_Configsetup setup;
 } val;
} NhuTPC_PDCCH_Config;


typedef TknU32 NhuCQI_ReportPeriodicsetupcqi_PUCCH_ResourceIdx;


typedef TknU32 NhuCQI_ReportPeriodicsetupcqi_pmi_ConfigIdx;


typedef TknU32 NhuCQI_ReportPeriodicsetupcqi_FormatIndicatorPeriodicsubbandCQIk;

typedef struct NhuCQI_ReportPeriodicsetupcqi_FormatIndicatorPeriodicsubbandCQI
{
 TknPres pres;
 NhuCQI_ReportPeriodicsetupcqi_FormatIndicatorPeriodicsubbandCQIk k;
} NhuCQI_ReportPeriodicsetupcqi_FormatIndicatorPeriodicsubbandCQI;

typedef struct NhuCQI_ReportPeriodicsetupcqi_FormatIndicatorPeriodic
{
 TknU8 choice;
 union {
  NhuCQI_ReportPeriodicsetupcqi_FormatIndicatorPeriodicsubbandCQI subbandCQI;
 } val;
} NhuCQI_ReportPeriodicsetupcqi_FormatIndicatorPeriodic;


typedef TknU32 NhuCQI_ReportPeriodicsetupri_ConfigIdx;


typedef TknU8 NhuCQI_ReportPeriodicsetupsimultaneousAckNackAndCQI;

typedef struct NhuCQI_ReportPeriodicsetup
{
 TknPres pres;
 NhuCQI_ReportPeriodicsetupcqi_PUCCH_ResourceIdx cqi_PUCCH_ResourceIdx;
 NhuCQI_ReportPeriodicsetupcqi_pmi_ConfigIdx cqi_pmi_ConfigIdx;
 NhuCQI_ReportPeriodicsetupcqi_FormatIndicatorPeriodic cqi_FormatIndicatorPeriodic;
 NhuCQI_ReportPeriodicsetupri_ConfigIdx ri_ConfigIdx;
 NhuCQI_ReportPeriodicsetupsimultaneousAckNackAndCQI simultaneousAckNackAndCQI;
} NhuCQI_ReportPeriodicsetup;

typedef struct NhuCQI_ReportPeriodic
{
 TknU8 choice;
 union {
  NhuCQI_ReportPeriodicsetup setup;
 } val;
} NhuCQI_ReportPeriodic;


typedef enum enumNhuCQI_ReportConfigcqi_ReportModeAperiodic
{
 NhuCQI_ReportConfigcqi_ReportModeAperiodicrm12Enum,
 NhuCQI_ReportConfigcqi_ReportModeAperiodicrm20Enum,
 NhuCQI_ReportConfigcqi_ReportModeAperiodicrm22Enum,
 NhuCQI_ReportConfigcqi_ReportModeAperiodicrm30Enum,
 NhuCQI_ReportConfigcqi_ReportModeAperiodicrm31Enum,
 NhuCQI_ReportConfigcqi_ReportModeAperiodicspare3Enum,
 NhuCQI_ReportConfigcqi_ReportModeAperiodicspare2Enum,
 NhuCQI_ReportConfigcqi_ReportModeAperiodicspare1Enum
} EnumNhuCQI_ReportConfigcqi_ReportModeAperiodic;
typedef TknU32 NhuCQI_ReportConfigcqi_ReportModeAperiodic;


typedef TknS32 NhuCQI_ReportConfignomPDSCH_RS_EPRE_Offset;

typedef struct NhuCQI_ReportConfig
{
 TknPres pres;
 NhuCQI_ReportConfigcqi_ReportModeAperiodic cqi_ReportModeAperiodic;
 NhuCQI_ReportConfignomPDSCH_RS_EPRE_Offset nomPDSCH_RS_EPRE_Offset;
 NhuCQI_ReportPeriodic cqi_ReportPeriodic;
} NhuCQI_ReportConfig;


typedef enum enumNhuSoundingRS_UL_ConfigDedicatedsetupsrs_Bandwidth
{
 NhuSoundingRS_UL_ConfigDedicatedsetupsrs_Bandwidthbw0Enum,
 NhuSoundingRS_UL_ConfigDedicatedsetupsrs_Bandwidthbw1Enum,
 NhuSoundingRS_UL_ConfigDedicatedsetupsrs_Bandwidthbw2Enum,
 NhuSoundingRS_UL_ConfigDedicatedsetupsrs_Bandwidthbw3Enum
} EnumNhuSoundingRS_UL_ConfigDedicatedsetupsrs_Bandwidth;
typedef TknU32 NhuSoundingRS_UL_ConfigDedicatedsetupsrs_Bandwidth;


typedef enum enumNhuSoundingRS_UL_ConfigDedicatedsetupsrs_HoppingBandwidth
{
 NhuSoundingRS_UL_ConfigDedicatedsetupsrs_HoppingBandwidthhbw0Enum,
 NhuSoundingRS_UL_ConfigDedicatedsetupsrs_HoppingBandwidthhbw1Enum,
 NhuSoundingRS_UL_ConfigDedicatedsetupsrs_HoppingBandwidthhbw2Enum,
 NhuSoundingRS_UL_ConfigDedicatedsetupsrs_HoppingBandwidthhbw3Enum
} EnumNhuSoundingRS_UL_ConfigDedicatedsetupsrs_HoppingBandwidth;
typedef TknU32 NhuSoundingRS_UL_ConfigDedicatedsetupsrs_HoppingBandwidth;


typedef TknU32 NhuSoundingRS_UL_ConfigDedicatedsetupfreqDomainPosition;


typedef TknU8 NhuSoundingRS_UL_ConfigDedicatedsetupduration;


typedef TknU32 NhuSoundingRS_UL_ConfigDedicatedsetupsrs_ConfigIdx;


typedef TknU32 NhuSoundingRS_UL_ConfigDedicatedsetuptransmissionComb;


typedef enum enumNhuSoundingRS_UL_ConfigDedicatedsetupcyclicShift
{
 NhuSoundingRS_UL_ConfigDedicatedsetupcyclicShiftcs0Enum,
 NhuSoundingRS_UL_ConfigDedicatedsetupcyclicShiftcs1Enum,
 NhuSoundingRS_UL_ConfigDedicatedsetupcyclicShiftcs2Enum,
 NhuSoundingRS_UL_ConfigDedicatedsetupcyclicShiftcs3Enum,
 NhuSoundingRS_UL_ConfigDedicatedsetupcyclicShiftcs4Enum,
 NhuSoundingRS_UL_ConfigDedicatedsetupcyclicShiftcs5Enum,
 NhuSoundingRS_UL_ConfigDedicatedsetupcyclicShiftcs6Enum,
 NhuSoundingRS_UL_ConfigDedicatedsetupcyclicShiftcs7Enum
} EnumNhuSoundingRS_UL_ConfigDedicatedsetupcyclicShift;
typedef TknU32 NhuSoundingRS_UL_ConfigDedicatedsetupcyclicShift;

typedef struct NhuSoundingRS_UL_ConfigDedicatedsetup
{
 TknPres pres;
 NhuSoundingRS_UL_ConfigDedicatedsetupsrs_Bandwidth srs_Bandwidth;
 NhuSoundingRS_UL_ConfigDedicatedsetupsrs_HoppingBandwidth srs_HoppingBandwidth;
 NhuSoundingRS_UL_ConfigDedicatedsetupfreqDomainPosition freqDomainPosition;
 NhuSoundingRS_UL_ConfigDedicatedsetupduration duration;
 NhuSoundingRS_UL_ConfigDedicatedsetupsrs_ConfigIdx srs_ConfigIdx;
 NhuSoundingRS_UL_ConfigDedicatedsetuptransmissionComb transmissionComb;
 NhuSoundingRS_UL_ConfigDedicatedsetupcyclicShift cyclicShift;
} NhuSoundingRS_UL_ConfigDedicatedsetup;

typedef struct NhuSoundingRS_UL_ConfigDedicated
{
 TknU8 choice;
 union {
  NhuSoundingRS_UL_ConfigDedicatedsetup setup;
 } val;
} NhuSoundingRS_UL_ConfigDedicated;


typedef enum enumNhuAntennaInfoDedicatedtransmissionMode
{
 NhuAntennaInfoDedicatedtransmissionModetm1Enum,
 NhuAntennaInfoDedicatedtransmissionModetm2Enum,
 NhuAntennaInfoDedicatedtransmissionModetm3Enum,
 NhuAntennaInfoDedicatedtransmissionModetm4Enum,
 NhuAntennaInfoDedicatedtransmissionModetm5Enum,
 NhuAntennaInfoDedicatedtransmissionModetm6Enum,
 NhuAntennaInfoDedicatedtransmissionModetm7Enum,
 NhuAntennaInfoDedicatedtransmissionModetm8_v920Enum
} EnumNhuAntennaInfoDedicatedtransmissionMode;
typedef TknU32 NhuAntennaInfoDedicatedtransmissionMode;


typedef TknStrBSXL NhuAntennaInfoDedicatedcodebookSubsetRestrnn2TxAntenna_tm3;

typedef TknStrBSXL NhuAntennaInfoDedicatedcodebookSubsetRestrnn4TxAntenna_tm3;

typedef TknStrBSXL NhuAntennaInfoDedicatedcodebookSubsetRestrnn2TxAntenna_tm4;

typedef TknStrBSXL NhuAntennaInfoDedicatedcodebookSubsetRestrnn4TxAntenna_tm4;

typedef TknStrBSXL NhuAntennaInfoDedicatedcodebookSubsetRestrnn2TxAntenna_tm5;

typedef TknStrBSXL NhuAntennaInfoDedicatedcodebookSubsetRestrnn4TxAntenna_tm5;

typedef TknStrBSXL NhuAntennaInfoDedicatedcodebookSubsetRestrnn2TxAntenna_tm6;

typedef TknStrBSXL NhuAntennaInfoDedicatedcodebookSubsetRestrnn4TxAntenna_tm6;
typedef struct NhuAntennaInfoDedicatedcodebookSubsetRestrn
{
 TknU8 choice;
 union {
  NhuAntennaInfoDedicatedcodebookSubsetRestrnn2TxAntenna_tm3 n2TxAntenna_tm3;
  NhuAntennaInfoDedicatedcodebookSubsetRestrnn4TxAntenna_tm3 n4TxAntenna_tm3;
  NhuAntennaInfoDedicatedcodebookSubsetRestrnn2TxAntenna_tm4 n2TxAntenna_tm4;
  NhuAntennaInfoDedicatedcodebookSubsetRestrnn4TxAntenna_tm4 n4TxAntenna_tm4;
  NhuAntennaInfoDedicatedcodebookSubsetRestrnn2TxAntenna_tm5 n2TxAntenna_tm5;
  NhuAntennaInfoDedicatedcodebookSubsetRestrnn4TxAntenna_tm5 n4TxAntenna_tm5;
  NhuAntennaInfoDedicatedcodebookSubsetRestrnn2TxAntenna_tm6 n2TxAntenna_tm6;
  NhuAntennaInfoDedicatedcodebookSubsetRestrnn4TxAntenna_tm6 n4TxAntenna_tm6;
 } val;
} NhuAntennaInfoDedicatedcodebookSubsetRestrn;


typedef enum enumNhuAntennaInfoDedicatedue_TransmitAntennaSelectionsetup
{
 NhuAntennaInfoDedicatedue_TransmitAntennaSelectionsetupclosedLoopEnum,
 NhuAntennaInfoDedicatedue_TransmitAntennaSelectionsetupopenLoopEnum
} EnumNhuAntennaInfoDedicatedue_TransmitAntennaSelectionsetup;
typedef TknU32 NhuAntennaInfoDedicatedue_TransmitAntennaSelectionsetup;

typedef struct NhuAntennaInfoDedicatedue_TransmitAntennaSelection
{
 TknU8 choice;
 union {
  NhuAntennaInfoDedicatedue_TransmitAntennaSelectionsetup setup;
 } val;
} NhuAntennaInfoDedicatedue_TransmitAntennaSelection;

typedef struct NhuAntennaInfoDedicated
{
 TknPres pres;
 NhuAntennaInfoDedicatedtransmissionMode transmissionMode;
 NhuAntennaInfoDedicatedcodebookSubsetRestrn codebookSubsetRestrn;
 NhuAntennaInfoDedicatedue_TransmitAntennaSelection ue_TransmitAntennaSelection;
} NhuAntennaInfoDedicated;


typedef TknU32 NhuSchedulingRqstConfigsetupsr_PUCCH_ResourceIdx;


typedef TknU32 NhuSchedulingRqstConfigsetupsr_ConfigIdx;


typedef enum enumNhuSchedulingRqstConfigsetupdsr_TransMax
{
 NhuSchedulingRqstConfigsetupdsr_TransMaxn4Enum,
 NhuSchedulingRqstConfigsetupdsr_TransMaxn8Enum,
 NhuSchedulingRqstConfigsetupdsr_TransMaxn16Enum,
 NhuSchedulingRqstConfigsetupdsr_TransMaxn32Enum,
 NhuSchedulingRqstConfigsetupdsr_TransMaxn64Enum,
 NhuSchedulingRqstConfigsetupdsr_TransMaxspare3Enum,
 NhuSchedulingRqstConfigsetupdsr_TransMaxspare2Enum,
 NhuSchedulingRqstConfigsetupdsr_TransMaxspare1Enum
} EnumNhuSchedulingRqstConfigsetupdsr_TransMax;
typedef TknU32 NhuSchedulingRqstConfigsetupdsr_TransMax;

typedef struct NhuSchedulingRqstConfigsetup
{
 TknPres pres;
 NhuSchedulingRqstConfigsetupsr_PUCCH_ResourceIdx sr_PUCCH_ResourceIdx;
 NhuSchedulingRqstConfigsetupsr_ConfigIdx sr_ConfigIdx;
 NhuSchedulingRqstConfigsetupdsr_TransMax dsr_TransMax;
} NhuSchedulingRqstConfigsetup;

typedef struct NhuSchedulingRqstConfig
{
 TknU8 choice;
 union {
  NhuSchedulingRqstConfigsetup setup;
 } val;
} NhuSchedulingRqstConfig;


typedef enum enumNhuCQI_ReportConfig_v920cqi_Mask_r9
{
 NhuCQI_ReportConfig_v920cqi_Mask_r9setupEnum
} EnumNhuCQI_ReportConfig_v920cqi_Mask_r9;
typedef TknU32 NhuCQI_ReportConfig_v920cqi_Mask_r9;


typedef enum enumNhuCQI_ReportConfig_v920pmi_RI_Report_r9
{
 NhuCQI_ReportConfig_v920pmi_RI_Report_r9setupEnum
} EnumNhuCQI_ReportConfig_v920pmi_RI_Report_r9;
typedef TknU32 NhuCQI_ReportConfig_v920pmi_RI_Report_r9;

typedef struct NhuCQI_ReportConfig_v920
{
 TknPres pres;
 NhuCQI_ReportConfig_v920cqi_Mask_r9 cqi_Mask_r9;
 NhuCQI_ReportConfig_v920pmi_RI_Report_r9 pmi_RI_Report_r9;
} NhuCQI_ReportConfig_v920;


typedef TknStrBSXL NhuAntennaInfoDedicated_v920codebookSubsetRestrn_v920n2TxAntenna_tm8_r9;

typedef TknStrBSXL NhuAntennaInfoDedicated_v920codebookSubsetRestrn_v920n4TxAntenna_tm8_r9;
typedef struct NhuAntennaInfoDedicated_v920codebookSubsetRestrn_v920
{
 TknU8 choice;
 union {
  NhuAntennaInfoDedicated_v920codebookSubsetRestrn_v920n2TxAntenna_tm8_r9 n2TxAntenna_tm8_r9;
  NhuAntennaInfoDedicated_v920codebookSubsetRestrn_v920n4TxAntenna_tm8_r9 n4TxAntenna_tm8_r9;
 } val;
} NhuAntennaInfoDedicated_v920codebookSubsetRestrn_v920;

typedef struct NhuAntennaInfoDedicated_v920
{
 TknPres pres;
 NhuAntennaInfoDedicated_v920codebookSubsetRestrn_v920 codebookSubsetRestrn_v920;
} NhuAntennaInfoDedicated_v920;

typedef struct NhuPhysicalConfigDedicatedantennaInfo
{
 TknU8 choice;
 union {
  NhuAntennaInfoDedicated explicitValue;
 } val;
} NhuPhysicalConfigDedicatedantennaInfo;

typedef struct NhuPhysicalConfigDedicatedextaddgrp_r9
{
 TknPres pres;
 NhuCQI_ReportConfig_v920 cqi_ReportConfig_v920;
 NhuAntennaInfoDedicated_v920 antennaInfo_v920;
} NhuPhysicalConfigDedicatedextaddgrp_r9;

typedef struct NhuPhysicalConfigDedicated
{
 TknPres pres;
 NhuPDSCH_ConfigDedicated pdsch_ConfigDedicated;
 NhuPUCCH_ConfigDedicated pucch_ConfigDedicated;
 NhuPUSCH_ConfigDedicated pusch_ConfigDedicated;
 NhuUlnkPowerCntrlDedicated uplinkPowerCntrlDedicated;
 NhuTPC_PDCCH_Config tpc_PDCCH_ConfigPUCCH;
 NhuTPC_PDCCH_Config tpc_PDCCH_ConfigPUSCH;
 NhuCQI_ReportConfig cqi_ReportConfig;
 NhuSoundingRS_UL_ConfigDedicated soundingRS_UL_ConfigDedicated;
 NhuPhysicalConfigDedicatedantennaInfo antennaInfo;
 NhuSchedulingRqstConfig schedulingRqstConfig;
 NhuPhysicalConfigDedicatedextaddgrp_r9 extaddgrp_r9;
} NhuPhysicalConfigDedicated;


typedef enum enumNhuRLF_TmrsAndConsts_r9setupt301_r9
{
 NhuRLF_TmrsAndConsts_r9setupt301_r9ms100Enum,
 NhuRLF_TmrsAndConsts_r9setupt301_r9ms200Enum,
 NhuRLF_TmrsAndConsts_r9setupt301_r9ms300Enum,
 NhuRLF_TmrsAndConsts_r9setupt301_r9ms400Enum,
 NhuRLF_TmrsAndConsts_r9setupt301_r9ms600Enum,
 NhuRLF_TmrsAndConsts_r9setupt301_r9ms1000Enum,
 NhuRLF_TmrsAndConsts_r9setupt301_r9ms1500Enum,
 NhuRLF_TmrsAndConsts_r9setupt301_r9ms2000Enum
} EnumNhuRLF_TmrsAndConsts_r9setupt301_r9;
typedef TknU32 NhuRLF_TmrsAndConsts_r9setupt301_r9;


typedef enum enumNhuRLF_TmrsAndConsts_r9setupt310_r9
{
 NhuRLF_TmrsAndConsts_r9setupt310_r9ms0Enum,
 NhuRLF_TmrsAndConsts_r9setupt310_r9ms50Enum,
 NhuRLF_TmrsAndConsts_r9setupt310_r9ms100Enum,
 NhuRLF_TmrsAndConsts_r9setupt310_r9ms200Enum,
 NhuRLF_TmrsAndConsts_r9setupt310_r9ms500Enum,
 NhuRLF_TmrsAndConsts_r9setupt310_r9ms1000Enum,
 NhuRLF_TmrsAndConsts_r9setupt310_r9ms2000Enum
} EnumNhuRLF_TmrsAndConsts_r9setupt310_r9;
typedef TknU32 NhuRLF_TmrsAndConsts_r9setupt310_r9;


typedef enum enumNhuRLF_TmrsAndConsts_r9setupn310_r9
{
 NhuRLF_TmrsAndConsts_r9setupn310_r9n1Enum,
 NhuRLF_TmrsAndConsts_r9setupn310_r9n2Enum,
 NhuRLF_TmrsAndConsts_r9setupn310_r9n3Enum,
 NhuRLF_TmrsAndConsts_r9setupn310_r9n4Enum,
 NhuRLF_TmrsAndConsts_r9setupn310_r9n6Enum,
 NhuRLF_TmrsAndConsts_r9setupn310_r9n8Enum,
 NhuRLF_TmrsAndConsts_r9setupn310_r9n10Enum,
 NhuRLF_TmrsAndConsts_r9setupn310_r9n20Enum
} EnumNhuRLF_TmrsAndConsts_r9setupn310_r9;
typedef TknU32 NhuRLF_TmrsAndConsts_r9setupn310_r9;


typedef enum enumNhuRLF_TmrsAndConsts_r9setupt311_r9
{
 NhuRLF_TmrsAndConsts_r9setupt311_r9ms1000Enum,
 NhuRLF_TmrsAndConsts_r9setupt311_r9ms3000Enum,
 NhuRLF_TmrsAndConsts_r9setupt311_r9ms5000Enum,
 NhuRLF_TmrsAndConsts_r9setupt311_r9ms10000Enum,
 NhuRLF_TmrsAndConsts_r9setupt311_r9ms15000Enum,
 NhuRLF_TmrsAndConsts_r9setupt311_r9ms20000Enum,
 NhuRLF_TmrsAndConsts_r9setupt311_r9ms30000Enum
} EnumNhuRLF_TmrsAndConsts_r9setupt311_r9;
typedef TknU32 NhuRLF_TmrsAndConsts_r9setupt311_r9;


typedef enum enumNhuRLF_TmrsAndConsts_r9setupn311_r9
{
 NhuRLF_TmrsAndConsts_r9setupn311_r9n1Enum,
 NhuRLF_TmrsAndConsts_r9setupn311_r9n2Enum,
 NhuRLF_TmrsAndConsts_r9setupn311_r9n3Enum,
 NhuRLF_TmrsAndConsts_r9setupn311_r9n4Enum,
 NhuRLF_TmrsAndConsts_r9setupn311_r9n5Enum,
 NhuRLF_TmrsAndConsts_r9setupn311_r9n6Enum,
 NhuRLF_TmrsAndConsts_r9setupn311_r9n8Enum,
 NhuRLF_TmrsAndConsts_r9setupn311_r9n10Enum
} EnumNhuRLF_TmrsAndConsts_r9setupn311_r9;
typedef TknU32 NhuRLF_TmrsAndConsts_r9setupn311_r9;

typedef struct NhuRLF_TmrsAndConsts_r9setup
{
 TknPres pres;
 NhuRLF_TmrsAndConsts_r9setupt301_r9 t301_r9;
 NhuRLF_TmrsAndConsts_r9setupt310_r9 t310_r9;
 NhuRLF_TmrsAndConsts_r9setupn310_r9 n310_r9;
 NhuRLF_TmrsAndConsts_r9setupt311_r9 t311_r9;
 NhuRLF_TmrsAndConsts_r9setupn311_r9 n311_r9;
} NhuRLF_TmrsAndConsts_r9setup;

typedef struct NhuRLF_TmrsAndConsts_r9
{
 TknU8 choice;
 union {
  NhuRLF_TmrsAndConsts_r9setup setup;
 } val;
} NhuRLF_TmrsAndConsts_r9;

typedef struct NhuRadioResourceConfigDedicatedmac_MainConfig
{
 TknU8 choice;
 union {
  NhuMAC_MainConfig explicitValue;
 } val;
} NhuRadioResourceConfigDedicatedmac_MainConfig;

typedef struct NhuRadioResourceConfigDedicatedextaddgrp_r9
{
 TknPres pres;
 NhuRLF_TmrsAndConsts_r9 rlf_TmrsAndConsts_r9;
} NhuRadioResourceConfigDedicatedextaddgrp_r9;

typedef struct NhuRadioResourceConfigDedicated
{
 TknPres pres;
 NhuSRB_ToAddModLst srb_ToAddModLst;
 NhuDRB_ToAddModLst drb_ToAddModLst;
 NhuDRB_ToRlsLst drb_ToRlsLst;
 NhuRadioResourceConfigDedicatedmac_MainConfig mac_MainConfig;
 NhuSPS_Config sps_Config;
 NhuPhysicalConfigDedicated physicalConfigDedicated;
 NhuRadioResourceConfigDedicatedextaddgrp_r9 extaddgrp_r9;
} NhuRadioResourceConfigDedicated;


typedef TknU32 NhuNextHopChainingCount;


typedef TknStrOSXL NhuRRCConReestb_v8a0_IEslateNonCriticalExtn;
typedef struct NhuRRCConReestb_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuRRCConReestb_v8a0_IEsnonCriticalExtn;

typedef struct NhuRRCConReestb_v8a0_IEs
{
 TknPres pres;
 NhuRRCConReestb_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuRRCConReestb_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuRRCConReestb_v8a0_IEs;

typedef struct NhuRRCConReestb_r8_IEs
{
 TknPres pres;
 NhuRadioResourceConfigDedicated radioResourceConfigDedicated;
 NhuNextHopChainingCount nextHopChainingCount;
 NhuRRCConReestb_v8a0_IEs nonCriticalExtn;
} NhuRRCConReestb_r8_IEs;

typedef struct NhuRRCConReestbcriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuRRCConReestb_r8_IEs rrcConReestb_r8;
 } val;
} NhuRRCConReestbcriticalExtnsc1;

typedef struct NhuRRCConReestbcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuRRCConReestbcriticalExtnscriticalExtnsFuture;

typedef struct NhuRRCConReestbcriticalExtns
{
 TknU8 choice;
 union {
  NhuRRCConReestbcriticalExtnsc1 c1;
  NhuRRCConReestbcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuRRCConReestbcriticalExtns;

typedef struct NhuRRCConReestb
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuRRCConReestbcriticalExtns criticalExtns;
} NhuRRCConReestb;


typedef TknStrOSXL NhuRRCConReestbRej_v8a0_IEslateNonCriticalExtn;
typedef struct NhuRRCConReestbRej_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuRRCConReestbRej_v8a0_IEsnonCriticalExtn;

typedef struct NhuRRCConReestbRej_v8a0_IEs
{
 TknPres pres;
 NhuRRCConReestbRej_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuRRCConReestbRej_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuRRCConReestbRej_v8a0_IEs;

typedef struct NhuRRCConReestbRej_r8_IEs
{
 TknPres pres;
 NhuRRCConReestbRej_v8a0_IEs nonCriticalExtn;
} NhuRRCConReestbRej_r8_IEs;

typedef struct NhuRRCConReestbRejcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuRRCConReestbRejcriticalExtnscriticalExtnsFuture;

typedef struct NhuRRCConReestbRejcriticalExtns
{
 TknU8 choice;
 union {
  NhuRRCConReestbRej_r8_IEs rrcConReestbRej_r8;
  NhuRRCConReestbRejcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuRRCConReestbRejcriticalExtns;

typedef struct NhuRRCConReestbRej
{
 TknPres pres;
 NhuRRCConReestbRejcriticalExtns criticalExtns;
} NhuRRCConReestbRej;


typedef TknStrOSXL NhuRRCConRej_v8a0_IEslateNonCriticalExtn;
typedef struct NhuRRCConRej_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuRRCConRej_v8a0_IEsnonCriticalExtn;

typedef struct NhuRRCConRej_v8a0_IEs
{
 TknPres pres;
 NhuRRCConRej_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuRRCConRej_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuRRCConRej_v8a0_IEs;


typedef TknU32 NhuRRCConRej_r8_IEswaitTime;

typedef struct NhuRRCConRej_r8_IEs
{
 TknPres pres;
 NhuRRCConRej_r8_IEswaitTime waitTime;
 NhuRRCConRej_v8a0_IEs nonCriticalExtn;
} NhuRRCConRej_r8_IEs;

typedef struct NhuRRCConRejcriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuRRCConRej_r8_IEs rrcConRej_r8;
 } val;
} NhuRRCConRejcriticalExtnsc1;

typedef struct NhuRRCConRejcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuRRCConRejcriticalExtnscriticalExtnsFuture;

typedef struct NhuRRCConRejcriticalExtns
{
 TknU8 choice;
 union {
  NhuRRCConRejcriticalExtnsc1 c1;
  NhuRRCConRejcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuRRCConRejcriticalExtns;

typedef struct NhuRRCConRej
{
 TknPres pres;
 NhuRRCConRejcriticalExtns criticalExtns;
} NhuRRCConRej;


typedef TknStrOSXL NhuRRCConSetup_v8a0_IEslateNonCriticalExtn;
typedef struct NhuRRCConSetup_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuRRCConSetup_v8a0_IEsnonCriticalExtn;

typedef struct NhuRRCConSetup_v8a0_IEs
{
 TknPres pres;
 NhuRRCConSetup_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuRRCConSetup_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuRRCConSetup_v8a0_IEs;

typedef struct NhuRRCConSetup_r8_IEs
{
 TknPres pres;
 NhuRadioResourceConfigDedicated radioResourceConfigDedicated;
 NhuRRCConSetup_v8a0_IEs nonCriticalExtn;
} NhuRRCConSetup_r8_IEs;

typedef struct NhuRRCConSetupcriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuRRCConSetup_r8_IEs rrcConSetup_r8;
 } val;
} NhuRRCConSetupcriticalExtnsc1;

typedef struct NhuRRCConSetupcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuRRCConSetupcriticalExtnscriticalExtnsFuture;

typedef struct NhuRRCConSetupcriticalExtns
{
 TknU8 choice;
 union {
  NhuRRCConSetupcriticalExtnsc1 c1;
  NhuRRCConSetupcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuRRCConSetupcriticalExtns;

typedef struct NhuRRCConSetup
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuRRCConSetupcriticalExtns criticalExtns;
} NhuRRCConSetup;

typedef struct NhuDL_CCCH_MsgTypc1
{
 TknU8 choice;
 union {
  NhuRRCConReestb rrcConReestb;
  NhuRRCConReestbRej rrcConReestbRej;
  NhuRRCConRej rrcConRej;
  NhuRRCConSetup rrcConSetup;
 } val;
} NhuDL_CCCH_MsgTypc1;

typedef struct NhuDL_CCCH_MsgTypmessageClassExtn
{
 TknPres pres;
} NhuDL_CCCH_MsgTypmessageClassExtn;

typedef struct NhuDL_CCCH_MsgTyp
{
 TknU8 choice;
 union {
  NhuDL_CCCH_MsgTypc1 c1;
  NhuDL_CCCH_MsgTypmessageClassExtn messageClassExtn;
 } val;
} NhuDL_CCCH_MsgTyp;

typedef struct NhuDL_CCCH_Msg
{
 TknPres pres;
 NhuDL_CCCH_MsgTyp message;
} NhuDL_CCCH_Msg;


typedef TknStrBSXL NhuRAND_CDMA2000;

typedef TknStrOSXL NhuMobilityParamsCDMA2000;

typedef TknStrOSXL NhuCSFBParamsRspCDMA2000_v8a0_IEslateNonCriticalExtn;
typedef struct NhuCSFBParamsRspCDMA2000_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuCSFBParamsRspCDMA2000_v8a0_IEsnonCriticalExtn;

typedef struct NhuCSFBParamsRspCDMA2000_v8a0_IEs
{
 TknPres pres;
 NhuCSFBParamsRspCDMA2000_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuCSFBParamsRspCDMA2000_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuCSFBParamsRspCDMA2000_v8a0_IEs;

typedef struct NhuCSFBParamsRspCDMA2000_r8_IEs
{
 TknPres pres;
 NhuRAND_CDMA2000 rand;
 NhuMobilityParamsCDMA2000 mobilityParams;
 NhuCSFBParamsRspCDMA2000_v8a0_IEs nonCriticalExtn;
} NhuCSFBParamsRspCDMA2000_r8_IEs;

typedef struct NhuCSFBParamsRspCDMA2000criticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuCSFBParamsRspCDMA2000criticalExtnscriticalExtnsFuture;

typedef struct NhuCSFBParamsRspCDMA2000criticalExtns
{
 TknU8 choice;
 union {
  NhuCSFBParamsRspCDMA2000_r8_IEs csfbParamsRspCDMA2000_r8;
  NhuCSFBParamsRspCDMA2000criticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuCSFBParamsRspCDMA2000criticalExtns;

typedef struct NhuCSFBParamsRspCDMA2000
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuCSFBParamsRspCDMA2000criticalExtns criticalExtns;
} NhuCSFBParamsRspCDMA2000;


typedef TknStrOSXL NhuDedicatedInfoNAS;

typedef TknStrOSXL NhuDedicatedInfoCDMA2000;

typedef TknStrOSXL NhuDLInfoTfr_v8a0_IEslateNonCriticalExtn;
typedef struct NhuDLInfoTfr_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuDLInfoTfr_v8a0_IEsnonCriticalExtn;

typedef struct NhuDLInfoTfr_v8a0_IEs
{
 TknPres pres;
 NhuDLInfoTfr_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuDLInfoTfr_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuDLInfoTfr_v8a0_IEs;

typedef struct NhuDLInfoTfr_r8_IEsdedicatedInfoTyp
{
 TknU8 choice;
 union {
  NhuDedicatedInfoNAS dedicatedInfoNAS;
  NhuDedicatedInfoCDMA2000 dedicatedInfoCDMA2000_1XRTT;
  NhuDedicatedInfoCDMA2000 dedicatedInfoCDMA2000_HRPD;
 } val;
} NhuDLInfoTfr_r8_IEsdedicatedInfoTyp;

typedef struct NhuDLInfoTfr_r8_IEs
{
 TknPres pres;
 NhuDLInfoTfr_r8_IEsdedicatedInfoTyp dedicatedInfoTyp;
 NhuDLInfoTfr_v8a0_IEs nonCriticalExtn;
} NhuDLInfoTfr_r8_IEs;

typedef struct NhuDLInfoTfrcriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuDLInfoTfr_r8_IEs dlInfoTfr_r8;
 } val;
} NhuDLInfoTfrcriticalExtnsc1;

typedef struct NhuDLInfoTfrcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuDLInfoTfrcriticalExtnscriticalExtnsFuture;

typedef struct NhuDLInfoTfrcriticalExtns
{
 TknU8 choice;
 union {
  NhuDLInfoTfrcriticalExtnsc1 c1;
  NhuDLInfoTfrcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuDLInfoTfrcriticalExtns;

typedef struct NhuDLInfoTfr
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuDLInfoTfrcriticalExtns criticalExtns;
} NhuDLInfoTfr;


typedef enum enumNhuCDMA2000_Typ
{
 NhuCDMA2000_Typtype1XRTTEnum,
 NhuCDMA2000_TyptypeHRPDEnum
} EnumNhuCDMA2000_Typ;
typedef TknU32 NhuCDMA2000_Typ;


typedef TknU8 NhuHovrFromEUTRAPrepRqst_v920_IEsconcurrPrepCDMA2000_HRPD_r9;

typedef struct NhuHovrFromEUTRAPrepRqst_v920_IEsnonCriticalExtn
{
 TknPres pres;
} NhuHovrFromEUTRAPrepRqst_v920_IEsnonCriticalExtn;

typedef struct NhuHovrFromEUTRAPrepRqst_v920_IEs
{
 TknPres pres;
 NhuHovrFromEUTRAPrepRqst_v920_IEsconcurrPrepCDMA2000_HRPD_r9 concurrPrepCDMA2000_HRPD_r9;
 NhuHovrFromEUTRAPrepRqst_v920_IEsnonCriticalExtn nonCriticalExtn;
} NhuHovrFromEUTRAPrepRqst_v920_IEs;


typedef TknStrOSXL NhuHovrFromEUTRAPrepRqst_v890_IEslateNonCriticalExtn;
typedef struct NhuHovrFromEUTRAPrepRqst_v890_IEs
{
 TknPres pres;
 NhuHovrFromEUTRAPrepRqst_v890_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuHovrFromEUTRAPrepRqst_v920_IEs nonCriticalExtn;
} NhuHovrFromEUTRAPrepRqst_v890_IEs;

typedef struct NhuHovrFromEUTRAPrepRqst_r8_IEs
{
 TknPres pres;
 NhuCDMA2000_Typ cdma2000_Typ;
 NhuRAND_CDMA2000 rand;
 NhuMobilityParamsCDMA2000 mobilityParams;
 NhuHovrFromEUTRAPrepRqst_v890_IEs nonCriticalExtn;
} NhuHovrFromEUTRAPrepRqst_r8_IEs;

typedef struct NhuHovrFromEUTRAPrepRqstcriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuHovrFromEUTRAPrepRqst_r8_IEs handoverFromEUTRAPrepRqst_r8;
 } val;
} NhuHovrFromEUTRAPrepRqstcriticalExtnsc1;

typedef struct NhuHovrFromEUTRAPrepRqstcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuHovrFromEUTRAPrepRqstcriticalExtnscriticalExtnsFuture;

typedef struct NhuHovrFromEUTRAPrepRqstcriticalExtns
{
 TknU8 choice;
 union {
  NhuHovrFromEUTRAPrepRqstcriticalExtnsc1 c1;
  NhuHovrFromEUTRAPrepRqstcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuHovrFromEUTRAPrepRqstcriticalExtns;

typedef struct NhuHovrFromEUTRAPrepRqst
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuHovrFromEUTRAPrepRqstcriticalExtns criticalExtns;
} NhuHovrFromEUTRAPrepRqst;


typedef TknStrOSXL NhuSysInfoLstGERANMember;
typedef struct NhuSysInfoLstGERAN
{
 TknU16 noComp;
 NhuSysInfoLstGERANMember *member;
}NhuSysInfoLstGERAN;

typedef struct NhuSI_OrPSI_GERAN
{
 TknU8 choice;
 union {
  NhuSysInfoLstGERAN si;
  NhuSysInfoLstGERAN psi;
 } val;
} NhuSI_OrPSI_GERAN;


typedef enum enumNhuHovrtargetRAT_Typ
{
 NhuHovrtargetRAT_TyputraEnum,
 NhuHovrtargetRAT_TypgeranEnum,
 NhuHovrtargetRAT_Typcdma2000_1XRTTEnum,
 NhuHovrtargetRAT_Typcdma2000_HRPDEnum,
 NhuHovrtargetRAT_Typspare4Enum,
 NhuHovrtargetRAT_Typspare3Enum,
 NhuHovrtargetRAT_Typspare2Enum,
 NhuHovrtargetRAT_Typspare1Enum
} EnumNhuHovrtargetRAT_Typ;
typedef TknU32 NhuHovrtargetRAT_Typ;


typedef TknStrOSXL NhuHovrtargetRAT_MsgCont;

typedef TknStrOSXL NhuHovrnas_SecParamFromEUTRA;
typedef struct NhuHovr
{
 TknPres pres;
 NhuHovrtargetRAT_Typ targetRAT_Typ;
 NhuHovrtargetRAT_MsgCont targetRAT_MsgCont;
 NhuHovrnas_SecParamFromEUTRA nas_SecParamFromEUTRA;
 NhuSI_OrPSI_GERAN systemInfo;
} NhuHovr;


typedef TknStrBSXL NhuPhysCellIdGERANnetworkColourCode;

typedef TknStrBSXL NhuPhysCellIdGERANbaseStationColourCode;
typedef struct NhuPhysCellIdGERAN
{
 TknPres pres;
 NhuPhysCellIdGERANnetworkColourCode networkColourCode;
 NhuPhysCellIdGERANbaseStationColourCode baseStationColourCode;
} NhuPhysCellIdGERAN;

typedef struct NhuCarrierFreqGERAN
{
 TknPres pres;
 NhuARFCN_ValueGERAN arfcn;
 NhuBandIndicatorGERAN bandIndicator;
} NhuCarrierFreqGERAN;


typedef enum enumNhuCellChangeOrdert304
{
 NhuCellChangeOrdert304ms100Enum,
 NhuCellChangeOrdert304ms200Enum,
 NhuCellChangeOrdert304ms500Enum,
 NhuCellChangeOrdert304ms1000Enum,
 NhuCellChangeOrdert304ms2000Enum,
 NhuCellChangeOrdert304ms4000Enum,
 NhuCellChangeOrdert304ms8000Enum,
 NhuCellChangeOrdert304spare1Enum
} EnumNhuCellChangeOrdert304;
typedef TknU32 NhuCellChangeOrdert304;


typedef TknStrBSXL NhuCellChangeOrdertargetRAT_TypgerannetworkCntrlOrder;
typedef struct NhuCellChangeOrdertargetRAT_Typgeran
{
 TknPres pres;
 NhuPhysCellIdGERAN physCellId;
 NhuCarrierFreqGERAN carrierFreq;
 NhuCellChangeOrdertargetRAT_TypgerannetworkCntrlOrder networkCntrlOrder;
 NhuSI_OrPSI_GERAN systemInfo;
} NhuCellChangeOrdertargetRAT_Typgeran;

typedef struct NhuCellChangeOrdertargetRAT_Typ
{
 TknU8 choice;
 union {
  NhuCellChangeOrdertargetRAT_Typgeran geran;
 } val;
} NhuCellChangeOrdertargetRAT_Typ;

typedef struct NhuCellChangeOrder
{
 TknPres pres;
 NhuCellChangeOrdert304 t304;
 NhuCellChangeOrdertargetRAT_Typ targetRAT_Typ;
} NhuCellChangeOrder;


typedef TknStrOSXL NhuMobilityFromEUTRACmd_v8a0_IEslateNonCriticalExtn;
typedef struct NhuMobilityFromEUTRACmd_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuMobilityFromEUTRACmd_v8a0_IEsnonCriticalExtn;

typedef struct NhuMobilityFromEUTRACmd_v8a0_IEs
{
 TknPres pres;
 NhuMobilityFromEUTRACmd_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuMobilityFromEUTRACmd_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuMobilityFromEUTRACmd_v8a0_IEs;


typedef TknU8 NhuMobilityFromEUTRACmd_r8_IEscs_FallbackIndicator;

typedef struct NhuMobilityFromEUTRACmd_r8_IEspurpose
{
 TknU8 choice;
 union {
  NhuHovr handover;
  NhuCellChangeOrder cellChangeOrder;
 } val;
} NhuMobilityFromEUTRACmd_r8_IEspurpose;

typedef struct NhuMobilityFromEUTRACmd_r8_IEs
{
 TknPres pres;
 NhuMobilityFromEUTRACmd_r8_IEscs_FallbackIndicator cs_FallbackIndicator;
 NhuMobilityFromEUTRACmd_r8_IEspurpose purpose;
 NhuMobilityFromEUTRACmd_v8a0_IEs nonCriticalExtn;
} NhuMobilityFromEUTRACmd_r8_IEs;

typedef struct NhuCarrierFreqCDMA2000
{
 TknPres pres;
 NhuBandclassCDMA2000 bandClass;
 NhuARFCN_ValueCDMA2000 arfcn;
} NhuCarrierFreqCDMA2000;


typedef TknStrOSXL NhuE_CSFB_r9messageContCDMA2000_1XRTT_r9;

typedef enum enumNhuE_CSFB_r9mobilityCDMA2000_HRPD_r9
{
 NhuE_CSFB_r9mobilityCDMA2000_HRPD_r9handoverEnum,
 NhuE_CSFB_r9mobilityCDMA2000_HRPD_r9redirectionEnum
} EnumNhuE_CSFB_r9mobilityCDMA2000_HRPD_r9;
typedef TknU32 NhuE_CSFB_r9mobilityCDMA2000_HRPD_r9;


typedef TknStrOSXL NhuE_CSFB_r9messageContCDMA2000_HRPD_r9;
typedef struct NhuE_CSFB_r9
{
 TknPres pres;
 NhuE_CSFB_r9messageContCDMA2000_1XRTT_r9 messageContCDMA2000_1XRTT_r9;
 NhuE_CSFB_r9mobilityCDMA2000_HRPD_r9 mobilityCDMA2000_HRPD_r9;
 NhuE_CSFB_r9messageContCDMA2000_HRPD_r9 messageContCDMA2000_HRPD_r9;
 NhuCarrierFreqCDMA2000 redirectCarrierCDMA2000_HRPD_r9;
} NhuE_CSFB_r9;


typedef TknStrOSXL NhuMobilityFromEUTRACmd_v930_IEslateNonCriticalExtn;
typedef struct NhuMobilityFromEUTRACmd_v930_IEsnonCriticalExtn
{
 TknPres pres;
} NhuMobilityFromEUTRACmd_v930_IEsnonCriticalExtn;

typedef struct NhuMobilityFromEUTRACmd_v930_IEs
{
 TknPres pres;
 NhuMobilityFromEUTRACmd_v930_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuMobilityFromEUTRACmd_v930_IEsnonCriticalExtn nonCriticalExtn;
} NhuMobilityFromEUTRACmd_v930_IEs;


typedef TknU8 NhuMobilityFromEUTRACmd_r9_IEscs_FallbackIndicator;

typedef struct NhuMobilityFromEUTRACmd_r9_IEspurpose
{
 TknU8 choice;
 union {
  NhuHovr handover;
  NhuCellChangeOrder cellChangeOrder;
  NhuE_CSFB_r9 e_CSFB_r9;
 } val;
} NhuMobilityFromEUTRACmd_r9_IEspurpose;

typedef struct NhuMobilityFromEUTRACmd_r9_IEs
{
 TknPres pres;
 NhuMobilityFromEUTRACmd_r9_IEscs_FallbackIndicator cs_FallbackIndicator;
 NhuMobilityFromEUTRACmd_r9_IEspurpose purpose;
 NhuMobilityFromEUTRACmd_v930_IEs nonCriticalExtn;
} NhuMobilityFromEUTRACmd_r9_IEs;

typedef struct NhuMobilityFromEUTRACmdcriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuMobilityFromEUTRACmd_r8_IEs mobilityFromEUTRACmd_r8;
  NhuMobilityFromEUTRACmd_r9_IEs mobilityFromEUTRACmd_r9;
 } val;
} NhuMobilityFromEUTRACmdcriticalExtnsc1;

typedef struct NhuMobilityFromEUTRACmdcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuMobilityFromEUTRACmdcriticalExtnscriticalExtnsFuture;

typedef struct NhuMobilityFromEUTRACmdcriticalExtns
{
 TknU8 choice;
 union {
  NhuMobilityFromEUTRACmdcriticalExtnsc1 c1;
  NhuMobilityFromEUTRACmdcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuMobilityFromEUTRACmdcriticalExtns;

typedef struct NhuMobilityFromEUTRACmd
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuMobilityFromEUTRACmdcriticalExtns criticalExtns;
} NhuMobilityFromEUTRACmd;


typedef TknU32 NhuMeasObjectId;

typedef struct NhuMeasObjectToRemoveLst
{
 TknU16 noComp;
 NhuMeasObjectId *member;
}NhuMeasObjectToRemoveLst;


typedef TknU32 NhuCellIdx;

typedef struct NhuCellIdxLst
{
 TknU16 noComp;
 NhuCellIdx *member;
}NhuCellIdxLst;


typedef TknU32 NhuCellsToAddModcellIdx;

typedef struct NhuCellsToAddMod
{
 TknPres pres;
 NhuCellsToAddModcellIdx cellIdx;
 NhuPhysCellId physCellId;
 NhuQ_OffsetRange cellIvdualOffset;
} NhuCellsToAddMod;

typedef struct NhuCellsToAddModLst
{
 TknU16 noComp;
 NhuCellsToAddMod *member;
}NhuCellsToAddModLst;


typedef TknU32 NhuBlackCellsToAddModcellIdx;

typedef struct NhuBlackCellsToAddMod
{
 TknPres pres;
 NhuBlackCellsToAddModcellIdx cellIdx;
 NhuPhysCellIdRange physCellIdRange;
} NhuBlackCellsToAddMod;

typedef struct NhuBlackCellsToAddModLst
{
 TknU16 noComp;
 NhuBlackCellsToAddMod *member;
}NhuBlackCellsToAddModLst;

typedef struct NhuMeasObjectEUTRA
{
 TknPres pres;
 NhuARFCN_ValueEUTRA carrierFreq;
 NhuAllowedMeasBandwidth allowedMeasBandwidth;
 NhuPresenceAntennaPort1 presenceAntennaPort1;
 NhuNeighCellConfig neighCellConfig;
 NhuQ_OffsetRange offsetFreq;
 NhuCellIdxLst cellsToRemoveLst;
 NhuCellsToAddModLst cellsToAddModLst;
 NhuCellIdxLst blackCellsToRemoveLst;
 NhuBlackCellsToAddModLst blackCellsToAddModLst;
 NhuPhysCellId cellForWhichToReportCGI;
} NhuMeasObjectEUTRA;


typedef TknS32 NhuQ_OffsetRangeInterRAT;


typedef TknU32 NhuPhysCellIdUTRA_FDD;


typedef TknU32 NhuCellsToAddModUTRA_FDDcellIdx;

typedef struct NhuCellsToAddModUTRA_FDD
{
 TknPres pres;
 NhuCellsToAddModUTRA_FDDcellIdx cellIdx;
 NhuPhysCellIdUTRA_FDD physCellId;
} NhuCellsToAddModUTRA_FDD;

typedef struct NhuCellsToAddModLstUTRA_FDD
{
 TknU16 noComp;
 NhuCellsToAddModUTRA_FDD *member;
}NhuCellsToAddModLstUTRA_FDD;


typedef TknU32 NhuPhysCellIdUTRA_TDD;


typedef TknU32 NhuCellsToAddModUTRA_TDDcellIdx;

typedef struct NhuCellsToAddModUTRA_TDD
{
 TknPres pres;
 NhuCellsToAddModUTRA_TDDcellIdx cellIdx;
 NhuPhysCellIdUTRA_TDD physCellId;
} NhuCellsToAddModUTRA_TDD;

typedef struct NhuCellsToAddModLstUTRA_TDD
{
 TknU16 noComp;
 NhuCellsToAddModUTRA_TDD *member;
}NhuCellsToAddModLstUTRA_TDD;


typedef TknU32 NhuPhysCellIdRangeUTRA_FDD_r9range_r9;

typedef struct NhuPhysCellIdRangeUTRA_FDD_r9
{
 TknPres pres;
 NhuPhysCellIdUTRA_FDD start_r9;
 NhuPhysCellIdRangeUTRA_FDD_r9range_r9 range_r9;
} NhuPhysCellIdRangeUTRA_FDD_r9;

typedef struct NhuPhysCellIdRangeUTRA_FDDLst_r9
{
 TknU16 noComp;
 NhuPhysCellIdRangeUTRA_FDD_r9 *member;
}NhuPhysCellIdRangeUTRA_FDDLst_r9;

typedef struct NhuCSG_AllowedRprtngCells_r9
{
 TknPres pres;
 NhuPhysCellIdRangeUTRA_FDDLst_r9 physCellIdRangeUTRA_FDDLst_r9;
} NhuCSG_AllowedRprtngCells_r9;

typedef struct NhuMeasObjectUTRAcellsToAddModLst
{
 TknU8 choice;
 union {
  NhuCellsToAddModLstUTRA_FDD cellsToAddModLstUTRA_FDD;
  NhuCellsToAddModLstUTRA_TDD cellsToAddModLstUTRA_TDD;
 } val;
} NhuMeasObjectUTRAcellsToAddModLst;

typedef struct NhuMeasObjectUTRAcellForWhichToReportCGI
{
 TknU8 choice;
 union {
  NhuPhysCellIdUTRA_FDD utra_FDD;
  NhuPhysCellIdUTRA_TDD utra_TDD;
 } val;
} NhuMeasObjectUTRAcellForWhichToReportCGI;

typedef struct NhuMeasObjectUTRAextaddgrp_r9
{
 TknPres pres;
 NhuCSG_AllowedRprtngCells_r9 csg_allowedRprtngCells_v930;
} NhuMeasObjectUTRAextaddgrp_r9;

typedef struct NhuMeasObjectUTRA
{
 TknPres pres;
 NhuARFCN_ValueUTRA carrierFreq;
 NhuQ_OffsetRangeInterRAT offsetFreq;
 NhuCellIdxLst cellsToRemoveLst;
 NhuMeasObjectUTRAcellsToAddModLst cellsToAddModLst;
 NhuMeasObjectUTRAcellForWhichToReportCGI cellForWhichToReportCGI;
 NhuMeasObjectUTRAextaddgrp_r9 extaddgrp_r9;
} NhuMeasObjectUTRA;


typedef TknStrBSXL NhuMeasObjectGERANncc_Permitted;
typedef struct NhuMeasObjectGERAN
{
 TknPres pres;
 NhuCarrierFreqsGERAN carrierFreqs;
 NhuQ_OffsetRangeInterRAT offsetFreq;
 NhuMeasObjectGERANncc_Permitted ncc_Permitted;
 NhuPhysCellIdGERAN cellForWhichToReportCGI;
} NhuMeasObjectGERAN;


typedef TknU32 NhuCellsToAddModCDMA2000cellIdx;

typedef struct NhuCellsToAddModCDMA2000
{
 TknPres pres;
 NhuCellsToAddModCDMA2000cellIdx cellIdx;
 NhuPhysCellIdCDMA2000 physCellId;
} NhuCellsToAddModCDMA2000;

typedef struct NhuCellsToAddModLstCDMA2000
{
 TknU16 noComp;
 NhuCellsToAddModCDMA2000 *member;
}NhuCellsToAddModLstCDMA2000;


typedef TknU32 NhuMeasObjectCDMA2000searchWindowSize;

typedef struct NhuMeasObjectCDMA2000
{
 TknPres pres;
 NhuCDMA2000_Typ cdma2000_Typ;
 NhuCarrierFreqCDMA2000 carrierFreq;
 NhuMeasObjectCDMA2000searchWindowSize searchWindowSize;
 NhuQ_OffsetRangeInterRAT offsetFreq;
 NhuCellIdxLst cellsToRemoveLst;
 NhuCellsToAddModLstCDMA2000 cellsToAddModLst;
 NhuPhysCellIdCDMA2000 cellForWhichToReportCGI;
} NhuMeasObjectCDMA2000;

typedef struct NhuMeasObjectToAddModmeasObject
{
 TknU8 choice;
 union {
  NhuMeasObjectEUTRA measObjectEUTRA;
  NhuMeasObjectUTRA measObjectUTRA;
  NhuMeasObjectGERAN measObjectGERAN;
  NhuMeasObjectCDMA2000 measObjectCDMA2000;
 } val;
} NhuMeasObjectToAddModmeasObject;

typedef struct NhuMeasObjectToAddMod
{
 TknPres pres;
 NhuMeasObjectId measObjectId;
 NhuMeasObjectToAddModmeasObject measObject;
} NhuMeasObjectToAddMod;

typedef struct NhuMeasObjectToAddModLst
{
 TknU16 noComp;
 NhuMeasObjectToAddMod *member;
}NhuMeasObjectToAddModLst;


typedef TknU32 NhuReportConfigId;

typedef struct NhuReportConfigToRemoveLst
{
 TknU16 noComp;
 NhuReportConfigId *member;
}NhuReportConfigToRemoveLst;


typedef TknU32 NhuRSRP_Range;


typedef TknU32 NhuRSRQ_Range;

typedef struct NhuThresholdEUTRA
{
 TknU8 choice;
 union {
  NhuRSRP_Range threshold_RSRP;
  NhuRSRQ_Range threshold_RSRQ;
 } val;
} NhuThresholdEUTRA;


typedef TknU32 NhuHysteresis;


typedef enum enumNhuTimeToTrigger
{
 NhuTimeToTriggerms0Enum,
 NhuTimeToTriggerms40Enum,
 NhuTimeToTriggerms64Enum,
 NhuTimeToTriggerms80Enum,
 NhuTimeToTriggerms100Enum,
 NhuTimeToTriggerms128Enum,
 NhuTimeToTriggerms160Enum,
 NhuTimeToTriggerms256Enum,
 NhuTimeToTriggerms320Enum,
 NhuTimeToTriggerms480Enum,
 NhuTimeToTriggerms512Enum,
 NhuTimeToTriggerms640Enum,
 NhuTimeToTriggerms1024Enum,
 NhuTimeToTriggerms1280Enum,
 NhuTimeToTriggerms2560Enum,
 NhuTimeToTriggerms5120Enum
} EnumNhuTimeToTrigger;
typedef TknU32 NhuTimeToTrigger;


typedef enum enumNhuReportInterval
{
 NhuReportIntervalms120Enum,
 NhuReportIntervalms240Enum,
 NhuReportIntervalms480Enum,
 NhuReportIntervalms640Enum,
 NhuReportIntervalms1024Enum,
 NhuReportIntervalms2048Enum,
 NhuReportIntervalms5120Enum,
 NhuReportIntervalms10240Enum,
 NhuReportIntervalmin1Enum,
 NhuReportIntervalmin6Enum,
 NhuReportIntervalmin12Enum,
 NhuReportIntervalmin30Enum,
 NhuReportIntervalmin60Enum,
 NhuReportIntervalspare3Enum,
 NhuReportIntervalspare2Enum,
 NhuReportIntervalspare1Enum
} EnumNhuReportInterval;
typedef TknU32 NhuReportInterval;

typedef struct NhuReportConfigEUTRAtriggerTypeventeventIdeventA1
{
 TknPres pres;
 NhuThresholdEUTRA a1_Threshold;
} NhuReportConfigEUTRAtriggerTypeventeventIdeventA1;

typedef struct NhuReportConfigEUTRAtriggerTypeventeventIdeventA2
{
 TknPres pres;
 NhuThresholdEUTRA a2_Threshold;
} NhuReportConfigEUTRAtriggerTypeventeventIdeventA2;


typedef TknS32 NhuReportConfigEUTRAtriggerTypeventeventIdeventA3a3_Offset;


typedef TknU8 NhuReportConfigEUTRAtriggerTypeventeventIdeventA3reportOnLeave;

typedef struct NhuReportConfigEUTRAtriggerTypeventeventIdeventA3
{
 TknPres pres;
 NhuReportConfigEUTRAtriggerTypeventeventIdeventA3a3_Offset a3_Offset;
 NhuReportConfigEUTRAtriggerTypeventeventIdeventA3reportOnLeave reportOnLeave;
} NhuReportConfigEUTRAtriggerTypeventeventIdeventA3;

typedef struct NhuReportConfigEUTRAtriggerTypeventeventIdeventA4
{
 TknPres pres;
 NhuThresholdEUTRA a4_Threshold;
} NhuReportConfigEUTRAtriggerTypeventeventIdeventA4;

typedef struct NhuReportConfigEUTRAtriggerTypeventeventIdeventA5
{
 TknPres pres;
 NhuThresholdEUTRA a5_Threshold1;
 NhuThresholdEUTRA a5_Threshold2;
} NhuReportConfigEUTRAtriggerTypeventeventIdeventA5;

typedef struct NhuReportConfigEUTRAtriggerTypeventeventId
{
 TknU8 choice;
 union {
  NhuReportConfigEUTRAtriggerTypeventeventIdeventA1 eventA1;
  NhuReportConfigEUTRAtriggerTypeventeventIdeventA2 eventA2;
  NhuReportConfigEUTRAtriggerTypeventeventIdeventA3 eventA3;
  NhuReportConfigEUTRAtriggerTypeventeventIdeventA4 eventA4;
  NhuReportConfigEUTRAtriggerTypeventeventIdeventA5 eventA5;
 } val;
} NhuReportConfigEUTRAtriggerTypeventeventId;

typedef struct NhuReportConfigEUTRAtriggerTypevent
{
 TknPres pres;
 NhuReportConfigEUTRAtriggerTypeventeventId eventId;
 NhuHysteresis hysteresis;
 NhuTimeToTrigger timeToTrigger;
} NhuReportConfigEUTRAtriggerTypevent;


typedef enum enumNhuReportConfigEUTRAtriggerTypperiodicalpurpose
{
 NhuReportConfigEUTRAtriggerTypperiodicalpurposereportStrongestCellsEnum,
 NhuReportConfigEUTRAtriggerTypperiodicalpurposereportCGIEnum
} EnumNhuReportConfigEUTRAtriggerTypperiodicalpurpose;
typedef TknU32 NhuReportConfigEUTRAtriggerTypperiodicalpurpose;

typedef struct NhuReportConfigEUTRAtriggerTypperiodical
{
 TknPres pres;
 NhuReportConfigEUTRAtriggerTypperiodicalpurpose purpose;
} NhuReportConfigEUTRAtriggerTypperiodical;

typedef struct NhuReportConfigEUTRAtriggerTyp
{
 TknU8 choice;
 union {
  NhuReportConfigEUTRAtriggerTypevent event;
  NhuReportConfigEUTRAtriggerTypperiodical periodical;
 } val;
} NhuReportConfigEUTRAtriggerTyp;


typedef enum enumNhuReportConfigEUTRAtriggerQuantity
{
 NhuReportConfigEUTRAtriggerQuantityrsrpEnum,
 NhuReportConfigEUTRAtriggerQuantityrsrqEnum
} EnumNhuReportConfigEUTRAtriggerQuantity;
typedef TknU32 NhuReportConfigEUTRAtriggerQuantity;


typedef enum enumNhuReportConfigEUTRAreportQuantity
{
 NhuReportConfigEUTRAreportQuantitysameAsTriggerQuantityEnum,
 NhuReportConfigEUTRAreportQuantitybothEnum
} EnumNhuReportConfigEUTRAreportQuantity;
typedef TknU32 NhuReportConfigEUTRAreportQuantity;


typedef TknU32 NhuReportConfigEUTRAmaxReportCells;


typedef enum enumNhuReportConfigEUTRAreportAmount
{
 NhuReportConfigEUTRAreportAmountr1Enum,
 NhuReportConfigEUTRAreportAmountr2Enum,
 NhuReportConfigEUTRAreportAmountr4Enum,
 NhuReportConfigEUTRAreportAmountr8Enum,
 NhuReportConfigEUTRAreportAmountr16Enum,
 NhuReportConfigEUTRAreportAmountr32Enum,
 NhuReportConfigEUTRAreportAmountr64Enum,
 NhuReportConfigEUTRAreportAmountinfinityEnum
} EnumNhuReportConfigEUTRAreportAmount;
typedef TknU32 NhuReportConfigEUTRAreportAmount;


typedef enum enumNhuReportConfigEUTRAextaddgrp_r9si_RqstForHO_r9
{
 NhuReportConfigEUTRAextaddgrp_r9si_RqstForHO_r9setupEnum
} EnumNhuReportConfigEUTRAextaddgrp_r9si_RqstForHO_r9;
typedef TknU32 NhuReportConfigEUTRAextaddgrp_r9si_RqstForHO_r9;


typedef enum enumNhuReportConfigEUTRAextaddgrp_r9ue_RxTxTimeDiffPeriodical_r9
{
 NhuReportConfigEUTRAextaddgrp_r9ue_RxTxTimeDiffPeriodical_r9setupEnum
} EnumNhuReportConfigEUTRAextaddgrp_r9ue_RxTxTimeDiffPeriodical_r9;
typedef TknU32 NhuReportConfigEUTRAextaddgrp_r9ue_RxTxTimeDiffPeriodical_r9;

typedef struct NhuReportConfigEUTRAextaddgrp_r9
{
 TknPres pres;
 NhuReportConfigEUTRAextaddgrp_r9si_RqstForHO_r9 si_RqstForHO_r9;
 NhuReportConfigEUTRAextaddgrp_r9ue_RxTxTimeDiffPeriodical_r9 ue_RxTxTimeDiffPeriodical_r9;
} NhuReportConfigEUTRAextaddgrp_r9;

typedef struct NhuReportConfigEUTRA
{
 TknPres pres;
 NhuReportConfigEUTRAtriggerTyp triggerTyp;
 NhuReportConfigEUTRAtriggerQuantity triggerQuantity;
 NhuReportConfigEUTRAreportQuantity reportQuantity;
 NhuReportConfigEUTRAmaxReportCells maxReportCells;
 NhuReportInterval reportInterval;
 NhuReportConfigEUTRAreportAmount reportAmount;
 NhuReportConfigEUTRAextaddgrp_r9 extaddgrp_r9;
} NhuReportConfigEUTRA;


typedef TknS32 NhuThresholdUTRAutra_RSCP;


typedef TknU32 NhuThresholdUTRAutra_EcN0;

typedef struct NhuThresholdUTRA
{
 TknU8 choice;
 union {
  NhuThresholdUTRAutra_RSCP utra_RSCP;
  NhuThresholdUTRAutra_EcN0 utra_EcN0;
 } val;
} NhuThresholdUTRA;


typedef TknU32 NhuThresholdGERAN;


typedef TknU32 NhuThresholdCDMA2000;

typedef struct NhuReportConfigInterRATtriggerTypeventeventIdeventB1b1_Threshold
{
 TknU8 choice;
 union {
  NhuThresholdUTRA b1_ThresholdUTRA;
  NhuThresholdGERAN b1_ThresholdGERAN;
  NhuThresholdCDMA2000 b1_ThresholdCDMA2000;
 } val;
} NhuReportConfigInterRATtriggerTypeventeventIdeventB1b1_Threshold;

typedef struct NhuReportConfigInterRATtriggerTypeventeventIdeventB1
{
 TknPres pres;
 NhuReportConfigInterRATtriggerTypeventeventIdeventB1b1_Threshold b1_Threshold;
} NhuReportConfigInterRATtriggerTypeventeventIdeventB1;

typedef struct NhuReportConfigInterRATtriggerTypeventeventIdeventB2b2_Threshold2
{
 TknU8 choice;
 union {
  NhuThresholdUTRA b2_Threshold2UTRA;
  NhuThresholdGERAN b2_Threshold2GERAN;
  NhuThresholdCDMA2000 b2_Threshold2CDMA2000;
 } val;
} NhuReportConfigInterRATtriggerTypeventeventIdeventB2b2_Threshold2;

typedef struct NhuReportConfigInterRATtriggerTypeventeventIdeventB2
{
 TknPres pres;
 NhuThresholdEUTRA b2_Threshold1;
 NhuReportConfigInterRATtriggerTypeventeventIdeventB2b2_Threshold2 b2_Threshold2;
} NhuReportConfigInterRATtriggerTypeventeventIdeventB2;

typedef struct NhuReportConfigInterRATtriggerTypeventeventId
{
 TknU8 choice;
 union {
  NhuReportConfigInterRATtriggerTypeventeventIdeventB1 eventB1;
  NhuReportConfigInterRATtriggerTypeventeventIdeventB2 eventB2;
 } val;
} NhuReportConfigInterRATtriggerTypeventeventId;

typedef struct NhuReportConfigInterRATtriggerTypevent
{
 TknPres pres;
 NhuReportConfigInterRATtriggerTypeventeventId eventId;
 NhuHysteresis hysteresis;
 NhuTimeToTrigger timeToTrigger;
} NhuReportConfigInterRATtriggerTypevent;


typedef enum enumNhuReportConfigInterRATtriggerTypperiodicalpurpose
{
 NhuReportConfigInterRATtriggerTypperiodicalpurposereportStrongestCellsEnum,
 NhuReportConfigInterRATtriggerTypperiodicalpurposereportStrongestCellsForSONEnum,
 NhuReportConfigInterRATtriggerTypperiodicalpurposereportCGIEnum
} EnumNhuReportConfigInterRATtriggerTypperiodicalpurpose;
typedef TknU32 NhuReportConfigInterRATtriggerTypperiodicalpurpose;

typedef struct NhuReportConfigInterRATtriggerTypperiodical
{
 TknPres pres;
 NhuReportConfigInterRATtriggerTypperiodicalpurpose purpose;
} NhuReportConfigInterRATtriggerTypperiodical;

typedef struct NhuReportConfigInterRATtriggerTyp
{
 TknU8 choice;
 union {
  NhuReportConfigInterRATtriggerTypevent event;
  NhuReportConfigInterRATtriggerTypperiodical periodical;
 } val;
} NhuReportConfigInterRATtriggerTyp;


typedef TknU32 NhuReportConfigInterRATmaxReportCells;


typedef enum enumNhuReportConfigInterRATreportAmount
{
 NhuReportConfigInterRATreportAmountr1Enum,
 NhuReportConfigInterRATreportAmountr2Enum,
 NhuReportConfigInterRATreportAmountr4Enum,
 NhuReportConfigInterRATreportAmountr8Enum,
 NhuReportConfigInterRATreportAmountr16Enum,
 NhuReportConfigInterRATreportAmountr32Enum,
 NhuReportConfigInterRATreportAmountr64Enum,
 NhuReportConfigInterRATreportAmountinfinityEnum
} EnumNhuReportConfigInterRATreportAmount;
typedef TknU32 NhuReportConfigInterRATreportAmount;


typedef enum enumNhuReportConfigInterRATextaddgrp_r9si_RqstForHO_r9
{
 NhuReportConfigInterRATextaddgrp_r9si_RqstForHO_r9setupEnum
} EnumNhuReportConfigInterRATextaddgrp_r9si_RqstForHO_r9;
typedef TknU32 NhuReportConfigInterRATextaddgrp_r9si_RqstForHO_r9;

typedef struct NhuReportConfigInterRATextaddgrp_r9
{
 TknPres pres;
 NhuReportConfigInterRATextaddgrp_r9si_RqstForHO_r9 si_RqstForHO_r9;
} NhuReportConfigInterRATextaddgrp_r9;

typedef struct NhuReportConfigInterRAT
{
 TknPres pres;
 NhuReportConfigInterRATtriggerTyp triggerTyp;
 NhuReportConfigInterRATmaxReportCells maxReportCells;
 NhuReportInterval reportInterval;
 NhuReportConfigInterRATreportAmount reportAmount;
 NhuReportConfigInterRATextaddgrp_r9 extaddgrp_r9;
} NhuReportConfigInterRAT;

typedef struct NhuReportConfigToAddModreportConfig
{
 TknU8 choice;
 union {
  NhuReportConfigEUTRA reportConfigEUTRA;
  NhuReportConfigInterRAT reportConfigInterRAT;
 } val;
} NhuReportConfigToAddModreportConfig;

typedef struct NhuReportConfigToAddMod
{
 TknPres pres;
 NhuReportConfigId reportConfigId;
 NhuReportConfigToAddModreportConfig reportConfig;
} NhuReportConfigToAddMod;

typedef struct NhuReportConfigToAddModLst
{
 TknU16 noComp;
 NhuReportConfigToAddMod *member;
}NhuReportConfigToAddModLst;


typedef TknU32 NhuMeasId;

typedef struct NhuMeasIdToRemoveLst
{
 TknU16 noComp;
 NhuMeasId *member;
}NhuMeasIdToRemoveLst;

typedef struct NhuMeasIdToAddMod
{
 TknPres pres;
 NhuMeasId measId;
 NhuMeasObjectId measObjectId;
 NhuReportConfigId reportConfigId;
} NhuMeasIdToAddMod;

typedef struct NhuMeasIdToAddModLst
{
 TknU16 noComp;
 NhuMeasIdToAddMod *member;
}NhuMeasIdToAddModLst;

typedef struct NhuQuantityConfigEUTRA
{
 TknPres pres;
 NhuFilterCoefficient filterCoefficientRSRP;
 NhuFilterCoefficient filterCoefficientRSRQ;
} NhuQuantityConfigEUTRA;


typedef enum enumNhuQuantityConfigUTRAmeasQuantityUTRA_FDD
{
 NhuQuantityConfigUTRAmeasQuantityUTRA_FDDcpich_RSCPEnum,
 NhuQuantityConfigUTRAmeasQuantityUTRA_FDDcpich_EcN0Enum
} EnumNhuQuantityConfigUTRAmeasQuantityUTRA_FDD;
typedef TknU32 NhuQuantityConfigUTRAmeasQuantityUTRA_FDD;


typedef enum enumNhuQuantityConfigUTRAmeasQuantityUTRA_TDD
{
 NhuQuantityConfigUTRAmeasQuantityUTRA_TDDpccpch_RSCPEnum
} EnumNhuQuantityConfigUTRAmeasQuantityUTRA_TDD;
typedef TknU32 NhuQuantityConfigUTRAmeasQuantityUTRA_TDD;

typedef struct NhuQuantityConfigUTRA
{
 TknPres pres;
 NhuQuantityConfigUTRAmeasQuantityUTRA_FDD measQuantityUTRA_FDD;
 NhuQuantityConfigUTRAmeasQuantityUTRA_TDD measQuantityUTRA_TDD;
 NhuFilterCoefficient filterCoefficient;
} NhuQuantityConfigUTRA;


typedef enum enumNhuQuantityConfigGERANmeasQuantityGERAN
{
 NhuQuantityConfigGERANmeasQuantityGERANrssiEnum
} EnumNhuQuantityConfigGERANmeasQuantityGERAN;
typedef TknU32 NhuQuantityConfigGERANmeasQuantityGERAN;

typedef struct NhuQuantityConfigGERAN
{
 TknPres pres;
 NhuQuantityConfigGERANmeasQuantityGERAN measQuantityGERAN;
 NhuFilterCoefficient filterCoefficient;
} NhuQuantityConfigGERAN;


typedef enum enumNhuQuantityConfigCDMA2000measQuantityCDMA2000
{
 NhuQuantityConfigCDMA2000measQuantityCDMA2000pilotStrengthEnum,
 NhuQuantityConfigCDMA2000measQuantityCDMA2000pilotPnPhaseAndPilotStrengthEnum
} EnumNhuQuantityConfigCDMA2000measQuantityCDMA2000;
typedef TknU32 NhuQuantityConfigCDMA2000measQuantityCDMA2000;

typedef struct NhuQuantityConfigCDMA2000
{
 TknPres pres;
 NhuQuantityConfigCDMA2000measQuantityCDMA2000 measQuantityCDMA2000;
} NhuQuantityConfigCDMA2000;

typedef struct NhuQuantityConfig
{
 TknPres pres;
 NhuQuantityConfigEUTRA quantityConfigEUTRA;
 NhuQuantityConfigUTRA quantityConfigUTRA;
 NhuQuantityConfigGERAN quantityConfigGERAN;
 NhuQuantityConfigCDMA2000 quantityConfigCDMA2000;
} NhuQuantityConfig;


typedef TknU32 NhuMeasGapConfigsetupgapOffsetgp0;


typedef TknU32 NhuMeasGapConfigsetupgapOffsetgp1;

typedef struct NhuMeasGapConfigsetupgapOffset
{
 TknU8 choice;
 union {
  NhuMeasGapConfigsetupgapOffsetgp0 gp0;
  NhuMeasGapConfigsetupgapOffsetgp1 gp1;
 } val;
} NhuMeasGapConfigsetupgapOffset;

typedef struct NhuMeasGapConfigsetup
{
 TknPres pres;
 NhuMeasGapConfigsetupgapOffset gapOffset;
} NhuMeasGapConfigsetup;

typedef struct NhuMeasGapConfig
{
 TknU8 choice;
 union {
  NhuMeasGapConfigsetup setup;
 } val;
} NhuMeasGapConfig;

typedef struct NhuMeasConfigspeedStateParssetup
{
 TknPres pres;
 NhuMobilityStateParams mobilityStateParams;
 NhuSpeedStateScaleFactors timeToTrigger_SF;
} NhuMeasConfigspeedStateParssetup;

typedef struct NhuMeasConfigspeedStatePars
{
 TknU8 choice;
 union {
  NhuMeasConfigspeedStateParssetup setup;
 } val;
} NhuMeasConfigspeedStatePars;

typedef struct NhuMeasConfig
{
 TknPres pres;
 NhuMeasObjectToRemoveLst measObjectToRemoveLst;
 NhuMeasObjectToAddModLst measObjectToAddModLst;
 NhuReportConfigToRemoveLst reportConfigToRemoveLst;
 NhuReportConfigToAddModLst reportConfigToAddModLst;
 NhuMeasIdToRemoveLst measIdToRemoveLst;
 NhuMeasIdToAddModLst measIdToAddModLst;
 NhuQuantityConfig quantityConfig;
 NhuMeasGapConfig measGapConfig;
 NhuRSRP_Range s_Measure;
 NhuPreRegistrationInfoHRPD preRegistrationInfoHRPD;
 NhuMeasConfigspeedStatePars speedStatePars;
} NhuMeasConfig;

typedef struct NhuCarrierFreqEUTRA
{
 TknPres pres;
 NhuARFCN_ValueEUTRA dl_CarrierFreq;
 NhuARFCN_ValueEUTRA ul_CarrierFreq;
} NhuCarrierFreqEUTRA;


typedef enum enumNhuCarrierBandwidthEUTRAdl_Bandwidth
{
 NhuCarrierBandwidthEUTRAdl_Bandwidthn6Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthn15Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthn25Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthn50Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthn75Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthn100Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthspare10Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthspare9Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthspare8Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthspare7Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthspare6Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthspare5Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthspare4Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthspare3Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthspare2Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthspare1Enum
} EnumNhuCarrierBandwidthEUTRAdl_Bandwidth;
typedef TknU32 NhuCarrierBandwidthEUTRAdl_Bandwidth;


typedef enum enumNhuCarrierBandwidthEUTRAul_Bandwidth
{
 NhuCarrierBandwidthEUTRAul_Bandwidthn6Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthn15Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthn25Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthn50Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthn75Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthn100Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthspare10Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthspare9Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthspare8Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthspare7Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthspare6Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthspare5Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthspare4Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthspare3Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthspare2Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthspare1Enum
} EnumNhuCarrierBandwidthEUTRAul_Bandwidth;
typedef TknU32 NhuCarrierBandwidthEUTRAul_Bandwidth;

typedef struct NhuCarrierBandwidthEUTRA
{
 TknPres pres;
 NhuCarrierBandwidthEUTRAdl_Bandwidth dl_Bandwidth;
 NhuCarrierBandwidthEUTRAul_Bandwidth ul_Bandwidth;
} NhuCarrierBandwidthEUTRA;


typedef TknU32 NhuPRACH_ConfigrootSequenceIdx;

typedef struct NhuPRACH_Config
{
 TknPres pres;
 NhuPRACH_ConfigrootSequenceIdx rootSequenceIdx;
 NhuPRACH_ConfigInfo prach_ConfigInfo;
} NhuPRACH_Config;


typedef enum enumNhuAntennaInfoCmnantennaPortsCount
{
 NhuAntennaInfoCmnantennaPortsCountan1Enum,
 NhuAntennaInfoCmnantennaPortsCountan2Enum,
 NhuAntennaInfoCmnantennaPortsCountan4Enum,
 NhuAntennaInfoCmnantennaPortsCountspare1Enum
} EnumNhuAntennaInfoCmnantennaPortsCount;
typedef TknU32 NhuAntennaInfoCmnantennaPortsCount;

typedef struct NhuAntennaInfoCmn
{
 TknPres pres;
 NhuAntennaInfoCmnantennaPortsCount antennaPortsCount;
} NhuAntennaInfoCmn;

typedef struct NhuRadioResourceConfigCmn
{
 TknPres pres;
 NhuRACH_ConfigCmn rach_ConfigCmn;
 NhuPRACH_Config prach_Config;
 NhuPDSCH_ConfigCmn pdsch_ConfigCmn;
 NhuPUSCH_ConfigCmn pusch_ConfigCmn;
 NhuPHICH_Config phich_Config;
 NhuPUCCH_ConfigCmn pucch_ConfigCmn;
 NhuSoundingRS_UL_ConfigCmn soundingRS_UL_ConfigCmn;
 NhuUlnkPowerCntrlCmn uplinkPowerCntrlCmn;
 NhuAntennaInfoCmn antennaInfoCmn;
 NhuP_Max p_Max;
 NhuTDD_Config tdd_Config;
 NhuUL_CyclicPrefixLength ul_CyclicPrefixLength;
} NhuRadioResourceConfigCmn;


typedef TknU32 NhuRACH_ConfigDedicatedra_PreambleIdx;


typedef TknU32 NhuRACH_ConfigDedicatedra_PRACH_MaskIdx;

typedef struct NhuRACH_ConfigDedicated
{
 TknPres pres;
 NhuRACH_ConfigDedicatedra_PreambleIdx ra_PreambleIdx;
 NhuRACH_ConfigDedicatedra_PRACH_MaskIdx ra_PRACH_MaskIdx;
} NhuRACH_ConfigDedicated;


typedef enum enumNhuMobilityCntrlInfot304
{
 NhuMobilityCntrlInfot304ms50Enum,
 NhuMobilityCntrlInfot304ms100Enum,
 NhuMobilityCntrlInfot304ms150Enum,
 NhuMobilityCntrlInfot304ms200Enum,
 NhuMobilityCntrlInfot304ms500Enum,
 NhuMobilityCntrlInfot304ms1000Enum,
 NhuMobilityCntrlInfot304ms2000Enum,
 NhuMobilityCntrlInfot304spare1Enum
} EnumNhuMobilityCntrlInfot304;
typedef TknU32 NhuMobilityCntrlInfot304;

typedef struct NhuMobilityCntrlInfo
{
 TknPres pres;
 NhuPhysCellId targetPhysCellId;
 NhuCarrierFreqEUTRA carrierFreq;
 NhuCarrierBandwidthEUTRA carrierBandwidth;
 NhuAdditionalSpectrumEmission additionalSpectrumEmission;
 NhuMobilityCntrlInfot304 t304;
 NhuC_RNTI newUE_Identity;
 NhuRadioResourceConfigCmn radioResourceConfigCmn;
 NhuRACH_ConfigDedicated rach_ConfigDedicated;
} NhuMobilityCntrlInfo;


typedef enum enumNhuSecAlgorithmConfigcipheringAlgorithm
{
 NhuSecAlgorithmConfigcipheringAlgorithmeea0Enum,
 NhuSecAlgorithmConfigcipheringAlgorithmeea1Enum,
 NhuSecAlgorithmConfigcipheringAlgorithmeea2Enum,
 NhuSecAlgorithmConfigcipheringAlgorithmspare5Enum,
 NhuSecAlgorithmConfigcipheringAlgorithmspare4Enum,
 NhuSecAlgorithmConfigcipheringAlgorithmspare3Enum,
 NhuSecAlgorithmConfigcipheringAlgorithmspare2Enum,
 NhuSecAlgorithmConfigcipheringAlgorithmspare1Enum
} EnumNhuSecAlgorithmConfigcipheringAlgorithm;
typedef TknU32 NhuSecAlgorithmConfigcipheringAlgorithm;


typedef enum enumNhuSecAlgorithmConfigintegrityProtAlgorithm
{
 NhuSecAlgorithmConfigintegrityProtAlgorithmeia0_v920Enum,
 NhuSecAlgorithmConfigintegrityProtAlgorithmeia1Enum,
 NhuSecAlgorithmConfigintegrityProtAlgorithmeia2Enum,
 NhuSecAlgorithmConfigintegrityProtAlgorithmspare5Enum,
 NhuSecAlgorithmConfigintegrityProtAlgorithmspare4Enum,
 NhuSecAlgorithmConfigintegrityProtAlgorithmspare3Enum,
 NhuSecAlgorithmConfigintegrityProtAlgorithmspare2Enum,
 NhuSecAlgorithmConfigintegrityProtAlgorithmspare1Enum
} EnumNhuSecAlgorithmConfigintegrityProtAlgorithm;
typedef TknU32 NhuSecAlgorithmConfigintegrityProtAlgorithm;

typedef struct NhuSecAlgorithmConfig
{
 TknPres pres;
 NhuSecAlgorithmConfigcipheringAlgorithm cipheringAlgorithm;
 NhuSecAlgorithmConfigintegrityProtAlgorithm integrityProtAlgorithm;
} NhuSecAlgorithmConfig;


typedef TknU8 NhuSecConfigHOhandoverTypintraLTEkeyChangeIndicator;

typedef struct NhuSecConfigHOhandoverTypintraLTE
{
 TknPres pres;
 NhuSecAlgorithmConfig securityAlgorithmConfig;
 NhuSecConfigHOhandoverTypintraLTEkeyChangeIndicator keyChangeIndicator;
 NhuNextHopChainingCount nextHopChainingCount;
} NhuSecConfigHOhandoverTypintraLTE;


typedef TknStrOSXL NhuSecConfigHOhandoverTypinterRATnas_SecParamToEUTRA;
typedef struct NhuSecConfigHOhandoverTypinterRAT
{
 TknPres pres;
 NhuSecAlgorithmConfig securityAlgorithmConfig;
 NhuSecConfigHOhandoverTypinterRATnas_SecParamToEUTRA nas_SecParamToEUTRA;
} NhuSecConfigHOhandoverTypinterRAT;

typedef struct NhuSecConfigHOhandoverTyp
{
 TknU8 choice;
 union {
  NhuSecConfigHOhandoverTypintraLTE intraLTE;
  NhuSecConfigHOhandoverTypinterRAT interRAT;
 } val;
} NhuSecConfigHOhandoverTyp;

typedef struct NhuSecConfigHO
{
 TknPres pres;
 NhuSecConfigHOhandoverTyp handoverTyp;
} NhuSecConfigHO;


typedef enum enumNhuReportProximityConfig_r9proximityIndEUTRA_r9
{
 NhuReportProximityConfig_r9proximityIndEUTRA_r9enabledEnum
} EnumNhuReportProximityConfig_r9proximityIndEUTRA_r9;
typedef TknU32 NhuReportProximityConfig_r9proximityIndEUTRA_r9;


typedef enum enumNhuReportProximityConfig_r9proximityIndUTRA_r9
{
 NhuReportProximityConfig_r9proximityIndUTRA_r9enabledEnum
} EnumNhuReportProximityConfig_r9proximityIndUTRA_r9;
typedef TknU32 NhuReportProximityConfig_r9proximityIndUTRA_r9;

typedef struct NhuReportProximityConfig_r9
{
 TknPres pres;
 NhuReportProximityConfig_r9proximityIndEUTRA_r9 proximityIndEUTRA_r9;
 NhuReportProximityConfig_r9proximityIndUTRA_r9 proximityIndUTRA_r9;
} NhuReportProximityConfig_r9;

typedef struct NhuOtherConfig_r9
{
 TknPres pres;
 NhuReportProximityConfig_r9 reportProximityConfig_r9;
} NhuOtherConfig_r9;


typedef enum enumNhuRRCConRecfgn_v920_IEsfullConfig_r9
{
 NhuRRCConRecfgn_v920_IEsfullConfig_r9trueEnum
} EnumNhuRRCConRecfgn_v920_IEsfullConfig_r9;
typedef TknU32 NhuRRCConRecfgn_v920_IEsfullConfig_r9;

typedef struct NhuRRCConRecfgn_v920_IEsnonCriticalExtn
{
 TknPres pres;
} NhuRRCConRecfgn_v920_IEsnonCriticalExtn;

typedef struct NhuRRCConRecfgn_v920_IEs
{
 TknPres pres;
 NhuOtherConfig_r9 otherConfig_r9;
 NhuRRCConRecfgn_v920_IEsfullConfig_r9 fullConfig_r9;
 NhuRRCConRecfgn_v920_IEsnonCriticalExtn nonCriticalExtn;
} NhuRRCConRecfgn_v920_IEs;


typedef TknStrOSXL NhuRRCConRecfgn_v890_IEslateNonCriticalExtn;
typedef struct NhuRRCConRecfgn_v890_IEs
{
 TknPres pres;
 NhuRRCConRecfgn_v890_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuRRCConRecfgn_v920_IEs nonCriticalExtn;
} NhuRRCConRecfgn_v890_IEs;

typedef struct NhuRRCConRecfgn_r8_IEsdedicatedInfoNASLst
{
 TknU16 noComp;
 NhuDedicatedInfoNAS *member;
}NhuRRCConRecfgn_r8_IEsdedicatedInfoNASLst;

typedef struct NhuRRCConRecfgn_r8_IEs
{
 TknPres pres;
 NhuMeasConfig measConfig;
 NhuMobilityCntrlInfo mobilityCntrlInfo;
 NhuRRCConRecfgn_r8_IEsdedicatedInfoNASLst dedicatedInfoNASLst;
 NhuRadioResourceConfigDedicated radioResourceConfigDedicated;
 NhuSecConfigHO securityConfigHO;
 NhuRRCConRecfgn_v890_IEs nonCriticalExtn;
} NhuRRCConRecfgn_r8_IEs;

typedef struct NhuRRCConRecfgncriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuRRCConRecfgn_r8_IEs rrcConRecfgn_r8;
 } val;
} NhuRRCConRecfgncriticalExtnsc1;

typedef struct NhuRRCConRecfgncriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuRRCConRecfgncriticalExtnscriticalExtnsFuture;

typedef struct NhuRRCConRecfgncriticalExtns
{
 TknU8 choice;
 union {
  NhuRRCConRecfgncriticalExtnsc1 c1;
  NhuRRCConRecfgncriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuRRCConRecfgncriticalExtns;

typedef struct NhuRRCConRecfgn
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuRRCConRecfgncriticalExtns criticalExtns;
} NhuRRCConRecfgn;


typedef enum enumNhuRlsCause
{
 NhuRlsCauseloadBalancingTAUrequiredEnum,
 NhuRlsCauseotherEnum,
 NhuRlsCausespare2Enum,
 NhuRlsCausespare1Enum
} EnumNhuRlsCause;
typedef TknU32 NhuRlsCause;

typedef struct NhuRedirectedCarrierInfo
{
 TknU8 choice;
 union {
  NhuARFCN_ValueEUTRA eutra;
  NhuCarrierFreqsGERAN geran;
  NhuARFCN_ValueUTRA utra_FDD;
  NhuARFCN_ValueUTRA utra_TDD;
  NhuCarrierFreqCDMA2000 cdma2000_HRPD;
  NhuCarrierFreqCDMA2000 cdma2000_1xRTT;
 } val;
} NhuRedirectedCarrierInfo;

typedef struct NhuFreqPriorityEUTRA
{
 TknPres pres;
 NhuARFCN_ValueEUTRA carrierFreq;
 NhuCellReselectionPriority cellReselectionPriority;
} NhuFreqPriorityEUTRA;

typedef struct NhuFreqPriorityLstEUTRA
{
 TknU16 noComp;
 NhuFreqPriorityEUTRA *member;
}NhuFreqPriorityLstEUTRA;

typedef struct NhuFreqsPriorityGERAN
{
 TknPres pres;
 NhuCarrierFreqsGERAN carrierFreqs;
 NhuCellReselectionPriority cellReselectionPriority;
} NhuFreqsPriorityGERAN;

typedef struct NhuFreqsPriorityLstGERAN
{
 TknU16 noComp;
 NhuFreqsPriorityGERAN *member;
}NhuFreqsPriorityLstGERAN;

typedef struct NhuFreqPriorityUTRA_FDD
{
 TknPres pres;
 NhuARFCN_ValueUTRA carrierFreq;
 NhuCellReselectionPriority cellReselectionPriority;
} NhuFreqPriorityUTRA_FDD;

typedef struct NhuFreqPriorityLstUTRA_FDD
{
 TknU16 noComp;
 NhuFreqPriorityUTRA_FDD *member;
}NhuFreqPriorityLstUTRA_FDD;

typedef struct NhuFreqPriorityUTRA_TDD
{
 TknPres pres;
 NhuARFCN_ValueUTRA carrierFreq;
 NhuCellReselectionPriority cellReselectionPriority;
} NhuFreqPriorityUTRA_TDD;

typedef struct NhuFreqPriorityLstUTRA_TDD
{
 TknU16 noComp;
 NhuFreqPriorityUTRA_TDD *member;
}NhuFreqPriorityLstUTRA_TDD;

typedef struct NhuBandClassPriorityHRPD
{
 TknPres pres;
 NhuBandclassCDMA2000 bandClass;
 NhuCellReselectionPriority cellReselectionPriority;
} NhuBandClassPriorityHRPD;

typedef struct NhuBandClassPriorityLstHRPD
{
 TknU16 noComp;
 NhuBandClassPriorityHRPD *member;
}NhuBandClassPriorityLstHRPD;

typedef struct NhuBandClassPriority1XRTT
{
 TknPres pres;
 NhuBandclassCDMA2000 bandClass;
 NhuCellReselectionPriority cellReselectionPriority;
} NhuBandClassPriority1XRTT;

typedef struct NhuBandClassPriorityLst1XRTT
{
 TknU16 noComp;
 NhuBandClassPriority1XRTT *member;
}NhuBandClassPriorityLst1XRTT;


typedef enum enumNhuIdleModeMobilityCntrlInfot320
{
 NhuIdleModeMobilityCntrlInfot320min5Enum,
 NhuIdleModeMobilityCntrlInfot320min10Enum,
 NhuIdleModeMobilityCntrlInfot320min20Enum,
 NhuIdleModeMobilityCntrlInfot320min30Enum,
 NhuIdleModeMobilityCntrlInfot320min60Enum,
 NhuIdleModeMobilityCntrlInfot320min120Enum,
 NhuIdleModeMobilityCntrlInfot320min180Enum,
 NhuIdleModeMobilityCntrlInfot320spare1Enum
} EnumNhuIdleModeMobilityCntrlInfot320;
typedef TknU32 NhuIdleModeMobilityCntrlInfot320;

typedef struct NhuIdleModeMobilityCntrlInfo
{
 TknPres pres;
 NhuFreqPriorityLstEUTRA freqPriorityLstEUTRA;
 NhuFreqsPriorityLstGERAN freqPriorityLstGERAN;
 NhuFreqPriorityLstUTRA_FDD freqPriorityLstUTRA_FDD;
 NhuFreqPriorityLstUTRA_TDD freqPriorityLstUTRA_TDD;
 NhuBandClassPriorityLstHRPD bandClassPriorityLstHRPD;
 NhuBandClassPriorityLst1XRTT bandClassPriorityLst1XRTT;
 NhuIdleModeMobilityCntrlInfot320 t320;
} NhuIdleModeMobilityCntrlInfo;

typedef struct NhuCellInfoGERAN_r9
{
 TknPres pres;
 NhuPhysCellIdGERAN physCellId_r9;
 NhuCarrierFreqGERAN carrierFreq_r9;
 NhuSysInfoLstGERAN systemInfo_r9;
} NhuCellInfoGERAN_r9;

typedef struct NhuCellInfoLstGERAN_r9
{
 TknU16 noComp;
 NhuCellInfoGERAN_r9 *member;
}NhuCellInfoLstGERAN_r9;


typedef TknStrOSXL NhuCellInfoUTRA_FDD_r9utra_BCCH_Cont_r9;
typedef struct NhuCellInfoUTRA_FDD_r9
{
 TknPres pres;
 NhuPhysCellIdUTRA_FDD physCellId_r9;
 NhuCellInfoUTRA_FDD_r9utra_BCCH_Cont_r9 utra_BCCH_Cont_r9;
} NhuCellInfoUTRA_FDD_r9;

typedef struct NhuCellInfoLstUTRA_FDD_r9
{
 TknU16 noComp;
 NhuCellInfoUTRA_FDD_r9 *member;
}NhuCellInfoLstUTRA_FDD_r9;


typedef TknStrOSXL NhuCellInfoUTRA_TDD_r9utra_BCCH_Cont_r9;
typedef struct NhuCellInfoUTRA_TDD_r9
{
 TknPres pres;
 NhuPhysCellIdUTRA_TDD physCellId_r9;
 NhuCellInfoUTRA_TDD_r9utra_BCCH_Cont_r9 utra_BCCH_Cont_r9;
} NhuCellInfoUTRA_TDD_r9;

typedef struct NhuCellInfoLstUTRA_TDD_r9
{
 TknU16 noComp;
 NhuCellInfoUTRA_TDD_r9 *member;
}NhuCellInfoLstUTRA_TDD_r9;

typedef struct NhuRRCConRls_v920_IEscellInfoLst_r9
{
 TknU8 choice;
 union {
  NhuCellInfoLstGERAN_r9 geran_r9;
  NhuCellInfoLstUTRA_FDD_r9 utra_FDD_r9;
  NhuCellInfoLstUTRA_TDD_r9 utra_TDD_r9;
 } val;
} NhuRRCConRls_v920_IEscellInfoLst_r9;

typedef struct NhuRRCConRls_v920_IEsnonCriticalExtn
{
 TknPres pres;
} NhuRRCConRls_v920_IEsnonCriticalExtn;

typedef struct NhuRRCConRls_v920_IEs
{
 TknPres pres;
 NhuRRCConRls_v920_IEscellInfoLst_r9 cellInfoLst_r9;
 NhuRRCConRls_v920_IEsnonCriticalExtn nonCriticalExtn;
} NhuRRCConRls_v920_IEs;


typedef TknStrOSXL NhuRRCConRls_v890_IEslateNonCriticalExtn;
typedef struct NhuRRCConRls_v890_IEs
{
 TknPres pres;
 NhuRRCConRls_v890_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuRRCConRls_v920_IEs nonCriticalExtn;
} NhuRRCConRls_v890_IEs;

typedef struct NhuRRCConRls_r8_IEs
{
 TknPres pres;
 NhuRlsCause releaseCause;
 NhuRedirectedCarrierInfo redirectedCarrierInfo;
 NhuIdleModeMobilityCntrlInfo idleModeMobilityCntrlInfo;
 NhuRRCConRls_v890_IEs nonCriticalExtn;
} NhuRRCConRls_r8_IEs;

typedef struct NhuRRCConRlscriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuRRCConRls_r8_IEs rrcConRls_r8;
 } val;
} NhuRRCConRlscriticalExtnsc1;

typedef struct NhuRRCConRlscriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuRRCConRlscriticalExtnscriticalExtnsFuture;

typedef struct NhuRRCConRlscriticalExtns
{
 TknU8 choice;
 union {
  NhuRRCConRlscriticalExtnsc1 c1;
  NhuRRCConRlscriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuRRCConRlscriticalExtns;

typedef struct NhuRRCConRls
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuRRCConRlscriticalExtns criticalExtns;
} NhuRRCConRls;

typedef struct NhuSecConfigSMC
{
 TknPres pres;
 NhuSecAlgorithmConfig securityAlgorithmConfig;
} NhuSecConfigSMC;


typedef TknStrOSXL NhuSecModeCmd_v8a0_IEslateNonCriticalExtn;
typedef struct NhuSecModeCmd_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuSecModeCmd_v8a0_IEsnonCriticalExtn;

typedef struct NhuSecModeCmd_v8a0_IEs
{
 TknPres pres;
 NhuSecModeCmd_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuSecModeCmd_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuSecModeCmd_v8a0_IEs;

typedef struct NhuSecModeCmd_r8_IEs
{
 TknPres pres;
 NhuSecConfigSMC securityConfigSMC;
 NhuSecModeCmd_v8a0_IEs nonCriticalExtn;
} NhuSecModeCmd_r8_IEs;

typedef struct NhuSecModeCmdcriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuSecModeCmd_r8_IEs securityModeCmd_r8;
 } val;
} NhuSecModeCmdcriticalExtnsc1;

typedef struct NhuSecModeCmdcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuSecModeCmdcriticalExtnscriticalExtnsFuture;

typedef struct NhuSecModeCmdcriticalExtns
{
 TknU8 choice;
 union {
  NhuSecModeCmdcriticalExtnsc1 c1;
  NhuSecModeCmdcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuSecModeCmdcriticalExtns;

typedef struct NhuSecModeCmd
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuSecModeCmdcriticalExtns criticalExtns;
} NhuSecModeCmd;


typedef enum enumNhuRAT_Typ
{
 NhuRAT_TypeutraEnum,
 NhuRAT_TyputraEnum,
 NhuRAT_Typgeran_csEnum,
 NhuRAT_Typgeran_psEnum,
 NhuRAT_Typcdma2000_1XRTTEnum,
 NhuRAT_Typspare3Enum,
 NhuRAT_Typspare2Enum,
 NhuRAT_Typspare1Enum
} EnumNhuRAT_Typ;
typedef TknU32 NhuRAT_Typ;

typedef struct NhuUE_CapRqst
{
 TknU16 noComp;
 NhuRAT_Typ *member;
}NhuUE_CapRqst;


typedef TknStrOSXL NhuUECapEnquiry_v8a0_IEslateNonCriticalExtn;
typedef struct NhuUECapEnquiry_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuUECapEnquiry_v8a0_IEsnonCriticalExtn;

typedef struct NhuUECapEnquiry_v8a0_IEs
{
 TknPres pres;
 NhuUECapEnquiry_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuUECapEnquiry_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuUECapEnquiry_v8a0_IEs;

typedef struct NhuUECapEnquiry_r8_IEs
{
 TknPres pres;
 NhuUE_CapRqst ue_CapRqst;
 NhuUECapEnquiry_v8a0_IEs nonCriticalExtn;
} NhuUECapEnquiry_r8_IEs;

typedef struct NhuUECapEnquirycriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuUECapEnquiry_r8_IEs ueCapEnquiry_r8;
 } val;
} NhuUECapEnquirycriticalExtnsc1;

typedef struct NhuUECapEnquirycriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuUECapEnquirycriticalExtnscriticalExtnsFuture;

typedef struct NhuUECapEnquirycriticalExtns
{
 TknU8 choice;
 union {
  NhuUECapEnquirycriticalExtnsc1 c1;
  NhuUECapEnquirycriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuUECapEnquirycriticalExtns;

typedef struct NhuUECapEnquiry
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuUECapEnquirycriticalExtns criticalExtns;
} NhuUECapEnquiry;


typedef TknU32 NhuDRB_CountMSB_InfocountMSB_Ulnk;


typedef TknU32 NhuDRB_CountMSB_InfocountMSB_Dlnk;

typedef struct NhuDRB_CountMSB_Info
{
 TknPres pres;
 NhuDRB_Identity drb_Identity;
 NhuDRB_CountMSB_InfocountMSB_Ulnk countMSB_Ulnk;
 NhuDRB_CountMSB_InfocountMSB_Dlnk countMSB_Dlnk;
} NhuDRB_CountMSB_Info;

typedef struct NhuDRB_CountMSB_InfoLst
{
 TknU16 noComp;
 NhuDRB_CountMSB_Info *member;
}NhuDRB_CountMSB_InfoLst;


typedef TknStrOSXL NhuCounterCheck_v8a0_IEslateNonCriticalExtn;
typedef struct NhuCounterCheck_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuCounterCheck_v8a0_IEsnonCriticalExtn;

typedef struct NhuCounterCheck_v8a0_IEs
{
 TknPres pres;
 NhuCounterCheck_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuCounterCheck_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuCounterCheck_v8a0_IEs;

typedef struct NhuCounterCheck_r8_IEs
{
 TknPres pres;
 NhuDRB_CountMSB_InfoLst drb_CountMSB_InfoLst;
 NhuCounterCheck_v8a0_IEs nonCriticalExtn;
} NhuCounterCheck_r8_IEs;

typedef struct NhuCounterCheckcriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuCounterCheck_r8_IEs counterCheck_r8;
 } val;
} NhuCounterCheckcriticalExtnsc1;

typedef struct NhuCounterCheckcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuCounterCheckcriticalExtnscriticalExtnsFuture;

typedef struct NhuCounterCheckcriticalExtns
{
 TknU8 choice;
 union {
  NhuCounterCheckcriticalExtnsc1 c1;
  NhuCounterCheckcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuCounterCheckcriticalExtns;

typedef struct NhuCounterCheck
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuCounterCheckcriticalExtns criticalExtns;
} NhuCounterCheck;


typedef TknStrOSXL NhuUEInfoRqst_v930_IEslateNonCriticalExtn;
typedef struct NhuUEInfoRqst_v930_IEsnonCriticalExtn
{
 TknPres pres;
} NhuUEInfoRqst_v930_IEsnonCriticalExtn;

typedef struct NhuUEInfoRqst_v930_IEs
{
 TknPres pres;
 NhuUEInfoRqst_v930_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuUEInfoRqst_v930_IEsnonCriticalExtn nonCriticalExtn;
} NhuUEInfoRqst_v930_IEs;


typedef TknU8 NhuUEInfoRqst_r9_IEsrach_ReportReq_r9;


typedef TknU8 NhuUEInfoRqst_r9_IEsrlf_ReportReq_r9;

typedef struct NhuUEInfoRqst_r9_IEs
{
 TknPres pres;
 NhuUEInfoRqst_r9_IEsrach_ReportReq_r9 rach_ReportReq_r9;
 NhuUEInfoRqst_r9_IEsrlf_ReportReq_r9 rlf_ReportReq_r9;
 NhuUEInfoRqst_v930_IEs nonCriticalExtn;
} NhuUEInfoRqst_r9_IEs;

typedef struct NhuUEInfoRqst_r9criticalExtnsc1
{
 TknU8 choice;
 union {
  NhuUEInfoRqst_r9_IEs ueInfoRqst_r9;
 } val;
} NhuUEInfoRqst_r9criticalExtnsc1;

typedef struct NhuUEInfoRqst_r9criticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuUEInfoRqst_r9criticalExtnscriticalExtnsFuture;

typedef struct NhuUEInfoRqst_r9criticalExtns
{
 TknU8 choice;
 union {
  NhuUEInfoRqst_r9criticalExtnsc1 c1;
  NhuUEInfoRqst_r9criticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuUEInfoRqst_r9criticalExtns;

typedef struct NhuUEInfoRqst_r9
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuUEInfoRqst_r9criticalExtns criticalExtns;
} NhuUEInfoRqst_r9;

typedef struct NhuDL_DCCH_MsgTypc1
{
 TknU8 choice;
 union {
  NhuCSFBParamsRspCDMA2000 csfbParamsRspCDMA2000;
  NhuDLInfoTfr dlInfoTfr;
  NhuHovrFromEUTRAPrepRqst handoverFromEUTRAPrepRqst;
  NhuMobilityFromEUTRACmd mobilityFromEUTRACmd;
  NhuRRCConRecfgn rrcConRecfgn;
  NhuRRCConRls rrcConRls;
  NhuSecModeCmd securityModeCmd;
  NhuUECapEnquiry ueCapEnquiry;
  NhuCounterCheck counterCheck;
  NhuUEInfoRqst_r9 ueInfoRqst_r9;
 } val;
} NhuDL_DCCH_MsgTypc1;

typedef struct NhuDL_DCCH_MsgTypmessageClassExtn
{
 TknPres pres;
} NhuDL_DCCH_MsgTypmessageClassExtn;

typedef struct NhuDL_DCCH_MsgTyp
{
 TknU8 choice;
 union {
  NhuDL_DCCH_MsgTypc1 c1;
  NhuDL_DCCH_MsgTypmessageClassExtn messageClassExtn;
 } val;
} NhuDL_DCCH_MsgTyp;

typedef struct NhuDL_DCCH_Msg
{
 TknPres pres;
 NhuDL_DCCH_MsgTyp message;
} NhuDL_DCCH_Msg;


typedef TknStrBSXL NhuShortMAC_I;
typedef struct NhuReestabUE_Identity
{
 TknPres pres;
 NhuC_RNTI c_RNTI;
 NhuPhysCellId physCellId;
 NhuShortMAC_I shortMAC_I;
} NhuReestabUE_Identity;


typedef enum enumNhuReestbCause
{
 NhuReestbCausereconfigurationFailEnum,
 NhuReestbCausehandoverFailEnum,
 NhuReestbCauseotherFailEnum,
 NhuReestbCausespare1Enum
} EnumNhuReestbCause;
typedef TknU32 NhuReestbCause;


typedef TknStrBSXL NhuRRCConReestbRqst_r8_IEsspare;
typedef struct NhuRRCConReestbRqst_r8_IEs
{
 TknPres pres;
 NhuReestabUE_Identity ue_Identity;
 NhuReestbCause reestablishmentCause;
 NhuRRCConReestbRqst_r8_IEsspare spare;
} NhuRRCConReestbRqst_r8_IEs;

typedef struct NhuRRCConReestbRqstcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuRRCConReestbRqstcriticalExtnscriticalExtnsFuture;

typedef struct NhuRRCConReestbRqstcriticalExtns
{
 TknU8 choice;
 union {
  NhuRRCConReestbRqst_r8_IEs rrcConReestbRqst_r8;
  NhuRRCConReestbRqstcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuRRCConReestbRqstcriticalExtns;

typedef struct NhuRRCConReestbRqst
{
 TknPres pres;
 NhuRRCConReestbRqstcriticalExtns criticalExtns;
} NhuRRCConReestbRqst;


typedef TknStrBSXL NhuInitUE_IdentityrandomValue;
typedef struct NhuInitUE_Identity
{
 TknU8 choice;
 union {
  NhuS_TMSI s_TMSI;
  NhuInitUE_IdentityrandomValue randomValue;
 } val;
} NhuInitUE_Identity;


typedef enum enumNhuEstablishmentCause
{
 NhuEstablishmentCauseemergencyEnum,
 NhuEstablishmentCausehighPriorityAccessEnum,
 NhuEstablishmentCausemt_AccessEnum,
 NhuEstablishmentCausemo_SignallingEnum,
 NhuEstablishmentCausemo_DataEnum,
 NhuEstablishmentCausespare3Enum,
 NhuEstablishmentCausespare2Enum,
 NhuEstablishmentCausespare1Enum
} EnumNhuEstablishmentCause;
typedef TknU32 NhuEstablishmentCause;


typedef TknStrBSXL NhuRRCConRqst_r8_IEsspare;
typedef struct NhuRRCConRqst_r8_IEs
{
 TknPres pres;
 NhuInitUE_Identity ue_Identity;
 NhuEstablishmentCause establishmentCause;
 NhuRRCConRqst_r8_IEsspare spare;
} NhuRRCConRqst_r8_IEs;

typedef struct NhuRRCConRqstcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuRRCConRqstcriticalExtnscriticalExtnsFuture;

typedef struct NhuRRCConRqstcriticalExtns
{
 TknU8 choice;
 union {
  NhuRRCConRqst_r8_IEs rrcConRqst_r8;
  NhuRRCConRqstcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuRRCConRqstcriticalExtns;

typedef struct NhuRRCConRqst
{
 TknPres pres;
 NhuRRCConRqstcriticalExtns criticalExtns;
} NhuRRCConRqst;

typedef struct NhuUL_CCCH_MsgTypc1
{
 TknU8 choice;
 union {
  NhuRRCConReestbRqst rrcConReestbRqst;
  NhuRRCConRqst rrcConRqst;
 } val;
} NhuUL_CCCH_MsgTypc1;

typedef struct NhuUL_CCCH_MsgTypmessageClassExtn
{
 TknPres pres;
} NhuUL_CCCH_MsgTypmessageClassExtn;

typedef struct NhuUL_CCCH_MsgTyp
{
 TknU8 choice;
 union {
  NhuUL_CCCH_MsgTypc1 c1;
  NhuUL_CCCH_MsgTypmessageClassExtn messageClassExtn;
 } val;
} NhuUL_CCCH_MsgTyp;

typedef struct NhuUL_CCCH_Msg
{
 TknPres pres;
 NhuUL_CCCH_MsgTyp message;
} NhuUL_CCCH_Msg;


typedef TknStrOSXL NhuCSFBParamsRqstCDMA2000_v8a0_IEslateNonCriticalExtn;
typedef struct NhuCSFBParamsRqstCDMA2000_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuCSFBParamsRqstCDMA2000_v8a0_IEsnonCriticalExtn;

typedef struct NhuCSFBParamsRqstCDMA2000_v8a0_IEs
{
 TknPres pres;
 NhuCSFBParamsRqstCDMA2000_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuCSFBParamsRqstCDMA2000_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuCSFBParamsRqstCDMA2000_v8a0_IEs;

typedef struct NhuCSFBParamsRqstCDMA2000_r8_IEs
{
 TknPres pres;
 NhuCSFBParamsRqstCDMA2000_v8a0_IEs nonCriticalExtn;
} NhuCSFBParamsRqstCDMA2000_r8_IEs;

typedef struct NhuCSFBParamsRqstCDMA2000criticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuCSFBParamsRqstCDMA2000criticalExtnscriticalExtnsFuture;

typedef struct NhuCSFBParamsRqstCDMA2000criticalExtns
{
 TknU8 choice;
 union {
  NhuCSFBParamsRqstCDMA2000_r8_IEs csfbParamsRqstCDMA2000_r8;
  NhuCSFBParamsRqstCDMA2000criticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuCSFBParamsRqstCDMA2000criticalExtns;

typedef struct NhuCSFBParamsRqstCDMA2000
{
 TknPres pres;
 NhuCSFBParamsRqstCDMA2000criticalExtns criticalExtns;
} NhuCSFBParamsRqstCDMA2000;

typedef struct NhuCellGlobalIdEUTRA
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
 NhuCellIdentity cellIdentity;
} NhuCellGlobalIdEUTRA;

typedef struct NhuPLMN_IdentityLst2
{
 TknU16 noComp;
 NhuPLMN_Identity *member;
}NhuPLMN_IdentityLst2;


typedef enum enumNhuAdditionalSI_Info_r9csg_MemberStatus_r9
{
 NhuAdditionalSI_Info_r9csg_MemberStatus_r9memberEnum
} EnumNhuAdditionalSI_Info_r9csg_MemberStatus_r9;
typedef TknU32 NhuAdditionalSI_Info_r9csg_MemberStatus_r9;

typedef struct NhuAdditionalSI_Info_r9
{
 TknPres pres;
 NhuAdditionalSI_Info_r9csg_MemberStatus_r9 csg_MemberStatus_r9;
 NhuCSG_Identity csg_Identity_r9;
} NhuAdditionalSI_Info_r9;

typedef struct NhuMeasResultEUTRAcgi_Info
{
 TknPres pres;
 NhuCellGlobalIdEUTRA cellGlobalId;
 NhuTrackingAreaCode trackingAreaCode;
 NhuPLMN_IdentityLst2 plmn_IdentityLst;
} NhuMeasResultEUTRAcgi_Info;

typedef struct NhuMeasResultEUTRAmeasResultextaddgrp_r9
{
 TknPres pres;
 NhuAdditionalSI_Info_r9 additionalSI_Info_r9;
} NhuMeasResultEUTRAmeasResultextaddgrp_r9;

typedef struct NhuMeasResultEUTRAmeasResult
{
 TknPres pres;
 NhuRSRP_Range rsrpResult;
 NhuRSRQ_Range rsrqResult;
 NhuMeasResultEUTRAmeasResultextaddgrp_r9 extaddgrp_r9;
} NhuMeasResultEUTRAmeasResult;

typedef struct NhuMeasResultEUTRA
{
 TknPres pres;
 NhuPhysCellId physCellId;
 NhuMeasResultEUTRAcgi_Info cgi_Info;
 NhuMeasResultEUTRAmeasResult measResult;
} NhuMeasResultEUTRA;

typedef struct NhuMeasResultLstEUTRA
{
 TknU16 noComp;
 NhuMeasResultEUTRA *member;
}NhuMeasResultLstEUTRA;


typedef TknStrBSXL NhuCellGlobalIdUTRAcellIdentity;
typedef struct NhuCellGlobalIdUTRA
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
 NhuCellGlobalIdUTRAcellIdentity cellIdentity;
} NhuCellGlobalIdUTRA;

typedef struct NhuMeasResultUTRAphysCellId
{
 TknU8 choice;
 union {
  NhuPhysCellIdUTRA_FDD fdd;
  NhuPhysCellIdUTRA_TDD tdd;
 } val;
} NhuMeasResultUTRAphysCellId;


typedef TknStrBSXL NhuMeasResultUTRAcgi_InfolocationAreaCode;

typedef TknStrBSXL NhuMeasResultUTRAcgi_InforoutingAreaCode;
typedef struct NhuMeasResultUTRAcgi_Info
{
 TknPres pres;
 NhuCellGlobalIdUTRA cellGlobalId;
 NhuMeasResultUTRAcgi_InfolocationAreaCode locationAreaCode;
 NhuMeasResultUTRAcgi_InforoutingAreaCode routingAreaCode;
 NhuPLMN_IdentityLst2 plmn_IdentityLst;
} NhuMeasResultUTRAcgi_Info;


typedef TknS32 NhuMeasResultUTRAmeasResultutra_RSCP;


typedef TknU32 NhuMeasResultUTRAmeasResultutra_EcN0;

typedef struct NhuMeasResultUTRAmeasResultextaddgrp_r9
{
 TknPres pres;
 NhuAdditionalSI_Info_r9 additionalSI_Info_r9;
} NhuMeasResultUTRAmeasResultextaddgrp_r9;

typedef struct NhuMeasResultUTRAmeasResult
{
 TknPres pres;
 NhuMeasResultUTRAmeasResultutra_RSCP utra_RSCP;
 NhuMeasResultUTRAmeasResultutra_EcN0 utra_EcN0;
 NhuMeasResultUTRAmeasResultextaddgrp_r9 extaddgrp_r9;
} NhuMeasResultUTRAmeasResult;

typedef struct NhuMeasResultUTRA
{
 TknPres pres;
 NhuMeasResultUTRAphysCellId physCellId;
 NhuMeasResultUTRAcgi_Info cgi_Info;
 NhuMeasResultUTRAmeasResult measResult;
} NhuMeasResultUTRA;

typedef struct NhuMeasResultLstUTRA
{
 TknU16 noComp;
 NhuMeasResultUTRA *member;
}NhuMeasResultLstUTRA;


typedef TknStrBSXL NhuCellGlobalIdGERANlocationAreaCode;

typedef TknStrBSXL NhuCellGlobalIdGERANcellIdentity;
typedef struct NhuCellGlobalIdGERAN
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
 NhuCellGlobalIdGERANlocationAreaCode locationAreaCode;
 NhuCellGlobalIdGERANcellIdentity cellIdentity;
} NhuCellGlobalIdGERAN;


typedef TknStrBSXL NhuMeasResultGERANcgi_InforoutingAreaCode;
typedef struct NhuMeasResultGERANcgi_Info
{
 TknPres pres;
 NhuCellGlobalIdGERAN cellGlobalId;
 NhuMeasResultGERANcgi_InforoutingAreaCode routingAreaCode;
} NhuMeasResultGERANcgi_Info;


typedef TknU32 NhuMeasResultGERANmeasResultrssi;

typedef struct NhuMeasResultGERANmeasResult
{
 TknPres pres;
 NhuMeasResultGERANmeasResultrssi rssi;
} NhuMeasResultGERANmeasResult;

typedef struct NhuMeasResultGERAN
{
 TknPres pres;
 NhuCarrierFreqGERAN carrierFreq;
 NhuPhysCellIdGERAN physCellId;
 NhuMeasResultGERANcgi_Info cgi_Info;
 NhuMeasResultGERANmeasResult measResult;
} NhuMeasResultGERAN;

typedef struct NhuMeasResultLstGERAN
{
 TknU16 noComp;
 NhuMeasResultGERAN *member;
}NhuMeasResultLstGERAN;


typedef TknStrBSXL NhuCellGlobalIdCDMA2000cellGlobalId1XRTT;

typedef TknStrBSXL NhuCellGlobalIdCDMA2000cellGlobalIdHRPD;
typedef struct NhuCellGlobalIdCDMA2000
{
 TknU8 choice;
 union {
  NhuCellGlobalIdCDMA2000cellGlobalId1XRTT cellGlobalId1XRTT;
  NhuCellGlobalIdCDMA2000cellGlobalIdHRPD cellGlobalIdHRPD;
 } val;
} NhuCellGlobalIdCDMA2000;


typedef TknU32 NhuMeasResultCDMA2000measResultpilotPnPhase;


typedef TknU32 NhuMeasResultCDMA2000measResultpilotStrength;

typedef struct NhuMeasResultCDMA2000measResult
{
 TknPres pres;
 NhuMeasResultCDMA2000measResultpilotPnPhase pilotPnPhase;
 NhuMeasResultCDMA2000measResultpilotStrength pilotStrength;
} NhuMeasResultCDMA2000measResult;

typedef struct NhuMeasResultCDMA2000
{
 TknPres pres;
 NhuPhysCellIdCDMA2000 physCellId;
 NhuCellGlobalIdCDMA2000 cgi_Info;
 NhuMeasResultCDMA2000measResult measResult;
} NhuMeasResultCDMA2000;

typedef struct NhuMeasResultLstCDMA2000
{
 TknU16 noComp;
 NhuMeasResultCDMA2000 *member;
}NhuMeasResultLstCDMA2000;


typedef TknU8 NhuMeasResultsCDMA2000preRegistrationStatusHRPD;

typedef struct NhuMeasResultsCDMA2000
{
 TknPres pres;
 NhuMeasResultsCDMA2000preRegistrationStatusHRPD preRegistrationStatusHRPD;
 NhuMeasResultLstCDMA2000 measResultLstCDMA2000;
} NhuMeasResultsCDMA2000;


typedef TknU32 NhuMeasResultForECID_r9ue_RxTxTimeDiffResult_r9;


typedef TknStrBSXL NhuMeasResultForECID_r9currentSFN_r9;
typedef struct NhuMeasResultForECID_r9
{
 TknPres pres;
 NhuMeasResultForECID_r9ue_RxTxTimeDiffResult_r9 ue_RxTxTimeDiffResult_r9;
 NhuMeasResultForECID_r9currentSFN_r9 currentSFN_r9;
} NhuMeasResultForECID_r9;

typedef struct NhuMeasResultsmeasResultServCell
{
 TknPres pres;
 NhuRSRP_Range rsrpResult;
 NhuRSRQ_Range rsrqResult;
} NhuMeasResultsmeasResultServCell;

typedef struct NhuMeasResultsmeasResultNeighCells
{
 TknU8 choice;
 union {
  NhuMeasResultLstEUTRA measResultLstEUTRA;
  NhuMeasResultLstUTRA measResultLstUTRA;
  NhuMeasResultLstGERAN measResultLstGERAN;
  NhuMeasResultsCDMA2000 measResultsCDMA2000;
 } val;
} NhuMeasResultsmeasResultNeighCells;

typedef struct NhuMeasResultsextaddgrp_r9
{
 TknPres pres;
 NhuMeasResultForECID_r9 measResultForECID_r9;
} NhuMeasResultsextaddgrp_r9;

typedef struct NhuMeasResults
{
 TknPres pres;
 NhuMeasId measId;
 NhuMeasResultsmeasResultServCell measResultServCell;
 NhuMeasResultsmeasResultNeighCells measResultNeighCells;
 NhuMeasResultsextaddgrp_r9 extaddgrp_r9;
} NhuMeasResults;


typedef TknStrOSXL NhuMeasurementReport_v8a0_IEslateNonCriticalExtn;
typedef struct NhuMeasurementReport_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuMeasurementReport_v8a0_IEsnonCriticalExtn;

typedef struct NhuMeasurementReport_v8a0_IEs
{
 TknPres pres;
 NhuMeasurementReport_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuMeasurementReport_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuMeasurementReport_v8a0_IEs;

typedef struct NhuMeasurementReport_r8_IEs
{
 TknPres pres;
 NhuMeasResults measResults;
 NhuMeasurementReport_v8a0_IEs nonCriticalExtn;
} NhuMeasurementReport_r8_IEs;

typedef struct NhuMeasurementReportcriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuMeasurementReport_r8_IEs measurementReport_r8;
 } val;
} NhuMeasurementReportcriticalExtnsc1;

typedef struct NhuMeasurementReportcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuMeasurementReportcriticalExtnscriticalExtnsFuture;

typedef struct NhuMeasurementReportcriticalExtns
{
 TknU8 choice;
 union {
  NhuMeasurementReportcriticalExtnsc1 c1;
  NhuMeasurementReportcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuMeasurementReportcriticalExtns;

typedef struct NhuMeasurementReport
{
 TknPres pres;
 NhuMeasurementReportcriticalExtns criticalExtns;
} NhuMeasurementReport;


typedef TknStrOSXL NhuRRCConRecfgnCompl_v8a0_IEslateNonCriticalExtn;
typedef struct NhuRRCConRecfgnCompl_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuRRCConRecfgnCompl_v8a0_IEsnonCriticalExtn;

typedef struct NhuRRCConRecfgnCompl_v8a0_IEs
{
 TknPres pres;
 NhuRRCConRecfgnCompl_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuRRCConRecfgnCompl_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuRRCConRecfgnCompl_v8a0_IEs;

typedef struct NhuRRCConRecfgnCompl_r8_IEs
{
 TknPres pres;
 NhuRRCConRecfgnCompl_v8a0_IEs nonCriticalExtn;
} NhuRRCConRecfgnCompl_r8_IEs;

typedef struct NhuRRCConRecfgnComplcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuRRCConRecfgnComplcriticalExtnscriticalExtnsFuture;

typedef struct NhuRRCConRecfgnComplcriticalExtns
{
 TknU8 choice;
 union {
  NhuRRCConRecfgnCompl_r8_IEs rrcConRecfgnCompl_r8;
  NhuRRCConRecfgnComplcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuRRCConRecfgnComplcriticalExtns;

typedef struct NhuRRCConRecfgnCompl
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuRRCConRecfgnComplcriticalExtns criticalExtns;
} NhuRRCConRecfgnCompl;


typedef TknStrOSXL NhuRRCConReestbCompl_v8a0_IEslateNonCriticalExtn;
typedef struct NhuRRCConReestbCompl_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuRRCConReestbCompl_v8a0_IEsnonCriticalExtn;

typedef struct NhuRRCConReestbCompl_v8a0_IEs
{
 TknPres pres;
 NhuRRCConReestbCompl_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuRRCConReestbCompl_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuRRCConReestbCompl_v8a0_IEs;


typedef enum enumNhuRRCConReestbCompl_v920_IEsrlf_InfoAvailable_r9
{
 NhuRRCConReestbCompl_v920_IEsrlf_InfoAvailable_r9trueEnum
} EnumNhuRRCConReestbCompl_v920_IEsrlf_InfoAvailable_r9;
typedef TknU32 NhuRRCConReestbCompl_v920_IEsrlf_InfoAvailable_r9;

typedef struct NhuRRCConReestbCompl_v920_IEs
{
 TknPres pres;
 NhuRRCConReestbCompl_v920_IEsrlf_InfoAvailable_r9 rlf_InfoAvailable_r9;
 NhuRRCConReestbCompl_v8a0_IEs nonCriticalExtn;
} NhuRRCConReestbCompl_v920_IEs;

typedef struct NhuRRCConReestbCompl_r8_IEs
{
 TknPres pres;
 NhuRRCConReestbCompl_v920_IEs nonCriticalExtn;
} NhuRRCConReestbCompl_r8_IEs;

typedef struct NhuRRCConReestbComplcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuRRCConReestbComplcriticalExtnscriticalExtnsFuture;

typedef struct NhuRRCConReestbComplcriticalExtns
{
 TknU8 choice;
 union {
  NhuRRCConReestbCompl_r8_IEs rrcConReestbCompl_r8;
  NhuRRCConReestbComplcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuRRCConReestbComplcriticalExtns;

typedef struct NhuRRCConReestbCompl
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuRRCConReestbComplcriticalExtns criticalExtns;
} NhuRRCConReestbCompl;


typedef TknStrBSXL NhuRegisteredMMEmmegi;
typedef struct NhuRegisteredMME
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
 NhuRegisteredMMEmmegi mmegi;
 NhuMMEC mmec;
} NhuRegisteredMME;


typedef TknStrOSXL NhuRRCConSetupCompl_v8a0_IEslateNonCriticalExtn;
typedef struct NhuRRCConSetupCompl_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuRRCConSetupCompl_v8a0_IEsnonCriticalExtn;

typedef struct NhuRRCConSetupCompl_v8a0_IEs
{
 TknPres pres;
 NhuRRCConSetupCompl_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuRRCConSetupCompl_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuRRCConSetupCompl_v8a0_IEs;


typedef TknU32 NhuRRCConSetupCompl_r8_IEsselectedPLMN_Identity;

typedef struct NhuRRCConSetupCompl_r8_IEs
{
 TknPres pres;
 NhuRRCConSetupCompl_r8_IEsselectedPLMN_Identity selectedPLMN_Identity;
 NhuRegisteredMME registeredMME;
 NhuDedicatedInfoNAS dedicatedInfoNAS;
 NhuRRCConSetupCompl_v8a0_IEs nonCriticalExtn;
} NhuRRCConSetupCompl_r8_IEs;

typedef struct NhuRRCConSetupComplcriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuRRCConSetupCompl_r8_IEs rrcConSetupCompl_r8;
 } val;
} NhuRRCConSetupComplcriticalExtnsc1;

typedef struct NhuRRCConSetupComplcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuRRCConSetupComplcriticalExtnscriticalExtnsFuture;

typedef struct NhuRRCConSetupComplcriticalExtns
{
 TknU8 choice;
 union {
  NhuRRCConSetupComplcriticalExtnsc1 c1;
  NhuRRCConSetupComplcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuRRCConSetupComplcriticalExtns;

typedef struct NhuRRCConSetupCompl
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuRRCConSetupComplcriticalExtns criticalExtns;
} NhuRRCConSetupCompl;


typedef TknStrOSXL NhuSecModeCompl_v8a0_IEslateNonCriticalExtn;
typedef struct NhuSecModeCompl_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuSecModeCompl_v8a0_IEsnonCriticalExtn;

typedef struct NhuSecModeCompl_v8a0_IEs
{
 TknPres pres;
 NhuSecModeCompl_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuSecModeCompl_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuSecModeCompl_v8a0_IEs;

typedef struct NhuSecModeCompl_r8_IEs
{
 TknPres pres;
 NhuSecModeCompl_v8a0_IEs nonCriticalExtn;
} NhuSecModeCompl_r8_IEs;

typedef struct NhuSecModeComplcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuSecModeComplcriticalExtnscriticalExtnsFuture;

typedef struct NhuSecModeComplcriticalExtns
{
 TknU8 choice;
 union {
  NhuSecModeCompl_r8_IEs securityModeCompl_r8;
  NhuSecModeComplcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuSecModeComplcriticalExtns;

typedef struct NhuSecModeCompl
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuSecModeComplcriticalExtns criticalExtns;
} NhuSecModeCompl;


typedef TknStrOSXL NhuSecModeFail_v8a0_IEslateNonCriticalExtn;
typedef struct NhuSecModeFail_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuSecModeFail_v8a0_IEsnonCriticalExtn;

typedef struct NhuSecModeFail_v8a0_IEs
{
 TknPres pres;
 NhuSecModeFail_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuSecModeFail_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuSecModeFail_v8a0_IEs;

typedef struct NhuSecModeFail_r8_IEs
{
 TknPres pres;
 NhuSecModeFail_v8a0_IEs nonCriticalExtn;
} NhuSecModeFail_r8_IEs;

typedef struct NhuSecModeFailcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuSecModeFailcriticalExtnscriticalExtnsFuture;

typedef struct NhuSecModeFailcriticalExtns
{
 TknU8 choice;
 union {
  NhuSecModeFail_r8_IEs securityModeFail_r8;
  NhuSecModeFailcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuSecModeFailcriticalExtns;

typedef struct NhuSecModeFail
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuSecModeFailcriticalExtns criticalExtns;
} NhuSecModeFail;


typedef TknStrOSXL NhuUE_CapRAT_ContueCapRAT_Cont;
typedef struct NhuUE_CapRAT_Cont
{
 TknPres pres;
 NhuRAT_Typ rat_Typ;
 NhuUE_CapRAT_ContueCapRAT_Cont ueCapRAT_Cont;
} NhuUE_CapRAT_Cont;

typedef struct NhuUE_CapRAT_ContLst
{
 TknU16 noComp;
 NhuUE_CapRAT_Cont *member;
}NhuUE_CapRAT_ContLst;


typedef TknStrOSXL NhuUECapInfo_v8a0_IEslateNonCriticalExtn;
typedef struct NhuUECapInfo_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuUECapInfo_v8a0_IEsnonCriticalExtn;

typedef struct NhuUECapInfo_v8a0_IEs
{
 TknPres pres;
 NhuUECapInfo_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuUECapInfo_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuUECapInfo_v8a0_IEs;

typedef struct NhuUECapInfo_r8_IEs
{
 TknPres pres;
 NhuUE_CapRAT_ContLst ue_CapRAT_ContLst;
 NhuUECapInfo_v8a0_IEs nonCriticalExtn;
} NhuUECapInfo_r8_IEs;

typedef struct NhuUECapInfocriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuUECapInfo_r8_IEs ueCapInfo_r8;
 } val;
} NhuUECapInfocriticalExtnsc1;

typedef struct NhuUECapInfocriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuUECapInfocriticalExtnscriticalExtnsFuture;

typedef struct NhuUECapInfocriticalExtns
{
 TknU8 choice;
 union {
  NhuUECapInfocriticalExtnsc1 c1;
  NhuUECapInfocriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuUECapInfocriticalExtns;

typedef struct NhuUECapInfo
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuUECapInfocriticalExtns criticalExtns;
} NhuUECapInfo;


typedef TknStrOSXL NhuULHovrPrepTfr_v8a0_IEslateNonCriticalExtn;
typedef struct NhuULHovrPrepTfr_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuULHovrPrepTfr_v8a0_IEsnonCriticalExtn;

typedef struct NhuULHovrPrepTfr_v8a0_IEs
{
 TknPres pres;
 NhuULHovrPrepTfr_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuULHovrPrepTfr_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuULHovrPrepTfr_v8a0_IEs;


typedef TknStrBSXL NhuULHovrPrepTfr_r8_IEsmeid;
typedef struct NhuULHovrPrepTfr_r8_IEs
{
 TknPres pres;
 NhuCDMA2000_Typ cdma2000_Typ;
 NhuULHovrPrepTfr_r8_IEsmeid meid;
 NhuDedicatedInfoCDMA2000 dedicatedInfo;
 NhuULHovrPrepTfr_v8a0_IEs nonCriticalExtn;
} NhuULHovrPrepTfr_r8_IEs;

typedef struct NhuULHovrPrepTfrcriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuULHovrPrepTfr_r8_IEs ulHovrPrepTfr_r8;
 } val;
} NhuULHovrPrepTfrcriticalExtnsc1;

typedef struct NhuULHovrPrepTfrcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuULHovrPrepTfrcriticalExtnscriticalExtnsFuture;

typedef struct NhuULHovrPrepTfrcriticalExtns
{
 TknU8 choice;
 union {
  NhuULHovrPrepTfrcriticalExtnsc1 c1;
  NhuULHovrPrepTfrcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuULHovrPrepTfrcriticalExtns;

typedef struct NhuULHovrPrepTfr
{
 TknPres pres;
 NhuULHovrPrepTfrcriticalExtns criticalExtns;
} NhuULHovrPrepTfr;


typedef TknStrOSXL NhuULInfoTfr_v8a0_IEslateNonCriticalExtn;
typedef struct NhuULInfoTfr_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuULInfoTfr_v8a0_IEsnonCriticalExtn;

typedef struct NhuULInfoTfr_v8a0_IEs
{
 TknPres pres;
 NhuULInfoTfr_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuULInfoTfr_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuULInfoTfr_v8a0_IEs;

typedef struct NhuULInfoTfr_r8_IEsdedicatedInfoTyp
{
 TknU8 choice;
 union {
  NhuDedicatedInfoNAS dedicatedInfoNAS;
  NhuDedicatedInfoCDMA2000 dedicatedInfoCDMA2000_1XRTT;
  NhuDedicatedInfoCDMA2000 dedicatedInfoCDMA2000_HRPD;
 } val;
} NhuULInfoTfr_r8_IEsdedicatedInfoTyp;

typedef struct NhuULInfoTfr_r8_IEs
{
 TknPres pres;
 NhuULInfoTfr_r8_IEsdedicatedInfoTyp dedicatedInfoTyp;
 NhuULInfoTfr_v8a0_IEs nonCriticalExtn;
} NhuULInfoTfr_r8_IEs;

typedef struct NhuULInfoTfrcriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuULInfoTfr_r8_IEs ulInfoTfr_r8;
 } val;
} NhuULInfoTfrcriticalExtnsc1;

typedef struct NhuULInfoTfrcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuULInfoTfrcriticalExtnscriticalExtnsFuture;

typedef struct NhuULInfoTfrcriticalExtns
{
 TknU8 choice;
 union {
  NhuULInfoTfrcriticalExtnsc1 c1;
  NhuULInfoTfrcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuULInfoTfrcriticalExtns;

typedef struct NhuULInfoTfr
{
 TknPres pres;
 NhuULInfoTfrcriticalExtns criticalExtns;
} NhuULInfoTfr;


typedef TknU32 NhuDRB_CountInfocount_Ulnk;


typedef TknU32 NhuDRB_CountInfocount_Dlnk;

typedef struct NhuDRB_CountInfo
{
 TknPres pres;
 NhuDRB_Identity drb_Identity;
 NhuDRB_CountInfocount_Ulnk count_Ulnk;
 NhuDRB_CountInfocount_Dlnk count_Dlnk;
} NhuDRB_CountInfo;

typedef struct NhuDRB_CountInfoLst
{
 TknU16 noComp;
 NhuDRB_CountInfo *member;
}NhuDRB_CountInfoLst;


typedef TknStrOSXL NhuCounterCheckRsp_v8a0_IEslateNonCriticalExtn;
typedef struct NhuCounterCheckRsp_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuCounterCheckRsp_v8a0_IEsnonCriticalExtn;

typedef struct NhuCounterCheckRsp_v8a0_IEs
{
 TknPres pres;
 NhuCounterCheckRsp_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuCounterCheckRsp_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuCounterCheckRsp_v8a0_IEs;

typedef struct NhuCounterCheckRsp_r8_IEs
{
 TknPres pres;
 NhuDRB_CountInfoLst drb_CountInfoLst;
 NhuCounterCheckRsp_v8a0_IEs nonCriticalExtn;
} NhuCounterCheckRsp_r8_IEs;

typedef struct NhuCounterCheckRspcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuCounterCheckRspcriticalExtnscriticalExtnsFuture;

typedef struct NhuCounterCheckRspcriticalExtns
{
 TknU8 choice;
 union {
  NhuCounterCheckRsp_r8_IEs counterCheckRsp_r8;
  NhuCounterCheckRspcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuCounterCheckRspcriticalExtns;

typedef struct NhuCounterCheckRsp
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuCounterCheckRspcriticalExtns criticalExtns;
} NhuCounterCheckRsp;

typedef struct NhuMeasResult2EUTRA_r9
{
 TknPres pres;
 NhuARFCN_ValueEUTRA carrierFreq_r9;
 NhuMeasResultLstEUTRA measResultLst_r9;
} NhuMeasResult2EUTRA_r9;

typedef struct NhuMeasResultLst2EUTRA_r9
{
 TknU16 noComp;
 NhuMeasResult2EUTRA_r9 *member;
}NhuMeasResultLst2EUTRA_r9;

typedef struct NhuMeasResult2UTRA_r9
{
 TknPres pres;
 NhuARFCN_ValueUTRA carrierFreq_r9;
 NhuMeasResultLstUTRA measResultLst_r9;
} NhuMeasResult2UTRA_r9;

typedef struct NhuMeasResultLst2UTRA_r9
{
 TknU16 noComp;
 NhuMeasResult2UTRA_r9 *member;
}NhuMeasResultLst2UTRA_r9;

typedef struct NhuMeasResult2CDMA2000_r9
{
 TknPres pres;
 NhuCarrierFreqCDMA2000 carrierFreq_r9;
 NhuMeasResultsCDMA2000 measResultLst_r9;
} NhuMeasResult2CDMA2000_r9;

typedef struct NhuMeasResultLst2CDMA2000_r9
{
 TknU16 noComp;
 NhuMeasResult2CDMA2000_r9 *member;
}NhuMeasResultLst2CDMA2000_r9;

typedef struct NhuRLF_Report_r9measResultLastServCell_r9
{
 TknPres pres;
 NhuRSRP_Range rsrpResult_r9;
 NhuRSRQ_Range rsrqResult_r9;
} NhuRLF_Report_r9measResultLastServCell_r9;

typedef struct NhuRLF_Report_r9measResultNeighCells_r9
{
 TknPres pres;
 NhuMeasResultLst2EUTRA_r9 measResultLstEUTRA_r9;
 NhuMeasResultLst2UTRA_r9 measResultLstUTRA_r9;
 NhuMeasResultLstGERAN measResultLstGERAN_r9;
 NhuMeasResultLst2CDMA2000_r9 measResultsCDMA2000_r9;
} NhuRLF_Report_r9measResultNeighCells_r9;

typedef struct NhuRLF_Report_r9
{
 TknPres pres;
 NhuRLF_Report_r9measResultLastServCell_r9 measResultLastServCell_r9;
 NhuRLF_Report_r9measResultNeighCells_r9 measResultNeighCells_r9;
} NhuRLF_Report_r9;


typedef TknStrOSXL NhuUEInfoRsp_v930_IEslateNonCriticalExtn;
typedef struct NhuUEInfoRsp_v930_IEsnonCriticalExtn
{
 TknPres pres;
} NhuUEInfoRsp_v930_IEsnonCriticalExtn;

typedef struct NhuUEInfoRsp_v930_IEs
{
 TknPres pres;
 NhuUEInfoRsp_v930_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuUEInfoRsp_v930_IEsnonCriticalExtn nonCriticalExtn;
} NhuUEInfoRsp_v930_IEs;


typedef TknU32 NhuUEInfoRsp_r9_IEsrach_Report_r9numberOfPreamblesSent_r9;


typedef TknU8 NhuUEInfoRsp_r9_IEsrach_Report_r9contentionDetected_r9;

typedef struct NhuUEInfoRsp_r9_IEsrach_Report_r9
{
 TknPres pres;
 NhuUEInfoRsp_r9_IEsrach_Report_r9numberOfPreamblesSent_r9 numberOfPreamblesSent_r9;
 NhuUEInfoRsp_r9_IEsrach_Report_r9contentionDetected_r9 contentionDetected_r9;
} NhuUEInfoRsp_r9_IEsrach_Report_r9;

typedef struct NhuUEInfoRsp_r9_IEs
{
 TknPres pres;
 NhuUEInfoRsp_r9_IEsrach_Report_r9 rach_Report_r9;
 NhuRLF_Report_r9 rlfReport_r9;
 NhuUEInfoRsp_v930_IEs nonCriticalExtn;
} NhuUEInfoRsp_r9_IEs;

typedef struct NhuUEInfoRsp_r9criticalExtnsc1
{
 TknU8 choice;
 union {
  NhuUEInfoRsp_r9_IEs ueInfoRsp_r9;
 } val;
} NhuUEInfoRsp_r9criticalExtnsc1;

typedef struct NhuUEInfoRsp_r9criticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuUEInfoRsp_r9criticalExtnscriticalExtnsFuture;

typedef struct NhuUEInfoRsp_r9criticalExtns
{
 TknU8 choice;
 union {
  NhuUEInfoRsp_r9criticalExtnsc1 c1;
  NhuUEInfoRsp_r9criticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuUEInfoRsp_r9criticalExtns;

typedef struct NhuUEInfoRsp_r9
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuUEInfoRsp_r9criticalExtns criticalExtns;
} NhuUEInfoRsp_r9;


typedef TknStrOSXL NhuProximityInd_v930_IEslateNonCriticalExtn;
typedef struct NhuProximityInd_v930_IEsnonCriticalExtn
{
 TknPres pres;
} NhuProximityInd_v930_IEsnonCriticalExtn;

typedef struct NhuProximityInd_v930_IEs
{
 TknPres pres;
 NhuProximityInd_v930_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuProximityInd_v930_IEsnonCriticalExtn nonCriticalExtn;
} NhuProximityInd_v930_IEs;


typedef enum enumNhuProximityInd_r9_IEstype_r9
{
 NhuProximityInd_r9_IEstype_r9enteringEnum,
 NhuProximityInd_r9_IEstype_r9leavingEnum
} EnumNhuProximityInd_r9_IEstype_r9;
typedef TknU32 NhuProximityInd_r9_IEstype_r9;

typedef struct NhuProximityInd_r9_IEscarrierFreq_r9
{
 TknU8 choice;
 union {
  NhuARFCN_ValueEUTRA eutra_r9;
  NhuARFCN_ValueUTRA utra_r9;
 } val;
} NhuProximityInd_r9_IEscarrierFreq_r9;

typedef struct NhuProximityInd_r9_IEs
{
 TknPres pres;
 NhuProximityInd_r9_IEstype_r9 type_r9;
 NhuProximityInd_r9_IEscarrierFreq_r9 carrierFreq_r9;
 NhuProximityInd_v930_IEs nonCriticalExtn;
} NhuProximityInd_r9_IEs;

typedef struct NhuProximityInd_r9criticalExtnsc1
{
 TknU8 choice;
 union {
  NhuProximityInd_r9_IEs proximityInd_r9;
 } val;
} NhuProximityInd_r9criticalExtnsc1;

typedef struct NhuProximityInd_r9criticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuProximityInd_r9criticalExtnscriticalExtnsFuture;

typedef struct NhuProximityInd_r9criticalExtns
{
 TknU8 choice;
 union {
  NhuProximityInd_r9criticalExtnsc1 c1;
  NhuProximityInd_r9criticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuProximityInd_r9criticalExtns;

typedef struct NhuProximityInd_r9
{
 TknPres pres;
 NhuProximityInd_r9criticalExtns criticalExtns;
} NhuProximityInd_r9;

typedef struct NhuUL_DCCH_MsgTypc1
{
 TknU8 choice;
 union {
  NhuCSFBParamsRqstCDMA2000 csfbParamsRqstCDMA2000;
  NhuMeasurementReport measurementReport;
  NhuRRCConRecfgnCompl rrcConRecfgnCompl;
  NhuRRCConReestbCompl rrcConReestbCompl;
  NhuRRCConSetupCompl rrcConSetupCompl;
  NhuSecModeCompl securityModeCompl;
  NhuSecModeFail securityModeFail;
  NhuUECapInfo ueCapInfo;
  NhuULHovrPrepTfr ulHovrPrepTfr;
  NhuULInfoTfr ulInfoTfr;
  NhuCounterCheckRsp counterCheckRsp;
  NhuUEInfoRsp_r9 ueInfoRsp_r9;
  NhuProximityInd_r9 proximityInd_r9;
 } val;
} NhuUL_DCCH_MsgTypc1;

typedef struct NhuUL_DCCH_MsgTypmessageClassExtn
{
 TknPres pres;
} NhuUL_DCCH_MsgTypmessageClassExtn;

typedef struct NhuUL_DCCH_MsgTyp
{
 TknU8 choice;
 union {
  NhuUL_DCCH_MsgTypc1 c1;
  NhuUL_DCCH_MsgTypmessageClassExtn messageClassExtn;
 } val;
} NhuUL_DCCH_MsgTyp;

typedef struct NhuUL_DCCH_Msg
{
 TknPres pres;
 NhuUL_DCCH_MsgTyp message;
} NhuUL_DCCH_Msg;


typedef enum enumNhuAccessStratumRls
{
 NhuAccessStratumRlsrel8Enum,
 NhuAccessStratumRlsrel9Enum,
 NhuAccessStratumRlsspare6Enum,
 NhuAccessStratumRlsspare5Enum,
 NhuAccessStratumRlsspare4Enum,
 NhuAccessStratumRlsspare3Enum,
 NhuAccessStratumRlsspare2Enum,
 NhuAccessStratumRlsspare1Enum
} EnumNhuAccessStratumRls;
typedef TknU32 NhuAccessStratumRls;


typedef TknU8 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0001;


typedef TknU8 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0002;


typedef TknU8 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0003;


typedef TknU8 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0004;


typedef TknU8 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0006;


typedef TknU8 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0101;


typedef TknU8 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0102;


typedef TknU8 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0103;


typedef TknU8 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0104;

typedef struct NhuPDCP_ParamssupportedROHC_Profiles
{
 TknPres pres;
 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0001 profile0x0001;
 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0002 profile0x0002;
 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0003 profile0x0003;
 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0004 profile0x0004;
 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0006 profile0x0006;
 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0101 profile0x0101;
 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0102 profile0x0102;
 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0103 profile0x0103;
 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0104 profile0x0104;
} NhuPDCP_ParamssupportedROHC_Profiles;


typedef enum enumNhuPDCP_ParamsmaxNumberROHC_CtxtSessions
{
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionscs2Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionscs4Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionscs8Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionscs12Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionscs16Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionscs24Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionscs32Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionscs48Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionscs64Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionscs128Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionscs256Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionscs512Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionscs1024Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionscs16384Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionsspare2Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionsspare1Enum
} EnumNhuPDCP_ParamsmaxNumberROHC_CtxtSessions;
typedef TknU32 NhuPDCP_ParamsmaxNumberROHC_CtxtSessions;

typedef struct NhuPDCP_Params
{
 TknPres pres;
 NhuPDCP_ParamssupportedROHC_Profiles supportedROHC_Profiles;
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessions maxNumberROHC_CtxtSessions;
} NhuPDCP_Params;


typedef TknU8 NhuPhyLyrParamsue_TxAntennaSelectionSupp;


typedef TknU8 NhuPhyLyrParamsue_SpecificRefSigsSupp;

typedef struct NhuPhyLyrParams
{
 TknPres pres;
 NhuPhyLyrParamsue_TxAntennaSelectionSupp ue_TxAntennaSelectionSupp;
 NhuPhyLyrParamsue_SpecificRefSigsSupp ue_SpecificRefSigsSupp;
} NhuPhyLyrParams;


typedef TknU32 NhuSuppBandEUTRAbandEUTRA;


typedef TknU8 NhuSuppBandEUTRAhalfDuplex;

typedef struct NhuSuppBandEUTRA
{
 TknPres pres;
 NhuSuppBandEUTRAbandEUTRA bandEUTRA;
 NhuSuppBandEUTRAhalfDuplex halfDuplex;
} NhuSuppBandEUTRA;

typedef struct NhuSuppBandLstEUTRA
{
 TknU16 noComp;
 NhuSuppBandEUTRA *member;
}NhuSuppBandLstEUTRA;

typedef struct NhuRF_Params
{
 TknPres pres;
 NhuSuppBandLstEUTRA supportedBandLstEUTRA;
} NhuRF_Params;


typedef TknU8 NhuInterFreqBandInfointerFreqNeedForGaps;

typedef struct NhuInterFreqBandInfo
{
 TknPres pres;
 NhuInterFreqBandInfointerFreqNeedForGaps interFreqNeedForGaps;
} NhuInterFreqBandInfo;

typedef struct NhuInterFreqBandLst
{
 TknU16 noComp;
 NhuInterFreqBandInfo *member;
}NhuInterFreqBandLst;


typedef TknU8 NhuInterRAT_BandInfointerRAT_NeedForGaps;

typedef struct NhuInterRAT_BandInfo
{
 TknPres pres;
 NhuInterRAT_BandInfointerRAT_NeedForGaps interRAT_NeedForGaps;
} NhuInterRAT_BandInfo;

typedef struct NhuInterRAT_BandLst
{
 TknU16 noComp;
 NhuInterRAT_BandInfo *member;
}NhuInterRAT_BandLst;

typedef struct NhuBandInfoEUTRA
{
 TknPres pres;
 NhuInterFreqBandLst interFreqBandLst;
 NhuInterRAT_BandLst interRAT_BandLst;
} NhuBandInfoEUTRA;

typedef struct NhuBandLstEUTRA
{
 TknU16 noComp;
 NhuBandInfoEUTRA *member;
}NhuBandLstEUTRA;

typedef struct NhuMeasParams
{
 TknPres pres;
 NhuBandLstEUTRA bandLstEUTRA;
} NhuMeasParams;


typedef enum enumNhuSuppBandUTRA_FDD
{
 NhuSuppBandUTRA_FDDbandIEnum,
 NhuSuppBandUTRA_FDDbandIIEnum,
 NhuSuppBandUTRA_FDDbandIIIEnum,
 NhuSuppBandUTRA_FDDbandIVEnum,
 NhuSuppBandUTRA_FDDbandVEnum,
 NhuSuppBandUTRA_FDDbandVIEnum,
 NhuSuppBandUTRA_FDDbandVIIEnum,
 NhuSuppBandUTRA_FDDbandVIIIEnum,
 NhuSuppBandUTRA_FDDbandIXEnum,
 NhuSuppBandUTRA_FDDbandXEnum,
 NhuSuppBandUTRA_FDDbandXIEnum,
 NhuSuppBandUTRA_FDDbandXIIEnum,
 NhuSuppBandUTRA_FDDbandXIIIEnum,
 NhuSuppBandUTRA_FDDbandXIVEnum,
 NhuSuppBandUTRA_FDDbandXVEnum,
 NhuSuppBandUTRA_FDDbandXVIEnum,
 NhuSuppBandUTRA_FDDbandXVII_8a0Enum,
 NhuSuppBandUTRA_FDDbandXVIII_8a0Enum,
 NhuSuppBandUTRA_FDDbandXIX_8a0Enum,
 NhuSuppBandUTRA_FDDbandXX_8a0Enum,
 NhuSuppBandUTRA_FDDbandXXI_8a0Enum,
 NhuSuppBandUTRA_FDDbandXXII_8a0Enum,
 NhuSuppBandUTRA_FDDbandXXIII_8a0Enum,
 NhuSuppBandUTRA_FDDbandXXIV_8a0Enum,
 NhuSuppBandUTRA_FDDbandXXV_8a0Enum,
 NhuSuppBandUTRA_FDDbandXXVI_8a0Enum,
 NhuSuppBandUTRA_FDDbandXXVII_8a0Enum,
 NhuSuppBandUTRA_FDDbandXXVIII_8a0Enum,
 NhuSuppBandUTRA_FDDbandXXIX_8a0Enum,
 NhuSuppBandUTRA_FDDbandXXX_8a0Enum,
 NhuSuppBandUTRA_FDDbandXXXI_8a0Enum,
 NhuSuppBandUTRA_FDDbandXXXII_8a0Enum
} EnumNhuSuppBandUTRA_FDD;
typedef TknU32 NhuSuppBandUTRA_FDD;

typedef struct NhuSuppBandLstUTRA_FDD
{
 TknU16 noComp;
 NhuSuppBandUTRA_FDD *member;
}NhuSuppBandLstUTRA_FDD;

typedef struct NhuIRAT_ParamsUTRA_FDD
{
 TknPres pres;
 NhuSuppBandLstUTRA_FDD supportedBandLstUTRA_FDD;
} NhuIRAT_ParamsUTRA_FDD;


typedef enum enumNhuSuppBandUTRA_TDD128
{
 NhuSuppBandUTRA_TDD128aEnum,
 NhuSuppBandUTRA_TDD128bEnum,
 NhuSuppBandUTRA_TDD128cEnum,
 NhuSuppBandUTRA_TDD128dEnum,
 NhuSuppBandUTRA_TDD128eEnum,
 NhuSuppBandUTRA_TDD128fEnum,
 NhuSuppBandUTRA_TDD128gEnum,
 NhuSuppBandUTRA_TDD128hEnum,
 NhuSuppBandUTRA_TDD128iEnum,
 NhuSuppBandUTRA_TDD128jEnum,
 NhuSuppBandUTRA_TDD128kEnum,
 NhuSuppBandUTRA_TDD128lEnum,
 NhuSuppBandUTRA_TDD128mEnum,
 NhuSuppBandUTRA_TDD128nEnum,
 NhuSuppBandUTRA_TDD128oEnum,
 NhuSuppBandUTRA_TDD128pEnum
} EnumNhuSuppBandUTRA_TDD128;
typedef TknU32 NhuSuppBandUTRA_TDD128;

typedef struct NhuSuppBandLstUTRA_TDD128
{
 TknU16 noComp;
 NhuSuppBandUTRA_TDD128 *member;
}NhuSuppBandLstUTRA_TDD128;

typedef struct NhuIRAT_ParamsUTRA_TDD128
{
 TknPres pres;
 NhuSuppBandLstUTRA_TDD128 supportedBandLstUTRA_TDD128;
} NhuIRAT_ParamsUTRA_TDD128;


typedef enum enumNhuSuppBandUTRA_TDD384
{
 NhuSuppBandUTRA_TDD384aEnum,
 NhuSuppBandUTRA_TDD384bEnum,
 NhuSuppBandUTRA_TDD384cEnum,
 NhuSuppBandUTRA_TDD384dEnum,
 NhuSuppBandUTRA_TDD384eEnum,
 NhuSuppBandUTRA_TDD384fEnum,
 NhuSuppBandUTRA_TDD384gEnum,
 NhuSuppBandUTRA_TDD384hEnum,
 NhuSuppBandUTRA_TDD384iEnum,
 NhuSuppBandUTRA_TDD384jEnum,
 NhuSuppBandUTRA_TDD384kEnum,
 NhuSuppBandUTRA_TDD384lEnum,
 NhuSuppBandUTRA_TDD384mEnum,
 NhuSuppBandUTRA_TDD384nEnum,
 NhuSuppBandUTRA_TDD384oEnum,
 NhuSuppBandUTRA_TDD384pEnum
} EnumNhuSuppBandUTRA_TDD384;
typedef TknU32 NhuSuppBandUTRA_TDD384;

typedef struct NhuSuppBandLstUTRA_TDD384
{
 TknU16 noComp;
 NhuSuppBandUTRA_TDD384 *member;
}NhuSuppBandLstUTRA_TDD384;

typedef struct NhuIRAT_ParamsUTRA_TDD384
{
 TknPres pres;
 NhuSuppBandLstUTRA_TDD384 supportedBandLstUTRA_TDD384;
} NhuIRAT_ParamsUTRA_TDD384;


typedef enum enumNhuSuppBandUTRA_TDD768
{
 NhuSuppBandUTRA_TDD768aEnum,
 NhuSuppBandUTRA_TDD768bEnum,
 NhuSuppBandUTRA_TDD768cEnum,
 NhuSuppBandUTRA_TDD768dEnum,
 NhuSuppBandUTRA_TDD768eEnum,
 NhuSuppBandUTRA_TDD768fEnum,
 NhuSuppBandUTRA_TDD768gEnum,
 NhuSuppBandUTRA_TDD768hEnum,
 NhuSuppBandUTRA_TDD768iEnum,
 NhuSuppBandUTRA_TDD768jEnum,
 NhuSuppBandUTRA_TDD768kEnum,
 NhuSuppBandUTRA_TDD768lEnum,
 NhuSuppBandUTRA_TDD768mEnum,
 NhuSuppBandUTRA_TDD768nEnum,
 NhuSuppBandUTRA_TDD768oEnum,
 NhuSuppBandUTRA_TDD768pEnum
} EnumNhuSuppBandUTRA_TDD768;
typedef TknU32 NhuSuppBandUTRA_TDD768;

typedef struct NhuSuppBandLstUTRA_TDD768
{
 TknU16 noComp;
 NhuSuppBandUTRA_TDD768 *member;
}NhuSuppBandLstUTRA_TDD768;

typedef struct NhuIRAT_ParamsUTRA_TDD768
{
 TknPres pres;
 NhuSuppBandLstUTRA_TDD768 supportedBandLstUTRA_TDD768;
} NhuIRAT_ParamsUTRA_TDD768;


typedef enum enumNhuSuppBandGERAN
{
 NhuSuppBandGERANgsm450Enum,
 NhuSuppBandGERANgsm480Enum,
 NhuSuppBandGERANgsm710Enum,
 NhuSuppBandGERANgsm750Enum,
 NhuSuppBandGERANgsm810Enum,
 NhuSuppBandGERANgsm850Enum,
 NhuSuppBandGERANgsm900PEnum,
 NhuSuppBandGERANgsm900EEnum,
 NhuSuppBandGERANgsm900REnum,
 NhuSuppBandGERANgsm1800Enum,
 NhuSuppBandGERANgsm1900Enum,
 NhuSuppBandGERANspare5Enum,
 NhuSuppBandGERANspare4Enum,
 NhuSuppBandGERANspare3Enum,
 NhuSuppBandGERANspare2Enum,
 NhuSuppBandGERANspare1Enum
} EnumNhuSuppBandGERAN;
typedef TknU32 NhuSuppBandGERAN;

typedef struct NhuSuppBandLstGERAN
{
 TknU16 noComp;
 NhuSuppBandGERAN *member;
}NhuSuppBandLstGERAN;


typedef TknU8 NhuIRAT_ParamsGERANinterRAT_PS_HO_ToGERAN;

typedef struct NhuIRAT_ParamsGERAN
{
 TknPres pres;
 NhuSuppBandLstGERAN supportedBandLstGERAN;
 NhuIRAT_ParamsGERANinterRAT_PS_HO_ToGERAN interRAT_PS_HO_ToGERAN;
} NhuIRAT_ParamsGERAN;

typedef struct NhuSuppBandLstHRPD
{
 TknU16 noComp;
 NhuBandclassCDMA2000 *member;
}NhuSuppBandLstHRPD;


typedef enum enumNhuIRAT_ParamsCDMA2000_HRPDtx_ConfigHRPD
{
 NhuIRAT_ParamsCDMA2000_HRPDtx_ConfigHRPDsingleEnum,
 NhuIRAT_ParamsCDMA2000_HRPDtx_ConfigHRPDdualEnum
} EnumNhuIRAT_ParamsCDMA2000_HRPDtx_ConfigHRPD;
typedef TknU32 NhuIRAT_ParamsCDMA2000_HRPDtx_ConfigHRPD;


typedef enum enumNhuIRAT_ParamsCDMA2000_HRPDrx_ConfigHRPD
{
 NhuIRAT_ParamsCDMA2000_HRPDrx_ConfigHRPDsingleEnum,
 NhuIRAT_ParamsCDMA2000_HRPDrx_ConfigHRPDdualEnum
} EnumNhuIRAT_ParamsCDMA2000_HRPDrx_ConfigHRPD;
typedef TknU32 NhuIRAT_ParamsCDMA2000_HRPDrx_ConfigHRPD;

typedef struct NhuIRAT_ParamsCDMA2000_HRPD
{
 TknPres pres;
 NhuSuppBandLstHRPD supportedBandLstHRPD;
 NhuIRAT_ParamsCDMA2000_HRPDtx_ConfigHRPD tx_ConfigHRPD;
 NhuIRAT_ParamsCDMA2000_HRPDrx_ConfigHRPD rx_ConfigHRPD;
} NhuIRAT_ParamsCDMA2000_HRPD;

typedef struct NhuSuppBandLst1XRTT
{
 TknU16 noComp;
 NhuBandclassCDMA2000 *member;
}NhuSuppBandLst1XRTT;


typedef enum enumNhuIRAT_ParamsCDMA2000_1XRTTtx_Config1XRTT
{
 NhuIRAT_ParamsCDMA2000_1XRTTtx_Config1XRTTsingleEnum,
 NhuIRAT_ParamsCDMA2000_1XRTTtx_Config1XRTTdualEnum
} EnumNhuIRAT_ParamsCDMA2000_1XRTTtx_Config1XRTT;
typedef TknU32 NhuIRAT_ParamsCDMA2000_1XRTTtx_Config1XRTT;


typedef enum enumNhuIRAT_ParamsCDMA2000_1XRTTrx_Config1XRTT
{
 NhuIRAT_ParamsCDMA2000_1XRTTrx_Config1XRTTsingleEnum,
 NhuIRAT_ParamsCDMA2000_1XRTTrx_Config1XRTTdualEnum
} EnumNhuIRAT_ParamsCDMA2000_1XRTTrx_Config1XRTT;
typedef TknU32 NhuIRAT_ParamsCDMA2000_1XRTTrx_Config1XRTT;

typedef struct NhuIRAT_ParamsCDMA2000_1XRTT
{
 TknPres pres;
 NhuSuppBandLst1XRTT supportedBandLst1XRTT;
 NhuIRAT_ParamsCDMA2000_1XRTTtx_Config1XRTT tx_Config1XRTT;
 NhuIRAT_ParamsCDMA2000_1XRTTrx_Config1XRTT rx_Config1XRTT;
} NhuIRAT_ParamsCDMA2000_1XRTT;


typedef enum enumNhuPhyLyrParams_v920enhancedDualLyrFDD_r9
{
 NhuPhyLyrParams_v920enhancedDualLyrFDD_r9supportedEnum
} EnumNhuPhyLyrParams_v920enhancedDualLyrFDD_r9;
typedef TknU32 NhuPhyLyrParams_v920enhancedDualLyrFDD_r9;


typedef enum enumNhuPhyLyrParams_v920enhancedDualLyrTDD_r9
{
 NhuPhyLyrParams_v920enhancedDualLyrTDD_r9supportedEnum
} EnumNhuPhyLyrParams_v920enhancedDualLyrTDD_r9;
typedef TknU32 NhuPhyLyrParams_v920enhancedDualLyrTDD_r9;

typedef struct NhuPhyLyrParams_v920
{
 TknPres pres;
 NhuPhyLyrParams_v920enhancedDualLyrFDD_r9 enhancedDualLyrFDD_r9;
 NhuPhyLyrParams_v920enhancedDualLyrTDD_r9 enhancedDualLyrTDD_r9;
} NhuPhyLyrParams_v920;


typedef enum enumNhuIRAT_ParamsGERAN_v920dtm_r9
{
 NhuIRAT_ParamsGERAN_v920dtm_r9supportedEnum
} EnumNhuIRAT_ParamsGERAN_v920dtm_r9;
typedef TknU32 NhuIRAT_ParamsGERAN_v920dtm_r9;


typedef enum enumNhuIRAT_ParamsGERAN_v920e_RedirectionGERAN_r9
{
 NhuIRAT_ParamsGERAN_v920e_RedirectionGERAN_r9supportedEnum
} EnumNhuIRAT_ParamsGERAN_v920e_RedirectionGERAN_r9;
typedef TknU32 NhuIRAT_ParamsGERAN_v920e_RedirectionGERAN_r9;

typedef struct NhuIRAT_ParamsGERAN_v920
{
 TknPres pres;
 NhuIRAT_ParamsGERAN_v920dtm_r9 dtm_r9;
 NhuIRAT_ParamsGERAN_v920e_RedirectionGERAN_r9 e_RedirectionGERAN_r9;
} NhuIRAT_ParamsGERAN_v920;


typedef enum enumNhuIRAT_ParamsUTRA_v920e_RedirectionUTRA_r9
{
 NhuIRAT_ParamsUTRA_v920e_RedirectionUTRA_r9supportedEnum
} EnumNhuIRAT_ParamsUTRA_v920e_RedirectionUTRA_r9;
typedef TknU32 NhuIRAT_ParamsUTRA_v920e_RedirectionUTRA_r9;

typedef struct NhuIRAT_ParamsUTRA_v920
{
 TknPres pres;
 NhuIRAT_ParamsUTRA_v920e_RedirectionUTRA_r9 e_RedirectionUTRA_r9;
} NhuIRAT_ParamsUTRA_v920;


typedef enum enumNhuIRAT_ParamsCDMA2000_1XRTT_v920e_CSFB_1XRTT_r9
{
 NhuIRAT_ParamsCDMA2000_1XRTT_v920e_CSFB_1XRTT_r9supportedEnum
} EnumNhuIRAT_ParamsCDMA2000_1XRTT_v920e_CSFB_1XRTT_r9;
typedef TknU32 NhuIRAT_ParamsCDMA2000_1XRTT_v920e_CSFB_1XRTT_r9;


typedef enum enumNhuIRAT_ParamsCDMA2000_1XRTT_v920e_CSFB_ConcPS_Mob1XRTT_r9
{
 NhuIRAT_ParamsCDMA2000_1XRTT_v920e_CSFB_ConcPS_Mob1XRTT_r9supportedEnum
} EnumNhuIRAT_ParamsCDMA2000_1XRTT_v920e_CSFB_ConcPS_Mob1XRTT_r9;
typedef TknU32 NhuIRAT_ParamsCDMA2000_1XRTT_v920e_CSFB_ConcPS_Mob1XRTT_r9;

typedef struct NhuIRAT_ParamsCDMA2000_1XRTT_v920
{
 TknPres pres;
 NhuIRAT_ParamsCDMA2000_1XRTT_v920e_CSFB_1XRTT_r9 e_CSFB_1XRTT_r9;
 NhuIRAT_ParamsCDMA2000_1XRTT_v920e_CSFB_ConcPS_Mob1XRTT_r9 e_CSFB_ConcPS_Mob1XRTT_r9;
} NhuIRAT_ParamsCDMA2000_1XRTT_v920;


typedef enum enumNhuCSG_ProximityIndParams_r9intraFreqProximityInd_r9
{
 NhuCSG_ProximityIndParams_r9intraFreqProximityInd_r9supportedEnum
} EnumNhuCSG_ProximityIndParams_r9intraFreqProximityInd_r9;
typedef TknU32 NhuCSG_ProximityIndParams_r9intraFreqProximityInd_r9;


typedef enum enumNhuCSG_ProximityIndParams_r9interFreqProximityInd_r9
{
 NhuCSG_ProximityIndParams_r9interFreqProximityInd_r9supportedEnum
} EnumNhuCSG_ProximityIndParams_r9interFreqProximityInd_r9;
typedef TknU32 NhuCSG_ProximityIndParams_r9interFreqProximityInd_r9;


typedef enum enumNhuCSG_ProximityIndParams_r9utran_ProximityInd_r9
{
 NhuCSG_ProximityIndParams_r9utran_ProximityInd_r9supportedEnum
} EnumNhuCSG_ProximityIndParams_r9utran_ProximityInd_r9;
typedef TknU32 NhuCSG_ProximityIndParams_r9utran_ProximityInd_r9;

typedef struct NhuCSG_ProximityIndParams_r9
{
 TknPres pres;
 NhuCSG_ProximityIndParams_r9intraFreqProximityInd_r9 intraFreqProximityInd_r9;
 NhuCSG_ProximityIndParams_r9interFreqProximityInd_r9 interFreqProximityInd_r9;
 NhuCSG_ProximityIndParams_r9utran_ProximityInd_r9 utran_ProximityInd_r9;
} NhuCSG_ProximityIndParams_r9;


typedef enum enumNhuNeighCellSI_AcquisitionParams_r9intraFreqSI_AcquisitionForHO_r9
{
 NhuNeighCellSI_AcquisitionParams_r9intraFreqSI_AcquisitionForHO_r9supportedEnum
} EnumNhuNeighCellSI_AcquisitionParams_r9intraFreqSI_AcquisitionForHO_r9;
typedef TknU32 NhuNeighCellSI_AcquisitionParams_r9intraFreqSI_AcquisitionForHO_r9;


typedef enum enumNhuNeighCellSI_AcquisitionParams_r9interFreqSI_AcquisitionForHO_r9
{
 NhuNeighCellSI_AcquisitionParams_r9interFreqSI_AcquisitionForHO_r9supportedEnum
} EnumNhuNeighCellSI_AcquisitionParams_r9interFreqSI_AcquisitionForHO_r9;
typedef TknU32 NhuNeighCellSI_AcquisitionParams_r9interFreqSI_AcquisitionForHO_r9;


typedef enum enumNhuNeighCellSI_AcquisitionParams_r9utran_SI_AcquisitionForHO_r9
{
 NhuNeighCellSI_AcquisitionParams_r9utran_SI_AcquisitionForHO_r9supportedEnum
} EnumNhuNeighCellSI_AcquisitionParams_r9utran_SI_AcquisitionForHO_r9;
typedef TknU32 NhuNeighCellSI_AcquisitionParams_r9utran_SI_AcquisitionForHO_r9;

typedef struct NhuNeighCellSI_AcquisitionParams_r9
{
 TknPres pres;
 NhuNeighCellSI_AcquisitionParams_r9intraFreqSI_AcquisitionForHO_r9 intraFreqSI_AcquisitionForHO_r9;
 NhuNeighCellSI_AcquisitionParams_r9interFreqSI_AcquisitionForHO_r9 interFreqSI_AcquisitionForHO_r9;
 NhuNeighCellSI_AcquisitionParams_r9utran_SI_AcquisitionForHO_r9 utran_SI_AcquisitionForHO_r9;
} NhuNeighCellSI_AcquisitionParams_r9;


typedef enum enumNhuSON_Params_r9rach_Report_r9
{
 NhuSON_Params_r9rach_Report_r9supportedEnum
} EnumNhuSON_Params_r9rach_Report_r9;
typedef TknU32 NhuSON_Params_r9rach_Report_r9;

typedef struct NhuSON_Params_r9
{
 TknPres pres;
 NhuSON_Params_r9rach_Report_r9 rach_Report_r9;
} NhuSON_Params_r9;


typedef TknStrOSXL NhuUE_EUTRA_Cap_v940_IEslateNonCriticalExtn;
typedef struct NhuUE_EUTRA_Cap_v940_IEsnonCriticalExtn
{
 TknPres pres;
} NhuUE_EUTRA_Cap_v940_IEsnonCriticalExtn;

typedef struct NhuUE_EUTRA_Cap_v940_IEs
{
 TknPres pres;
 NhuUE_EUTRA_Cap_v940_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuUE_EUTRA_Cap_v940_IEsnonCriticalExtn nonCriticalExtn;
} NhuUE_EUTRA_Cap_v940_IEs;


typedef enum enumNhuUE_EUTRA_Cap_v920_IEsdeviceTyp_r9
{
 NhuUE_EUTRA_Cap_v920_IEsdeviceTyp_r9noBenFromBatConsumpOptEnum
} EnumNhuUE_EUTRA_Cap_v920_IEsdeviceTyp_r9;
typedef TknU32 NhuUE_EUTRA_Cap_v920_IEsdeviceTyp_r9;

typedef struct NhuUE_EUTRA_Cap_v920_IEs
{
 TknPres pres;
 NhuPhyLyrParams_v920 phyLyrParams_v920;
 NhuIRAT_ParamsGERAN_v920 interRAT_ParamsGERAN_v920;
 NhuIRAT_ParamsUTRA_v920 interRAT_ParamsUTRA_v920;
 NhuIRAT_ParamsCDMA2000_1XRTT_v920 interRAT_ParamsCDMA2000_v920;
 NhuUE_EUTRA_Cap_v920_IEsdeviceTyp_r9 deviceTyp_r9;
 NhuCSG_ProximityIndParams_r9 csg_ProximityIndParams_r9;
 NhuNeighCellSI_AcquisitionParams_r9 neighCellSI_AcquisitionParams_r9;
 NhuSON_Params_r9 son_Params_r9;
 NhuUE_EUTRA_Cap_v940_IEs nonCriticalExtn;
} NhuUE_EUTRA_Cap_v920_IEs;


typedef TknU32 NhuUE_EUTRA_Capue_Category;


typedef TknStrBSXL NhuUE_EUTRA_CapfeatureGroupIndicators;
typedef struct NhuUE_EUTRA_CapinterRAT_Params
{
 TknPres pres;
 NhuIRAT_ParamsUTRA_FDD utraFDD;
 NhuIRAT_ParamsUTRA_TDD128 utraTDD128;
 NhuIRAT_ParamsUTRA_TDD384 utraTDD384;
 NhuIRAT_ParamsUTRA_TDD768 utraTDD768;
 NhuIRAT_ParamsGERAN geran;
 NhuIRAT_ParamsCDMA2000_HRPD cdma2000_HRPD;
 NhuIRAT_ParamsCDMA2000_1XRTT cdma2000_1xRTT;
} NhuUE_EUTRA_CapinterRAT_Params;

typedef struct NhuUE_EUTRA_Cap
{
 TknPres pres;
 NhuAccessStratumRls accessStratumRls;
 NhuUE_EUTRA_Capue_Category ue_Category;
 NhuPDCP_Params pdcp_Params;
 NhuPhyLyrParams phyLyrParams;
 NhuRF_Params rf_Params;
 NhuMeasParams measParams;
 NhuUE_EUTRA_CapfeatureGroupIndicators featureGroupIndicators;
 NhuUE_EUTRA_CapinterRAT_Params interRAT_Params;
 NhuUE_EUTRA_Cap_v920_IEs nonCriticalExtn;
} NhuUE_EUTRA_Cap;

typedef struct NhuVarMeasConfigspeedStateParssetup
{
 TknPres pres;
 NhuMobilityStateParams mobilityStateParams;
 NhuSpeedStateScaleFactors timeToTrigger_SF;
} NhuVarMeasConfigspeedStateParssetup;

typedef struct NhuVarMeasConfigspeedStatePars
{
 TknU8 choice;
 union {
  NhuVarMeasConfigspeedStateParssetup setup;
 } val;
} NhuVarMeasConfigspeedStatePars;

typedef struct NhuVarMeasConfig
{
 TknPres pres;
 NhuMeasIdToAddModLst measIdLst;
 NhuMeasObjectToAddModLst measObjectLst;
 NhuReportConfigToAddModLst reportConfigLst;
 NhuQuantityConfig quantityConfig;
 NhuRSRP_Range s_Measure;
 NhuVarMeasConfigspeedStatePars speedStatePars;
} NhuVarMeasConfig;

typedef struct NhuCellsTriggeredLstMemberphysCellIdUTRA
{
 TknU8 choice;
 union {
  NhuPhysCellIdUTRA_FDD fdd;
  NhuPhysCellIdUTRA_TDD tdd;
 } val;
} NhuCellsTriggeredLstMemberphysCellIdUTRA;

typedef struct NhuCellsTriggeredLstMemberphysCellIdGERAN
{
 TknPres pres;
 NhuCarrierFreqGERAN carrierFreq;
 NhuPhysCellIdGERAN physCellId;
} NhuCellsTriggeredLstMemberphysCellIdGERAN;

typedef struct NhuCellsTriggeredLstMember
{
 TknU8 choice;
 union {
  NhuPhysCellId physCellIdEUTRA;
  NhuCellsTriggeredLstMemberphysCellIdUTRA physCellIdUTRA;
  NhuCellsTriggeredLstMemberphysCellIdGERAN physCellIdGERAN;
  NhuPhysCellIdCDMA2000 physCellIdCDMA2000;
 } val;
} NhuCellsTriggeredLstMember;

typedef struct NhuCellsTriggeredLst
{
 TknU16 noComp;
 NhuCellsTriggeredLstMember *member;
}NhuCellsTriggeredLst;

typedef TknU32 NhuVarMeasReportnumberOfReportsSent;

typedef struct NhuVarMeasReport
{
 TknPres pres;
 NhuMeasId measId;
 NhuCellsTriggeredLst cellsTriggeredLst;
 NhuVarMeasReportnumberOfReportsSent numberOfReportsSent;
} NhuVarMeasReport;

typedef struct NhuVarMeasReportLst
{
 TknU16 noComp;
 NhuVarMeasReport *member;
}NhuVarMeasReportLst;

typedef struct NhuVarShortMAC_Input
{
 TknPres pres;
 NhuCellIdentity cellIdentity;
 NhuPhysCellId physCellId;
 NhuC_RNTI c_RNTI;
} NhuVarShortMAC_Input;


typedef TknStrOSXL NhuHovrCmd_r8_IEshandoverCmdMsg;
typedef struct NhuHovrCmd_r8_IEsnonCriticalExtn
{
 TknPres pres;
} NhuHovrCmd_r8_IEsnonCriticalExtn;

typedef struct NhuHovrCmd_r8_IEs
{
 TknPres pres;
 NhuHovrCmd_r8_IEshandoverCmdMsg handoverCmdMsg;
 NhuHovrCmd_r8_IEsnonCriticalExtn nonCriticalExtn;
} NhuHovrCmd_r8_IEs;

typedef struct NhuHovrCmdcriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuHovrCmd_r8_IEs handoverCmd_r8;
 } val;
} NhuHovrCmdcriticalExtnsc1;

typedef struct NhuHovrCmdcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuHovrCmdcriticalExtnscriticalExtnsFuture;

typedef struct NhuHovrCmdcriticalExtns
{
 TknU8 choice;
 union {
  NhuHovrCmdcriticalExtnsc1 c1;
  NhuHovrCmdcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuHovrCmdcriticalExtns;

typedef struct NhuHovrCmd
{
 TknPres pres;
 NhuHovrCmdcriticalExtns criticalExtns;
} NhuHovrCmd;


typedef TknStrOSXL NhuAS_Configextaddgrp_r9sourceSysInfoBlockTyp1Ext;
typedef struct NhuAS_Configextaddgrp_r9
{
 TknPres pres;
 NhuAS_Configextaddgrp_r9sourceSysInfoBlockTyp1Ext sourceSysInfoBlockTyp1Ext;
 NhuOtherConfig_r9 sourceOtherConfig_r9;
} NhuAS_Configextaddgrp_r9;

typedef struct NhuAS_Config
{
 TknPres pres;
 NhuMeasConfig sourceMeasConfig;
 NhuRadioResourceConfigDedicated sourceRadioResourceConfig;
 NhuSecAlgorithmConfig sourceSecAlgorithmConfig;
 NhuC_RNTI sourceUE_Identity;
 NhuMasterInfoBlock sourceMasterInfoBlock;
 NhuSysInfoBlockTyp1 sourceSysInfoBlockTyp1;
 NhuSysInfoBlockTyp2 sourceSysInfoBlockTyp2;
 NhuAntennaInfoCmn antennaInfoCmn;
 NhuARFCN_ValueEUTRA sourceDl_CarrierFreq;
 NhuAS_Configextaddgrp_r9 extaddgrp_r9;
} NhuAS_Config;


typedef enum enumNhuRRM_Configue_InactiveTime
{
 NhuRRM_Configue_InactiveTimes1Enum,
 NhuRRM_Configue_InactiveTimes2Enum,
 NhuRRM_Configue_InactiveTimes3Enum,
 NhuRRM_Configue_InactiveTimes5Enum,
 NhuRRM_Configue_InactiveTimes7Enum,
 NhuRRM_Configue_InactiveTimes10Enum,
 NhuRRM_Configue_InactiveTimes15Enum,
 NhuRRM_Configue_InactiveTimes20Enum,
 NhuRRM_Configue_InactiveTimes25Enum,
 NhuRRM_Configue_InactiveTimes30Enum,
 NhuRRM_Configue_InactiveTimes40Enum,
 NhuRRM_Configue_InactiveTimes50Enum,
 NhuRRM_Configue_InactiveTimemin1Enum,
 NhuRRM_Configue_InactiveTimemin1s20cEnum,
 NhuRRM_Configue_InactiveTimemin1s40Enum,
 NhuRRM_Configue_InactiveTimemin2Enum,
 NhuRRM_Configue_InactiveTimemin2s30Enum,
 NhuRRM_Configue_InactiveTimemin3Enum,
 NhuRRM_Configue_InactiveTimemin3s30Enum,
 NhuRRM_Configue_InactiveTimemin4Enum,
 NhuRRM_Configue_InactiveTimemin5Enum,
 NhuRRM_Configue_InactiveTimemin6Enum,
 NhuRRM_Configue_InactiveTimemin7Enum,
 NhuRRM_Configue_InactiveTimemin8Enum,
 NhuRRM_Configue_InactiveTimemin9Enum,
 NhuRRM_Configue_InactiveTimemin10Enum,
 NhuRRM_Configue_InactiveTimemin12Enum,
 NhuRRM_Configue_InactiveTimemin14Enum,
 NhuRRM_Configue_InactiveTimemin17Enum,
 NhuRRM_Configue_InactiveTimemin20Enum,
 NhuRRM_Configue_InactiveTimemin24Enum,
 NhuRRM_Configue_InactiveTimemin28Enum,
 NhuRRM_Configue_InactiveTimemin33Enum,
 NhuRRM_Configue_InactiveTimemin38Enum,
 NhuRRM_Configue_InactiveTimemin44Enum,
 NhuRRM_Configue_InactiveTimemin50Enum,
 NhuRRM_Configue_InactiveTimehr1Enum,
 NhuRRM_Configue_InactiveTimehr1min30Enum,
 NhuRRM_Configue_InactiveTimehr2Enum,
 NhuRRM_Configue_InactiveTimehr2min30Enum,
 NhuRRM_Configue_InactiveTimehr3Enum,
 NhuRRM_Configue_InactiveTimehr3min30Enum,
 NhuRRM_Configue_InactiveTimehr4Enum,
 NhuRRM_Configue_InactiveTimehr5Enum,
 NhuRRM_Configue_InactiveTimehr6Enum,
 NhuRRM_Configue_InactiveTimehr8Enum,
 NhuRRM_Configue_InactiveTimehr10Enum,
 NhuRRM_Configue_InactiveTimehr13Enum,
 NhuRRM_Configue_InactiveTimehr16Enum,
 NhuRRM_Configue_InactiveTimehr20Enum,
 NhuRRM_Configue_InactiveTimeday1Enum,
 NhuRRM_Configue_InactiveTimeday1hr12Enum,
 NhuRRM_Configue_InactiveTimeday2Enum,
 NhuRRM_Configue_InactiveTimeday2hr12Enum,
 NhuRRM_Configue_InactiveTimeday3Enum,
 NhuRRM_Configue_InactiveTimeday4Enum,
 NhuRRM_Configue_InactiveTimeday5Enum,
 NhuRRM_Configue_InactiveTimeday7Enum,
 NhuRRM_Configue_InactiveTimeday10Enum,
 NhuRRM_Configue_InactiveTimeday14Enum,
 NhuRRM_Configue_InactiveTimeday19Enum,
 NhuRRM_Configue_InactiveTimeday24Enum,
 NhuRRM_Configue_InactiveTimeday30Enum,
 NhuRRM_Configue_InactiveTimedayMoreThan30Enum
} EnumNhuRRM_Configue_InactiveTime;
typedef TknU32 NhuRRM_Configue_InactiveTime;

typedef struct NhuRRM_Config
{
 TknPres pres;
 NhuRRM_Configue_InactiveTime ue_InactiveTime;
} NhuRRM_Config;


typedef TknStrBSXL NhuKey_eNodeB_Star;
typedef struct NhuAdditionalReestabInfo
{
 TknPres pres;
 NhuCellIdentity cellIdentity;
 NhuKey_eNodeB_Star key_eNodeB_Star;
 NhuShortMAC_I shortMAC_I;
} NhuAdditionalReestabInfo;

typedef struct NhuAdditionalReestabInfoLst
{
 TknU16 noComp;
 NhuAdditionalReestabInfo *member;
}NhuAdditionalReestabInfoLst;

typedef struct NhuReestbInfo
{
 TknPres pres;
 NhuPhysCellId sourcePhysCellId;
 NhuShortMAC_I targetCellShortMAC_I;
 NhuAdditionalReestabInfoLst additionalReestabInfoLst;
} NhuReestbInfo;

typedef struct NhuAS_Ctxt
{
 TknPres pres;
 NhuReestbInfo reestablishmentInfo;
} NhuAS_Ctxt;


typedef enum enumNhuHovrPrepInfo_v920_IEsue_ConfigRls_r9
{
 NhuHovrPrepInfo_v920_IEsue_ConfigRls_r9rel9Enum,
 NhuHovrPrepInfo_v920_IEsue_ConfigRls_r9spare7Enum,
 NhuHovrPrepInfo_v920_IEsue_ConfigRls_r9spare6Enum,
 NhuHovrPrepInfo_v920_IEsue_ConfigRls_r9spare5Enum,
 NhuHovrPrepInfo_v920_IEsue_ConfigRls_r9spare4Enum,
 NhuHovrPrepInfo_v920_IEsue_ConfigRls_r9spare3Enum,
 NhuHovrPrepInfo_v920_IEsue_ConfigRls_r9spare2Enum,
 NhuHovrPrepInfo_v920_IEsue_ConfigRls_r9spare1Enum
} EnumNhuHovrPrepInfo_v920_IEsue_ConfigRls_r9;
typedef TknU32 NhuHovrPrepInfo_v920_IEsue_ConfigRls_r9;

typedef struct NhuHovrPrepInfo_v920_IEsnonCriticalExtn
{
 TknPres pres;
} NhuHovrPrepInfo_v920_IEsnonCriticalExtn;

typedef struct NhuHovrPrepInfo_v920_IEs
{
 TknPres pres;
 NhuHovrPrepInfo_v920_IEsue_ConfigRls_r9 ue_ConfigRls_r9;
 NhuHovrPrepInfo_v920_IEsnonCriticalExtn nonCriticalExtn;
} NhuHovrPrepInfo_v920_IEs;

typedef struct NhuHovrPrepInfo_r8_IEs
{
 TknPres pres;
 NhuUE_CapRAT_ContLst ue_RadioAccessCapInfo;
 NhuAS_Config as_Config;
 NhuRRM_Config rrm_Config;
 NhuAS_Ctxt as_Ctxt;
 NhuHovrPrepInfo_v920_IEs nonCriticalExtn;
} NhuHovrPrepInfo_r8_IEs;

typedef struct NhuHovrPrepInfocriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuHovrPrepInfo_r8_IEs handoverPrepInfo_r8;
 } val;
} NhuHovrPrepInfocriticalExtnsc1;

typedef struct NhuHovrPrepInfocriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuHovrPrepInfocriticalExtnscriticalExtnsFuture;

typedef struct NhuHovrPrepInfocriticalExtns
{
 TknU8 choice;
 union {
  NhuHovrPrepInfocriticalExtnsc1 c1;
  NhuHovrPrepInfocriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuHovrPrepInfocriticalExtns;

typedef struct NhuHovrPrepInfo
{
 TknPres pres;
 NhuHovrPrepInfocriticalExtns criticalExtns;
} NhuHovrPrepInfo;


typedef TknStrOSXL NhuUERadioAccessCapInfo_r8_IEsue_RadioAccessCapInfo;
typedef struct NhuUERadioAccessCapInfo_r8_IEsnonCriticalExtn
{
 TknPres pres;
} NhuUERadioAccessCapInfo_r8_IEsnonCriticalExtn;

typedef struct NhuUERadioAccessCapInfo_r8_IEs
{
 TknPres pres;
 NhuUERadioAccessCapInfo_r8_IEsue_RadioAccessCapInfo ue_RadioAccessCapInfo;
 NhuUERadioAccessCapInfo_r8_IEsnonCriticalExtn nonCriticalExtn;
} NhuUERadioAccessCapInfo_r8_IEs;

typedef struct NhuUERadioAccessCapInfocriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuUERadioAccessCapInfo_r8_IEs ueRadioAccessCapInfo_r8;
 } val;
} NhuUERadioAccessCapInfocriticalExtnsc1;

typedef struct NhuUERadioAccessCapInfocriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuUERadioAccessCapInfocriticalExtnscriticalExtnsFuture;

typedef struct NhuUERadioAccessCapInfocriticalExtns
{
 TknU8 choice;
 union {
  NhuUERadioAccessCapInfocriticalExtnsc1 c1;
  NhuUERadioAccessCapInfocriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuUERadioAccessCapInfocriticalExtns;

typedef struct NhuUERadioAccessCapInfo
{
 TknPres pres;
 NhuUERadioAccessCapInfocriticalExtns criticalExtns;
} NhuUERadioAccessCapInfo;
# 114 "../..//cm/nhu.x" 2
# 1 "../..//cm/cm_mblk.x" 1
# 115 "../..//cm/nhu.x" 2
# 1 "../..//cm/cm_lte.x" 1
# 116 "../..//cm/nhu.x" 2

# 1 "../..//cm/nhu_3gasn.x" 1
# 89 "../..//cm/nhu_3gasn.x"
#define __NHU3GASNX__ 


typedef enum enumNhuMaxHcCtxtSpace
{
    NhuMaxHcCtxtSpacedummyEnum,
    NhuMaxHcCtxtSpaceby1024Enum,
    NhuMaxHcCtxtSpaceby2048Enum,
    NhuMaxHcCtxtSpaceby4096Enum,
    NhuMaxHcCtxtSpaceby8192Enum
} EnumNhuMaxHcCtxtSpace;
typedef TknU32 NhuMaxHcCtxtSpace;


typedef TknU8 NhuPDCP_CaplosslessSRNS_RelocationSupport;

typedef struct NhuPDCP_CapsupportForRfc2507
{
    TknU8 choice;
    union {
        NhuMaxHcCtxtSpace supported;
    } val;
} NhuPDCP_CapsupportForRfc2507;

typedef struct NhuPDCP_Cap
{
    TknPres pres;
    NhuPDCP_CaplosslessSRNS_RelocationSupport losslessSRNS_RelocationSupport;
    NhuPDCP_CapsupportForRfc2507 supportForRfc2507;
} NhuPDCP_Cap;


typedef enum enumNhuTotalRLC_AM_BufferSize
{
    NhuTotalRLC_AM_BufferSizedummyEnum,
    NhuTotalRLC_AM_BufferSizekb10Enum,
    NhuTotalRLC_AM_BufferSizekb50Enum,
    NhuTotalRLC_AM_BufferSizekb100Enum,
    NhuTotalRLC_AM_BufferSizekb150Enum,
    NhuTotalRLC_AM_BufferSizekb500Enum,
    NhuTotalRLC_AM_BufferSizekb1000Enum,
    NhuTotalRLC_AM_BufferSizespareEnum
} EnumNhuTotalRLC_AM_BufferSize;
typedef TknU32 NhuTotalRLC_AM_BufferSize;


typedef enum enumNhuMaxRLC_WindowSize
{
    NhuMaxRLC_WindowSizemws2047Enum,
    NhuMaxRLC_WindowSizemws4095Enum
} EnumNhuMaxRLC_WindowSize;
typedef TknU32 NhuMaxRLC_WindowSize;


typedef enum enumNhuMaxAM_EntityNumberRLC_Cap
{
    NhuMaxAM_EntityNumberRLC_CapdummyEnum,
    NhuMaxAM_EntityNumberRLC_Capam4Enum,
    NhuMaxAM_EntityNumberRLC_Capam5Enum,
    NhuMaxAM_EntityNumberRLC_Capam6Enum,
    NhuMaxAM_EntityNumberRLC_Capam8Enum,
    NhuMaxAM_EntityNumberRLC_Capam16Enum,
    NhuMaxAM_EntityNumberRLC_Capam30Enum
} EnumNhuMaxAM_EntityNumberRLC_Cap;
typedef TknU32 NhuMaxAM_EntityNumberRLC_Cap;

typedef struct NhuRLC_Cap
{
    TknPres pres;
    NhuTotalRLC_AM_BufferSize totalRLC_AM_BufferSize;
    NhuMaxRLC_WindowSize maximumRLC_WindowSize;
    NhuMaxAM_EntityNumberRLC_Cap maximumAM_EntityNumber;
} NhuRLC_Cap;


typedef enum enumNhuMaxNoBits
{
    NhuMaxNoBitsb640Enum,
    NhuMaxNoBitsb1280Enum,
    NhuMaxNoBitsb2560Enum,
    NhuMaxNoBitsb3840Enum,
    NhuMaxNoBitsb5120Enum,
    NhuMaxNoBitsb6400Enum,
    NhuMaxNoBitsb7680Enum,
    NhuMaxNoBitsb8960Enum,
    NhuMaxNoBitsb10240Enum,
    NhuMaxNoBitsb20480Enum,
    NhuMaxNoBitsb40960Enum,
    NhuMaxNoBitsb81920Enum,
    NhuMaxNoBitsb163840Enum
} EnumNhuMaxNoBits;
typedef TknU32 NhuMaxNoBits;

typedef struct NhuTurboSupport
{
    TknU8 choice;
    union {
        NhuMaxNoBits supported;
    } val;
} NhuTurboSupport;


typedef enum enumNhuMaxSimultaneousTransChsDL
{
    NhuMaxSimultaneousTransChsDLe4Enum,
    NhuMaxSimultaneousTransChsDLe8Enum,
    NhuMaxSimultaneousTransChsDLe16Enum,
    NhuMaxSimultaneousTransChsDLe32Enum
} EnumNhuMaxSimultaneousTransChsDL;
typedef TknU32 NhuMaxSimultaneousTransChsDL;


typedef TknU32 NhuMaxSimultaneousCCTrCH_Count;


typedef enum enumNhuMaxTportBlocksDL
{
    NhuMaxTportBlocksDLtb4Enum,
    NhuMaxTportBlocksDLtb8Enum,
    NhuMaxTportBlocksDLtb16Enum,
    NhuMaxTportBlocksDLtb32Enum,
    NhuMaxTportBlocksDLtb48Enum,
    NhuMaxTportBlocksDLtb64Enum,
    NhuMaxTportBlocksDLtb96Enum,
    NhuMaxTportBlocksDLtb128Enum,
    NhuMaxTportBlocksDLtb256Enum,
    NhuMaxTportBlocksDLtb512Enum
} EnumNhuMaxTportBlocksDL;
typedef TknU32 NhuMaxTportBlocksDL;


typedef enum enumNhuMaxNumberOfTFC_DL
{
    NhuMaxNumberOfTFC_DLtfc16Enum,
    NhuMaxNumberOfTFC_DLtfc32Enum,
    NhuMaxNumberOfTFC_DLtfc48Enum,
    NhuMaxNumberOfTFC_DLtfc64Enum,
    NhuMaxNumberOfTFC_DLtfc96Enum,
    NhuMaxNumberOfTFC_DLtfc128Enum,
    NhuMaxNumberOfTFC_DLtfc256Enum,
    NhuMaxNumberOfTFC_DLtfc512Enum,
    NhuMaxNumberOfTFC_DLtfc1024Enum
} EnumNhuMaxNumberOfTFC_DL;
typedef TknU32 NhuMaxNumberOfTFC_DL;


typedef enum enumNhuMaxNumberOfTF
{
    NhuMaxNumberOfTFtf32Enum,
    NhuMaxNumberOfTFtf64Enum,
    NhuMaxNumberOfTFtf128Enum,
    NhuMaxNumberOfTFtf256Enum,
    NhuMaxNumberOfTFtf512Enum,
    NhuMaxNumberOfTFtf1024Enum
} EnumNhuMaxNumberOfTF;
typedef TknU32 NhuMaxNumberOfTF;

typedef struct NhuDL_TransChCap
{
    TknPres pres;
    NhuMaxNoBits maxNoBitsReceived;
    NhuMaxNoBits maxConvCodeBitsReceived;
    NhuTurboSupport turboDecodingSupport;
    NhuMaxSimultaneousTransChsDL maxSimultaneousTransChs;
    NhuMaxSimultaneousCCTrCH_Count maxSimultaneousCCTrCH_Count;
    NhuMaxTportBlocksDL maxReceivedTportBlocks;
    NhuMaxNumberOfTFC_DL maxNumberOfTFC;
    NhuMaxNumberOfTF maxNumberOfTF;
} NhuDL_TransChCap;


typedef enum enumNhuMaxSimultaneousTransChsUL
{
    NhuMaxSimultaneousTransChsULdummyEnum,
    NhuMaxSimultaneousTransChsULe4Enum,
    NhuMaxSimultaneousTransChsULe8Enum,
    NhuMaxSimultaneousTransChsULe16Enum,
    NhuMaxSimultaneousTransChsULe32Enum
} EnumNhuMaxSimultaneousTransChsUL;
typedef TknU32 NhuMaxSimultaneousTransChsUL;


typedef enum enumNhuMaxTportBlocksUL
{
    NhuMaxTportBlocksULdummyEnum,
    NhuMaxTportBlocksULtb4Enum,
    NhuMaxTportBlocksULtb8Enum,
    NhuMaxTportBlocksULtb16Enum,
    NhuMaxTportBlocksULtb32Enum,
    NhuMaxTportBlocksULtb48Enum,
    NhuMaxTportBlocksULtb64Enum,
    NhuMaxTportBlocksULtb96Enum,
    NhuMaxTportBlocksULtb128Enum,
    NhuMaxTportBlocksULtb256Enum,
    NhuMaxTportBlocksULtb512Enum
} EnumNhuMaxTportBlocksUL;
typedef TknU32 NhuMaxTportBlocksUL;


typedef enum enumNhuMaxNumberOfTFC_UL
{
    NhuMaxNumberOfTFC_ULdummy1Enum,
    NhuMaxNumberOfTFC_ULdummy2Enum,
    NhuMaxNumberOfTFC_ULtfc16Enum,
    NhuMaxNumberOfTFC_ULtfc32Enum,
    NhuMaxNumberOfTFC_ULtfc48Enum,
    NhuMaxNumberOfTFC_ULtfc64Enum,
    NhuMaxNumberOfTFC_ULtfc96Enum,
    NhuMaxNumberOfTFC_ULtfc128Enum,
    NhuMaxNumberOfTFC_ULtfc256Enum,
    NhuMaxNumberOfTFC_ULtfc512Enum,
    NhuMaxNumberOfTFC_ULtfc1024Enum
} EnumNhuMaxNumberOfTFC_UL;
typedef TknU32 NhuMaxNumberOfTFC_UL;

typedef struct NhuUL_TransChCapmodeSpecificInfotdd
{
    TknPres pres;
    NhuMaxSimultaneousCCTrCH_Count maxSimultaneousCCTrCH_Count;
} NhuUL_TransChCapmodeSpecificInfotdd;

typedef struct NhuUL_TransChCapmodeSpecificInfo
{
    TknU8 choice;
    union {
        NhuUL_TransChCapmodeSpecificInfotdd tdd;
    } val;
} NhuUL_TransChCapmodeSpecificInfo;

typedef struct NhuUL_TransChCap
{
    TknPres pres;
    NhuMaxNoBits maxNoBitsTransmitted;
    NhuMaxNoBits maxConvCodeBitsTransmitted;
    NhuTurboSupport turboEncodingSupport;
    NhuMaxSimultaneousTransChsUL maxSimultaneousTransChs;
    NhuUL_TransChCapmodeSpecificInfo modeSpecificInfo;
    NhuMaxTportBlocksUL maxTransmittedBlocks;
    NhuMaxNumberOfTFC_UL maxNumberOfTFC;
    NhuMaxNumberOfTF maxNumberOfTF;
} NhuUL_TransChCap;

typedef struct NhuTportChannelCap
{
    TknPres pres;
    NhuDL_TransChCap dl_TransChCap;
    NhuUL_TransChCap ul_TransChCap;
} NhuTportChannelCap;


typedef TknU32 NhuUE_PowerClass;


typedef enum enumNhuTxRxFrequencySeparation
{
    NhuTxRxFrequencySeparationdefault_TxRx_separationEnum,
    NhuTxRxFrequencySeparationspare2Enum,
    NhuTxRxFrequencySeparationspare1Enum
} EnumNhuTxRxFrequencySeparation;
typedef TknU32 NhuTxRxFrequencySeparation;


typedef enum enumNhuRadioFrequencyBandTDDLst
{
    NhuRadioFrequencyBandTDDLstaEnum,
    NhuRadioFrequencyBandTDDLstbEnum,
    NhuRadioFrequencyBandTDDLstcEnum,
    NhuRadioFrequencyBandTDDLstabEnum,
    NhuRadioFrequencyBandTDDLstacEnum,
    NhuRadioFrequencyBandTDDLstbcEnum,
    NhuRadioFrequencyBandTDDLstabcEnum,
    NhuRadioFrequencyBandTDDLstspareEnum
} EnumNhuRadioFrequencyBandTDDLst;
typedef TknU32 NhuRadioFrequencyBandTDDLst;


typedef enum enumNhuChipRateCap
{
    NhuChipRateCapmcps3_84Enum,
    NhuChipRateCapmcps1_28Enum
} EnumNhuChipRateCap;
typedef TknU32 NhuChipRateCap;

typedef struct NhuRF_CapfddRF_Cap
{
    TknPres pres;
    NhuUE_PowerClass ue_PowerClass;
    NhuTxRxFrequencySeparation txRxFrequencySeparation;
} NhuRF_CapfddRF_Cap;

typedef struct NhuRF_CaptddRF_Cap
{
    TknPres pres;
    NhuUE_PowerClass ue_PowerClass;
    NhuRadioFrequencyBandTDDLst radioFrequencyTDDBandLst;
    NhuChipRateCap chipRateCap;
} NhuRF_CaptddRF_Cap;

typedef struct NhuRF_Cap
{
    TknPres pres;
    NhuRF_CapfddRF_Cap fddRF_Cap;
    NhuRF_CaptddRF_Cap tddRF_Cap;
} NhuRF_Cap;


typedef enum enumNhuMaxNoPhysChBitsReceived
{
    NhuMaxNoPhysChBitsReceiveddummyEnum,
    NhuMaxNoPhysChBitsReceivedb1200Enum,
    NhuMaxNoPhysChBitsReceivedb2400Enum,
    NhuMaxNoPhysChBitsReceivedb3600Enum,
    NhuMaxNoPhysChBitsReceivedb4800Enum,
    NhuMaxNoPhysChBitsReceivedb7200Enum,
    NhuMaxNoPhysChBitsReceivedb9600Enum,
    NhuMaxNoPhysChBitsReceivedb14400Enum,
    NhuMaxNoPhysChBitsReceivedb19200Enum,
    NhuMaxNoPhysChBitsReceivedb28800Enum,
    NhuMaxNoPhysChBitsReceivedb38400Enum,
    NhuMaxNoPhysChBitsReceivedb48000Enum,
    NhuMaxNoPhysChBitsReceivedb57600Enum,
    NhuMaxNoPhysChBitsReceivedb67200Enum,
    NhuMaxNoPhysChBitsReceivedb76800Enum
} EnumNhuMaxNoPhysChBitsReceived;
typedef TknU32 NhuMaxNoPhysChBitsReceived;


typedef enum enumNhuMaxNoSCCPCH_RL
{
    NhuMaxNoSCCPCH_RLrl1Enum
} EnumNhuMaxNoSCCPCH_RL;
typedef TknU32 NhuMaxNoSCCPCH_RL;


typedef TknU8 NhuSimultaneousSCCPCH_DPCH_ReceptionsupportedsimultaneousSCCPCH_DPCH_DPDCH_Reception;

typedef struct NhuSimultaneousSCCPCH_DPCH_Receptionsupported
{
    TknPres pres;
    NhuMaxNoSCCPCH_RL maxNoSCCPCH_RL;
    NhuSimultaneousSCCPCH_DPCH_ReceptionsupportedsimultaneousSCCPCH_DPCH_DPDCH_Reception simultaneousSCCPCH_DPCH_DPDCH_Reception;
} NhuSimultaneousSCCPCH_DPCH_Receptionsupported;

typedef struct NhuSimultaneousSCCPCH_DPCH_Reception
{
    TknU8 choice;
    union {
        NhuSimultaneousSCCPCH_DPCH_Receptionsupported supported;
    } val;
} NhuSimultaneousSCCPCH_DPCH_Reception;


typedef TknU32 NhuDL_PhysChCapFDDmaxNoDPCH_PDSCH_Codes;


typedef TknU8 NhuDL_PhysChCapFDDsupportForSF_512;


typedef TknU8 NhuDL_PhysChCapFDDdummy;

typedef struct NhuDL_PhysChCapFDD
{
    TknPres pres;
    NhuDL_PhysChCapFDDmaxNoDPCH_PDSCH_Codes maxNoDPCH_PDSCH_Codes;
    NhuMaxNoPhysChBitsReceived maxNoPhysChBitsReceived;
    NhuDL_PhysChCapFDDsupportForSF_512 supportForSF_512;
    NhuDL_PhysChCapFDDdummy dummy;
    NhuSimultaneousSCCPCH_DPCH_Reception dummy2;
} NhuDL_PhysChCapFDD;


typedef enum enumNhuMaxNoDPDCH_BitsTransmitted
{
    NhuMaxNoDPDCH_BitsTransmittedb600Enum,
    NhuMaxNoDPDCH_BitsTransmittedb1200Enum,
    NhuMaxNoDPDCH_BitsTransmittedb2400Enum,
    NhuMaxNoDPDCH_BitsTransmittedb4800Enum,
    NhuMaxNoDPDCH_BitsTransmittedb9600Enum,
    NhuMaxNoDPDCH_BitsTransmittedb19200Enum,
    NhuMaxNoDPDCH_BitsTransmittedb28800Enum,
    NhuMaxNoDPDCH_BitsTransmittedb38400Enum,
    NhuMaxNoDPDCH_BitsTransmittedb48000Enum,
    NhuMaxNoDPDCH_BitsTransmittedb57600Enum
} EnumNhuMaxNoDPDCH_BitsTransmitted;
typedef TknU32 NhuMaxNoDPDCH_BitsTransmitted;


typedef TknU8 NhuUL_PhysChCapFDDdummy;

typedef struct NhuUL_PhysChCapFDD
{
    TknPres pres;
    NhuMaxNoDPDCH_BitsTransmitted maxNoDPDCH_BitsTransmitted;
    NhuUL_PhysChCapFDDdummy dummy;
} NhuUL_PhysChCapFDD;


typedef TknU32 NhuMaxTS_PerFrame;


typedef TknU32 NhuMaxPhysChPerFrame;


typedef enum enumNhuMinimumSF_DL
{
    NhuMinimumSF_DLsf1Enum,
    NhuMinimumSF_DLsf16Enum
} EnumNhuMinimumSF_DL;
typedef TknU32 NhuMinimumSF_DL;


typedef TknU32 NhuMaxPhysChPerTS;


typedef TknU8 NhuDL_PhysChCapTDDsupportOfPDSCH;

typedef struct NhuDL_PhysChCapTDD
{
    TknPres pres;
    NhuMaxTS_PerFrame maxTS_PerFrame;
    NhuMaxPhysChPerFrame maxPhysChPerFrame;
    NhuMinimumSF_DL minimumSF;
    NhuDL_PhysChCapTDDsupportOfPDSCH supportOfPDSCH;
    NhuMaxPhysChPerTS maxPhysChPerTS;
} NhuDL_PhysChCapTDD;


typedef enum enumNhuMaxPhysChPerTimeslot
{
    NhuMaxPhysChPerTimeslotts1Enum,
    NhuMaxPhysChPerTimeslotts2Enum
} EnumNhuMaxPhysChPerTimeslot;
typedef TknU32 NhuMaxPhysChPerTimeslot;


typedef enum enumNhuMinimumSF_UL
{
    NhuMinimumSF_ULsf1Enum,
    NhuMinimumSF_ULsf2Enum,
    NhuMinimumSF_ULsf4Enum,
    NhuMinimumSF_ULsf8Enum,
    NhuMinimumSF_ULdummyEnum
} EnumNhuMinimumSF_UL;
typedef TknU32 NhuMinimumSF_UL;


typedef TknU8 NhuUL_PhysChCapTDDsupportOfPUSCH;

typedef struct NhuUL_PhysChCapTDD
{
    TknPres pres;
    NhuMaxTS_PerFrame maxTS_PerFrame;
    NhuMaxPhysChPerTimeslot maxPhysChPerTimeslot;
    NhuMinimumSF_UL minimumSF;
    NhuUL_PhysChCapTDDsupportOfPUSCH supportOfPUSCH;
} NhuUL_PhysChCapTDD;

typedef struct NhuPhysicalChannelCapfddPhysChCap
{
    TknPres pres;
    NhuDL_PhysChCapFDD downlinkPhysChCap;
    NhuUL_PhysChCapFDD uplinkPhysChCap;
} NhuPhysicalChannelCapfddPhysChCap;

typedef struct NhuPhysicalChannelCaptddPhysChCap
{
    TknPres pres;
    NhuDL_PhysChCapTDD downlinkPhysChCap;
    NhuUL_PhysChCapTDD uplinkPhysChCap;
} NhuPhysicalChannelCaptddPhysChCap;

typedef struct NhuPhysicalChannelCap
{
    TknPres pres;
    NhuPhysicalChannelCapfddPhysChCap fddPhysChCap;
    NhuPhysicalChannelCaptddPhysChCap tddPhysChCap;
} NhuPhysicalChannelCap;


typedef TknU8 NhuMultiRAT_CapsupportOfGSM;


typedef TknU8 NhuMultiRAT_CapsupportOfMulticarrier;

typedef struct NhuMultiRAT_Cap
{
    TknPres pres;
    NhuMultiRAT_CapsupportOfGSM supportOfGSM;
    NhuMultiRAT_CapsupportOfMulticarrier supportOfMulticarrier;
} NhuMultiRAT_Cap;


typedef enum enumNhuMultiModeCap
{
    NhuMultiModeCaptddEnum,
    NhuMultiModeCapfddEnum,
    NhuMultiModeCapfdd_tddEnum
} EnumNhuMultiModeCap;
typedef TknU32 NhuMultiModeCap;

typedef struct NhuUE_MultiModeRAT_Cap
{
    TknPres pres;
    NhuMultiRAT_Cap multiRAT_CapLst;
    NhuMultiModeCap multiModeCap;
} NhuUE_MultiModeRAT_Cap;


typedef TknStrBSXL NhuSecCapcipheringAlgorithmCap;

typedef TknStrBSXL NhuSecCapintegrityProtectionAlgorithmCap;
typedef struct NhuSecCap
{
    TknPres pres;
    NhuSecCapcipheringAlgorithmCap cipheringAlgorithmCap;
    NhuSecCapintegrityProtectionAlgorithmCap integrityProtectionAlgorithmCap;
} NhuSecCap;


typedef enum enumNhuNwAssistedGPS_Supp
{
    NhuNwAssistedGPS_SuppnetworkBasedEnum,
    NhuNwAssistedGPS_Suppue_BasedEnum,
    NhuNwAssistedGPS_SuppbothNwAndUE_BasedEnum,
    NhuNwAssistedGPS_SuppnoNwAssistedGPSEnum
} EnumNhuNwAssistedGPS_Supp;
typedef TknU32 NhuNwAssistedGPS_Supp;


typedef TknU8 NhuUE_Positioning_CapstandaloneLocMethodsSupp;


typedef TknU8 NhuUE_Positioning_Capue_BasedOTDOA_Supp;


typedef TknU8 NhuUE_Positioning_CapsupportForUE_GPS_TimingOfCellFrames;


typedef TknU8 NhuUE_Positioning_CapsupportForIPDL;

typedef struct NhuUE_Positioning_Cap
{
    TknPres pres;
    NhuUE_Positioning_CapstandaloneLocMethodsSupp standaloneLocMethodsSupp;
    NhuUE_Positioning_Capue_BasedOTDOA_Supp ue_BasedOTDOA_Supp;
    NhuNwAssistedGPS_Supp networkAssistedGPS_Supp;
    NhuUE_Positioning_CapsupportForUE_GPS_TimingOfCellFrames supportForUE_GPS_TimingOfCellFrames;
    NhuUE_Positioning_CapsupportForIPDL supportForIPDL;
} NhuUE_Positioning_Cap;


typedef TknU8 NhuGSM_Measurementsgsm900;


typedef TknU8 NhuGSM_Measurementsdcs1800;


typedef TknU8 NhuGSM_Measurementsgsm1900;

typedef struct NhuGSM_Measurements
{
    TknPres pres;
    NhuGSM_Measurementsgsm900 gsm900;
    NhuGSM_Measurementsdcs1800 dcs1800;
    NhuGSM_Measurementsgsm1900 gsm1900;
} NhuGSM_Measurements;


typedef TknU8 NhuCompressedModeMeasCapfdd_Measurements;


typedef TknU8 NhuCompressedModeMeasCaptdd_Measurements;


typedef TknU8 NhuCompressedModeMeasCapmultiCarrierMeasurements;

typedef struct NhuCompressedModeMeasCap
{
    TknPres pres;
    NhuCompressedModeMeasCapfdd_Measurements fdd_Measurements;
    NhuCompressedModeMeasCaptdd_Measurements tdd_Measurements;
    NhuGSM_Measurements gsm_Measurements;
    NhuCompressedModeMeasCapmultiCarrierMeasurements multiCarrierMeasurements;
} NhuCompressedModeMeasCap;

typedef struct NhuMeasurementCap
{
    TknPres pres;
    NhuCompressedModeMeasCap downlinkCompressedMode;
    NhuCompressedModeMeasCap uplinkCompressedMode;
} NhuMeasurementCap;

typedef struct NhuUE_RadioAccessCap
{
    TknPres pres;
    NhuPDCP_Cap pdcp_Cap;
    NhuRLC_Cap rlc_Cap;
    NhuTportChannelCap transportChannelCap;
    NhuRF_Cap rf_Cap;
    NhuPhysicalChannelCap physicalChannelCap;
    NhuUE_MultiModeRAT_Cap ue_MultiModeRAT_Cap;
    NhuSecCap securityCap;
    NhuUE_Positioning_Cap ue_positioning_Cap;
    NhuMeasurementCap measurementCap;
} NhuUE_RadioAccessCap;


typedef enum enumNhuRadioFrequencyBandFDD
{
    NhuRadioFrequencyBandFDDfdd2100Enum,
    NhuRadioFrequencyBandFDDfdd1900Enum,
    NhuRadioFrequencyBandFDDfdd1800Enum,
    NhuRadioFrequencyBandFDDbandVIEnum,
    NhuRadioFrequencyBandFDDbandIVEnum,
    NhuRadioFrequencyBandFDDbandVEnum,
    NhuRadioFrequencyBandFDDbandVIIEnum,
    NhuRadioFrequencyBandFDDextension_indicatorEnum
} EnumNhuRadioFrequencyBandFDD;
typedef TknU32 NhuRadioFrequencyBandFDD;


typedef enum enumNhuUE_PowerClassExt
{
    NhuUE_PowerClassExtclass1Enum,
    NhuUE_PowerClassExtclass2Enum,
    NhuUE_PowerClassExtclass3Enum,
    NhuUE_PowerClassExtclass4Enum,
    NhuUE_PowerClassExtspare4Enum,
    NhuUE_PowerClassExtspare3Enum,
    NhuUE_PowerClassExtspare2Enum,
    NhuUE_PowerClassExtspare1Enum
} EnumNhuUE_PowerClassExt;
typedef TknU32 NhuUE_PowerClassExt;


typedef TknU8 NhuCompressedModeMeasCapabFDDdl_MeasurementsFDD;


typedef TknU8 NhuCompressedModeMeasCapabFDDul_MeasurementsFDD;

typedef struct NhuCompressedModeMeasCapabFDD
{
    TknPres pres;
    NhuRadioFrequencyBandFDD radioFrequencyBandFDD;
    NhuCompressedModeMeasCapabFDDdl_MeasurementsFDD dl_MeasurementsFDD;
    NhuCompressedModeMeasCapabFDDul_MeasurementsFDD ul_MeasurementsFDD;
} NhuCompressedModeMeasCapabFDD;

typedef struct NhuCompressedModeMeasCapabFDDLst
{
    TknU16 noComp;
    NhuCompressedModeMeasCapabFDD *member;
}NhuCompressedModeMeasCapabFDDLst;


typedef enum enumNhuRadioFrequencyBandTDD
{
    NhuRadioFrequencyBandTDDaEnum,
    NhuRadioFrequencyBandTDDbEnum,
    NhuRadioFrequencyBandTDDcEnum,
    NhuRadioFrequencyBandTDDdEnum
} EnumNhuRadioFrequencyBandTDD;
typedef TknU32 NhuRadioFrequencyBandTDD;


typedef TknU8 NhuCompressedModeMeasCapabTDDdl_MeasurementsTDD;


typedef TknU8 NhuCompressedModeMeasCapabTDDul_MeasurementsTDD;

typedef struct NhuCompressedModeMeasCapabTDD
{
    TknPres pres;
    NhuRadioFrequencyBandTDD radioFrequencyBandTDD;
    NhuCompressedModeMeasCapabTDDdl_MeasurementsTDD dl_MeasurementsTDD;
    NhuCompressedModeMeasCapabTDDul_MeasurementsTDD ul_MeasurementsTDD;
} NhuCompressedModeMeasCapabTDD;

typedef struct NhuCompressedModeMeasCapabTDDLst
{
    TknU16 noComp;
    NhuCompressedModeMeasCapabTDD *member;
}NhuCompressedModeMeasCapabTDDLst;


typedef enum enumNhuRadioFrequencyBandGSM
{
    NhuRadioFrequencyBandGSMgsm450Enum,
    NhuRadioFrequencyBandGSMgsm480Enum,
    NhuRadioFrequencyBandGSMgsm850Enum,
    NhuRadioFrequencyBandGSMgsm900PEnum,
    NhuRadioFrequencyBandGSMgsm900EEnum,
    NhuRadioFrequencyBandGSMgsm1800Enum,
    NhuRadioFrequencyBandGSMgsm1900Enum,
    NhuRadioFrequencyBandGSMspare9Enum,
    NhuRadioFrequencyBandGSMspare8Enum,
    NhuRadioFrequencyBandGSMspare7Enum,
    NhuRadioFrequencyBandGSMspare6Enum,
    NhuRadioFrequencyBandGSMspare5Enum,
    NhuRadioFrequencyBandGSMspare4Enum,
    NhuRadioFrequencyBandGSMspare3Enum,
    NhuRadioFrequencyBandGSMspare2Enum,
    NhuRadioFrequencyBandGSMspare1Enum
} EnumNhuRadioFrequencyBandGSM;
typedef TknU32 NhuRadioFrequencyBandGSM;


typedef TknU8 NhuCompressedModeMeasCapabGSMdl_MeasurementsGSM;


typedef TknU8 NhuCompressedModeMeasCapabGSMul_MeasurementsGSM;

typedef struct NhuCompressedModeMeasCapabGSM
{
    TknPres pres;
    NhuRadioFrequencyBandGSM radioFrequencyBandGSM;
    NhuCompressedModeMeasCapabGSMdl_MeasurementsGSM dl_MeasurementsGSM;
    NhuCompressedModeMeasCapabGSMul_MeasurementsGSM ul_MeasurementsGSM;
} NhuCompressedModeMeasCapabGSM;

typedef struct NhuCompressedModeMeasCapabGSMLst
{
    TknU16 noComp;
    NhuCompressedModeMeasCapabGSM *member;
}NhuCompressedModeMeasCapabGSMLst;


typedef TknU8 NhuCompressedModeMeasCapabMCdl_MeasurementsMC;


typedef TknU8 NhuCompressedModeMeasCapabMCul_MeasurementsMC;

typedef struct NhuCompressedModeMeasCapabMC
{
    TknPres pres;
    NhuCompressedModeMeasCapabMCdl_MeasurementsMC dl_MeasurementsMC;
    NhuCompressedModeMeasCapabMCul_MeasurementsMC ul_MeasurementsMC;
} NhuCompressedModeMeasCapabMC;

typedef struct NhuMeasurementCapExt
{
    TknPres pres;
    NhuCompressedModeMeasCapabFDDLst compressedModeMeasCapabFDDLst;
    NhuCompressedModeMeasCapabTDDLst compressedModeMeasCapabTDDLst;
    NhuCompressedModeMeasCapabGSMLst compressedModeMeasCapabGSMLst;
    NhuCompressedModeMeasCapabMC compressedModeMeasCapabMC;
} NhuMeasurementCapExt;

typedef struct NhuUE_RadioAccessCapabBandFDDfddRF_Cap
{
    TknPres pres;
    NhuUE_PowerClassExt ue_PowerClass;
    NhuTxRxFrequencySeparation txRxFrequencySeparation;
} NhuUE_RadioAccessCapabBandFDDfddRF_Cap;

typedef struct NhuUE_RadioAccessCapabBandFDD
{
    TknPres pres;
    NhuRadioFrequencyBandFDD radioFrequencyBandFDD;
    NhuUE_RadioAccessCapabBandFDDfddRF_Cap fddRF_Cap;
    NhuMeasurementCapExt measurementCap;
} NhuUE_RadioAccessCapabBandFDD;

typedef struct NhuUE_RadioAccessCapabBandFDDLst
{
    TknU16 noComp;
    NhuUE_RadioAccessCapabBandFDD *member;
}NhuUE_RadioAccessCapabBandFDDLst;

typedef struct NhuUE_RadioAccessCap_v370ext
{
    TknPres pres;
    NhuUE_RadioAccessCapabBandFDDLst ue_RadioAccessCapabBandFDDLst;
} NhuUE_RadioAccessCap_v370ext;

typedef struct NhuUTRANUE_RadioAccessCapInfo
{
    TknPres pres;
    NhuUE_RadioAccessCap ue_RadioAccessCap;
    NhuUE_RadioAccessCap_v370ext ue_RadioAccessCap_v370ext;
} NhuUTRANUE_RadioAccessCapInfo;


typedef TknU32 NhuPredefinedConfigValueTag;

typedef struct NhuPredefinedConfigStatusInfoother
{
    TknU8 choice;
    union {
        NhuPredefinedConfigValueTag storedWithDifferentValueTag;
    } val;
} NhuPredefinedConfigStatusInfoother;

typedef struct NhuPredefinedConfigStatusInfo
{
    TknU8 choice;
    union {
        NhuPredefinedConfigStatusInfoother other;
    } val;
} NhuPredefinedConfigStatusInfo;

typedef struct NhuPredefinedConfigStatusLst
{
    TknU16 noComp;
    NhuPredefinedConfigStatusInfo *member;
}NhuPredefinedConfigStatusLst;


typedef TknStrBSXL NhuSTART_Value;
typedef struct NhuUE_SecInfo
{
    TknPres pres;
    NhuSTART_Value start_CS;
} NhuUE_SecInfo;


typedef TknU8 NhuUE_PositioningCapExt_v380rx_tx_TimeDifferenceTyp2Capable;

typedef struct NhuUE_PositioningCapExt_v380
{
    TknPres pres;
    NhuUE_PositioningCapExt_v380rx_tx_TimeDifferenceTyp2Capable rx_tx_TimeDifferenceTyp2Capable;
} NhuUE_PositioningCapExt_v380;

typedef struct NhuUE_RadioAccessCap_v380ext
{
    TknPres pres;
    NhuUE_PositioningCapExt_v380 ue_PositioningCapExt_v380;
} NhuUE_RadioAccessCap_v380ext;


typedef enum enumNhuSupportOfDedicatedPilotsForChEstimation
{
    NhuSupportOfDedicatedPilotsForChEstimationtrueEnum
} EnumNhuSupportOfDedicatedPilotsForChEstimation;
typedef TknU32 NhuSupportOfDedicatedPilotsForChEstimation;

typedef struct NhuDL_PhysChCapFDD_v380ext
{
    TknPres pres;
    NhuSupportOfDedicatedPilotsForChEstimation dummy;
} NhuDL_PhysChCapFDD_v380ext;

typedef struct NhuInterRATHovrInfo_v390ext_IEs
{
    TknPres pres;
    NhuUE_RadioAccessCap_v380ext ue_RadioAccessCap_v380ext;
    NhuDL_PhysChCapFDD_v380ext dl_PhysChCapFDD_v380ext;
} NhuInterRATHovrInfo_v390ext_IEs;


typedef enum enumNhuUE_PositioningCapExt_v3a0validity_CellPCH_UraPCH
{
    NhuUE_PositioningCapExt_v3a0validity_CellPCH_UraPCHtrueEnum
} EnumNhuUE_PositioningCapExt_v3a0validity_CellPCH_UraPCH;
typedef TknU32 NhuUE_PositioningCapExt_v3a0validity_CellPCH_UraPCH;

typedef struct NhuUE_PositioningCapExt_v3a0
{
    TknPres pres;
    NhuUE_PositioningCapExt_v3a0validity_CellPCH_UraPCH validity_CellPCH_UraPCH;
} NhuUE_PositioningCapExt_v3a0;

typedef struct NhuUE_RadioAccessCap_v3a0ext
{
    TknPres pres;
    NhuUE_PositioningCapExt_v3a0 ue_PositioningCapExt_v3a0;
} NhuUE_RadioAccessCap_v3a0ext;

typedef struct NhuInterRATHovrInfo_v3a0ext_IEs
{
    TknPres pres;
    NhuUE_RadioAccessCap_v3a0ext ue_RadioAccessCap_v3a0ext;
} NhuInterRATHovrInfo_v3a0ext_IEs;


typedef TknStrBSXL NhuUESpecificBehaviourInfo1interRAT;
typedef struct NhuInterRATHovrInfo_v3d0ext_IEs
{
    TknPres pres;
    NhuUESpecificBehaviourInfo1interRAT uESpecificBehaviourInfo1interRAT;
} NhuInterRATHovrInfo_v3d0ext_IEs;


typedef enum enumNhuUE_PositioningCapExt_v3g0sfn_sfnTyp2Cap
{
    NhuUE_PositioningCapExt_v3g0sfn_sfnTyp2CaptrueEnum
} EnumNhuUE_PositioningCapExt_v3g0sfn_sfnTyp2Cap;
typedef TknU32 NhuUE_PositioningCapExt_v3g0sfn_sfnTyp2Cap;

typedef struct NhuUE_PositioningCapExt_v3g0
{
    TknPres pres;
    NhuUE_PositioningCapExt_v3g0sfn_sfnTyp2Cap sfn_sfnTyp2Cap;
} NhuUE_PositioningCapExt_v3g0;

typedef struct NhuUE_RadioAccessCap_v3g0ext
{
    TknPres pres;
    NhuUE_PositioningCapExt_v3g0 ue_PositioningCapExt_v3g0;
} NhuUE_RadioAccessCap_v3g0ext;

typedef struct NhuInterRATHovrInfo_v3g0ext_IEs
{
    TknPres pres;
    NhuUE_RadioAccessCap_v3g0ext ue_RadioAccessCap_v3g0ext;
} NhuInterRATHovrInfo_v3g0ext_IEs;


typedef enum enumNhuAccessStratumRlsIndicator
{
    NhuAccessStratumRlsIndicatorrel_4Enum,
    NhuAccessStratumRlsIndicatorrel_5Enum,
    NhuAccessStratumRlsIndicatorrel_6Enum,
    NhuAccessStratumRlsIndicatorrel_7Enum,
    NhuAccessStratumRlsIndicatorspare12Enum,
    NhuAccessStratumRlsIndicatorspare11Enum,
    NhuAccessStratumRlsIndicatorspare10Enum,
    NhuAccessStratumRlsIndicatorspare9Enum,
    NhuAccessStratumRlsIndicatorspare8Enum,
    NhuAccessStratumRlsIndicatorspare7Enum,
    NhuAccessStratumRlsIndicatorspare6Enum,
    NhuAccessStratumRlsIndicatorspare5Enum,
    NhuAccessStratumRlsIndicatorspare4Enum,
    NhuAccessStratumRlsIndicatorspare3Enum,
    NhuAccessStratumRlsIndicatorspare2Enum,
    NhuAccessStratumRlsIndicatorspare1Enum
} EnumNhuAccessStratumRlsIndicator;
typedef TknU32 NhuAccessStratumRlsIndicator;

typedef struct NhuInterRATHovrInfo_v4b0ext_IEs
{
    TknPres pres;
    NhuAccessStratumRlsIndicator accessStratumRlsIndicator;
} NhuInterRATHovrInfo_v4b0ext_IEs;

typedef struct NhuInterRATHovrInfo_v4d0ext_IEs
{
    TknPres pres;
    NhuRadioFrequencyBandTDDLst tdd128_RF_Cap;
} NhuInterRATHovrInfo_v4d0ext_IEs;

typedef struct NhuPredefinedConfigValueTagLst
{
    TknU16 noComp;
    NhuPredefinedConfigValueTag *member;
}NhuPredefinedConfigValueTagLst;


typedef TknU32 NhuPredefinedConfigSetWithDifferentValueTagstartPosition;

typedef struct NhuPredefinedConfigSetWithDifferentValueTag
{
    TknPres pres;
    NhuPredefinedConfigSetWithDifferentValueTagstartPosition startPosition;
    NhuPredefinedConfigValueTagLst valueTagLst;
} NhuPredefinedConfigSetWithDifferentValueTag;

typedef struct NhuPredefinedConfigSetsWithDifferentValueTag
{
    TknU16 noComp;
    NhuPredefinedConfigSetWithDifferentValueTag *member;
}NhuPredefinedConfigSetsWithDifferentValueTag;

typedef struct NhuPredefinedConfigStatusLstVarSz
{
    TknU16 noComp;
    NhuPredefinedConfigStatusInfo *member;
}NhuPredefinedConfigStatusLstVarSz;

typedef struct NhuPredefinedConfigStatusLstComp
{
    TknPres pres;
    NhuPredefinedConfigSetsWithDifferentValueTag setsWithDifferentValueTag;
    NhuPredefinedConfigStatusLstVarSz otherEntries;
} NhuPredefinedConfigStatusLstComp;


typedef enum enumNhuRF_CapabBandFDDComp
{
    NhuRF_CapabBandFDDCompnotSuppEnum,
    NhuRF_CapabBandFDDCompdefault_TxRx_separationEnum,
    NhuRF_CapabBandFDDCompspare2Enum,
    NhuRF_CapabBandFDDCompspare1Enum
} EnumNhuRF_CapabBandFDDComp;
typedef TknU32 NhuRF_CapabBandFDDComp;

typedef struct NhuRF_CapabBandLstFDDComp
{
    TknU16 noComp;
    NhuRF_CapabBandFDDComp *member;
}NhuRF_CapabBandLstFDDComp;

typedef struct NhuRF_CapCompfdd
{
    TknU8 choice;
    union {
        NhuRF_CapabBandLstFDDComp supported;
    } val;
} NhuRF_CapCompfdd;

typedef struct NhuRF_CapComptdd384_RF_Cap
{
    TknU8 choice;
    union {
        NhuRadioFrequencyBandTDDLst supported;
    } val;
} NhuRF_CapComptdd384_RF_Cap;

typedef struct NhuRF_CapComptdd128_RF_Cap
{
    TknU8 choice;
    union {
        NhuRadioFrequencyBandTDDLst supported;
    } val;
} NhuRF_CapComptdd128_RF_Cap;

typedef struct NhuRF_CapComp
{
    TknPres pres;
    NhuRF_CapCompfdd fdd;
    NhuRF_CapComptdd384_RF_Cap tdd384_RF_Cap;
    NhuRF_CapComptdd128_RF_Cap tdd128_RF_Cap;
} NhuRF_CapComp;


typedef TknU8 NhuUE_RadioAccessCapComptotalAM_RLCMemoryExceeds10kB;

typedef struct NhuUE_RadioAccessCapComp
{
    TknPres pres;
    NhuUE_RadioAccessCapComptotalAM_RLCMemoryExceeds10kB totalAM_RLCMemoryExceeds10kB;
    NhuRF_CapComp rf_CapComp;
} NhuUE_RadioAccessCapComp;

typedef struct NhuInterRATHovrInfo_v590ext_IEs
{
    TknPres pres;
    NhuPredefinedConfigStatusLstComp predefinedConfigStatusLstComp;
    NhuUE_RadioAccessCapComp ue_RadioAccessCapComp;
} NhuInterRATHovrInfo_v590ext_IEs;

typedef struct NhuUE_SecInfo2
{
    TknPres pres;
    NhuSTART_Value start_PS;
} NhuUE_SecInfo2;

typedef struct NhuRF_CapabBandLstFDDComp_ext
{
    TknU16 noComp;
    NhuRF_CapabBandFDDComp *member;
}NhuRF_CapabBandLstFDDComp_ext;

typedef struct NhuUE_RadioAccessCapComp_ext
{
    TknPres pres;
    NhuRF_CapabBandLstFDDComp_ext rf_CapFDDComp;
} NhuUE_RadioAccessCapComp_ext;


typedef enum enumNhuDL_CapWithSimultaneousHS_DSCHConfig
{
    NhuDL_CapWithSimultaneousHS_DSCHConfigkbps32Enum,
    NhuDL_CapWithSimultaneousHS_DSCHConfigkbps64Enum,
    NhuDL_CapWithSimultaneousHS_DSCHConfigkbps128Enum,
    NhuDL_CapWithSimultaneousHS_DSCHConfigkbps384Enum
} EnumNhuDL_CapWithSimultaneousHS_DSCHConfig;
typedef TknU32 NhuDL_CapWithSimultaneousHS_DSCHConfig;


typedef TknU32 NhuHSDSCH_physical_layer_category;


typedef TknU32 NhuPhysicalChannelCap_edch_r6fdd_edchsupportededch_PhysicalLyrCategory;

typedef struct NhuPhysicalChannelCap_edch_r6fdd_edchsupported
{
    TknPres pres;
    NhuPhysicalChannelCap_edch_r6fdd_edchsupportededch_PhysicalLyrCategory edch_PhysicalLyrCategory;
} NhuPhysicalChannelCap_edch_r6fdd_edchsupported;

typedef struct NhuPhysicalChannelCap_edch_r6fdd_edch
{
    TknU8 choice;
    union {
        NhuPhysicalChannelCap_edch_r6fdd_edchsupported supported;
    } val;
} NhuPhysicalChannelCap_edch_r6fdd_edch;

typedef struct NhuPhysicalChannelCap_edch_r6
{
    TknPres pres;
    NhuPhysicalChannelCap_edch_r6fdd_edch fdd_edch;
} NhuPhysicalChannelCap_edch_r6;

typedef struct NhuUE_RadioAccessCapComp2fddPhysicalChannelCapab_hspdsch_edch
{
    TknPres pres;
    NhuDL_CapWithSimultaneousHS_DSCHConfig dl_CapWithSimultaneousHS_DSCHConfig;
    NhuHSDSCH_physical_layer_category physicalChannelCapabComp_hspdsch_r6;
    NhuPhysicalChannelCap_edch_r6 physicalChannelCap_edch_r6;
} NhuUE_RadioAccessCapComp2fddPhysicalChannelCapab_hspdsch_edch;

typedef struct NhuUE_RadioAccessCapComp2
{
    TknPres pres;
    NhuUE_RadioAccessCapComp2fddPhysicalChannelCapab_hspdsch_edch fddPhysicalChannelCapab_hspdsch_edch;
} NhuUE_RadioAccessCapComp2;

typedef struct NhuInterRATHovrInfo_v690ext_IEs
{
    TknPres pres;
    NhuUE_SecInfo2 ue_SecInfo2;
    NhuUE_RadioAccessCapComp_ext ue_RadioAccessCapComp;
    NhuUE_RadioAccessCapComp2 ue_RadioAccessCapComp2;
} NhuInterRATHovrInfo_v690ext_IEs;


typedef enum enumNhuInterRATHovrInfo_v6b0ext_IEssupportForSIB11bis
{
    NhuInterRATHovrInfo_v6b0ext_IEssupportForSIB11bistrueEnum
} EnumNhuInterRATHovrInfo_v6b0ext_IEssupportForSIB11bis;
typedef TknU32 NhuInterRATHovrInfo_v6b0ext_IEssupportForSIB11bis;

typedef struct NhuInterRATHovrInfo_v6b0ext_IEs
{
    TknPres pres;
    NhuInterRATHovrInfo_v6b0ext_IEssupportForSIB11bis supportForSIB11bis;
} NhuInterRATHovrInfo_v6b0ext_IEs;

typedef struct NhuUTRANInterRATHovrInfopredefinedConfigStatusLst
{
    TknU8 choice;
    union {
        NhuPredefinedConfigStatusLst present;
    } val;
} NhuUTRANInterRATHovrInfopredefinedConfigStatusLst;

typedef struct NhuUTRANInterRATHovrInfouE_SecInfo
{
    TknU8 choice;
    union {
        NhuUE_SecInfo present;
    } val;
} NhuUTRANInterRATHovrInfouE_SecInfo;


typedef TknStrOSXL NhuUTRANInterRATHovrInfoue_CapContpresent;
typedef struct NhuUTRANInterRATHovrInfoue_CapCont
{
    TknU8 choice;
    union {
        NhuUTRANInterRATHovrInfoue_CapContpresent present;
    } val;
} NhuUTRANInterRATHovrInfoue_CapCont;


typedef TknStrBSXL NhuUTRANInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsinterRATHovrInfo_r3_add_ext;
typedef struct NhuUTRANInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv4d0NonCriticalExtnsv590NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsnonCriticalExtns
{
    TknPres pres;
} NhuUTRANInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv4d0NonCriticalExtnsv590NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsnonCriticalExtns;

typedef struct NhuUTRANInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv4d0NonCriticalExtnsv590NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtns
{
    TknPres pres;
    NhuInterRATHovrInfo_v6b0ext_IEs interRATHovrInfo_v6b0ext;
    NhuUTRANInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv4d0NonCriticalExtnsv590NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsnonCriticalExtns nonCriticalExtns;
} NhuUTRANInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv4d0NonCriticalExtnsv590NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtns;

typedef struct NhuUTRANInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv4d0NonCriticalExtnsv590NonCriticalExtnsv690NonCriticalExtns
{
    TknPres pres;
    NhuInterRATHovrInfo_v690ext_IEs interRATHovrInfo_v690ext;
    NhuUTRANInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv4d0NonCriticalExtnsv590NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtns v6b0NonCriticalExtns;
} NhuUTRANInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv4d0NonCriticalExtnsv590NonCriticalExtnsv690NonCriticalExtns;

typedef struct NhuUTRANInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv4d0NonCriticalExtnsv590NonCriticalExtns
{
    TknPres pres;
    NhuInterRATHovrInfo_v590ext_IEs interRATHovrInfo_v590ext;
    NhuUTRANInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv4d0NonCriticalExtnsv590NonCriticalExtnsv690NonCriticalExtns v690NonCriticalExtns;
} NhuUTRANInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv4d0NonCriticalExtnsv590NonCriticalExtns;

typedef struct NhuUTRANInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv4d0NonCriticalExtns
{
    TknPres pres;
    NhuInterRATHovrInfo_v4d0ext_IEs interRATHovrInfo_v4d0ext;
    NhuUTRANInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv4d0NonCriticalExtnsv590NonCriticalExtns v590NonCriticalExtns;
} NhuUTRANInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv4d0NonCriticalExtns;

typedef struct NhuUTRANInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtns
{
    TknPres pres;
    NhuInterRATHovrInfo_v4b0ext_IEs interRATHovrInfo_v4b0ext;
    NhuUTRANInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv4d0NonCriticalExtns v4d0NonCriticalExtns;
} NhuUTRANInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtns;

typedef struct NhuUTRANInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtns
{
    TknPres pres;
    NhuInterRATHovrInfo_v3g0ext_IEs interRATHovrInfo_v3g0ext;
    NhuUTRANInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtns v4b0NonCriticalExtns;
} NhuUTRANInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtns;

typedef struct NhuUTRANInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtns
{
    TknPres pres;
    NhuInterRATHovrInfo_v3d0ext_IEs interRATHovrInfo_v3d0ext;
    NhuUTRANInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsinterRATHovrInfo_r3_add_ext interRATHovrInfo_r3_add_ext;
    NhuUTRANInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtns v3g0NonCriticalExtns;
} NhuUTRANInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtns;

typedef struct NhuUTRANInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtns
{
    TknPres pres;
    NhuInterRATHovrInfo_v3a0ext_IEs interRATHovrInfo_v3a0ext;
    NhuUTRANInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtns laterNonCriticalExtns;
} NhuUTRANInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtns;

typedef struct NhuUTRANInterRATHovrInfov390NonCriticalExtnspresent
{
    TknPres pres;
    NhuInterRATHovrInfo_v390ext_IEs interRATHovrInfo_v390ext;
    NhuUTRANInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtns v3a0NonCriticalExtns;
} NhuUTRANInterRATHovrInfov390NonCriticalExtnspresent;

typedef struct NhuUTRANInterRATHovrInfov390NonCriticalExtns
{
    TknU8 choice;
    union {
        NhuUTRANInterRATHovrInfov390NonCriticalExtnspresent present;
    } val;
} NhuUTRANInterRATHovrInfov390NonCriticalExtns;

typedef struct NhuUTRANInterRATHovrInfo
{
    TknPres pres;
    NhuUTRANInterRATHovrInfopredefinedConfigStatusLst predefinedConfigStatusLst;
    NhuUTRANInterRATHovrInfouE_SecInfo uE_SecInfo;
    NhuUTRANInterRATHovrInfoue_CapCont ue_CapCont;
    NhuUTRANInterRATHovrInfov390NonCriticalExtns v390NonCriticalExtns;
} NhuUTRANInterRATHovrInfo;


typedef enum enumNhuRadioFrequencyBandFDD2
{
    NhuRadioFrequencyBandFDD2bandVIIIEnum,
    NhuRadioFrequencyBandFDD2bandIXEnum,
    NhuRadioFrequencyBandFDD2bandXEnum,
    NhuRadioFrequencyBandFDD2bandXIEnum,
    NhuRadioFrequencyBandFDD2bandXIIEnum,
    NhuRadioFrequencyBandFDD2bandXIIIEnum,
    NhuRadioFrequencyBandFDD2bandXIVEnum,
    NhuRadioFrequencyBandFDD2bandXVEnum,
    NhuRadioFrequencyBandFDD2bandXVIEnum,
    NhuRadioFrequencyBandFDD2bandXVIIEnum,
    NhuRadioFrequencyBandFDD2bandXVIIIEnum,
    NhuRadioFrequencyBandFDD2bandXIXEnum,
    NhuRadioFrequencyBandFDD2bandXXEnum,
    NhuRadioFrequencyBandFDD2bandXXIEnum,
    NhuRadioFrequencyBandFDD2bandXXIIEnum,
    NhuRadioFrequencyBandFDD2extension_indicatorEnum
} EnumNhuRadioFrequencyBandFDD2;
typedef TknU32 NhuRadioFrequencyBandFDD2;


typedef TknU8 NhuCompressedModeMeasCapabFDD2dl_MeasurementsFDD;


typedef TknU8 NhuCompressedModeMeasCapabFDD2ul_MeasurementsFDD;

typedef struct NhuCompressedModeMeasCapabFDD2
{
    TknPres pres;
    NhuRadioFrequencyBandFDD radioFrequencyBandFDD;
    NhuRadioFrequencyBandFDD2 radioFrequencyBandFDD2;
    NhuCompressedModeMeasCapabFDD2dl_MeasurementsFDD dl_MeasurementsFDD;
    NhuCompressedModeMeasCapabFDD2ul_MeasurementsFDD ul_MeasurementsFDD;
} NhuCompressedModeMeasCapabFDD2;

typedef struct NhuCompressedModeMeasCapabFDDLst2
{
    TknU16 noComp;
    NhuCompressedModeMeasCapabFDD2 *member;
}NhuCompressedModeMeasCapabFDDLst2;

typedef struct NhuMeasurementCapExt2
{
    TknPres pres;
    NhuCompressedModeMeasCapabFDDLst2 compressedModeMeasCapabFDDLst;
    NhuCompressedModeMeasCapabTDDLst compressedModeMeasCapabTDDLst;
    NhuCompressedModeMeasCapabGSMLst compressedModeMeasCapabGSMLst;
    NhuCompressedModeMeasCapabMC compressedModeMeasCapabMC;
} NhuMeasurementCapExt2;

typedef struct NhuUE_RadioAccessCapabBandFDD2fddRF_Cap
{
    TknPres pres;
    NhuUE_PowerClassExt ue_PowerClass;
    NhuTxRxFrequencySeparation txRxFrequencySeparation;
} NhuUE_RadioAccessCapabBandFDD2fddRF_Cap;

typedef struct NhuUE_RadioAccessCapabBandFDD2
{
    TknPres pres;
    NhuRadioFrequencyBandFDD2 radioFrequencyBandFDD2;
    NhuUE_RadioAccessCapabBandFDD2fddRF_Cap fddRF_Cap;
    NhuMeasurementCapExt2 measurementCap2;
} NhuUE_RadioAccessCapabBandFDD2;

typedef struct NhuUE_RadioAccessCapabBandFDDLst2
{
    TknU16 noComp;
    NhuUE_RadioAccessCapabBandFDD2 *member;
}NhuUE_RadioAccessCapabBandFDDLst2;


typedef TknU8 NhuCompressedModeMeasCapabFDD_extdl_MeasurementsFDD;


typedef TknU8 NhuCompressedModeMeasCapabFDD_extul_MeasurementsFDD;

typedef struct NhuCompressedModeMeasCapabFDD_ext
{
    TknPres pres;
    NhuRadioFrequencyBandFDD2 radioFrequencyBandFDD2;
    NhuCompressedModeMeasCapabFDD_extdl_MeasurementsFDD dl_MeasurementsFDD;
    NhuCompressedModeMeasCapabFDD_extul_MeasurementsFDD ul_MeasurementsFDD;
} NhuCompressedModeMeasCapabFDD_ext;

typedef struct NhuCompressedModeMeasCapabFDDLst_ext
{
    TknU16 noComp;
    NhuCompressedModeMeasCapabFDD_ext *member;
}NhuCompressedModeMeasCapabFDDLst_ext;

typedef struct NhuUE_RadioAccessCapabBandFDD_ext
{
    TknPres pres;
    NhuRadioFrequencyBandFDD radioFrequencyBandFDD;
    NhuCompressedModeMeasCapabFDDLst_ext compressedModeMeasCapabFDDLst_ext;
} NhuUE_RadioAccessCapabBandFDD_ext;

typedef struct NhuUE_RadioAccessCapabBandFDDLst_ext
{
    TknU16 noComp;
    NhuUE_RadioAccessCapabBandFDD_ext *member;
}NhuUE_RadioAccessCapabBandFDDLst_ext;

typedef struct NhuUE_RadioAccessCap_v650ext
{
    TknPres pres;
    NhuUE_RadioAccessCapabBandFDDLst2 ue_RadioAccessCapabBandFDDLst2;
    NhuUE_RadioAccessCapabBandFDDLst_ext ue_RadioAccessCapabBandFDDLst_ext;
} NhuUE_RadioAccessCap_v650ext;

typedef struct NhuInterRATHovrInfo_v690ext1_IEs
{
    TknPres pres;
    NhuUE_RadioAccessCap_v650ext ue_RadioAccessCap_v650ext;
} NhuInterRATHovrInfo_v690ext1_IEs;

typedef struct NhuInterRATHovrInfo_r3_add_ext_IEsnonCriticalExtns
{
    TknPres pres;
} NhuInterRATHovrInfo_r3_add_ext_IEsnonCriticalExtns;

typedef struct NhuInterRATHovrInfo_r3_add_ext_IEs
{
    TknPres pres;
    NhuInterRATHovrInfo_v690ext1_IEs interRATHovrInfo_v690ext1;
    NhuInterRATHovrInfo_r3_add_ext_IEsnonCriticalExtns nonCriticalExtns;
} NhuInterRATHovrInfo_r3_add_ext_IEs;


typedef enum enumNhuRadioFrequencyBandTDDLst_r7
{
    NhuRadioFrequencyBandTDDLst_r7aEnum,
    NhuRadioFrequencyBandTDDLst_r7bEnum,
    NhuRadioFrequencyBandTDDLst_r7cEnum,
    NhuRadioFrequencyBandTDDLst_r7dEnum,
    NhuRadioFrequencyBandTDDLst_r7abEnum,
    NhuRadioFrequencyBandTDDLst_r7acEnum,
    NhuRadioFrequencyBandTDDLst_r7adEnum,
    NhuRadioFrequencyBandTDDLst_r7bcEnum,
    NhuRadioFrequencyBandTDDLst_r7bdEnum,
    NhuRadioFrequencyBandTDDLst_r7cdEnum,
    NhuRadioFrequencyBandTDDLst_r7abcEnum,
    NhuRadioFrequencyBandTDDLst_r7abdEnum,
    NhuRadioFrequencyBandTDDLst_r7acdEnum,
    NhuRadioFrequencyBandTDDLst_r7bcdEnum,
    NhuRadioFrequencyBandTDDLst_r7abcdEnum,
    NhuRadioFrequencyBandTDDLst_r7spareEnum
} EnumNhuRadioFrequencyBandTDDLst_r7;
typedef TknU32 NhuRadioFrequencyBandTDDLst_r7;


typedef enum enumNhuChipRateCap_r7
{
    NhuChipRateCap_r7mcps3_84Enum,
    NhuChipRateCap_r7mcps7_68Enum,
    NhuChipRateCap_r7mcps1_28Enum
} EnumNhuChipRateCap_r7;
typedef TknU32 NhuChipRateCap_r7;

typedef struct NhuRF_Cap_r7fddRF_Cap
{
    TknPres pres;
    NhuUE_PowerClass ue_PowerClass;
    NhuTxRxFrequencySeparation txRxFrequencySeparation;
} NhuRF_Cap_r7fddRF_Cap;

typedef struct NhuRF_Cap_r7tddRF_Cap
{
    TknPres pres;
    NhuUE_PowerClass ue_PowerClass;
    NhuRadioFrequencyBandTDDLst_r7 radioFrequencyTDDBandLst;
    NhuChipRateCap_r7 chipRateCap;
} NhuRF_Cap_r7tddRF_Cap;

typedef struct NhuRF_Cap_r7
{
    TknPres pres;
    NhuRF_Cap_r7fddRF_Cap fddRF_Cap;
    NhuRF_Cap_r7tddRF_Cap tddRF_Cap;
} NhuRF_Cap_r7;


typedef TknU32 NhuMaxPhysChPerFrame_768;


typedef enum enumNhuMinimumSF_DL_768
{
    NhuMinimumSF_DL_768sf1Enum,
    NhuMinimumSF_DL_768sf32Enum
} EnumNhuMinimumSF_DL_768;
typedef TknU32 NhuMinimumSF_DL_768;


typedef TknU32 NhuMaxPhysChPerTS_768;


typedef TknU8 NhuDL_PhysChCapTDD_768supportOfPDSCH;

typedef struct NhuDL_PhysChCapTDD_768
{
    TknPres pres;
    NhuMaxTS_PerFrame maxTS_PerFrame;
    NhuMaxPhysChPerFrame_768 maxPhysChPerFrame;
    NhuMinimumSF_DL_768 minimumSF;
    NhuDL_PhysChCapTDD_768supportOfPDSCH supportOfPDSCH;
    NhuMaxPhysChPerTS_768 maxPhysChPerTS;
} NhuDL_PhysChCapTDD_768;

typedef struct NhuPhysicalChannelCap_r7fddPhysChCap
{
    TknPres pres;
    NhuDL_PhysChCapFDD downlinkPhysChCap;
    NhuUL_PhysChCapFDD uplinkPhysChCap;
} NhuPhysicalChannelCap_r7fddPhysChCap;

typedef struct NhuPhysicalChannelCap_r7tddPhysChCap
{
    TknPres pres;
    NhuDL_PhysChCapTDD downlinkPhysChCap;
    NhuUL_PhysChCapTDD uplinkPhysChCap;
} NhuPhysicalChannelCap_r7tddPhysChCap;

typedef struct NhuPhysicalChannelCap_r7tddPhysChCap_768
{
    TknPres pres;
    NhuDL_PhysChCapTDD_768 downlinkPhysChCap;
    NhuUL_PhysChCapTDD uplinkPhysChCap;
} NhuPhysicalChannelCap_r7tddPhysChCap_768;

typedef struct NhuPhysicalChannelCap_r7
{
    TknPres pres;
    NhuPhysicalChannelCap_r7fddPhysChCap fddPhysChCap;
    NhuPhysicalChannelCap_r7tddPhysChCap tddPhysChCap;
    NhuPhysicalChannelCap_r7tddPhysChCap_768 tddPhysChCap_768;
} NhuPhysicalChannelCap_r7;


typedef TknU32 NhuPhysicalChannelCap_tddedch_r7tdd_edchsupportedtdd_edch_PhysicalLyrCategory;

typedef struct NhuPhysicalChannelCap_tddedch_r7tdd_edchsupported
{
    TknPres pres;
    NhuPhysicalChannelCap_tddedch_r7tdd_edchsupportedtdd_edch_PhysicalLyrCategory tdd_edch_PhysicalLyrCategory;
} NhuPhysicalChannelCap_tddedch_r7tdd_edchsupported;

typedef struct NhuPhysicalChannelCap_tddedch_r7tdd_edch
{
    TknU8 choice;
    union {
        NhuPhysicalChannelCap_tddedch_r7tdd_edchsupported supported;
    } val;
} NhuPhysicalChannelCap_tddedch_r7tdd_edch;

typedef struct NhuPhysicalChannelCap_tddedch_r7
{
    TknPres pres;
    NhuPhysicalChannelCap_tddedch_r7tdd_edch tdd_edch;
} NhuPhysicalChannelCap_tddedch_r7;

typedef struct NhuUE_RadioAccessCap_v7xyext
{
    TknPres pres;
    NhuRF_Cap_r7 rf_Cap;
    NhuPhysicalChannelCap_r7 physicalChannelCap_r7;
    NhuPhysicalChannelCap_tddedch_r7 physicalchannelcapability_tddedch;
} NhuUE_RadioAccessCap_v7xyext;
# 118 "../..//cm/nhu.x" 2





typedef struct nhuRbId
{
   U8 rbId;
   U8 rbTyp;
}NhuRbId;





typedef U8 NhuPdcpId;





typedef U16 NhuCrnti;






typedef U16 NhuCellId;





typedef enum nhuRbType
{
   NHU_RB_COMMON,
   NHU_RB_DEDICATED
} NhuRbType;





typedef enum nhuTargetRatTyp
{
   NHU_RAT_TGT_UTRA,
   NHU_RAT_TGT_GERAN,
   NHU_RAT_TGT_CDMA2K_1XRTT,
   NHU_RAT_TGT_CDMA2K_HRPD
} NhuTargetRatTyp;






typedef enum nhuSIWindowLen
{
   NHU_SI_WINDOW_LEN_MS1,
   NHU_SI_WINDOW_LEN_MS2,
   NHU_SI_WINDOW_LEN_MS5,
   NHU_SI_WINDOW_LEN_MS10,
   NHU_SI_WINDOW_LEN_MS15,
   NHU_SI_WINDOW_LEN_MS20,
   NHU_SI_WINDOW_LEN_MS40
} NhuSIWindowLen;





typedef enum nhuSIPeriodicity
{
   NHU_SI_PERIOD_RF8,
   NHU_SI_PERIOD_RF16,
   NHU_SI_PERIOD_RF32,
   NHU_SI_PERIOD_RF64,
   NHU_SI_PERIOD_RF128,
   NHU_SI_PERIOD_RF256,
   NHU_SI_PERIOD_RF512
} NhuSIPeriodicity;





typedef enum nhuAntPortCnt
{
   NHU_ANT_PORT_CNT1 = 1,
   NHU_ANT_PORT_CNT2 = 2,
   NHU_ANT_PORT_CNT4 = 4
} NhuAntPortCnt;





typedef enum nhuAntTxMode
{
   NHU_ANT_TM1 = 1,
   NHU_ANT_TM2,
   NHU_ANT_TM3,
   NHU_ANT_TM4,
   NHU_ANT_TM5,
   NHU_ANT_TM6,
   NHU_ANT_TM7
} NhuAntTxMode;





typedef enum nhuAprdCqiRptMode
{
   NHU_CQI_RPT_MODE_APERD_12,
   NHU_CQI_RPT_MODE_APERD_20,
   NHU_CQI_RPT_MODE_APERD_22,
   NHU_CQI_RPT_MODE_APERD_30,
   NHU_CQI_RPT_MODE_APERD_31
} NhuAprdCqiRptMode;





typedef enum nhuPrdCqiRptMode
{
   NHU_CQI_RPT_MODE_PERD_10,
   NHU_CQI_RPT_MODE_PERD_11,
   NHU_CQI_RPT_MODE_PERD_20,
   NHU_CQI_RPT_MODE_PERD_21
} NhuPrdCqiRptMode;






typedef enum nhuCqiRptPeriodicity
{
   NHU_CQI_PERIODICITY_MS2 = 2,
   NHU_CQI_PERIODICITY_MS5 = 5,
   NHU_CQI_PERIODICITY_MS10 = 10,
   NHU_CQI_PERIODICITY_MS20 = 20,
   NHU_CQI_PERIODICITY_MS32 = 32,
   NHU_CQI_PERIODICITY_MS40 = 40,
   NHU_CQI_PERIODICITY_MS64 = 64,
   NHU_CQI_PERIODICITY_MS80 = 80,
   NHU_CQI_PERIODICITY_MS128 = 128,
   NHU_CQI_PERIODICITY_MS160 = 160,
   NHU_CQI_PERIODICITY_MS256 = 256,
   NHU_CQI_PERIODICITY_MSOFF
} NhuCqiRptPeriodicity;





typedef enum nhuLogChPbr
{
   NHU_LOGCH_PBR_KB0 = 0,
   NHU_LOGCH_PBR_KB8 = 8,
   NHU_LOGCH_PBR_KB16 = 16 ,
   NHU_LOGCH_PBR_KB32 = 32,
   NHU_LOGCH_PBR_KB64 = 64,
   NHU_LOGCH_PBR_KB128 = 128,
   NHU_LOGCH_PBR_KB256 = 256,
   NHU_LOGCH_PBR_INF
} NhuLogChPbr;





typedef enum nhuDlSemiPerSchedIntvl
{
   NHU_DL_SEMIP_SCHED_INT_SF10,
   NHU_DL_SEMIP_SCHED_INT_SF20,
   NHU_DL_SEMIP_SCHED_INT_SF32,
   NHU_DL_SEMIP_SCHED_INT_SF40,
   NHU_DL_SEMIP_SCHED_INT_SF64,
   NHU_DL_SEMIP_SCHED_INT_SF80,
   NHU_DL_SEMIP_SCHED_INT_SF128,
   NHU_DL_SEMIP_SCHED_INT_SF160,
   NHU_DL_SEMIP_SCHED_INT_SF320,
   NHU_DL_SEMIP_SCHED_INT_SF640
} NhuDlSemiPerSchedIntvl;





typedef enum nhuUlSemiPerSchedIntvl
{
   NHU_UL_SEMIP_SCHED_INT_SF10,
   NHU_UL_SEMIP_SCHED_INT_SF20,
   NHU_UL_SEMIP_SCHED_INT_SF32,
   NHU_UL_SEMIP_SCHED_INT_SF40,
   NHU_UL_SEMIP_SCHED_INT_SF64,
   NHU_UL_SEMIP_SCHED_INT_SF80,
   NHU_UL_SEMIP_SCHED_INT_SF128,
   NHU_UL_SEMIP_SCHED_INT_SF160,
   NHU_UL_SEMIP_SCHED_INT_SF320,
   NHU_UL_SEMIP_SCHED_INT_SF640
} NhuUlSemiPerSchedIntvl;





typedef enum nhuMaxHarqTx
{
   NHU_MAX_HARQ_TX_N1 = 1,
   NHU_MAX_HARQ_TX_N2 = 2,
   NHU_MAX_HARQ_TX_N3 = 3,
   NHU_MAX_HARQ_TX_N4 = 4,
   NHU_MAX_HARQ_TX_N5 = 5,
   NHU_MAX_HARQ_TX_N6 = 6,
   NHU_MAX_HARQ_TX_N7 = 7,
   NHU_MAX_HARQ_TX_N8 = 8,
   NHU_MAX_HARQ_TX_N10 = 10,
   NHU_MAX_HARQ_TX_N12 = 12,
   NHU_MAX_HARQ_TX_N16 = 16,
   NHU_MAX_HARQ_TX_N20 = 20,
   NHU_MAX_HARQ_TX_N24 = 24,
   NHU_MAX_HARQ_TX_N28 = 28
} NhuMaxHarqTx;





typedef enum nhuPrdPHRTmr
{
   NHU_PRD_PHR_TMR_SF10,
   NHU_PRD_PHR_TMR_SF20,
   NHU_PRD_PHR_TMR_SF50,
   NHU_PRD_PHR_TMR_SF100,
   NHU_PRD_PHR_TMR_SF200,
   NHU_PRD_PHR_TMR_SF1000,
   NHU_PRD_PHR_TMR_INF
} NhuPrdPHRTmr;





typedef enum nhuProhPHRTmr
{
   NHU_PROH_PHR_TMR_SF10,
   NHU_PROH_PHR_TMR_SF100,
   NHU_PROH_PHR_TMR_SF200,
   NHU_PROH_PHR_TMR_SF1000
} NhuProhPHRTmr;





typedef enum nhuPdcpDiscardTmr
{
   NHU_PDCP_DISCARD_TMR_MS50 = 50,
   NHU_PDCP_DISCARD_TMR_MS100 = 100,
   NHU_PDCP_DISCARD_TMR_MS150 = 150,
   NHU_PDCP_DISCARD_TMR_MS300 = 300,
   NHU_PDCP_DISCARD_TMR_MS500 = 500,
   NHU_PDCP_DISCARD_TMR_MS750 = 750,
   NHU_PDCP_DISCARD_TMR_MS1500 = 1500,
   NHU_PDCP_DISCARD_TMR_MSINF
} NhuPdcpDiscardTmr;





typedef enum nhuPdcpFlushTmr
{
   NHU_PDCP_FLUSH_TMR_MS10,
   NHU_PDCP_FLUSH_TMR_MS50,
   NHU_PDCP_FLUSH_TMR_MS100,
   NHU_PDCP_FLUSH_TMR_MS150,
   NHU_PDCP_FLUSH_TMR_MS200,
   NHU_PDCP_FLUSH_TMR_MS250,
   NHU_PDCP_FLUSH_TMR_MS500
} NhuPdcpFlushTmr;





typedef enum nhuPdcpSnSize
{
   NHU_PDCP_SN_SIZE_7BITS = 7,
   NHU_PDCP_SN_SIZE_12BITS = 12
} NhuPdcpSnSize;





typedef enum nhuPucchDeltaShift
{
   NHU_PUCCH_DS1 = 1,
   NHU_PUCCH_DS2,
   NHU_PUCCH_DS3
} NhuPucchDeltaShift;







typedef enum nhuMaxRetxThres
{
   NHU_MAX_RETX_THRES_T1 = 1,
   NHU_MAX_RETX_THRES_T2 = 2,
   NHU_MAX_RETX_THRES_T3 = 3,
   NHU_MAX_RETX_THRES_T4 = 4,
   NHU_MAX_RETX_THRES_T6 = 6,
   NHU_MAX_RETX_THRES_T8 = 8,
   NHU_MAX_RETX_THRES_T16 = 16,
   NHU_MAX_RETX_THRES_T32 = 32
} NhuMaxRetxThres;
# 451 "../..//cm/nhu.x"
typedef enum nhuTPollReTx
{
   NHU_TPOLL_RETX_MS5 = 5,
   NHU_TPOLL_RETX_MS10 = 10,
   NHU_TPOLL_RETX_MS15 = 15,
   NHU_TPOLL_RETX_MS20 = 20,
   NHU_TPOLL_RETX_MS25 = 25,
   NHU_TPOLL_RETX_MS30 = 30,
   NHU_TPOLL_RETX_MS35 = 35,
   NHU_TPOLL_RETX_MS40 = 40,
   NHU_TPOLL_RETX_MS45 = 45,
   NHU_TPOLL_RETX_MS50 = 50,
   NHU_TPOLL_RETX_MS55 = 55,
   NHU_TPOLL_RETX_MS60 = 60,
   NHU_TPOLL_RETX_MS65 = 65,
   NHU_TPOLL_RETX_MS70 = 70,
   NHU_TPOLL_RETX_MS75 = 75,
   NHU_TPOLL_RETX_MS80 = 80,
   NHU_TPOLL_RETX_MS85 = 85,
   NHU_TPOLL_RETX_MS90 = 90,
   NHU_TPOLL_RETX_MS95 = 95,
   NHU_TPOLL_RETX_MS100 = 100,
   NHU_TPOLL_RETX_MS105 = 105,
   NHU_TPOLL_RETX_MS110 = 110,
   NHU_TPOLL_RETX_MS115 = 115,
   NHU_TPOLL_RETX_MS120 = 120,
   NHU_TPOLL_RETX_MS125 = 125,
   NHU_TPOLL_RETX_MS130 = 130,
   NHU_TPOLL_RETX_MS135 = 135,
   NHU_TPOLL_RETX_MS140 = 140,
   NHU_TPOLL_RETX_MS145 = 145,
   NHU_TPOLL_RETX_MS150 = 150,
   NHU_TPOLL_RETX_MS155 = 155,
   NHU_TPOLL_RETX_MS160 = 160,
   NHU_TPOLL_RETX_MS165 = 165,
   NHU_TPOLL_RETX_MS170 = 170,
   NHU_TPOLL_RETX_MS175 = 175,
   NHU_TPOLL_RETX_MS180 = 180,
   NHU_TPOLL_RETX_MS185 = 185,
   NHU_TPOLL_RETX_MS190 = 190,
   NHU_TPOLL_RETX_MS195 = 195,
   NHU_TPOLL_RETX_MS200 = 200,
   NHU_TPOLL_RETX_MS205 = 205,
   NHU_TPOLL_RETX_MS210 = 210,
   NHU_TPOLL_RETX_MS215 = 215,
   NHU_TPOLL_RETX_MS220 = 220,
   NHU_TPOLL_RETX_MS225 = 225,
   NHU_TPOLL_RETX_MS230 = 230,
   NHU_TPOLL_RETX_MS235 = 235,
   NHU_TPOLL_RETX_MS240 = 240,
   NHU_TPOLL_RETX_MS245 = 245,
   NHU_TPOLL_RETX_MS250 = 250,
   NHU_TPOLL_RETX_MS300 = 300,
   NHU_TPOLL_RETX_MS350 = 350,
   NHU_TPOLL_RETX_MS400 = 400,
   NHU_TPOLL_RETX_MS450 = 450,
   NHU_TPOLL_RETX_MS500 = 500
} NhuTPollReTx;







typedef enum nhuPollPdu
{
   NHU_POLL_PDU_P4 = 4,
   NHU_POLL_PDU_P8 = 8,
   NHU_POLL_PDU_P16 = 16,
   NHU_POLL_PDU_P32 = 32,
   NHU_POLL_PDU_P128 = 128,
   NHU_POLL_PDU_P256 = 256,
   NHU_POLL_PDU_P384 = 384,
   NHU_POLL_PDU_INF
} NhuPollPdu;
# 535 "../..//cm/nhu.x"
typedef enum nhuRlcPollByte
{
   NHU_POLL_BYTE_KB25 = 25,
   NHU_POLL_BYTE_KB50 = 50,
   NHU_POLL_BYTE_KB75 = 75,
   NHU_POLL_BYTE_KB100 = 100,
   NHU_POLL_BYTE_KB125 = 125,
   NHU_POLL_BYTE_KB250 = 250,
   NHU_POLL_BYTE_KB375 = 375,
   NHU_POLL_BYTE_KB500 = 500,
   NHU_POLL_BYTE_KB750 = 750,
   NHU_POLL_BYTE_KB1000 = 1000,
   NHU_POLL_BYTE_KB1250 =1250,
   NHU_POLL_BYTE_KB1500 = 1500,
   NHU_POLL_BYTE_KB2000 = 2000,
   NHU_POLL_BYTE_KB3000 = 3000,
   NHU_POLL_BYTE_INF
} NhuRlcPollByte;
# 561 "../..//cm/nhu.x"
typedef enum nhuTReOrdering
{
   NHU_TREORD_MS0 = 0,
   NHU_TREORD_MS5 = 5,
   NHU_TREORD_MS10 = 10,
   NHU_TREORD_MS15 = 15,
   NHU_TREORD_MS20 = 20,
   NHU_TREORD_MS25 = 25,
   NHU_TREORD_MS30 = 30,
   NHU_TREORD_MS35 = 35,
   NHU_TREORD_MS40 = 40,
   NHU_TREORD_MS45 = 45,
   NHU_TREORD_MS50 = 50,
   NHU_TREORD_MS55 = 55,
   NHU_TREORD_MS60 = 60,
   NHU_TREORD_MS65 = 65,
   NHU_TREORD_MS70 = 70,
   NHU_TREORD_MS75 = 75,
   NHU_TREORD_MS80 = 80,
   NHU_TREORD_MS85 = 85,
   NHU_TREORD_MS90 = 90,
   NHU_TREORD_MS95 = 95,
   NHU_TREORD_MS100 = 100,
   NHU_TREORD_MS110 = 110,
   NHU_TREORD_MS120 = 120,
   NHU_TREORD_MS130 = 130,
   NHU_TREORD_MS140 = 140,
   NHU_TREORD_MS150 = 150,
   NHU_TREORD_MS160 = 160,
   NHU_TREORD_MS170 = 170,
   NHU_TREORD_MS180 = 180,
   NHU_TREORD_MS190 = 190,
   NHU_TREORD_MS200 = 200
} NhuTReOrdering;
# 603 "../..//cm/nhu.x"
typedef enum nhuTStatusProh
{
   NHU_STATUS_PROH_MS0 = 0,
   NHU_STATUS_PROH_MS5 = 5,
   NHU_STATUS_PROH_MS10 = 10,
   NHU_STATUS_PROH_MS15 = 15,
   NHU_STATUS_PROH_MS20 = 20,
   NHU_STATUS_PROH_MS25 = 25,
   NHU_STATUS_PROH_MS30 = 30,
   NHU_STATUS_PROH_MS35 = 35,
   NHU_STATUS_PROH_MS40 = 40,
   NHU_STATUS_PROH_MS45 = 45,
   NHU_STATUS_PROH_MS50 = 50,
   NHU_STATUS_PROH_MS55 = 55,
   NHU_STATUS_PROH_MS60 = 60,
   NHU_STATUS_PROH_MS65 = 65,
   NHU_STATUS_PROH_MS70 = 70,
   NHU_STATUS_PROH_MS75 = 75,
   NHU_STATUS_PROH_MS80 = 80,
   NHU_STATUS_PROH_MS85 = 85,
   NHU_STATUS_PROH_MS90 = 90,
   NHU_STATUS_PROH_MS95 = 95,
   NHU_STATUS_PROH_MS100 = 100,
   NHU_STATUS_PROH_MS105 = 105,
   NHU_STATUS_PROH_MS110 = 110,
   NHU_STATUS_PROH_MS115 = 115,
   NHU_STATUS_PROH_MS120 = 120,
   NHU_STATUS_PROH_MS125 = 125,
   NHU_STATUS_PROH_MS130 = 130,
   NHU_STATUS_PROH_MS135 = 135,
   NHU_STATUS_PROH_MS140 = 140,
   NHU_STATUS_PROH_MS145 = 145,
   NHU_STATUS_PROH_MS150 = 150,
   NHU_STATUS_PROH_MS155 = 155,
   NHU_STATUS_PROH_MS160 = 160,
   NHU_STATUS_PROH_MS165 = 165,
   NHU_STATUS_PROH_MS170 = 170,
   NHU_STATUS_PROH_MS175 = 175,
   NHU_STATUS_PROH_MS180 = 180,
   NHU_STATUS_PROH_MS185 = 185,
   NHU_STATUS_PROH_MS190 = 190,
   NHU_STATUS_PROH_MS195 = 195,
   NHU_STATUS_PROH_MS200 = 200,
   NHU_STATUS_PROH_MS205 = 205,
   NHU_STATUS_PROH_MS210 = 210,
   NHU_STATUS_PROH_MS215 = 215,
   NHU_STATUS_PROH_MS220 = 220,
   NHU_STATUS_PROH_MS225 = 225,
   NHU_STATUS_PROH_MS230 = 230,
   NHU_STATUS_PROH_MS235 = 235,
   NHU_STATUS_PROH_MS240 = 240,
   NHU_STATUS_PROH_MS245 = 245,
   NHU_STATUS_PROH_MS250 = 250,
   NHU_STATUS_PROH_MS300 = 300,
   NHU_STATUS_PROH_MS350 = 350,
   NHU_STATUS_PROH_MS400 = 400,
   NHU_STATUS_PROH_MS450 = 450,
   NHU_STATUS_PROH_MS500 = 500
} NhuTStatusProh;





typedef enum nhuSrsBwCfgCmn
{
   NHU_SRS_BW0,
   NHU_SRS_BW1,
   NHU_SRS_BW2,
   NHU_SRS_BW3,
   NHU_SRS_BW4,
   NHU_SRS_BW5,
   NHU_SRS_BW6,
   NHU_SRS_BW7
} NhuSrsBwCfgCmn;





typedef enum nhuSrsBwCfgDed
{
   NHU_SRSDED_BW0,
   NHU_SRSDED_BW1,
   NHU_SRSDED_BW2,
   NHU_SRSDED_BW3
} NhuSrsBwCfgDed;






typedef enum nhuSrsSubFrmCfg
{
   NHU_SRS_SC0,
   NHU_SRS_SC1,
   NHU_SRS_SC2,
   NHU_SRS_SC3,
   NHU_SRS_SC4,
   NHU_SRS_SC5,
   NHU_SRS_SC6,
   NHU_SRS_SC7,
   NHU_SRS_SC8,
   NHU_SRS_SC9,
   NHU_SRS_SC10,
   NHU_SRS_SC11,
   NHU_SRS_SC12,
   NHU_SRS_SC13,
   NHU_SRS_SC14,
   NHU_SRS_SC15
} NhuSrsSubFrmCfg;





typedef enum nhuSrsPeriodicity
{
   NHU_SRS_PRD_MS2,
   NHU_SRS_PRD_MS5,
   NHU_SRS_PRD_MS10,
   NHU_SRS_PRD_MS20,
   NHU_SRS_PRD_MS40,
   NHU_SRS_PRD_MS80,
   NHU_SRS_PRD_MS160,
   NHU_SRS_PRD_MS320
} NhuSrsPeriodicity;





typedef enum nhuSrsCShift
{
   NHU_SRS_CS0,
   NHU_SRS_CS1,
   NHU_SRS_CS2,
   NHU_SRS_CS3,
   NHU_SRS_CS4,
   NHU_SRS_CS5,
   NHU_SRS_CS6,
   NHU_SRS_CS7
} NhuSrsCShift;





typedef enum nhuSrsCfgPrd
{
   SRS_CFG_PRD_1 = 1,
   SRS_CFG_PRD_2 = 2,
   SRS_CFG_PRD_5 = 5,
   SRS_CFG_PRD_10 = 10,
   SRS_CFG_PRD_INF
} NhuSrsCfgPrd;





typedef enum nhuCipherAlgo
{
   NHU_CIPHER_ALGO_EEA0,
   NHU_CIPHER_ALGO_EEA1,
   NHU_CIPHER_ALGO_EEA2
} NhuCipherAlgo;





typedef enum nhuIntgAlgo
{


   NHU_INTG_ALGO_EIA0,

   NHU_INTG_ALGO_EIA1,
   NHU_INTG_ALGO_EIA2
} NhuIntgAlgo;





typedef enum nhuReEstCause
{
   NHU_REST_CAUSE_RECONFIG_FAIL,
   NHU_REST_CAUSE_HO_FAIL,
   NHU_REST_CAUSE_OTHER_FAIL
} NhuReEstCause;






typedef enum nhuPdschPaParam
{
   NHU_PDSCH_PA_MINUS_6,
   NHU_PDSCH_PA_MINUS_4DOT77,
   NHU_PDSCH_PA_MINUS_3,
   NHU_PDSCH_PA_MINUS_1DOT77,
   NHU_PDSCH_PA_ZERO,
   NHU_PDSCH_PA_ONE,
   NHU_PDSCH_PA_TWO,
   NHU_PDSCH_PA_THREE
} NhuPdschPaParam;
# 821 "../..//cm/nhu.x"
typedef struct nhuHdr
{
   NhuCellId cellId;
   NhuCrnti ueId;
   U32 transId;

} NhuHdr;





typedef U8 NhuErrType;




typedef U8 NhuErrCause;






typedef struct nhuErrorInfo
{
   Bool errPres;
   NhuErrType errType;
   NhuErrCause errCause;
} NhuErrorInfo;







typedef struct nhuNewUeInfo
{
   NhuCrnti newCrnti;
}NhuNewUeInfo;







typedef struct nhuPdcpRohcInfo
{
   U16 maxCid;
   U8 rohcProfileList[9];

}NhuPdcpRohcInfo;







typedef struct nhuPdcpHdrComprInfo
{
   NhuPdcpRohcInfo rohcInfo;
} NhuPdcpHdrComprInfo;






typedef struct nhuHoPdcpSduInfo
{
   U8 isHoPres;






   U32 ulCountVal;
   U32 dlCountVal;

   U8 numBits;
   U8 *ulBitMap;
}NhuHoPdcpSduInfo;







typedef struct nhuPdcpCfg
{
   Bool intgReqd;
   U8 pdcpCfgType;
   U8 pdcpCfgBitMsk;
   NhuPdcpDiscardTmr discardTmr;
   NhuPdcpFlushTmr flushTmr;
   NhuPdcpSnSize snSize;
   Bool statusRptReq;
   NhuPdcpHdrComprInfo hdrComprInfo;
   NhuHoPdcpSduInfo hoPdcpSduStaInfo;


   Bool cfmReqd;

}NhuPdcpCfg;







typedef struct nhuLogChId
{
   CmLteLcType logChType;
   U8 lcId;
} NhuLogChId;
# 951 "../..//cm/nhu.x"
typedef struct nhuLogChCfg
{
   U8 logChCfgpres;
   U8 logChGrp;
}NhuLogChCfg;
# 964 "../..//cm/nhu.x"
typedef struct nhuUlLogChMap
{
   CmLteTrchType trChType;
   U8 lcCfgType;
   NhuLogChCfg lcCfg;
}NhuUlLogChMap;







typedef struct nhuDlUmRlcModeInfo
{
   U8 snFieldLen;
}NhuDlUmRlcModeInfo;






typedef struct nhuDlAmRlcModeInfo
{
   NhuMaxRetxThres maxRetxThresh;
   NhuRlcPollByte pollByte;
   NhuPollPdu pollPdu;
   NhuTPollReTx tPollRetx;
}NhuDlAmRlcModeInfo;







typedef struct nhuDlTmRlcModeInfo
{
   U32 bufferSize;
}NhuDlTmRlcModeInfo;







typedef struct nhuUlUmRlcModeInfo
{
   U8 snFieldLen;
   NhuTReOrdering tReordring;
}NhuUlUmRlcModeInfo;






typedef struct nhuUlAmRlcModeInfo
{
   NhuTStatusProh tStatusProh;
   NhuTReOrdering tReordring;
}NhuUlAmRlcModeInfo;







typedef struct nhuUlRlcMode
{
   U8 rlcCfgType;
   U8 mode;
   union
   {
      NhuUlUmRlcModeInfo umRlc;
      NhuUlAmRlcModeInfo amRlc;
   }m;
} NhuUlRlcMode;
# 1055 "../..//cm/nhu.x"
typedef struct nhuUlRbCfg
{
   U8 ulRbBitMsk;
   NhuUlLogChMap ulLogChMap;
   NhuUlRlcMode ulRlcMode;
}NhuUlRbCfg;
# 1069 "../..//cm/nhu.x"
typedef struct nhuDlLogChMap
{
   CmLteTrchType trChType;
}NhuDlLogChMap;







typedef struct nhuDlRlcMode
{
   U8 rlcCfgType;
   U8 mode;
   union
   {
      NhuDlUmRlcModeInfo umRlc;
      NhuDlAmRlcModeInfo amRlc;
      NhuDlTmRlcModeInfo tmRlc;
   }m;
} NhuDlRlcMode;
# 1101 "../..//cm/nhu.x"
typedef struct nhuDlRbCfg
{
   U8 dlRbBitMsk;
   NhuDlLogChMap dlLogChMap;
   NhuDlRlcMode dlRlcMode;
}NhuDlRbCfg;
# 1120 "../..//cm/nhu.x"
typedef struct nhuRbCfgInfo
{
   NhuRbId rbId;
   NhuLogChId lcId;
   U8 rbCfgBitMsk;

   NhuUlRbCfg ulRbCfg;
   NhuDlRbCfg dlRbCfg;
   NhuPdcpCfg pdcpCfg;





}NhuRbCfgInfo;






typedef struct nhuRbCfgList
{
   U8 numOfRbCfgInfo;
   NhuRbCfgInfo *rbCfgInfoList;
}NhuRbCfgList;
# 1154 "../..//cm/nhu.x"
typedef struct nhuRbRlsCfgList
{
   U8 numOfRbCfgInfo;
   NhuRbId *rbsToRel;
}NhuRbRlsCfgList;
# 1169 "../..//cm/nhu.x"
typedef struct nhuRbCfgAllList
{
   U8 rbCfgTypBitMsk;
   NhuRbCfgList rbToAddCfgList;
   NhuRbCfgList rbToModCfgList;
   NhuRbRlsCfgList rbToRlsCfgList;
}NhuRbCfgAllList;






typedef struct nhuUlHarqCfg
{
   NhuMaxHarqTx ulMaxHarqTx;
   U8 deltaHarqOffset;
}NhuUlHarqCfg;
# 1195 "../..//cm/nhu.x"
typedef struct nhuTrChCfg
{
   U8 trChCfgType;
   U8 trChBitMsk;
   NhuUlHarqCfg ulHarqCfg;
}NhuTrChCfg;







typedef struct nhuIntgKeyAlgoInfo
{
   U8 action;
   NhuIntgAlgo intgAlgo;
   U8 intgKey[16];
} NhuIntgKeyAlgoInfo;







typedef struct nhuCiphKeyAlgoInfo
{
   NhuCipherAlgo ciphAlgo;
   U8 cipherCpKey[16];
   U8 cipherUpKey[16];
} NhuCiphKeyAlgoInfo;
# 1236 "../..//cm/nhu.x"
typedef struct nhuSecurityCfg
{
   U8 secCfgBitMsk;

   NhuIntgKeyAlgoInfo intgCfgInfo;
   NhuCiphKeyAlgoInfo cipherCfgInfo;
} NhuSecurityCfg;
# 1643 "../..//cm/nhu.x"
typedef struct nhuUeCfgInfo
{
   U8 conReCfgCause;
# 1654 "../..//cm/nhu.x"
   U8 ueCfgBitMsk;

   NhuRbCfgAllList rbCfgAllList;
   NhuTrChCfg trChCfg;

   NhuSecurityCfg secCfg;
   NhuNewUeInfo ueInfo;






} NhuUeCfgInfo;






typedef struct nhuUlDcchMsg
{
   U8 pdcpId;
   NhuUL_DCCH_Msg dcchMsg;
}NhuUlDcchMsg;






typedef struct nhuDlDcchMsg
{
   U8 pdcpId;
   Bool isMsgEncoded;
# 1698 "../..//cm/nhu.x"
   union
   {
      NhuDL_DCCH_Msg dcchMsg;
      Buffer *mBuf;

   } m;
}NhuDlDcchMsg;
# 1713 "../..//cm/nhu.x"
typedef struct nhuDedMsg
{
   NhuDlDcchMsg dlDcchMsg;
} NhuDedMsg;






typedef struct nhuTimingInfo
{
   U16 sfn;
   U8 subframe;
} NhuTimingInfo;







typedef struct nhuCmnMsgInfo
{
   U8 rbId;
   NhuTimingInfo timingInfo;

   U32 tbsSize;

} NhuCmnMsgInfo;
# 1752 "../..//cm/nhu.x"
typedef struct nhuCmnMsg
{
   NhuCmnMsgInfo cmnMsgInfo;
   U8 cmnMsgCategory;
   union
   {
      NhuPCCH_Msg pcchMsg;
      NhuBCCH_BCH_Msg bcchBchMsg;
      NhuBCCH_DL_SCH_Msg bcchDlSchMsg;
   } cmn;
} NhuCmnMsg;
# 1777 "../..//cm/nhu.x"
typedef struct nhuDatReqUeMsg
{
   Bool isMsgDed;
   union
   {
      NhuDedMsg dedMsg;
      NhuCmnMsg cmnMsg;
   } msg;
} NhuDatReqUeMsg;
# 1802 "../..//cm/nhu.x"
typedef struct nhuDatReqSdus
{
   CmMemListCp memCp;
   NhuHdr hdr;
   struct
   {
      NhuDatReqUeMsg ueMsg;
      Bool isUeCfgPres;

      NhuUeCfgInfo ueCfg;

   } sdu;
} NhuDatReqSdus;







typedef struct nhuUlCcchMsg
{
   U8 rbId;
   NhuCrnti tmpCrnti;
   NhuUL_CCCH_Msg ccchMsg;
}NhuUlCcchMsg;







typedef struct nhuDlCcchMsg
{
   NhuCrnti tmpCrnti;
   U8 rbId;
   NhuDL_CCCH_Msg ccchMsg;
}NhuDlCcchMsg;
# 1853 "../..//cm/nhu.x"
typedef struct nhuDatRspSdus
{
   CmMemListCp memCp;
   NhuHdr hdr;
   struct
   {
      U8 msgCategory;
      union
      {
         NhuDlCcchMsg dlCcchMsg;
         NhuDlDcchMsg dlDcchMsg;
      } m;
      U8 isUeCfgPres;

      NhuUeCfgInfo ueCfg;

   }sdu;
} NhuDatRspSdus;
# 1882 "../..//cm/nhu.x"
typedef struct nhuDatIndSdus
{
   CmMemListCp memCp;
   NhuHdr hdr;
   NhuErrorInfo err;
   struct
   {
      U8 msgCategory;
      union
      {
         NhuUlCcchMsg ulCcchMsg;
         NhuUlDcchMsg ulDcchMsg;
      } m;
   }sdu;
} NhuDatIndSdus;





typedef enum nhuSysBw
{
   NHU_SYS_BW_N6 = 6,
   NHU_SYS_BW_N15 = 15,
   NHU_SYS_BW_N25 = 25,
   NHU_SYS_BW_N50 = 50,
   NHU_SYS_BW_N75 = 75,
   NHU_SYS_BW_N100 = 100
} NhuSysBw;







typedef enum nhuPhichDur
{
   NHU_PHICH_DUR_NORMAL,
   NHU_PHICH_DUR_EXTEND
} NhuPhichDur;





typedef enum nhuPhichResrc
{
   NHU_NG_ONESIXTH,
   NHU_NG_HALF,
   NHU_NG_ONE,
   NHU_NG_TWO
} NhuPhichResrc;






typedef struct nhuPhichCfg
{
   NhuPhichResrc resrc;
   NhuPhichDur duration;
} NhuPhichCfg;







typedef struct nhuPucchCfg
{
   U8 pucchFixBw;
   U8 n1PucchAn;
   NhuPucchDeltaShift deltaShift;
   U8 cyclShift;

}NhuPucchCfg;






typedef enum nhuNumRaPreamble
{
   NHU_RA_PREAMBLE_N4 = 4,
   NHU_RA_PREAMBLE_N8 = 8,
   NHU_RA_PREAMBLE_N12 = 12,
   NHU_RA_PREAMBLE_N16 = 16,
   NHU_RA_PREAMBLE_N20 = 20,
   NHU_RA_PREAMBLE_N24 = 24,
   NHU_RA_PREAMBLE_N28 = 28,
   NHU_RA_PREAMBLE_N32 = 32,
   NHU_RA_PREAMBLE_N36 = 36,
   NHU_RA_PREAMBLE_N40 = 40,
   NHU_RA_PREAMBLE_N44 = 44,
   NHU_RA_PREAMBLE_N48 = 48,
   NHU_RA_PREAMBLE_N52 = 52,
   NHU_RA_PREAMBLE_N56 = 56,
   NHU_RA_PREAMBLE_N60 = 60,
   NHU_RA_PREAMBLE_N64 = 64
} NhuNumRaPreamble;





typedef enum nhuSizeRaPreambleGrpA
{
   NHU_SIZE_RA_PREAMBLE_GRPA_N4 = 4,
   NHU_SIZE_RA_PREAMBLE_GRPA_N8 = 8,
   NHU_SIZE_RA_PREAMBLE_GRPA_N12 = 12,
   NHU_SIZE_RA_PREAMBLE_GRPA_N16 = 16,
   NHU_SIZE_RA_PREAMBLE_GRPA_N20 = 20,
   NHU_SIZE_RA_PREAMBLE_GRPA_N24 = 24,
   NHU_SIZE_RA_PREAMBLE_GRPA_N28 = 28,
   NHU_SIZE_RA_PREAMBLE_GRPA_N32 = 32,
   NHU_SIZE_RA_PREAMBLE_GRPA_N36 = 36,
   NHU_SIZE_RA_PREAMBLE_GRPA_N40 = 40,
   NHU_SIZE_RA_PREAMBLE_GRPA_N44 = 44,
   NHU_SIZE_RA_PREAMBLE_GRPA_N48 = 48,
   NHU_SIZE_RA_PREAMBLE_GRPA_N52 = 52,
   NHU_SIZE_RA_PREAMBLE_GRPA_N56 = 56,
   NHU_SIZE_RA_PREAMBLE_GRPA_N60 = 60,
   NHU_SIZE_RA_PREAMBLE_GRPA_N64 = 64
} NhuSizeRaPreambleGrpA;





typedef enum nhuPrmblRspWinSize
{
   NHU_PRMBL_RSP_WIN_SIZE_SF2 = 2,
   NHU_PRMBL_RSP_WIN_SIZE_SF3 = 3,
   NHU_PRMBL_RSP_WIN_SIZE_SF4 = 4,
   NHU_PRMBL_RSP_WIN_SIZE_SF5 = 5,
   NHU_PRMBL_RSP_WIN_SIZE_SF6 = 6,
   NHU_PRMBL_RSP_WIN_SIZE_SF7 = 7,
   NHU_PRMBL_RSP_WIN_SIZE_SF8 = 8,
   NHU_PRMBL_RSP_WIN_SIZE_SF10 = 10
} NhuPrmblRspWinSize;




typedef enum nhuRaSfn
{
   NHU_SFN_EVEN,
   NHU_SFN_ANY,
   NHU_SFN_NA
} NhuRaSFN;





typedef enum nhuDuplexMode
{
   NHU_MODE_FDD=1,
   NHU_MODE_TDD
} NhuDuplexMode;






typedef struct nhuRaOccasion
{
   U8 size;
   NhuRaSFN sfnEnum;
   U8 subFrameNum[10];
}NhuRaOccasion;







typedef struct nhuRachCfg
{
   U8 maxMsg3Tx;
}NhuRachCfg;







typedef struct nhuCmnMacCfg
{
   NhuRachCfg rachCfg;
} NhuCmnMacCfg;
# 2088 "../..//cm/nhu.x"
typedef struct nhuBwCfg
{
   NhuSysBw ulSysBw;
   NhuSysBw dlSysBw;


}NhuSysBwCfg;
# 2266 "../..//cm/nhu.x"
typedef struct nhuCellCfgInfo
{
   NhuDuplexMode duplexMode;


   NhuSysBwCfg sysBwCfg;
   U8 cellCfgBitMsk;

   NhuRbCfgList rbToAddCfgList;
   NhuCmnMacCfg macCmnCfg;






} NhuCellCfgInfo;
# 2293 "../..//cm/nhu.x"
typedef struct nhuCellReCfgInfo
{
   CmLteTimingInfo actvnTime;
   U8 cellCfgBitMsk;

   NhuCmnMacCfg macCmnCfg;



} NhuCellReCfgInfo;






typedef struct nhuCellRlsInfo
{
   NhuCellId cellId;
} NhuCellRlsInfo;
# 2323 "../..//cm/nhu.x"
typedef struct nhuCellCfgReqSdus
{
   CmMemListCp memCp;
   NhuHdr hdr;
   struct
   {
      U8 cfgType;
      union
      {
         NhuCellCfgInfo cfgInfo;
         NhuCellReCfgInfo reCfgInfo;
         NhuCellRlsInfo rlsInfo;
      } u;
   } sdu;
} NhuCellCfgReqSdus;
# 2346 "../..//cm/nhu.x"
typedef struct nhuCellCfgCfmSdus
{
   NhuHdr hdr;
   struct
   {
      Bool isCfgSuccess;
      NhuErrorInfo cfgError;
   } sdu;
} NhuCellCfgCfmSdus;
# 2368 "../..//cm/nhu.x"
typedef struct nhuStaIndSdus
{
   NhuHdr hdr;
   U8 pdcpId;
   U8 cause;
} NhuStaIndSdus;
# 2388 "../..//cm/nhu.x"
typedef struct nhuDatCfmSdus
{
   NhuHdr hdr;
   U8 pdcpId;
   U8 datCfmStatus;
} NhuDatCfmSdus;
# 2406 "../..//cm/nhu.x"
typedef struct nhuErrIndSdus
{
   NhuHdr hdr;
   NhuErrorInfo sdu;
} NhuErrIndSdus;
# 2423 "../..//cm/nhu.x"
typedef struct nhuCfgReqSdus
{
   CmMemListCp memCp;
   NhuHdr hdr;
   NhuUeCfgInfo cfgInfo;
} NhuCfgReqSdus;







typedef struct nhuCfgCfmSdus
{
   NhuHdr hdr;
   struct
   {
      Bool isCfgSuccess;
      NhuErrorInfo cfgError;
   } sdu;
} NhuCfgCfmSdus;
# 2457 "../..//cm/nhu.x"
typedef struct nhuEncSdusReq
{
   CmMemListCp memCp;
   NhuHdr hdr;
   struct
   {
      U8 msgCategory;
      union
      {
         NhuDL_DCCH_Msg dcchMsg;
         NhuHovrCmd hovrCmd;
         NhuUERadioAccessCapInfo ueRadioCapInfo;

         NhuUECapInfo ueCapInfo;




         NhuHovrPrepInfo hovrPrepInfo;




      } u;
   }sdu;
}NhuEncReqSdus;






typedef struct nhuEncSdusCfm
{
   NhuHdr hdr;
   struct
   {
      U8 msgCategory;
      U32 msgLen;
      Status status;
      Buffer *mBuf;
   } sdu;
} NhuEncCfmSdus;







typedef struct nhuRcvStaOfUlPdcpSdus
{
   U8 numBits;
   U8 *ulBitMap;
} NhuRcvStaOfUlPdcpSdus;






typedef struct nhuPdcpSduStaInfo
{
   U8 drbId;
   U8 dir;
   U32 ulCountVal;
   U32 dlCountVal;

   NhuRcvStaOfUlPdcpSdus rcvStaOfUlPdcpSdus;


} NhuPdcpSduStaInfo;






typedef struct nhuPdcpSduStaCfm
{
   CmMemListCp memCp;
   NhuHdr hdr;
   U16 numRbId;
   NhuPdcpSduStaInfo *pdcpSduStaInfo;

   Status status;
   Reason reason;
} NhuPdcpSduStaCfm;







typedef struct nhuDecodeSduReq
{
   NhuHdr hdr;
   U16 sduType;
   Buffer *mbuf;
} NhuDecodeSduReq;







typedef struct nhuDecode3GUECapOctStr
{
   U8 containsUECap;
   NhuUTRANInterRATHovrInfo nhuUE_UTRAHovrInfo;
   NhuUTRANUE_RadioAccessCapInfo nhuUE_UTRACap;
}NhuDecode3GUECapOctStr;







typedef struct nhuDecodeSduCfm
{
   CmMemListCp memCp;
   NhuHdr hdr;
   U16 sduType;
   Bool status;
   union
   {
         NhuUE_EUTRA_Cap nhuUE_EUTRA_Cap;
         NhuDecode3GUECapOctStr nhuUTRAUECapOctStr;
         NhuHovrCmd hovrCmd;
         NhuUECapInfo ueCapInfo;
         NhuHovrPrepInfo nhuHovrPrepInfo;
         NhuUERadioAccessCapInfo ueRadioCapInfo;
   }ie;
} NhuDecodeSduCfm;







typedef struct nhuDRBCountInfo
{
   U8 drbId;
   U8 drbDirection;
   U32 ulCount;
   U32 dlCount;
} NhuDrbCountInfo;







typedef struct nhuDRBCountInfoLst
{
   CmMemListCp memCp;
   NhuHdr countHdr;
   U8 numDrbs;
   U8 status;
   NhuDrbCountInfo *member;
} NhuDRBCountInfoLst;


typedef S16 (*NhuBndReq) ( Pst *pst, SuId suId, SpId spId);




typedef S16 (*NhuBndCfm) ( Pst *pst, SuId suId, U8 status);




typedef S16 (*NhuUbndReq) ( Pst *pst, SpId spId, Reason reason);




typedef S16 (*NhuDatReq) ( Pst *pst, SpId spId, NhuDatReqSdus *nhuDatReqSdus );





typedef S16 (*NhuDatRsp) ( Pst *pst, SpId spId, NhuDatRspSdus *nhuDatRspSdus );






typedef S16 (*NhuDatInd) ( Pst *pst, SuId suId, NhuDatIndSdus *nhuDatIndSdus );





typedef S16 (*NhuDatCfm) ( Pst *pst, SuId suId, NhuDatCfmSdus *nhuDatCfmSdus );




typedef S16 (*NhuStaInd) ( Pst *pst, SuId suId, NhuStaIndSdus *nhuStaIndSdus );





typedef S16 (*NhuErrInd) ( Pst *pst, SuId suId, NhuErrIndSdus *nhuErrIndSdus );





typedef S16 (*NhuCfgReq) ( Pst *pst, SpId spId, NhuCfgReqSdus *nhuCfgReqSdus );





typedef S16 (*NhuCfgCfm) ( Pst *pst, SuId suId, NhuCfgCfmSdus *nhuCfgCfmSdus );





typedef S16 (*NhuCnclUeReq) ( Pst *pst, SpId spId, NhuCellId cellId, NhuCrnti crnti );






typedef S16 (*NhuCellCfgReq) ( Pst *pst, SpId spId, NhuCellCfgReqSdus *nhuCellCfgReqSdus );





typedef S16 (*NhuCellCfgCfm) ( Pst *pst, SuId suId, NhuCellCfgCfmSdus *nhuCellCfgCfmSdus );





typedef S16 (*NhuDeleteTransReq) ( Pst *pst, SpId spId, NhuCellId cellid, NhuCrnti ueId, U32 transId );







typedef S16 (*NhuEncReq) ( Pst *pst, SpId spId, NhuEncReqSdus *nhuEncReqSdus );





typedef S16 (*NhuEncCfm) ( Pst *pst, SuId suId, NhuEncCfmSdus *nhuEncCfmSdus );





typedef S16 (*NhuSduStaReq) ( Pst *pst, SpId spId, NhuHdr hdr );





typedef S16 (*NhuSduStaCfm) ( Pst *pst, SuId suId, NhuPdcpSduStaCfm *pdcpSduStaCfm );





typedef S16 (*NhuDecodeReq) ( Pst *pst, SpId spId, NhuDecodeSduReq *nhuDecodeSduReq );





typedef S16 (*NhuDecodeCfm) ( Pst *pst, SuId suId, NhuDecodeSduCfm *nhuDecodeSduCfm );





typedef S16 (*NhuCountReq) ( Pst *pst, SpId spId, NhuHdr *countHdr );





typedef S16 (*NhuCountCfm) ( Pst *pst, SuId suId, NhuDRBCountInfoLst *nhuDRBCountInfoLst );






   extern S16 NxLiNhuBndCfm (Pst *pst, SuId suId, U8 status);
   extern S16 NxLiNhuDatCfm (Pst *pst, SuId suId, NhuDatCfmSdus *nhuDatCfmSdus);

   extern S16 NxLiNhuStaInd (Pst *pst, SuId suId, NhuStaIndSdus *nhuStaIndSdus);

   extern S16 NxLiNhuDatInd (Pst *pst, SuId suId, NhuDatIndSdus *nhuDatIndSdus);
   extern S16 NxLiNhuErrInd (Pst *pst, SuId suId, NhuErrIndSdus *nhuErrIndSdus);
   extern S16 NxLiNhuCfgCfm (Pst *pst, SuId suId, NhuCfgCfmSdus *nhuCfgCfmSdus);
   extern S16 NxLiNhuCellCfgCfm (Pst *pst, SuId suId, NhuCellCfgCfmSdus *nhuCellCfgCfmSdus);
   extern S16 NxLiNhuEncodeCfm (Pst *pst, SuId suId, NhuEncCfmSdus *nhuEncCfmSdus);
   extern S16 NxLiNhuPdcpSduStaCfm (Pst *pst, SuId suId, NhuPdcpSduStaCfm *nhuPdcpSduStaCfm);

   extern S16 NxLiNhuDecodeCfm (Pst *pst, SuId suId, NhuDecodeSduCfm *nhuDecodeSduCfm);
   extern S16 NxLiNhuCountCfm (Pst *pst, SuId suId, NhuDRBCountInfoLst *nhuDRBCountInfoLst);
# 2800 "../..//cm/nhu.x"
   extern S16 NhUiNhuDatInd (Pst *pst, SuId suId, NhuDatIndSdus *nhuDatIndSdus);
# 2825 "../..//cm/nhu.x"
   extern S16 NhUiNhuErrInd (Pst *pst, SuId suId, NhuErrIndSdus *nhuErrIndSdus);
# 2845 "../..//cm/nhu.x"
   extern S16 NhUiNhuCfgCfm (Pst *pst, SuId suId, NhuCfgCfmSdus *nhuCfgCfmSdus);
# 2865 "../..//cm/nhu.x"
   extern S16 NhUiNhuCellCfgCfm (Pst *pst, SuId suId, NhuCellCfgCfmSdus *nhuCfgCellCfmSdus);
# 2894 "../..//cm/nhu.x"
   extern S16 NhUiNhuBndReq (Pst *pst, SuId suId, SpId spId);
# 2913 "../..//cm/nhu.x"
   extern S16 NhUiNhuUbndReq (Pst *pst, SpId spId, Reason reason);
# 2938 "../..//cm/nhu.x"
   extern S16 NhUiNhuBndCfm (Pst *pst, SuId suId, U8 status);
# 2957 "../..//cm/nhu.x"
   extern S16 NhUiNhuDatReq (Pst *pst, SpId spId, NhuDatReqSdus *nhuDatReqSdus);
# 2971 "../..//cm/nhu.x"
   extern S16 NhUiNhuDatRsp (Pst *pst, SpId spId, NhuDatRspSdus *nhuDatRspSdus);
# 2990 "../..//cm/nhu.x"
   extern S16 NhUiNhuCfgReq (Pst *pst, SpId spId, NhuCfgReqSdus *nhuCfgReqSdu);
# 3008 "../..//cm/nhu.x"
   extern S16 NhUiNhuCnclUeReq (Pst *pst, SpId spId, NhuCellId cellId, NhuCrnti crnti);
# 3037 "../..//cm/nhu.x"
   extern S16 NhUiNhuCellCfgReq (Pst *pst, SpId spId, NhuCellCfgReqSdus *nhuCellCfgReqSdu);
# 3053 "../..//cm/nhu.x"
   extern S16 NhUiNhuDeleteTransReq (Pst *pst, SpId spId, NhuCellId cellId, NhuCrnti crnti, U32 transId);
# 3070 "../..//cm/nhu.x"
   extern S16 NhUiNhuDatCfm (Pst *pst, SuId suId, NhuDatCfmSdus *nhuDatCfmSdus);
# 3088 "../..//cm/nhu.x"
extern S16 NhUiNhuStaInd (Pst *pst, SuId suId, NhuStaIndSdus *nhStaInd);
# 3105 "../..//cm/nhu.x"
extern S16 NhUiNhuEncodeReq (Pst *pst, SpId spId, NhuEncReqSdus *nhuEncReqSdus);
# 3122 "../..//cm/nhu.x"
extern S16 NhUiNhuEncodeCfm (Pst *pst, SuId suId, NhuEncCfmSdus *nhuEncCfmSdus);
# 3139 "../..//cm/nhu.x"
extern S16 NhUiNhuPdcpSduStaReq (Pst *pst, SpId spId, NhuHdr nhuHdr);
# 3155 "../..//cm/nhu.x"
extern S16 NhUiNhuPdcpSduStaCfm (Pst *pst, SuId suId, NhuPdcpSduStaCfm *nhuPdcpSduStaCfm);
# 3178 "../..//cm/nhu.x"
extern S16 NhUiNhuDecodeReq (Pst *pst, SpId spId, NhuDecodeSduReq *nhuDecodeSduReq);
# 3195 "../..//cm/nhu.x"
extern S16 NhUiNhuDecodeCfm (Pst *pst, SuId suId, NhuDecodeSduCfm *nhuDecodeSduCfm);
# 3220 "../..//cm/nhu.x"
extern S16 NhUiNhuCountReq (Pst *pst, SpId spId, NhuHdr *countHdr);
# 3239 "../..//cm/nhu.x"
extern S16 NhUiNhuCountCfm (Pst *pst, SuId suId, NhuDRBCountInfoLst *nhuDRBCountInfoLst);
# 3255 "../..//cm/nhu.x"
extern S16 cmPkNhuBndCfm ( Pst *pst, SuId suId, U8 status );




extern S16 cmPkNhuDatInd ( Pst *pst, SuId suId, NhuDatIndSdus *nhuDatIndSdus );




extern S16 cmPkNhuErrInd ( Pst *pst, SuId suId, NhuErrIndSdus *nhuErrIndSdus );




extern S16 cmPkNhuDatCfm ( Pst *pst, SuId suId, NhuDatCfmSdus *nhuDatCfmSdus );




extern S16 cmPkNhuCfgCfm ( Pst *pst, SuId suId, NhuCfgCfmSdus *nhuCfgCfmSdus );




extern S16 cmPkNhuCellCfgCfm ( Pst *pst, SuId suId, NhuCellCfgCfmSdus *nhuCellCfgCfmSdus );




extern S16 cmPkNhuDecodeCfm ( Pst *pst, SuId suId, NhuDecodeSduCfm *nhuDecodeSduCfm );




extern S16 cmPkNhuCountCfm ( Pst *pst, SuId suId, NhuDRBCountInfoLst *nhuDRBCountInfoLst );




extern S16 cmPkNhuHdr ( NhuHdr *param, Buffer *mBuf );



extern S16 cmPkNhuErrorInfo ( NhuErrorInfo *param, Buffer *mBuf );



extern S16 cmPkNhuNewUeInfo ( NhuNewUeInfo *param, Buffer *mBuf );



extern S16 cmPkNhuPdcpRohcInfo ( NhuPdcpRohcInfo *param, Buffer *mBuf );



extern S16 cmPkNhuPdcpHdrComprInfo ( NhuPdcpHdrComprInfo *param, Buffer *mBuf );



extern S16 cmPkNhuPdcpCfg ( NhuPdcpCfg *param, Buffer *mBuf );



extern S16 cmPkNhuLogChId ( NhuLogChId *param, Buffer *mBuf );



extern S16 cmPkNhuLogChCfg ( NhuLogChCfg *param, Buffer *mBuf );



extern S16 cmPkNhuUlLogChMap ( NhuUlLogChMap *param, Buffer *mBuf );



extern S16 cmPkNhuDlUmRlcModeInfo ( NhuDlUmRlcModeInfo *param, Buffer *mBuf );



extern S16 cmPkNhuDlAmRlcModeInfo ( NhuDlAmRlcModeInfo *param, Buffer *mBuf );



extern S16 cmPkNhuDlTmRlcModeInfo ( NhuDlTmRlcModeInfo *param, Buffer *mBuf );



extern S16 cmPkNhuUlUmRlcModeInfo ( NhuUlUmRlcModeInfo *param, Buffer *mBuf );



extern S16 cmPkNhuUlAmRlcModeInfo ( NhuUlAmRlcModeInfo *param, Buffer *mBuf );



extern S16 cmPkNhuUlRlcMode ( NhuUlRlcMode *param, Buffer *mBuf );



extern S16 cmPkNhuUlRbCfg ( NhuUlRbCfg *param, Buffer *mBuf );



extern S16 cmPkNhuDlLogChMap ( NhuDlLogChMap *param, Buffer *mBuf );



extern S16 cmPkNhuDlRlcMode ( NhuDlRlcMode *param, Buffer *mBuf );



extern S16 cmPkNhuDlRbCfg ( NhuDlRbCfg *param, Buffer *mBuf );



extern S16 cmPkNhuRbCfgInfo ( NhuRbCfgInfo *param, Buffer *mBuf );



extern S16 cmPkNhuRbCfgList ( NhuRbCfgList *param, Buffer *mBuf );



extern S16 cmPkNhuRbRlsCfgList ( NhuRbRlsCfgList *param, Buffer *mBuf );



extern S16 cmPkNhuRbCfgAllList ( NhuRbCfgAllList *param, Buffer *mBuf );



extern S16 cmPkNhuUlHarqCfg ( NhuUlHarqCfg *param, Buffer *mBuf );



extern S16 cmPkNhuTrChCfg ( NhuTrChCfg *param, Buffer *mBuf );



extern S16 cmPkNhuIntgKeyAlgoInfo
( NhuIntgKeyAlgoInfo *param, Buffer *mBuf );



extern S16 cmPkNhuCiphKeyAlgoInfo
( NhuCiphKeyAlgoInfo *param, Buffer *mBuf );



extern S16 cmPkNhuSecurityCfg
( NhuSecurityCfg *param, Buffer *mBuf );



extern S16 cmPkNhuUeCfgInfo
( NhuUeCfgInfo *param, Buffer *mBuf );



extern S16 cmPkNhuUlDcchMsg
( NhuUlDcchMsg *param, Buffer *mBuf );



extern S16 cmPkNhuDlDcchMsg
( NhuDlDcchMsg *param, Buffer *mBuf );



extern S16 cmPkNhuDedMsg
( NhuDedMsg *param, Buffer *mBuf );



extern S16 cmPkNhuCmnMsgInfo
( NhuCmnMsgInfo *param, Buffer *mBuf );



extern S16 cmPkNhuCmnMsg
( NhuCmnMsg *param, Buffer *mBuf );



extern S16 cmPkNhuDatReqUeMsg
( NhuDatReqUeMsg *param, Buffer *mBuf );



extern S16 cmPkNhuDatReqSdus
( NhuDatReqSdus *param, Buffer *mBuf );



extern S16 cmPkNhuUlCcchMsg
( NhuUlCcchMsg *param, Buffer *mBuf );



extern S16 cmPkNhuDlCcchMsg
( NhuDlCcchMsg *param, Buffer *mBuf );



extern S16 cmPkNhuDatRspSdus
( NhuDatRspSdus *param, Buffer *mBuf );



extern S16 cmPkNhuDatIndSdus
( NhuDatIndSdus *param, Buffer *mBuf );



extern S16 cmPkNhuRaOccasion
( NhuRaOccasion *param, Buffer *mBuf );



extern S16 cmPkNhuRachCfg
( NhuRachCfg *param, Buffer *mBuf );



extern S16 cmPkNhuCmnMacCfg
( NhuCmnMacCfg *param, Buffer *mBuf );



extern S16 cmPkNhuCellCfgInfo
( NhuCellCfgInfo *param, Buffer *mBuf );



extern S16 cmPkNhuCellCfgReqSdus
( NhuCellCfgReqSdus *param, Buffer *mBuf );



extern S16 cmPkNhuCellCfgCfmSdus
( NhuCellCfgCfmSdus *param, Buffer *mBuf );



extern S16 cmPkNhuStaIndSdus
( NhuStaIndSdus *param, Buffer *mBuf );



extern S16 cmPkNhuDatCfmSdus
( NhuDatCfmSdus *param, Buffer *mBuf );



extern S16 cmPkNhuErrIndSdus
( NhuErrIndSdus *param, Buffer *mBuf );



extern S16 cmPkNhuCfgReqSdus
( NhuCfgReqSdus *param, Buffer *mBuf );



extern S16 cmPkNhuCfgCfmSdus
( NhuCfgCfmSdus *param, Buffer *mBuf );



extern S16 cmPkNhuBndReq
( Pst *pst, SuId suId, SpId spId );




extern S16 cmPkNhuUbndReq
( Pst *pst, SpId spId, Reason reason );




extern S16 cmPkNhuDatReq
( Pst *pst, SpId spId, NhuDatReqSdus *nhuDatReqSdus );




extern S16 cmPkNhuCfgReq
( Pst *pst, SpId spId, NhuCfgReqSdus *nhuCfgReqSdus );




extern S16 cmPkNhuCnclUeReq
( Pst *pst, SpId spId, NhuCellId cellId, NhuCrnti crnti );





extern S16 cmPkNhuCellCfgReq
( Pst *pst, SpId spId, NhuCellCfgReqSdus *nhuCellCfgReqSdus );




extern S16 cmPkNhuDeleteTransReq
( Pst *pst, SpId spId, NhuCellId cellId, NhuCrnti ueId, U32 transId );






extern S16 cmPkNhuDatRsp
( Pst *pst, SpId spId, NhuDatRspSdus *nhuDatRspSdus );




extern S16 cmPkNhuStaInd
( Pst *pst, SuId suId, NhuStaIndSdus *nhuStaIndSdus );




extern S16 cmPkNhuDecodeReq
( Pst *pst, SpId spId, NhuDecodeSduReq *nhuDecodeSduReq );




extern S16 cmPkNhuCountReq
( Pst *pst, SpId spId, NhuHdr *nhuHdr );




extern S16 cmPkNhuEncodeReq
( Pst *pst, SpId spId, NhuEncReqSdus *nhuEncReqSdus );




extern S16 cmPkNhuEncReqSdus
( NhuEncReqSdus *param, Buffer *mBuf );



extern S16 cmPkNhuEncodeCfm
( Pst *pst, SuId suId, NhuEncCfmSdus *nhuEncSdusCfm );




extern S16 cmPkNhuEncCfmSdus
( NhuEncCfmSdus *param, Buffer *mBuf );



extern S16 cmPkNhuPdcpSduStaReq
( Pst *pst, SpId spId, NhuHdr hdr );




extern S16 cmPkNhuPdcpSduStaCfm
( Pst *pst, SuId suId, NhuPdcpSduStaCfm *nhuPdcpSduStaCfm );




extern S16 cmPkNhuPdcpSduStaCfmSdus
( NhuPdcpSduStaCfm *param, Buffer *mBuf );



extern S16 cmPkNhuPdcpSduStaInfo
( NhuPdcpSduStaInfo *param, Buffer *mBuf );



extern S16 cmPkNhuPdcpCfgSduStaInfo
( NhuHoPdcpSduInfo *param, Buffer *mBuf );



extern S16 cmPkNhuDecodeSduReq
( NhuDecodeSduReq *param, Buffer *mBuf );



extern S16 cmPkNhuDecodeSduCfm
( NhuDecodeSduCfm *param, Buffer *mBuf );



extern S16 cmPkNhuDRBCountInfoLst
( NhuDRBCountInfoLst *param, Buffer *mBuf );





extern S16 cmPkNhuUL_DCCH_Msg (NhuUL_DCCH_Msg *param, Buffer *mBuf);
extern S16 cmPkNhuDL_DCCH_Msg (NhuDL_DCCH_Msg *param, Buffer *mBuf);
extern S16 cmPkNhuBCCH_BCH_Msg (NhuBCCH_BCH_Msg *param, Buffer *mBuf);
extern S16 cmPkNhuBCCH_DL_SCH_Msg (NhuBCCH_DL_SCH_Msg *param, Buffer *mBuf);

extern S16 cmPkNhuPCCH_Msg (NhuPCCH_Msg *param, Buffer *mBuf);
extern S16 cmPkNhuUL_CCCH_Msg (NhuUL_CCCH_Msg *param, Buffer *mBuf);
extern S16 cmPkNhuDL_CCCH_Msg (NhuDL_CCCH_Msg *param, Buffer *mBuf);
# 3676 "../..//cm/nhu.x"
extern S16 cmUnpkNhuHdr
( NhuHdr *param, Buffer *mBuf );



extern S16 cmUnpkNhuErrorInfo
( NhuErrorInfo *param, Buffer *mBuf );



extern S16 cmUnpkNhuNewUeInfo
( NhuNewUeInfo *param, Buffer *mBuf );



extern S16 cmUnpkNhuPdcpRohcInfo
( NhuPdcpRohcInfo *param, Buffer *mBuf );



extern S16 cmUnpkNhuPdcpHdrComprInfo
( NhuPdcpHdrComprInfo *param, Buffer *mBuf );



extern S16 cmUnpkNhuPdcpCfg
( NhuPdcpCfg *param, Buffer *mBuf, Ptr ptr );




extern S16 cmUnpkNhuLogChId
( NhuLogChId *param, Buffer *mBuf );



extern S16 cmUnpkNhuLogChCfg
( NhuLogChCfg *param, Buffer *mBuf );



extern S16 cmUnpkNhuUlLogChMap
( NhuUlLogChMap *param, Buffer *mBuf );



extern S16 cmUnpkNhuDlUmRlcModeInfo
( NhuDlUmRlcModeInfo *param, Buffer *mBuf );



extern S16 cmUnpkNhuDlAmRlcModeInfo
( NhuDlAmRlcModeInfo *param, Buffer *mBuf );



extern S16 cmUnpkNhuDlTmRlcModeInfo
( NhuDlTmRlcModeInfo *param, Buffer *mBuf );



extern S16 cmUnpkNhuUlUmRlcModeInfo
( NhuUlUmRlcModeInfo *param, Buffer *mBuf );



extern S16 cmUnpkNhuUlAmRlcModeInfo
( NhuUlAmRlcModeInfo *param, Buffer *mBuf );



extern S16 cmUnpkNhuUlRlcMode
( NhuUlRlcMode *param, Buffer *mBuf );



extern S16 cmUnpkNhuUlRbCfg
( NhuUlRbCfg *param, Buffer *mBuf );



extern S16 cmUnpkNhuDlLogChMap
( NhuDlLogChMap *param, Buffer *mBuf );



extern S16 cmUnpkNhuDlRlcMode
( NhuDlRlcMode *param, Buffer *mBuf );



extern S16 cmUnpkNhuDlRbCfg
( NhuDlRbCfg *param, Buffer *mBuf );



extern S16 cmUnpkNhuRbCfgInfo
( NhuRbCfgInfo *param, Buffer *mBuf, Ptr ptr );




extern S16 cmUnpkNhuRbCfgList
( NhuRbCfgList *param, Ptr ptr, Buffer *mBuf );




extern S16 cmUnpkNhuRbRlsCfgList
( NhuRbRlsCfgList *param, Ptr ptr, Buffer *mBuf );




extern S16 cmUnpkNhuRbCfgAllList
( NhuRbCfgAllList *param, Ptr ptr, Buffer *mBuf );




extern S16 cmUnpkNhuUlHarqCfg
( NhuUlHarqCfg *param, Buffer *mBuf );



extern S16 cmUnpkNhuTrChCfg
( NhuTrChCfg *param, Buffer *mBuf );



extern S16 cmUnpkNhuIntgKeyAlgoInfo
( NhuIntgKeyAlgoInfo *param, Buffer *mBuf );



extern S16 cmUnpkNhuCiphKeyAlgoInfo
( NhuCiphKeyAlgoInfo *param, Buffer *mBuf );



extern S16 cmUnpkNhuSecurityCfg
( NhuSecurityCfg *param, Buffer *mBuf );



extern S16 cmUnpkNhuUeCfgInfo
( NhuUeCfgInfo *param, Ptr ptr, Buffer *mBuf );




extern S16 cmUnpkNhuUlDcchMsg
( NhuUlDcchMsg *param, Ptr ptr, Buffer *mBuf );




extern S16 cmUnpkNhuDlDcchMsg
( NhuDlDcchMsg *param, Ptr ptr, Buffer *mBuf );




extern S16 cmUnpkNhuDedMsg
( NhuDedMsg *param, Ptr ptr, Buffer *mBuf );




extern S16 cmUnpkNhuCmnMsgInfo
( NhuCmnMsgInfo *param, Buffer *mBuf );



extern S16 cmUnpkNhuCmnMsg
( NhuCmnMsg *param, Ptr ptr, Buffer *mBuf );




extern S16 cmUnpkNhuDatReqUeMsg
( NhuDatReqUeMsg *param, Ptr ptr, Buffer *mBuf );




extern S16 cmUnpkNhuDatReqSdus
( NhuDatReqSdus *param, Buffer *mBuf );



extern S16 cmUnpkNhuUlCcchMsg
( NhuUlCcchMsg *param, Ptr ptr, Buffer *mBuf );




extern S16 cmUnpkNhuDlCcchMsg
( NhuDlCcchMsg *param, Ptr ptr, Buffer *mBuf );




extern S16 cmUnpkNhuDatRspSdus
( NhuDatRspSdus *param, Buffer *mBuf );



extern S16 cmUnpkNhuDatIndSdus
( NhuDatIndSdus *param, Buffer *mBuf );



extern S16 cmUnpkNhuRaOccasion
( NhuRaOccasion *param, Buffer *mBuf );



extern S16 cmUnpkNhuRachCfg
( NhuRachCfg *param, Buffer *mBuf );



extern S16 cmUnpkNhuCmnMacCfg
( NhuCmnMacCfg *param, Buffer *mBuf );



extern S16 cmUnpkNhuCellCfgInfo
( NhuCellCfgInfo *param, Ptr ptr, Buffer *mBuf );




extern S16 cmUnpkNhuCellCfgReqSdus
( NhuCellCfgReqSdus *param, Buffer *mBuf );



extern S16 cmUnpkNhuCellCfgCfmSdus
( NhuCellCfgCfmSdus *param, Buffer *mBuf );



extern S16 cmUnpkNhuDatCfmSdus
( NhuDatCfmSdus *param, Buffer *mBuf );



extern S16 cmUnpkNhuStaIndSdus
( NhuStaIndSdus *param, Buffer *mBuf );



extern S16 cmUnpkNhuErrIndSdus
( NhuErrIndSdus *param, Buffer *mBuf );



extern S16 cmUnpkNhuCfgReqSdus
( NhuCfgReqSdus *param, Buffer *mBuf );



extern S16 cmUnpkNhuCfgCfmSdus
( NhuCfgCfmSdus *param, Buffer *mBuf );



extern S16 cmUnpkNhuBndReq
( NhuBndReq func, Pst *pst, Buffer *mBuf );




extern S16 cmUnpkNhuBndCfm
( NhuBndCfm func, Pst *pst, Buffer *mBuf );




extern S16 cmUnpkNhuUbndReq
( NhuUbndReq func, Pst *pst, Buffer *mBuf );




extern S16 cmUnpkNhuDatReq
( NhuDatReq func, Pst *pst, Buffer *mBuf, Mem *sMem, Size maxBlkSize );






extern S16 cmUnpkNhuDatRsp
( NhuDatRsp func, Pst *pst, Buffer *mBuf, Mem *sMem, Size maxBlkSize );






extern S16 cmUnpkNhuDatInd
( NhuDatInd func, Pst *pst, Buffer *mBuf, Mem *sMem, Size maxBlkSize );






extern S16 cmUnpkNhuDatCfm
( NhuDatCfm func, Pst *pst, Buffer *mBuf );




extern S16 cmUnpkNhuErrInd
( NhuErrInd func, Pst *pst, Buffer *mBuf );




extern S16 cmUnpkNhuCfgReq
( NhuCfgReq func, Pst *pst, Buffer *mBuf, Mem *sMem, Size maxBlkSize );






extern S16 cmUnpkNhuCfgCfm
( NhuCfgCfm func, Pst *pst, Buffer *mBuf );




extern S16 cmUnpkNhuCnclUeReq
( NhuCnclUeReq func, Pst *pst, Buffer *mBuf );




extern S16 cmUnpkNhuCellCfgReq
( NhuCellCfgReq func, Pst *pst, Buffer *mBuf, Mem *sMem, Size maxBlkSize );






extern S16 cmUnpkNhuCellCfgCfm
( NhuCellCfgCfm func, Pst *pst, Buffer *mBuf );




extern S16 cmUnpkNhuDeleteTransReq
( NhuDeleteTransReq func, Pst *pst, Buffer *mBuf );




extern S16 cmUnpkNhuStaInd
( NhuStaInd func, Pst *pst, Buffer *mBuf );




extern S16 cmUnpkNhuDecodeReq
( NhuDecodeReq func, Pst *pst, Buffer *mBuf, Mem *sMem, Size maxBlkSize );






extern S16 cmUnpkNhuCountReq
( NhuCountReq func, Pst *pst, Buffer *mBuf, Mem *sMem, Size maxBlkSize );






extern S16 cmUnpkNhuDecodeCfm
( NhuDecodeCfm func, Pst *pst, Buffer *mBuf, Mem *sMem, Size maxBlkSize );






extern S16 cmUnpkNhuCountCfm
( NhuCountCfm func, Pst *pst, Buffer *mBuf, Mem *sMem, Size maxBlkSize );






extern S16 cmUnpkNhuEncodeReq
( NhuEncReq func, Pst *pst, Buffer *mBuf, Mem *sMem, Size maxBlkSize );






extern S16 cmUnpkNhuEncReqSdus
( NhuEncReqSdus *param, Buffer *mBuf );



extern S16 cmUnpkNhuEncodeCfm
( NhuEncCfm func, Pst *pst, Buffer *mBuf );




extern S16 cmUnpkNhuEncCfmSdus
( NhuEncCfmSdus *param, Buffer *mBuf );



extern S16 cmUnpkNhuPdcpSduStaReq
( NhuSduStaReq func, Pst *pst, Buffer *mBuf );




extern S16 cmUnpkNhuPdcpSduStaCfm
( NhuSduStaCfm func, Pst *pst, Buffer *mBuf, Mem *sMem, Size maxBlkSize );






extern S16 cmUnpkNhuPdcpSduStaCfmSdus
( NhuPdcpSduStaCfm *param, Buffer *mBuf, Pst *pst );




extern S16 cmUnpkNhuRbId
( NhuRbId *param, Buffer *mBuf );



extern S16 cmPkNhuRbId
( NhuRbId *param, Buffer *mBuf );



extern S16 cmPkNhuCellReCfgInfo
( NhuCellReCfgInfo *param, Buffer *mBuf );



extern S16 cmUnpkNhuCellReCfgInfo
( NhuCellReCfgInfo *param, Buffer *mBuf );



extern S16 cmPkNhuCellRlsInfo
( NhuCellRlsInfo *param, Buffer *mBuf );



extern S16 cmUnpkNhuCellRlsInfo
( NhuCellRlsInfo *param, Buffer *mBuf );



extern S16 cmPkBuf
( Pst *pst, Buffer *buf, Buffer **mBuf );




extern S16 cmUnpkBuf
( Buffer **buf, Buffer *mBuf );




extern S16 cmPkNhuSysBwCfg
( NhuSysBwCfg *param, Buffer *mBuf );



extern S16 cmUnpkNhuSysBwCfg
( NhuSysBwCfg *param, Buffer *mBuf );
# 4391 "../..//cm/nhu.x"
extern S16 cmUnpkNhuPdcpCfgSduStaInfo
( NhuHoPdcpSduInfo *param, Buffer *mBuf, Ptr ptr );





extern S16 cmUnpkNhuPdcpSduStaInfo
( NhuPdcpSduStaInfo *param, Buffer *mBuf );



extern S16 cmUnpkNhuDecodeSduReq
( NhuDecodeSduReq *param, Buffer *mBuf );



extern S16 cmUnpkNhuDecodeSduCfm
( NhuDecodeSduCfm *param, Buffer *mBuf );



extern S16 cmUnpkNhuDRBCountInfoLst
( NhuDRBCountInfoLst *param, Buffer *mBuf );






extern S16 cmUnpkNhuUL_DCCH_Msg (NhuUL_DCCH_Msg *param, Ptr ptr, Buffer *mBuf);

extern S16 cmUnpkNhuDL_DCCH_Msg (NhuDL_DCCH_Msg *param, Ptr ptr, Buffer *mBuf);

extern S16 cmUnpkNhuBCCH_BCH_Msg (NhuBCCH_BCH_Msg *param, Ptr ptr, Buffer *mBuf);

extern S16 cmUnpkNhuBCCH_DL_SCH_Msg (NhuBCCH_DL_SCH_Msg *param, Ptr ptr, Buffer *mBuf);

extern S16 cmUnpkNhuPCCH_Msg (NhuPCCH_Msg *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkNhuUL_CCCH_Msg (NhuUL_CCCH_Msg *param, Ptr ptr, Buffer *mBuf);

extern S16 cmUnpkNhuDL_CCCH_Msg (NhuDL_CCCH_Msg *param, Ptr ptr, Buffer *mBuf);
# 143 "../..//enbapp/src/wr.h" 2
# 1 "../..//cm/pju.x" 1
# 88 "../..//cm/pju.x"
#define __PJU_X__ 
# 102 "../..//cm/pju.x"
typedef U32 PjuSduId;
typedef U32 PjuSduLen;





typedef struct pjuDatCfmSta
{
   PjuSduId sduId;
   U8 status;




}PjuDatCfmSta;





typedef struct pjuDatCfmInfo
{
   U16 numSdus;
   PjuDatCfmSta cfmSta[25];
}PjuDatCfmInfo;




typedef struct pjuStaIndInfo
{
   U8 cause;
}PjuStaIndInfo;




typedef struct pjuDatFwdInfo
{
   PjuSduId sduId;
   U16 sn;
   Buffer *sdu;

}PjuDatFwdInfo;






typedef struct pjuDatFwdReqInfo
{
   U8 dir;

   U16 numSdus;
   PjuDatFwdInfo *datFwdInfo;
}PjuDatFwdReqInfo;





typedef PjuDatFwdReqInfo PjuDatFwdIndInfo;
# 176 "../..//cm/pju.x"
typedef S16 (*PjuBndReq) ( Pst *, SuId, SpId );





typedef S16 (*PjuBndCfm) ( Pst *, SuId, U8 );





typedef S16 (*PjuUbndReq) ( Pst *, SpId, Reason );





typedef S16 (*PjuDatReq) ( Pst *, SpId, CmLtePdcpId *, PjuSduId, Buffer * );







typedef S16 (*PjuDatCfm) ( Pst *, SuId, CmLtePdcpId *, PjuDatCfmInfo * );






typedef S16 (*PjuDatInd) ( Pst *, SuId, CmLtePdcpId *, Buffer * );






typedef S16 (*PjuStaInd) ( Pst *, SuId, CmLtePdcpId *, PjuStaIndInfo *, Buffer * );







typedef S16 (*PjuDatFwdReq) ( Pst *, SpId, CmLtePdcpId *, PjuDatFwdReqInfo * );






typedef S16 (*PjuDatFwdInd) ( Pst *, SuId, CmLtePdcpId *, PjuDatFwdIndInfo * );
# 261 "../..//cm/pju.x"
extern S16 PjUiPjuBndReq ( Pst* , SuId , SpId);
# 282 "../..//cm/pju.x"
extern S16 PjUiPjuBndCfm ( Pst*, SuId, U8);
# 301 "../..//cm/pju.x"
extern S16 PjUiPjuUbndReq ( Pst*, SpId, Reason);
# 321 "../..//cm/pju.x"
extern S16 PjUiPjuDatReq ( Pst*, SpId, CmLtePdcpId *, PjuSduId, Buffer*);
# 338 "../..//cm/pju.x"
extern S16 PjUiPjuDatCfm (Pst*, SuId, CmLtePdcpId *, PjuDatCfmInfo *);
# 355 "../..//cm/pju.x"
extern S16 PjUiPjuDatInd (Pst*, SuId, CmLtePdcpId *, Buffer*);
# 373 "../..//cm/pju.x"
extern S16 PjUiPjuStaInd (Pst*, SuId, CmLtePdcpId *, PjuStaIndInfo *, Buffer *);
# 394 "../..//cm/pju.x"
extern S16 PjUiPjuDatFwdReq (Pst*, SpId, CmLtePdcpId *, PjuDatFwdReqInfo *);
# 413 "../..//cm/pju.x"
extern S16 PjUiPjuDatFwdInd (Pst*, SuId, CmLtePdcpId *, PjuDatFwdIndInfo *);
# 491 "../..//cm/pju.x"
extern S16 PxLiPjuBndReq ( Pst *, SuId, SpId );





extern S16 PxLiPjuUbndReq ( Pst *, SuId, Reason );





extern S16 PxLiPjuDatReq ( Pst *, SpId, CmLtePdcpId *, PjuSduId, Buffer * );







extern S16 PxLiPjuBndCfm ( Pst *, SuId, U8 );





extern S16 PxLiPjuDatInd ( Pst *, SuId, CmLtePdcpId *, Buffer * );






extern S16 PxLiPjuDatCfm ( Pst *, SuId , CmLtePdcpId *, PjuDatCfmInfo * );






extern S16 PxLiPjuStaInd ( Pst*, SuId, CmLtePdcpId *, PjuStaIndInfo * , Buffer * );







extern S16 PxLiPjuDatFwdReq ( Pst *, SpId, CmLtePdcpId *, PjuDatFwdReqInfo * );







extern S16 PxLiPjuDatFwdInd ( Pst *, SuId, CmLtePdcpId *, PjuDatFwdIndInfo * );
# 559 "../..//cm/pju.x"
extern S16 NhLiPjuBndReq ( Pst *, SuId, SpId );





extern S16 NhLiPjuUbndReq ( Pst *, SuId, Reason );





extern S16 NhLiPjuDatReq ( Pst *, SpId, CmLtePdcpId *, PjuSduId, Buffer * );







extern S16 NhLiPjuBndCfm ( Pst *, SuId, U8 );





extern S16 NhLiPjuDatInd ( Pst *, SuId, CmLtePdcpId *, Buffer * );






extern S16 NhLiPjuDatCfm ( Pst *, SuId , CmLtePdcpId *, PjuDatCfmInfo * );






extern S16 NhLiPjuStaInd ( Pst*, SuId, CmLtePdcpId *, PjuStaIndInfo * , Buffer * );







extern S16 NhLiPjuDatFwdReq ( Pst *, SpId, CmLtePdcpId *, PjuDatFwdReqInfo * );







extern S16 NhLiPjuDatFwdInd ( Pst *, SuId, CmLtePdcpId *, PjuDatFwdIndInfo * );
# 631 "../..//cm/pju.x"
extern S16 cmPkPjuBndReq ( Pst* pst, SpId suId, SuId spId );




extern S16 cmUnpkPjuBndReq ( PjuBndReq func, Pst *pst, Buffer *mBuf );




extern S16 cmPkPjuBndCfm ( Pst* pst, SuId suId, U8 status );




extern S16 cmUnpkPjuBndCfm ( PjuBndCfm func, Pst *pst, Buffer *mBuf );




extern S16 cmPkPjuUbndReq ( Pst* pst, SpId spId, Reason reason );




extern S16 cmUnpkPjuUbndReq ( PjuUbndReq func, Pst *pst, Buffer *mBuf );




extern S16 cmPkPjuDatReq ( Pst* pst, SpId spId, CmLtePdcpId * pdcpId, PjuSduId sduId, Buffer * mBuf );






extern S16 cmUnpkPjuDatReq ( PjuDatReq func, Pst *pst, Buffer *mBuf );




extern S16 cmPkPjuDatCfm ( Pst* pst, SuId suId, CmLtePdcpId * pdcpId, PjuDatCfmInfo * datCfm );





extern S16 cmUnpkPjuDatCfm ( PjuDatCfm func, Pst *pst, Buffer *mBuf );




extern S16 cmPkPjuDatInd ( Pst* pst, SuId suId, CmLtePdcpId * pdcpId, Buffer * mBuf );





extern S16 cmUnpkPjuDatInd ( PjuDatInd func, Pst *pst, Buffer *mBuf );




extern S16 cmPkPjuStaInd ( Pst* pst, SuId suId, CmLtePdcpId * pdcpId, PjuStaIndInfo * staInd, Buffer *buff );






extern S16 cmUnpkPjuStaInd ( PjuStaInd func, Pst *pst, Buffer *mBuf );




extern S16 cmPkPjuDatFwdReq ( Pst* pst, SpId spId, CmLtePdcpId * pdcpId, PjuDatFwdReqInfo * datFwdReq );





extern S16 cmUnpkPjuDatFwdReq ( PjuDatFwdReq func, Pst *pst, Buffer *mBuf );




extern S16 cmPkPjuDatFwdInd ( Pst* pst, SuId suId, CmLtePdcpId * pdcpId, PjuDatFwdIndInfo * datFwdInd );





extern S16 cmUnpkPjuDatFwdInd ( PjuDatFwdInd func, Pst *pst, Buffer *mBuf );




extern S16 cmPkPjuDatCfmInfoSta ( PjuDatCfmSta *param, Buffer *mBuf );



extern S16 cmUnpkPjuDatCfmInfoSta ( PjuDatCfmSta *param, Buffer *mBuf );



extern S16 cmPkPjuDatCfmInfo ( PjuDatCfmInfo *param, Buffer *mBuf );



extern S16 cmUnpkPjuDatCfmInfo ( PjuDatCfmInfo *param, Buffer *mBuf );



extern S16 cmPkPjuStaIndInfo ( PjuStaIndInfo *param, Buffer *mBuf );



extern S16 cmUnpkPjuStaIndInfo ( PjuStaIndInfo *param, Buffer *mBuf );



extern S16 cmPkPjuDatFwdReqInfo ( PjuDatFwdReqInfo *param, Buffer *mBuf );



extern S16 cmUnpkPjuDatFwdReqInfo ( Pst *pst, PjuDatFwdReqInfo *param, Buffer *mBuf );




extern S16 cmPkPjuDatFwdInfo ( PjuDatFwdInfo *param, Buffer *mBuf );



extern S16 cmUnpkPjuDatFwdInfo ( PjuDatFwdInfo *param, Buffer *mBuf );
# 144 "../..//enbapp/src/wr.h" 2
# 1 "../..//cm/cpj.x" 1
# 88 "../..//cm/cpj.x"
#define __CPJ_X__ 
# 106 "../..//cm/cpj.x"
typedef U8 CpjCipherKey;





typedef U8 CpjIntegrityKey;





typedef struct cpjRlcAm
{
   Bool statusRepReqd;
}CpjRlcAm;





typedef struct cpjRlcUm
{
   U8 pdcpSNSize;
}CpjRlcUm;





typedef struct cpjRlcInfo
{
   U8 dir;
   U8 mode;
   union
   {
      CpjRlcAm rlcAm;
      CpjRlcUm rlcUm;
   }m;
}CpjRlcInfo;






typedef struct cpjCipherInfo
{
   CpjCipherKey ctrlplnKey[16];

   CpjCipherKey usrplnKey[16];

   U8 algoType;





}CpjCipherInfo;





typedef struct cpjIntegInfo
{
   U8 algoType;




   CpjIntegrityKey intKey[16];
} CpjIntegInfo;





typedef struct cpjSecCfg
{
   Bool selSecAct;







   CpjIntegInfo integInfo;
   CpjCipherInfo cipherInfo;
} CpjSecCfg;





typedef struct cpjRohcInfo
{
   U16 maxCid;
   Bool profLst[9];

}CpjRohcInfo;





typedef struct cpjHdrCompCfg
{
   Bool hdrCompUsed;
   CpjRohcInfo rohcInfo;
}CpjHdrCompCfg;





typedef struct cpjHoInfo
{
   U8 isHoPres;





   U32 dlCount;
   U32 ulCount;
   U8 numBits;
   U8 *ulBitMap;

} CpjHoInfo;





typedef struct cpjAddCfgEnt
{
   Bool discReqd;

   Bool cfmReqd;






   CpjRlcInfo rlcInfo;
   S16 discardTmr;



   CpjHdrCompCfg hdrCompCfg;
}CpjAddCfgEnt;





typedef struct cpjModCfgEnt
{

   U8 bitFlag;


   Bool discReqd;


   Bool cfmReqd;


   CpjHdrCompCfg hdrCompCfg;
   CpjHoInfo hoInfo;
}CpjModCfgEnt;






typedef struct cpjCfgEnt
{
   U8 rbId;
   U8 cfgType;





   U8 rbType;



   union{
        CpjAddCfgEnt addCfg;

        CpjModCfgEnt modCfg;

   }m;
}CpjCfgEnt;
# 314 "../..//cm/cpj.x"
typedef struct cpjCfgReqInfo
{
   CmLteRnti ueId;
   CmLteCellId cellId;
   U32 transId;
   U8 numEnt;

   CpjCfgEnt cfgEnt[10];

}CpjCfgReqInfo;





typedef struct cpjCfmEnt
{
   U8 rbId;
   U8 rbType;
   Status status;
   Reason reason;
}CpjCfmEnt;





typedef struct cpjCfgCfmInfo
{
   CmLteRnti ueId;
   CmLteCellId cellId;
   U32 transId;
   U8 numEnt;
   CpjCfmEnt cfmEnt[10];

}CpjCfgCfmInfo;





typedef struct cpjReEstReqInfo
{
   CmLtePdcpId pdcpId;
   U32 transId;
   U8 intKey[16];
   CpjCipherKey ctrlplnKey[16];

   CpjCipherKey usrplnKey[16];

}CpjReEstReqInfo;





typedef struct cpjReEstCfmInfo
{
   CmLteRnti ueId;
   CmLteCellId cellId;
   U32 transId;
   Status status;




}CpjReEstCfmInfo;






typedef struct cpjSecCfgReqInfo
{
   CmLteRnti ueId;
   CmLteCellId cellId;
   U32 transId;
   CpjSecCfg secCfg;
}CpjSecCfgReqInfo;





typedef struct cpjSecCfgCfmInfo
{
   CmLteRnti ueId;
   CmLteCellId cellId;
   U32 transId;
   Status status;
   Reason reason;
}CpjSecCfgCfmInfo;





typedef struct cpjUeInfo
{
   CmLteCellId cellId;
   CmLteRnti ueId;
}CpjUeInfo;





typedef struct cpjCountReqInfo
{
   CmLteRnti ueId;
   CmLteCellId cellId;
   U32 transId;
} CpjCountReqInfo;





typedef struct cpjCountInfo
{
   U8 rbId;
   U8 dir;
   U32 ulCount;
   U32 dlCount;
} CpjCountInfo;




typedef struct cpjCountCfmInfo
{
   CmLteRnti ueId;
   CmLteCellId cellId;
   U32 transId;
   U8 numRb;
   CpjCountInfo countInfo[12];
   Status status;
   Reason reason;
} CpjCountCfmInfo;






typedef struct cpjSduStaReqInfo
{
   CmLteRnti ueId;
   CmLteCellId cellId;
   U32 transId;
} CpjSduStaReqInfo;





typedef struct cpjUlSduStaInfo
{
   U8 numBits;
   U8 *ulBitMap;
# 484 "../..//cm/cpj.x"
   U32 count;

} CpjUlSduStaInfo;





typedef struct cpjDlSduStaInfo
{
   U32 count;

} CpjDlSduStaInfo;





typedef struct cpjSduStaInfo
{
   U8 rbId;
   U8 dir;
   CpjUlSduStaInfo ulSduStaInfo;
   CpjDlSduStaInfo dlSduStaInfo;
} CpjSduStaInfo;





typedef struct cpjSduStaCfmInfo
{
   CmLteRnti ueId;
   CmLteCellId cellId;
   U32 transId;
   U8 numRb;
   CpjSduStaInfo sduStaInfo[12];

   Status status;
   Reason reason;
} CpjSduStaCfmInfo;
# 534 "../..//cm/cpj.x"
typedef S16 (*CpjBndReq) (Pst *pst, SuId suId, SpId spId);
typedef S16 (*CpjBndCfm) (Pst *pst, SuId suId, U8 status);
typedef S16 (*CpjUbndReq) (Pst *pst, SpId spId, Reason reason);
typedef S16 (*CpjCfgReq) (Pst *pst, SpId spId, CpjCfgReqInfo *cfgReq);
typedef S16 (*CpjCfgCfm) (Pst *pst, SuId suId, CpjCfgCfmInfo *cfgCfm);
typedef S16 (*CpjReEstReq) (Pst *pst, SpId spId, CpjReEstReqInfo *reEstReq);
typedef S16 (*CpjReEstCfm) (Pst *pst, SuId suId, CpjReEstCfmInfo *reEstCfm);
typedef S16 (*CpjSecCfgReq) (Pst *pst, SpId spId, CpjSecCfgReqInfo *secCfgReq);
typedef S16 (*CpjSecCfgCfm) (Pst *pst, SuId suId, CpjSecCfgCfmInfo *secCfgCfm);
typedef S16 (*CpjUeIdChgReq) (Pst *pst, SpId spId, U32 transId, CpjUeInfo *oldUeInfo, CpjUeInfo *newUeInfo);


typedef S16 (*CpjUeIdChgCfm) (Pst *pst, SuId suId, U32 transId, CpjUeInfo *ueInfo, CmStatus status);

typedef S16 (*CpjCountReq) (Pst *pst, SpId spId, CpjCountReqInfo *countReq);
typedef S16 (*CpjCountCfm) (Pst *pst, SuId suId, CpjCountCfmInfo *countCfm);
typedef S16 (*CpjSduStaReq) (Pst *pst, SpId spId, CpjSduStaReqInfo *staReq);
typedef S16 (*CpjSduStaCfm) (Pst *pst, SuId suId, CpjSduStaCfmInfo *staCfm);
# 578 "../..//cm/cpj.x"
extern S16 PjUiCpjBndReq (Pst *pst, SuId suId, SpId spId);
# 599 "../..//cm/cpj.x"
extern S16 PjUiCpjBndCfm (Pst *pst, SuId suId, U8 status);
# 616 "../..//cm/cpj.x"
extern S16 PjUiCpjUbndReq (Pst *pst, SpId spId, Reason reason);
# 633 "../..//cm/cpj.x"
extern S16 PjUiCpjCfgReq (Pst *pst, SpId spId, CpjCfgReqInfo *cfgReq);
# 648 "../..//cm/cpj.x"
extern S16 PjUiCpjCfgCfm (Pst *pst, SuId suId, CpjCfgCfmInfo *cfgCfm);
# 664 "../..//cm/cpj.x"
extern S16 PjUiCpjReEstReq (Pst *pst, SpId spId, CpjReEstReqInfo *reEstReq);
# 678 "../..//cm/cpj.x"
extern S16 PjUiCpjReEstCfm (Pst *pst, SuId suId, CpjReEstCfmInfo *reEstCfm);
# 696 "../..//cm/cpj.x"
extern S16 PjUiCpjSecCfgReq (Pst *pst, SpId spId, CpjSecCfgReqInfo *secCfgReq);
# 712 "../..//cm/cpj.x"
extern S16 PjUiCpjSecCfgCfm (Pst *pst, SuId suId, CpjSecCfgCfmInfo *secCfgCfm);
# 729 "../..//cm/cpj.x"
extern S16 PjUiCpjUeIdChgReq (Pst *pst, SpId spId, U32 transId, CpjUeInfo *oldUeInfo, CpjUeInfo *newUeInfo);
# 754 "../..//cm/cpj.x"
extern S16 PjUiCpjUeIdChgCfm (Pst *pst, SuId suId, U32 transId, CpjUeInfo *ueInfo, CmStatus status);
# 770 "../..//cm/cpj.x"
extern S16 PjUiCpjCountReq (Pst *pst, SpId spId, CpjCountReqInfo *countReq);
# 786 "../..//cm/cpj.x"
extern S16 PjUiCpjCountCfm (Pst *pst, SuId suId, CpjCountCfmInfo *countCfm);
# 803 "../..//cm/cpj.x"
extern S16 PjUiCpjSduStaReq (Pst *pst, SpId spId, CpjSduStaReqInfo *staReq);
# 819 "../..//cm/cpj.x"
extern S16 PjUiCpjSduStaCfm (Pst *pst, SuId suId, CpjSduStaCfmInfo *staCfm);
# 858 "../..//cm/cpj.x"
extern S16 NhLiCpjBndReq (Pst *, SuId, SpId);

extern S16 NhLiCpjUbndReq (Pst *, SpId, Reason);

extern S16 NhLiCpjBndCfm (Pst *, SuId, U8);

extern S16 NhLiCpjCfgReq (Pst *, SpId , CpjCfgReqInfo *);

extern S16 NhLiCpjCfgCfm (Pst *, SuId , CpjCfgCfmInfo *);

extern S16 NhLiCpjSecCfgReq (Pst *, SpId , CpjSecCfgReqInfo *);

extern S16 NhLiCpjSecCfgCfm (Pst *, SuId , CpjSecCfgCfmInfo *);

extern S16 NhLiCpjUeIdChgReq (Pst *, SpId , U32 , CpjUeInfo *, CpjUeInfo *);

extern S16 NhLiCpjUeIdChgCfm (Pst *, SuId , U32, CpjUeInfo *, CmStatus);

extern S16 NhLiCpjReEstReq (Pst *pst, SpId spId, CpjReEstReqInfo *reEstReq);

extern S16 NhLiCpjReEstCfm ( Pst *pst, SuId suId, CpjReEstCfmInfo *cfmInfo);

extern S16 NhLiCpjCountReq (Pst *, SpId , CpjCountReqInfo *);

extern S16 NhLiCpjCountCfm (Pst *, SuId , CpjCountCfmInfo *);

extern S16 NhLiCpjSduStaReq (Pst *, SpId , CpjSduStaReqInfo *);

extern S16 NhLiCpjSduStaCfm (Pst *, SuId , CpjSduStaCfmInfo *);
# 145 "../..//enbapp/src/wr.h" 2
# 1 "../..//cm/rgr.x" 1
# 91 "../..//cm/rgr.x"
#define __RGR_X__ 
# 101 "../..//cm/rgr.x"
typedef enum rgrGrpPwrFormat
{
   RGR_PWR_FORMAT_3,
   RGR_PWR_FORMAT_3A
} RgrGrpPwrFormat;
# 121 "../..//cm/rgr.x"
typedef enum rgrCqiPrdicity
{
   RGR_CQI_PRD_MS2 = 2,
   RGR_CQI_PRD_MS5 = 5,
   RGR_CQI_PRD_MS10 = 10,
   RGR_CQI_PRD_MS20 = 20,
   RGR_CQI_PRD_MS32 = 32,
   RGR_CQI_PRD_MS40 = 40,
   RGR_CQI_PRD_MS64 = 64,
   RGR_CQI_PRD_MS80 = 80,
   RGR_CQI_PRD_MS128 = 128,
   RGR_CQI_PRD_MS160 = 160,
   RGR_CQI_PRD_MS256 = 256,
   RGR_CQI_PRD_MSOff
} RgrCqiPrdicity;



typedef enum rgrPrdCqiMode
{
   RGR_PRD_CQI_MOD10,
   RGR_PRD_CQI_MOD11,
   RGR_PRD_CQI_MOD20,
   RGR_PRD_CQI_MOD21
} RgrPrdCqiMode;



typedef enum rgrPwrAlpha
{
   RGR_PWR_ALPHA0 = 0,
   RGR_PWR_ALPHA4 = 4,
   RGR_PWR_ALPHA5 = 5,
   RGR_PWR_ALPHA6 = 6,
   RGR_PWR_ALPHA7 = 7,
   RGR_PWR_ALPHA8 = 8,
   RGR_PWR_ALPHA9 = 9,
   RGR_PWR_ALPHAALL = 10
} RgrPwrAlpha;


typedef enum rgrAckNackRepFactor
{
   RGR_ACKNACK_REPFACT_N2 = 2,
   RGR_ACKNACK_REPFACT_N4 = 4,
   RGR_ACKNACK_REPFACT_N6 = 6
} RgrAckNackRepFactor;







typedef enum rgrTxModeTrnstn
{
   RGR_TXMODE_RECFG_CMPLT = 0,
   RGR_TXMODE_RECFG_START
}RgrTxModeTrnstn;



typedef enum rgrTxMode
{
   RGR_UE_TM_1 = 1,
   RGR_UE_TM_2,
   RGR_UE_TM_3,
   RGR_UE_TM_4,
   RGR_UE_TM_5,
   RGR_UE_TM_6,
   RGR_UE_TM_7
} RgrTxMode;



typedef enum rgrRaSfn
{
   RGR_SFN_EVEN,
   RGR_SFN_ANY,






   RGR_SFN_NA
} RgrRaSfn;


typedef enum rgrSrsCfgPrd
{
   RGR_SRS_CFG_PRD_1 = 1,
   RGR_SRS_CFG_PRD_2 = 2,
   RGR_SRS_CFG_PRD_5 = 5,
   RGR_SRS_CFG_PRD_10 = 10,
   RGR_SRS_CFG_PRD_INF
} RgrSrsCfgPrd;



typedef enum rgrSrsBwCfg
{
   RGR_SRS_BWCFG_0 = 0,
   RGR_SRS_BWCFG_1 = 1,
   RGR_SRS_BWCFG_2 = 2,
   RGR_SRS_BWCFG_3 = 3,
   RGR_SRS_BWCFG_4 = 4,
   RGR_SRS_BWCFG_5 = 5,
   RGR_SRS_BWCFG_6 = 6,
   RGR_SRS_BWCFG_7 = 7
} RgrSrsBwCfg;




typedef enum rgrPhichNg
{
   RGR_NG_ONESIXTH,
   RGR_NG_HALF,
   RGR_NG_ONE,
   RGR_NG_TWO
} RgrPhichNg;


typedef enum rgrAprdCqiMode
{
   RGR_APRD_CQI_MOD12,
   RGR_APRD_CQI_MOD20,
   RGR_APRD_CQI_MOD22,
   RGR_APRD_CQI_MOD30,
   RGR_APRD_CQI_MOD31
} RgrAprdCqiMode;
# 294 "../..//cm/rgr.x"
typedef enum _rgrSiPerd
{
   RGR_SI_PERD_8 = 8,
   RGR_SI_PERD_16 = 16,
   RGR_SI_PERD_32 = 32,
   RGR_SI_PERD_64 = 64,
   RGR_SI_PERD_128 = 128,
   RGR_SI_PERD_256 = 256,
   RGR_SI_PERD_512 = 512
} RgrSiPeriodicity;






typedef enum _rgrModPerd
{
   RGR_MOD_PERD_64 = 64,
   RGR_MOD_PERD_128 = 128,
   RGR_MOD_PERD_256 = 256,
   RGR_MOD_PERD_512 = 512,
   RGR_MOD_PERD_1024 = 1024
} RgrModPeriodicity;


typedef enum rgrSiCfgType
{
   RGR_SI_CFG_TYPE_MIB = 0,
   RGR_SI_CFG_TYPE_SIB1,
   RGR_SI_CFG_TYPE_SI
} RgrSiCfgType;
# 418 "../..//cm/rgr.x"
typedef struct rgrCfgTransId
{
   U8 trans[12];
} RgrCfgTransId;


typedef struct rgrDlHqCfg
{
   U8 maxDlHqTx;


   U8 maxMsg4HqTx;


} RgrDlHqCfg;


typedef struct rgrRntiCfg
{
   CmLteRnti startRnti;
   U16 size;

} RgrRntiCfg;


typedef struct rgrDlCmnCodeRateCfg
{
   U16 bcchPchRaCodeRate;


   U16 pdcchCodeRate;



   U8 ccchCqi;


} RgrDlCmnCodeRateCfg;


typedef struct rgrCfiCfg
{
   U8 cfi;
} RgrCfiCfg;


typedef struct rgrPuschSubBandCfg
{
  U8 subbandStart;
  U8 numSubbands;
  U8 size;
  U8 dmrs[110];
} RgrPuschSubBandCfg;


typedef struct rgrUlCmnCodeRateCfg
{
   U8 ccchCqi;

} RgrUlCmnCodeRateCfg;




typedef struct rgrUlTrgCqiCfg
{
   U8 trgCqi;

} RgrUlTrgCqiCfg;


typedef struct rgrBwCfg
{
   U8 dlTotalBw;
   U8 ulTotalBw;
} RgrBwCfg;



typedef struct rgrPhichCfg
{
   RgrPhichNg ngEnum;
   Bool isDurExtend;
} RgrPhichCfg;



typedef struct rgrPucchCfg
{
   U8 resourceSize;
   U8 n1PucchAn;
   U8 deltaShift;
   U8 cyclicShift;

} RgrPucchCfg;


typedef struct rgrSrsCfg
{
   RgrSrsCfgPrd srsCfgPrdEnum;
   RgrSrsBwCfg srsBwEnum;

   U8 srsSubFrameCfg;

} RgrSrsCfg;


typedef struct rgrRachCfg
{
   U8 preambleFormat;
   U8 raWinSize;

   struct raOccasionS
   {
      U8 size;
      RgrRaSfn sfnEnum;
      U8 subFrameNum[10];
   } raOccasion;
   U8 maxMsg3Tx;
   U8 numRaPreamble;
   U8 sizeRaPreambleGrpA;
   U16 msgSizeGrpA;
   U8 prachResource;




   U8 contResTmr;


} RgrRachCfg;




typedef struct rgrSiCfg
{
   U8 siWinSize;
   U8 retxCnt;





   RgrModPeriodicity modPrd;
   U8 numSi;
   RgrSiPeriodicity siPeriodicity[8];


} RgrSiCfg;



typedef struct rgrTpcRntiCfg
{
   CmLteRnti startTpcRnti;
   U16 size;
} RgrTpcRntiCfg;




typedef struct rgrUlPwrCfg
{
   S8 p0NominalPusch;

   RgrPwrAlpha alpha;

   S8 p0NominalPucch;

   S8 deltaPreambleMsg3;

   RgrTpcRntiCfg pucchPwrFmt3;
   RgrTpcRntiCfg pucchPwrFmt3a;
   RgrTpcRntiCfg puschPwrFmt3;
   RgrTpcRntiCfg puschPwrFmt3a;
} RgrUlPwrCfg;



typedef struct rgrPuschCfg
{
   U8 numSubBands;

   Bool isIntraHop;

   U8 hopOffst;

} RgrPuschCfg;



typedef struct rgrCodeBookRstCfg
{
   Bool pres;
   U32 pmiBitMap[2];
} RgrCodeBookRstCfg;


typedef struct rgrPreambleSetCfg
{
   Bool pres;
   U8 start;
   U8 size;

} RgrPreambleSetCfg;



typedef struct rgrCmnLchCfg
{
   CmLteLcId lcId;
   CmLteLcType lcType;






   U8 dir;




   CmLteTrchType dlTrchType;





   CmLteTrchType ulTrchType;




} RgrCmnLchCfg;



typedef struct rgrDlfsCfg
{
  U8 isDlFreqSel;

  U8 thresholdCqi;






} RgrDlfsCfg;
# 693 "../..//cm/rgr.x"
typedef struct rgrCellDlPfs
{
   U32 cqiPrios[17];
   U32 fracPrios[17];
   U32 svcPrioPrios[17];

} RgrCellDlPfs;


typedef struct rgrCellUlPfs
{
   U32 cqiPrios[17];
   U32 fracPrios[17];
   U32 lcgPrios[3];

} RgrCellUlPfs;
# 725 "../..//cm/rgr.x"
typedef struct rgrCellCfg
{
   CmLteCellId cellId;
   Inst macInst;





   U8 maxMsg3PerUlSf;



   U8 maxUePerUlSf;


   U8 maxUePerDlSf;


   U8 maxUlBwPerUe;





   U8 maxDlBwPerUe;





   U8 maxDlRetxBw;





   U8 maxDlUeNewTxPerTti;




   U8 maxUlUeNewTxPerTti;




   U8 numTxAntPorts;

   Bool isCpUlExtend;

   Bool isCpDlExtend;

   Bool cellModSchm;



   U8 dlSchdType;

   S8 pMax;



  union rgrDlSchInfoS
   {
     RgrCellDlPfs cellDlPfs;

   } dlSchInfo;
   U8 ulSchdType;


  union rgrUlSchInfoS
   {
      RgrCellUlPfs cellUlPfs;







   } ulSchInfo;
   U8 dlfsSchdType;

   RgrDlHqCfg dlHqCfg;
   RgrRntiCfg macRnti;
   RgrCfiCfg cfiCfg;
   RgrUlTrgCqiCfg trgUlCqi;
   RgrDlCmnCodeRateCfg dlCmnCodeRate;

   RgrPuschSubBandCfg puschSubBand;
   RgrUlCmnCodeRateCfg ulCmnCodeRate;

   RgrDlfsCfg dlfsCfg;
   RgrBwCfg bwCfg;
   RgrPhichCfg phichCfg;
   RgrPucchCfg pucchCfg;
   RgrSrsCfg srsCfg;

   RgrRachCfg rachCfg;
   RgrSiCfg siCfg;
   RgrUlPwrCfg pwrCfg;
   RgrPuschCfg puschCfg;
   RgrPreambleSetCfg macPreambleSet;

   U8 numCmnLcs;
   RgrCmnLchCfg cmnLcCfg[6];
# 846 "../..//cm/rgr.x"
   U8 rrmTtiIndPrd;
# 861 "../..//cm/rgr.x"
} RgrCellCfg;


typedef struct rgrUeAprdDlCqiCfg
{
   Bool pres;

   RgrAprdCqiMode aprdModeEnum;
} RgrUeAprdDlCqiCfg;





typedef struct rgrUePrdDlCqiCfg
{
   Bool pres;

   RgrPrdCqiMode prdModeEnum;
   RgrCqiPrdicity prdicityEnum;

   U8 subframeOffst;

   S8 cqiOffst;

   U8 k;
   U16 cqiPmiCfgIdx;
} RgrUePrdDlCqiCfg;
# 1041 "../..//cm/rgr.x"
typedef struct rgrUePuschDedCfg
{
   Bool pres;
   U8 bACKIdx;
   U8 bRIIdx;
   U8 bCQIIdx;
}RgrUePuschDedCfg;



typedef struct rgrUeDlCqiCfg
{
   RgrUeAprdDlCqiCfg aprdCqiCfg;
   RgrUePrdDlCqiCfg prdCqiCfg;
} RgrUeDlCqiCfg;



typedef struct rgrUeMeasGapCfg
{
   Bool isMesGapEnabled;
   U8 gapPrd;
   U8 gapOffst;
} RgrUeMeasGapCfg;


typedef struct rgrDrxLongCycleOffst
{
   U16 longDrxCycle;
   U16 drxStartOffst;
} RgrDrxLongCycleOffst;



typedef struct rgrDrxShortDrx
{
   Bool pres;
   U16 shortDrxCycle;
   U8 drxShortCycleTmr;
} RgrDrxShortDrx;



typedef struct rgrUeDrxCfg
{
   Bool isDrxEnabled;
# 1098 "../..//cm/rgr.x"
   U8 drxOnDurTmr;

   U16 drxInactvTmr;

   U8 drxRetxTmr;

   RgrDrxLongCycleOffst drxLongCycleOffst;
   RgrDrxShortDrx drxShortDrx;
} RgrUeDrxCfg;



typedef struct rgrUeCapCfg
{
   U8 pwrClass;
   Bool intraSfFeqHop;
   Bool resAloocType1;
   Bool simCqiAckNack;







} RgrUeCapCfg;



typedef struct rgrUeAckNackRepCfg
{
   Bool isAckNackEnabled;



   U16 pucchAckNackRep;
   RgrAckNackRepFactor ackNackRepFactor;
} RgrUeAckNackRepCfg;



typedef struct rgrUeTxModeCfg
{
   Bool pres;




   RgrTxModeTrnstn tmTrnstnState;


   RgrTxMode txModeEnum;
} RgrUeTxModeCfg;


typedef struct rgrUeUlHqCfg
{
   U8 maxUlHqTx;
   U8 deltaHqOffst;

} RgrUeUlHqCfg;


typedef struct rgrUeGrpPwrCfg
{
   Bool pres;
   CmLteRnti tpcRnti;
   U8 idx;
} RgrUeGrpPwrCfg;


typedef struct rgrUeUlPwrCfg
{
   RgrUeGrpPwrCfg uePuschPwr;
   RgrUeGrpPwrCfg uePucchPwr;
   Bool isAccumulated;
   Bool isDeltaMCSEnabled;
   S8 p0UePusch;
   S8 p0UePucch;
   U8 pSRSOffset;

   U8 trgCqi;


} RgrUeUlPwrCfg;


typedef struct rgrUeQosCfg
{
   Bool ambrPres;
   U32 dlAmbr;
   U32 ueBr;
} RgrUeQosCfg;


typedef struct rgrUeTaTmrCfg
{
   Bool pres;
   U16 taTmr;
} RgrUeTaTmrCfg;







typedef struct rgrUeBsrTmrCfg
{
   Bool isPrdBsrTmrPres;

   U16 prdBsrTmr;


   U16 retxBsrTmr;

} RgrUeBsrTmrCfg;
# 1276 "../..//cm/rgr.x"
typedef enum rgrUeTxAntSelType
{
   RGR_UE_TX_ANT_OPENLOOP,
   RGR_UE_TX_ANT_CLOSEDLOOP
} RgrUeTxAntSelType;


typedef struct rgrUeTxAntSelCfg
{
   Bool pres;
   RgrUeTxAntSelType selType;
} RgrUeTxAntSelCfg;
# 1371 "../..//cm/rgr.x"
typedef struct rgrUeCfg
{
   CmLteCellId cellId;
   CmLteRnti crnti;
   RgrUeTxModeCfg txMode;
   RgrUeDlCqiCfg ueDlCqiCfg;
   RgrUeUlHqCfg ueUlHqCfg;
   RgrUeUlPwrCfg ueUlPwrCfg;
   RgrUeQosCfg ueQosCfg;
   RgrUeTaTmrCfg ueTaTmrCfg;





   RgrUeBsrTmrCfg ueBsrTmrCfg;



   CmLteUeCategory ueCatEnum;







   Bool isTtiBundlEnabled;
   RgrUeAckNackRepCfg ueAckNackCfg;
   RgrUeMeasGapCfg ueMesGapCfg;
   RgrUeCapCfg ueCapCfg;
   RgrCodeBookRstCfg ueCodeBookRstCfg;

   TknU8 dedPreambleId;
# 1441 "../..//cm/rgr.x"
   RgrUePuschDedCfg puschDedCfg;

   RgrUeTxAntSelCfg ulTxAntSel;
# 1457 "../..//cm/rgr.x"
} RgrUeCfg;


typedef struct rgrLchQosCfg
{
   U8 qci;

   U32 gbr;
   U32 mbr;
} RgrLchQosCfg;
# 1484 "../..//cm/rgr.x"
typedef struct rgrDlLchCfg
{
   CmLteTrchType dlTrchType;





   RgrLchQosCfg dlQos;




} RgrDlLchCfg;
# 1510 "../..//cm/rgr.x"
typedef struct rgrUlLcgCfg
{
   U8 lcgId;






} RgrUlLcgCfg;




typedef struct rgrLchCfg
{
   CmLteCellId cellId;
   CmLteRnti crnti;
   CmLteLcId lcId;
   CmLteLcType lcType;






   RgrDlLchCfg dlInfo;
} RgrLchCfg;


typedef struct rgrLcgCfg
{
   CmLteCellId cellId;
   CmLteRnti crnti;
   RgrUlLcgCfg ulInfo;
} RgrLcgCfg;



typedef struct rgrCfg
{
   U8 cfgType;
   union
   {
      RgrCellCfg cellCfg;
      RgrUeCfg ueCfg;
      RgrLchCfg lchCfg;
      RgrLcgCfg lcgCfg;
   } u;
} RgrCfg;



typedef struct rgrActvTime
{
   Bool pres;
   CmLteTimingInfo actvTime;
} RgrActvTime;



typedef struct rgrCellRecfg
{
   CmLteCellId cellId;
   U16 recfgTypes;
   RgrActvTime recfgActvTime;
   RgrDlHqCfg dlHqRecfg;
   RgrCfiCfg cfiRecfg;

   RgrUlTrgCqiCfg trgUlCqi;
   RgrDlCmnCodeRateCfg dlCmnCodeRate;

   RgrPuschSubBandCfg puschSubBand;
   RgrUlCmnCodeRateCfg ulCmnCodeRate;

   RgrPucchCfg pucchRecfg;
   RgrSrsCfg srsRecfg;
   RgrRachCfg rachRecfg;
   RgrDlfsCfg dlfsRecfg;




   RgrSiCfg siReCfg;


} RgrCellRecfg;


typedef struct rgrUeRecfg
{
   CmLteCellId cellId;
   CmLteRnti oldCrnti;
   CmLteRnti newCrnti;






   U16 ueRecfgTypes;

   RgrUeTxModeCfg txMode;
   RgrUeAprdDlCqiCfg aprdDlCqiRecfg;

   RgrUePrdDlCqiCfg prdDlCqiRecfg;

   RgrUeUlHqCfg ueUlHqRecfg;
   RgrUeQosCfg ueQosRecfg;
   RgrUeTaTmrCfg ueTaTmrRecfg;





   RgrUeBsrTmrCfg ueBsrTmrRecfg;


   RgrUeUlPwrCfg ueUlPwrRecfg;
# 1638 "../..//cm/rgr.x"
   Bool isTtiBundlEnabled;

   RgrUeAckNackRepCfg ueAckNackRecfg;
   RgrUeCapCfg ueCapRecfg;
   RgrUeMeasGapCfg ueMeasGapRecfg;
   RgrCodeBookRstCfg ueCodeBookRstRecfg;


   CmLteUeCategory ueCatEnum;
# 1683 "../..//cm/rgr.x"
   RgrUePuschDedCfg puschDedCfg;
# 1696 "../..//cm/rgr.x"
} RgrUeRecfg;


typedef struct rgrLchRecfg
{
   CmLteCellId cellId;
   CmLteRnti crnti;
   CmLteLcId lcId;






struct dlRecfgS
   {
      RgrLchQosCfg dlQos;




   } dlRecfg;

} RgrLchRecfg;


typedef struct rgrLcgRecfg
{
   CmLteCellId cellId;
   CmLteRnti crnti;

   struct ullcgRecfgS
   {
      U8 lcgId;
   } ulRecfg;
}RgrLcgRecfg;


typedef struct rgrRecfg
{
   U8 recfgType;
   union
   {
      RgrCellRecfg cellRecfg;
      RgrUeRecfg ueRecfg;
      RgrLchRecfg lchRecfg;
      RgrLcgRecfg lcgRecfg;
   } u;
} RgrRecfg;


typedef struct rgrDel
{
   U8 delType;

   union rgrDelU
   {

      struct rgrCellDelS
      {
         CmLteCellId cellId;
      } cellDel;


      struct rgrUeDelS
      {
         CmLteCellId cellId;
         CmLteRnti crnti;
      } ueDel;


      struct rgrLchDelS
      {
         CmLteCellId cellId;
         CmLteRnti crnti;
         CmLteLcId lcId;
      } lchDel;


      struct rgrLcgDelS
      {
         CmLteCellId cellId;
         CmLteRnti crnti;
         U8 lcgId;
      } lcgDel;
   } u;
} RgrDel;


typedef struct rgrRst
{
   CmLteCellId cellId;
   CmLteRnti crnti;
} RgrRst;


typedef struct rgrCfgReqInfo
{

   U8 action;
   union
   {
      RgrCfg cfgInfo;
      RgrRecfg recfgInfo;
      RgrDel delInfo;
      RgrRst rstInfo;
   } u;
} RgrCfgReqInfo;
# 1812 "../..//cm/rgr.x"
typedef struct rgrTtiIndInfo
{
   CmLteCellId cellId;
   U16 sfn;
} RgrTtiIndInfo;
# 1828 "../..//cm/rgr.x"
typedef struct rgrSiCfgReqInfo
{
   CmLteCellId cellId;
   RgrSiCfgType cfgType;
   U8 siId;

   Buffer *pdu;
}RgrSiCfgReqInfo;
# 1853 "../..//cm/rgr.x"
typedef S16 (*RgrBndReq) ( Pst* pst, SuId suId, SpId spId);
# 1875 "../..//cm/rgr.x"
typedef S16 (*RgrTtiInd) ( Pst* pst, SuId suId, RgrTtiIndInfo *ttiInd);
# 1891 "../..//cm/rgr.x"
typedef S16 (*RgrBndCfm) ( Pst* pst, SuId suId, U8 status);
# 1906 "../..//cm/rgr.x"
typedef S16 (*RgrUbndReq) ( Pst* pst, SpId spId, Reason reason);
# 1921 "../..//cm/rgr.x"
typedef S16 (*RgrCfgReq) ( Pst* pst, SpId spId, RgrCfgTransId transId, RgrCfgReqInfo * cfgReqInfo);
# 1936 "../..//cm/rgr.x"
typedef S16 (*RgrCfgCfm) ( Pst* pst, SuId suId, RgrCfgTransId transId, U8 status);
# 1956 "../..//cm/rgr.x"
typedef S16 (*RgrSiCfgReq) ( Pst *pst, SpId spId, RgrCfgTransId transId, RgrSiCfgReqInfo *siCfgReq);
# 1972 "../..//cm/rgr.x"
typedef S16 (*RgrSiCfgCfm) ( Pst* pst, SuId suId, RgrCfgTransId transId, U8 status);
# 2000 "../..//cm/rgr.x"
extern S16 RgUiRgrBndReq ( Pst* pst, SuId suId, SpId spId );
# 2018 "../..//cm/rgr.x"
extern S16 RgUiRgrTtiInd ( Pst* pst, SuId suId, RgrTtiIndInfo *ttiInd );
# 2167 "../..//cm/rgr.x"
extern S16 RgUiRgrBndCfm ( Pst* pst, SuId suId, U8 status );
# 2183 "../..//cm/rgr.x"
extern S16 RgUiRgrUbndReq ( Pst* pst, SpId spId, Reason reason );
# 2201 "../..//cm/rgr.x"
extern S16 RgUiRgrCfgReq ( Pst* pst, SpId spId, RgrCfgTransId transId, RgrCfgReqInfo * cfgReqInfo );
# 2219 "../..//cm/rgr.x"
extern S16 RgUiRgrCfgCfm ( Pst* pst, SuId suId, RgrCfgTransId transId, U8 status );
# 2242 "../..//cm/rgr.x"
extern S16 RgUiRgrSiCfgReq ( Pst *pst, SpId spId, RgrCfgTransId transId, RgrSiCfgReqInfo *siCfgReq );
# 2259 "../..//cm/rgr.x"
extern S16 RgUiRgrSiCfgCfm ( Pst* pst, SuId suId, RgrCfgTransId transId, U8 status );
# 2301 "../..//cm/rgr.x"
extern S16 NxLiRgrBndReq ( Pst* pst, SuId suId, SpId spId );
# 2321 "../..//cm/rgr.x"
extern S16 NxLiRgrTtiInd ( Pst* pst, SuId suId, RgrTtiIndInfo *ttiInd );
# 2338 "../..//cm/rgr.x"
extern S16 NxLiRgrBndCfm ( Pst* pst, SuId suId, U8 status );
# 2353 "../..//cm/rgr.x"
extern S16 NxLiRgrUbndReq ( Pst* pst, SpId spId, Reason reason );
# 2369 "../..//cm/rgr.x"
extern S16 NxLiRgrCfgReq ( Pst* pst, SpId spId, RgrCfgTransId transId, RgrCfgReqInfo * cfgReqInfo );
# 2385 "../..//cm/rgr.x"
extern S16 NxLiRgrCfgCfm ( Pst* pst, SuId suId, RgrCfgTransId transId, U8 status );
# 2406 "../..//cm/rgr.x"
extern S16 NxLiRgrSiCfgCfm ( Pst* pst, SuId suId, RgrCfgTransId transId, U8 status );
# 2423 "../..//cm/rgr.x"
extern S16 NxLiRgrSiCfgReq ( Pst* pst, SpId spId, RgrCfgTransId transId, RgrSiCfgReqInfo * cfgReqInfo );
# 2455 "../..//cm/rgr.x"
extern S16 cmPkRgrBndReq ( Pst* pst, SuId suId, SpId spId );





extern S16 cmUnpkRgrBndReq ( RgrBndReq func, Pst* pst, Buffer *mBuf );
# 2471 "../..//cm/rgr.x"
extern S16 cmPkRgrTtiInd ( Pst* pst, SuId suId, RgrTtiIndInfo *ttiInd );




extern S16 cmPkRgrTtiIndInfo ( RgrTtiIndInfo *ttiInd, Buffer *mBuf);



extern S16 cmUnpkRgrTtiInd ( RgrTtiInd func, Pst* pst, Buffer *mBuf );




extern S16 cmUnpkRgrTtiIndInfo ( RgrTtiIndInfo *param, Buffer *mBuf );





extern S16 cmPkRgrBndCfm ( Pst* pst, SuId suId, U8 status );





extern S16 cmUnpkRgrBndCfm ( RgrBndCfm func, Pst* pst, Buffer *mBuf );





extern S16 cmPkRgrUbndReq ( Pst* pst, SpId spId, Reason reason );





extern S16 cmUnpkRgrUbndReq ( RgrUbndReq func, Pst* pst, Buffer *mBuf );





extern S16 cmPkRgrCfgReq ( Pst* pst, SpId spId, RgrCfgTransId transId, RgrCfgReqInfo * cfgReqInfo );






extern S16 cmUnpkRgrCfgReq ( RgrCfgReq func, Pst* pst, Buffer *mBuf );





extern S16 cmPkRgrCfgCfm ( Pst* pst, SuId suId, RgrCfgTransId transId, U8 status );






extern S16 cmUnpkRgrCfgCfm ( RgrCfgCfm func, Pst* pst, Buffer *mBuf );





extern S16 cmPkRgrCfgTransId ( RgrCfgTransId *param, Buffer *mBuf );



extern S16 cmUnpkRgrCfgTransId ( RgrCfgTransId *param, Buffer *mBuf );



extern S16 cmPkRgrDlHqCfg ( RgrDlHqCfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrDlHqCfg ( RgrDlHqCfg *param, Buffer *mBuf );



extern S16 cmPkRgrRntiCfg ( RgrRntiCfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrRntiCfg ( RgrRntiCfg *param, Buffer *mBuf );



extern S16 cmPkRgrDlCmnCodeRateCfg ( RgrDlCmnCodeRateCfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrDlCmnCodeRateCfg ( RgrDlCmnCodeRateCfg *param, Buffer *mBuf );



extern S16 cmPkRgrCfiCfg ( RgrCfiCfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrCfiCfg ( RgrCfiCfg *param, Buffer *mBuf );



extern S16 cmPkRgrPuschSubBandCfg ( RgrPuschSubBandCfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrPuschSubBandCfg ( RgrPuschSubBandCfg *param, Buffer *mBuf );



extern S16 cmPkRgrUlCmnCodeRateCfg ( RgrUlCmnCodeRateCfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrUlCmnCodeRateCfg ( RgrUlCmnCodeRateCfg *param, Buffer *mBuf );



extern S16 cmPkRgrUlTrgCqiCfg ( RgrUlTrgCqiCfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrUlTrgCqiCfg ( RgrUlTrgCqiCfg *param, Buffer *mBuf );



extern S16 cmPkRgrBwCfg ( RgrBwCfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrBwCfg ( RgrBwCfg *param, Buffer *mBuf );



extern S16 cmPkRgrPhichCfg ( RgrPhichCfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrPhichCfg ( RgrPhichCfg *param, Buffer *mBuf );



extern S16 cmPkRgrPucchCfg ( RgrPucchCfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrPucchCfg ( RgrPucchCfg *param, Buffer *mBuf );



extern S16 cmPkRgrSrsCfg ( RgrSrsCfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrSrsCfg ( RgrSrsCfg *param, Buffer *mBuf );



extern S16 cmPkRgrRachCfg ( RgrRachCfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrRachCfg ( RgrRachCfg *param, Buffer *mBuf );



extern S16 cmPkRgrSiCfg ( RgrSiCfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrSiCfg ( RgrSiCfg *param, Buffer *mBuf );



extern S16 cmPkRgrTpcRntiCfg ( RgrTpcRntiCfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrTpcRntiCfg ( RgrTpcRntiCfg *param, Buffer *mBuf );



extern S16 cmPkRgrUlPwrCfg ( RgrUlPwrCfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrUlPwrCfg ( RgrUlPwrCfg *param, Buffer *mBuf );



extern S16 cmPkRgrPuschCfg ( RgrPuschCfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrPuschCfg ( RgrPuschCfg *param, Buffer *mBuf );



extern S16 cmPkRgrCodeBookRstCfg ( RgrCodeBookRstCfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrCodeBookRstCfg ( RgrCodeBookRstCfg *param, Buffer *mBuf );



extern S16 cmPkRgrPreambleSetCfg ( RgrPreambleSetCfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrPreambleSetCfg ( RgrPreambleSetCfg *param, Buffer *mBuf );



extern S16 cmPkRgrCmnLchCfg ( RgrCmnLchCfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrCmnLchCfg ( RgrCmnLchCfg *param, Buffer *mBuf );



extern S16 cmPkRgrDlfsCfg ( RgrDlfsCfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrDlfsCfg ( RgrDlfsCfg *param, Buffer *mBuf );
# 2715 "../..//cm/rgr.x"
extern S16 cmPkRgrSiCfgReq ( Pst* pst, SpId spId, RgrCfgTransId transId, RgrSiCfgReqInfo * cfgReqInfo );






extern S16 cmUnpkRgrSiCfgReq ( RgrSiCfgReq func, Pst* pst, Buffer *mBuf );





extern S16 cmPkRgrSiCfgReqInfo ( RgrSiCfgReqInfo *param, Buffer *mBuf );




extern S16 cmUnpkRgrSiCfgReqInfo ( RgrSiCfgReqInfo *param, Buffer *mBuf );




extern S16 cmPkRgrSiCfgCfm ( Pst* pst, SuId suId, RgrCfgTransId transId, U8 status );






extern S16 cmUnpkRgrSiCfgCfm ( RgrSiCfgCfm func, Pst* pst, Buffer *mBuf );
# 2774 "../..//cm/rgr.x"
extern S16 cmPkRgrCellDlPfs ( RgrCellDlPfs *param, Buffer *mBuf );



extern S16 cmUnpkRgrCellDlPfs ( RgrCellDlPfs *param, Buffer *mBuf );



extern S16 cmPkRgrCellUlPfs ( RgrCellUlPfs *param, Buffer *mBuf );



extern S16 cmUnpkRgrCellUlPfs ( RgrCellUlPfs *param, Buffer *mBuf );



extern S16 cmPkRgrCellCfg ( RgrCellCfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrCellCfg ( RgrCellCfg *param, Buffer *mBuf );



extern S16 cmPkRgrUeAprdDlCqiCfg ( RgrUeAprdDlCqiCfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrUeAprdDlCqiCfg ( RgrUeAprdDlCqiCfg *param, Buffer *mBuf );



extern S16 cmPkRgrUePrdDlCqiCfg ( RgrUePrdDlCqiCfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrUePrdDlCqiCfg ( RgrUePrdDlCqiCfg *param, Buffer *mBuf );



extern S16 cmPkRgrUeDlCqiCfg ( RgrUeDlCqiCfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrUeDlCqiCfg ( RgrUeDlCqiCfg *param, Buffer *mBuf );



extern S16 cmPkRgrUeMeasGapCfg ( RgrUeMeasGapCfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrUeMeasGapCfg ( RgrUeMeasGapCfg *param, Buffer *mBuf );
# 2857 "../..//cm/rgr.x"
extern S16 cmPkRgrUeCapCfg ( RgrUeCapCfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrUeCapCfg ( RgrUeCapCfg *param, Buffer *mBuf );



extern S16 cmPkRgrUeAckNackRepCfg ( RgrUeAckNackRepCfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrUeAckNackRepCfg ( RgrUeAckNackRepCfg *param, Buffer *mBuf );



extern S16 cmPkRgrUeTxModeCfg ( RgrUeTxModeCfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrUeTxModeCfg ( RgrUeTxModeCfg *param, Buffer *mBuf );



extern S16 cmPkRgrUeUlHqCfg ( RgrUeUlHqCfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrUeUlHqCfg ( RgrUeUlHqCfg *param, Buffer *mBuf );



extern S16 cmPkRgrUeGrpPwrCfg ( RgrUeGrpPwrCfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrUeGrpPwrCfg ( RgrUeGrpPwrCfg *param, Buffer *mBuf );



extern S16 cmPkRgrUeUlPwrCfg ( RgrUeUlPwrCfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrUeUlPwrCfg ( RgrUeUlPwrCfg *param, Buffer *mBuf );



extern S16 cmPkRgrUeQosCfg ( RgrUeQosCfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrUeQosCfg ( RgrUeQosCfg *param, Buffer *mBuf );



extern S16 cmPkRgrUeTaTmrCfg ( RgrUeTaTmrCfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrUeTaTmrCfg ( RgrUeTaTmrCfg *param, Buffer *mBuf );
# 2926 "../..//cm/rgr.x"
extern S16 cmPkRgrUeBsrTmrCfg ( RgrUeBsrTmrCfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrUeBsrTmrCfg ( RgrUeBsrTmrCfg *param, Buffer *mBuf );





extern S16 cmPkRgrUeCfg ( RgrUeCfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrUeCfg ( RgrUeCfg *param, Buffer *mBuf );



extern S16 cmPkRgrLchQosCfg ( RgrLchQosCfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrLchQosCfg ( RgrLchQosCfg *param, Buffer *mBuf );



extern S16 cmPkRgrDlLchCfg ( RgrDlLchCfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrDlLchCfg ( RgrDlLchCfg *param, Buffer *mBuf );



extern S16 cmPkRgrUlLcgCfg ( RgrUlLcgCfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrUlLcgCfg ( RgrUlLcgCfg *param, Buffer *mBuf );



extern S16 cmPkRgrLchCfg ( RgrLchCfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrLchCfg ( RgrLchCfg *param, Buffer *mBuf );



extern S16 cmPkRgrLcgCfg ( RgrLcgCfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrLcgCfg ( RgrLcgCfg *param, Buffer *mBuf );



extern S16 cmPkRgrCfg ( RgrCfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrCfg ( RgrCfg *param, Buffer *mBuf );



extern S16 cmPkRgrActvTime ( RgrActvTime *param, Buffer *mBuf );



extern S16 cmUnpkRgrActvTime ( RgrActvTime *param, Buffer *mBuf );



extern S16 cmPkRgrCellRecfg ( RgrCellRecfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrCellRecfg ( RgrCellRecfg *param, Buffer *mBuf );



extern S16 cmPkRgrUeRecfg ( RgrUeRecfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrUeRecfg ( RgrUeRecfg *param, Buffer *mBuf );



extern S16 cmPkRgrLchRecfg ( RgrLchRecfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrLchRecfg ( RgrLchRecfg *param, Buffer *mBuf );



extern S16 cmPkRgrLcgRecfg ( RgrLcgRecfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrLcgRecfg ( RgrLcgRecfg *param, Buffer *mBuf );



extern S16 cmPkRgrRecfg ( RgrRecfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrRecfg ( RgrRecfg *param, Buffer *mBuf );



extern S16 cmPkRgrDel ( RgrDel *param, Buffer *mBuf );



extern S16 cmUnpkRgrDel ( RgrDel *param, Buffer *mBuf );



extern S16 cmPkRgrRst ( RgrRst *param, Buffer *mBuf );



extern S16 cmUnpkRgrRst ( RgrRst *param, Buffer *mBuf );



extern S16 cmPkRgrCfgReqInfo ( RgrCfgReqInfo *param, Buffer *mBuf );



extern S16 cmUnpkRgrCfgReqInfo ( RgrCfgReqInfo *param, Buffer *mBuf );
# 3078 "../..//cm/rgr.x"
extern S16 cmPkRgrUePuschDedCfg ( RgrUePuschDedCfg *param, Buffer *mBuf );



extern S16 cmUnpkRgrUePuschDedCfg ( RgrUePuschDedCfg *param, Buffer *mBuf );
# 146 "../..//enbapp/src/wr.h" 2
# 1 "../..//cm/ctf.x" 1
# 91 "../..//cm/ctf.x"
#define __CTF_X__ 
# 110 "../..//cm/ctf.x"
typedef struct ctfCfgTransId {
   U8 trans[9];
} CtfCfgTransId;






typedef enum {
   CTF_BW_RB_6,
   CTF_BW_RB_15,
   CTF_BW_RB_25,
   CTF_BW_RB_50,
   CTF_BW_RB_75,
   CTF_BW_RB_100
} CtfBandwidth;





typedef enum {
   CTF_DUPMODE_FDD=1,
   CTF_DUPMODE_TDD
} CtfDuplexMode;





typedef enum {
   CTF_SC_SPACING_15KHZ,
   CTF_SC_SPACING_7DOT5KHZ
} CtfSCSpacing;





typedef enum {
   CTF_CP_NORMAL,
   CTF_CP_EXTENDED
} CtfCPCfg;





typedef enum {
   CTF_AP_CNT_1,
   CTF_AP_CNT_2,
   CTF_AP_CNT_4
} CtfAntennaPortsCount;





typedef enum {
   CTF_PHICH_DUR_NORMAL,
   CTF_PHICH_DUR_EXTENDED
} CtfPhichDuration;





typedef enum {
   CTF_PHICH_RSRC_ONESIXTH,
   CTF_PHICH_RSRC_HALF,
   CTF_PHICH_RSRC_ONE,
   CTF_PHICH_RSRC_TWO
} CtfPhichResource;





typedef enum {
   CTF_PUSCH_HOPMODE_INTER_SUBFRM,
   CTF_PUSCH_HOPMODE_INTRAANDINTERSUBFRM
} CtfPuschHoppingMode;





typedef enum {
   CTF_PUCCH_DELTASHIFT1,
   CTF_PUCCH_DELTASHIFT2,
   CTF_PUCCH_DELTASHIFT3
} CtfPucchDeltaShift;






typedef enum {
   CTF_PDSCH_PA_MINUS_6,
   CTF_PDSCH_PA_MINUS_4DOT77,
   CTF_PDSCH_PA_MINUS_3,
   CTF_PDSCH_PA_MINUS_1DOT77,
   CTF_PDSCH_PA_ZERO,
   CTF_PDSCH_PA_ONE,
   CTF_PDSCH_PA_TWO,
   CTF_PDSCH_PA_THREE
} CtfPdschPaParam;





typedef enum {
   CTF_CQI_RPT_MODE_APERIODIC_RM12,
   CTF_CQI_RPT_MODE_APERIODIC_RM20,
   CTF_CQI_RPT_MODE_APERIODIC_RM22,
   CTF_CQI_RPT_MODE_APERIODIC_RM30,
   CTF_CQI_RPT_MODE_APERIODIC_RM31
} CtfCqiRptModeAperiodic;





typedef enum {
   CTF_UE_TX_ANT_SELECT_CLOSEDLOOP,
   CTF_UE_TX_ANT_SELECT_OPENLOOP
} CtfUeTxAntSelectType;





typedef enum {
   CTF_PUCCH_REP_FACTOR_N2,
   CTF_PUCCH_REP_FACTOR_N4,
   CTF_PUCCH_REP_FACTOR_N6
} CtfPucchRepFactor;
# 268 "../..//cm/ctf.x"
typedef enum {
   CTF_UE_TX_ANT_MODE_TM1,
   CTF_UE_TX_ANT_MODE_TM2,
   CTF_UE_TX_ANT_MODE_TM3,
   CTF_UE_TX_ANT_MODE_TM4,
   CTF_UE_TX_ANT_MODE_TM5,
   CTF_UE_TX_ANT_MODE_TM6,
   CTF_UE_TX_ANT_MODE_TM7




} CtfUeTxAntMode;





typedef enum {
   CTF_MAJOR_RECFG,
   CTF_MINOR_RECFG
} CtfReCfgType;





typedef struct ctfUeInfo {
   CmLteCellId cellId;
   CmLteRnti ueId;
}CtfUeInfo;







typedef struct ctfBwCfgInfo {
   Bool pres;
   CtfBandwidth dlBw;
   CtfBandwidth ulBw;
   U8 eUtraBand;

} CtfBwCfgInfo;





typedef struct ctfTxSchemeCfg {
   Bool pres;
   CtfDuplexMode duplexMode;
   CtfSCSpacing scSpacing;
   CtfCPCfg cycPfx;
} CtfTxSchemeCfg;






typedef struct ctfAntennaCfgInfo {
   CtfAntennaPortsCount antPortsCnt;
} CtfAntennaCfgInfo;
# 345 "../..//cm/ctf.x"
typedef struct ctfPrachCfgInfo {
   Bool pres;
   U16 rootSequenceIndex;
   U8 prachCfgIndex;
   U8 zeroCorrelationZoneCfg;

   Bool highSpeedFlag;

   U8 prachFreqOffset;
} CtfPrachCfgInfo;






typedef struct ctfPdschCfgInfo {
   Bool pres;
   S16 refSigPwr;

   U8 p_b;
} CtfPdschCfgInfo;






typedef struct ctfPuschCfgBasic {
   U8 noOfsubBands;
   CtfPuschHoppingMode hoppingMode;
   U8 hoppingOffset;
   Bool enable64QAM;

} CtfPuschCfgBasic;






typedef struct ctfPuschUlRS {
   Bool grpHopEnabled;
   Bool seqHopEnabled;
   U8 grpNum;
   U8 cycShift;
} CtfPuschUlRS;






typedef struct ctfPuschCfgInfo {
   Bool pres;
   CtfPuschCfgBasic puschBasicCfg;
   CtfPuschUlRS puschUlRS;
} CtfPuschCfgInfo;






typedef struct ctfPhichCfgInfo {
   Bool pres;

   CtfPhichDuration duration;

   CtfPhichResource resource;
} CtfPhichCfgInfo;






typedef struct ctfPucchCfgInfo {
   Bool pres;
   U8 nRB;

   U8 nCS;
   U16 n1PUCCH;
   CtfPucchDeltaShift deltaShift;
} CtfPucchCfgInfo;






typedef struct ctfSrsUlCfgInfo {
   Bool pres;
   U8 srsCfgType;

   struct srsSetupS
   {
      U8 srsBw;
      U8 sfCfg;
      Bool srsANSimultTx;

      Bool srsMaxUpPts;

   } srsSetup;
} CtfSrsUlCfgInfo;






typedef struct ctfTddSfCfgInfo {
   Bool pres;
   U8 sfAssignment;

   U8 spclSfPatterns;

} CtfTddSfCfgInfo;
# 484 "../..//cm/ctf.x"
typedef struct ctfCellCfgInfo {
   CmLteCellId cellId;
   U8 cellIdGrpId;

   Bool physCellIdPres ;
   U8 physCellId;
   CtfBwCfgInfo bwCfg;
   CtfTxSchemeCfg txCfg;

   CtfAntennaCfgInfo antennaCfg;
   CtfPrachCfgInfo prachCfg;
   CtfPdschCfgInfo pdschCfg;
   CtfPuschCfgInfo puschCfg;
   CtfPhichCfgInfo phichCfg;
   CtfPucchCfgInfo pucchCfg;
   CtfSrsUlCfgInfo srsUlCfg;
   CtfTddSfCfgInfo tddSfCfg;


   U16 syncSigPowOs;
   Bool syncSigPowOsPres;
   U16 cfiPowOs;
   Bool cfiPowOsPres;
   U16 dciPowOs;
   Bool dciPowOsPres;
   U16 extWinMargin;
   Bool extWinMarginPres;
   U16 pucchNoiseGamma;
   Bool pucchNoiseGammaPres;
   U16 prachPkRatio4;
   Bool prachPkRatio4Pres;
   U16 prachPkRatio0;
   Bool prachPkRatio0Pres;
   U16 srsDopEstFactor;
   Bool srsDopEstFactorPres;
   U16 puschProbDtxAck;
   Bool puschProbDtxAckPres;
   U16 pucchProbDtxAck;
   Bool pucchProbDtxAckPres;

   U16 txAntennaPorts ;
   Bool txAntennaPortsPres;
   U16 rxAntennaPorts ;
   Bool rxAntennaPortsPres ;

   U16 phySyncMode;
   Bool phySyncModePres;
   U16 dataRepMode;
   Bool dataRepModePres ;
   U16 rachSrRepMode;
   Bool rachSrRepModePres;

   U16 opMode;
   U32 counter;
   U32 period;
   S16 priSigPwr;
   S16 secSigPwr;

   S16 pilotSigPwr;

} CtfCellCfgInfo;






typedef struct ctfCellRecfgInfo {
   CtfReCfgType ctfReCfgType ;
   CmLteCellId cellId;

   Bool physCellIdPres ;
   U8 physCellId;
   CtfBwCfgInfo bwCfg;
   CtfTxSchemeCfg txCfg;

   CtfAntennaCfgInfo antennaCfg;
   CmLteTimingInfo actvnTime;
   CtfPrachCfgInfo prachCfg;
   CtfPdschCfgInfo pdschCfg;
   CtfPuschCfgInfo puschCfg;
   CtfPhichCfgInfo phichCfg;
   CtfPucchCfgInfo pucchCfg;
   CtfSrsUlCfgInfo srsUlCfg;
   CtfTddSfCfgInfo tddSfCfg;

   U16 syncSigPowOs;
   Bool syncSigPowOsPres;
   U16 cfiPowOs;
   Bool cfiPowOsPres;
   U16 dciPowOs;
   Bool dciPowOsPres;
   U16 extWinMargin;
   Bool extWinMarginPres;
   U16 pucchNoiseGamma;
   Bool pucchNoiseGammaPres;
   U16 prachPkRatio4;
   Bool prachPkRatio4Pres;
   U16 prachPkRatio0;
   Bool prachPkRatio0Pres;
   U16 srsDopEstFactor;
   Bool srsDopEstFactorPres;
   U16 puschProbDtxAck;
   Bool puschProbDtxAckPres;
   U16 pucchProbDtxAck;
   Bool pucchProbDtxAckPres;

   U16 txAntennaPorts ;
   Bool txAntennaPortsPres;
   U16 rxAntennaPorts ;
   Bool rxAntennaPortsPres ;

   U16 phySyncMode;
   Bool phySyncModePres;
   U16 dataRepMode;
   Bool dataRepModePres ;
   U16 rachSrRepMode;
   Bool rachSrRepModePres;

   S16 pilotSigPwr;
   S16 priSigPwr;
   S16 secSigPwr;


} CtfCellRecfgInfo;
# 617 "../..//cm/ctf.x"
typedef struct ctfDedPdschCfgInfo {
   Bool pres;
   CtfPdschPaParam pA;
} CtfDedPdschCfgInfo;






typedef struct ctfDedPucchCfgInfo {
   Bool pres;
   U8 dedPucchCfgType;
   struct pucchSetupS
   {





      CtfPucchRepFactor repFact;
      U16 n1PUCCHRep;


   } pucchSetup;







} CtfDedPucchCfgInfo;






typedef struct ctfDedPuschCfgInfo {
   Bool pres;
   U8 betaOffsetAckIdx;

   U8 betaOffsetRiIdx;

   U8 betaOffsetCqiIdx;

} CtfDedPuschCfgInfo;
# 728 "../..//cm/ctf.x"
typedef struct ctfCqiRptModePeriodic {



   U8 cqiPeriodicCfgType;
   struct cqiSetupS
   {
      U16 cqiPUCCHRsrcIndx;
      U16 cqiPmiCfgIndx;
      U8 formatIndicator;
      struct subbandCqiS
      {
         U8 k;
      } subbandCqi;

      Bool riCfgPres;
      U16 riCfgIndx;
      Bool simultaneousAckNack;





   } cqiSetup;
} CtfCqiRptModePeriodic;






typedef struct ctfCqiReportCfgInfo {
   Bool pres;
# 769 "../..//cm/ctf.x"
   U8 reportingMode;
   union
   {
      CtfCqiRptModeAperiodic aPeriodicRpt;
      CtfCqiRptModePeriodic periodicRpt;
   } reportMode;





} CtfCqiReportCfgInfo;






typedef struct ctfDedSrsUlCfgInfo {
   Bool pres;
   U8 dedSrsUlCfgType;
   struct dedSrsSetupS
   {
      U8 srsBw;
      U8 srsHopngBw;
      U8 freqDmnPos;
      Bool duration;

      U16 srsCfgIdx;
      U8 txComb;
      U8 cyclicShift;
   } dedSrsSetup;
} CtfDedSrsUlCfgInfo;






typedef struct ctfDedSRCfgInfo {
   Bool pres;
   U8 dedSRCfgType;
   struct dedSrSetupS
   {
      U16 srPUCCHRi;

      U8 srCfgIdx;
   } dedSrSetup;
} CtfDedSRCfgInfo;
# 869 "../..//cm/ctf.x"
typedef struct ctfDedAntCfgInfo {
   Bool pres;
   CtfUeTxAntMode txMode;
   struct ueTxAntSelectionS
   {
      U8 cfgType;
      CtfUeTxAntSelectType txAntSelect;

   } ueTxAntSelection;




} CtfDedAntCfgInfo;






typedef struct ctfUeCatCfgInfo {
   Bool pres;
   CmLteUeCategory ueCategory;
} CtfUeCatCfgInfo;
# 918 "../..//cm/ctf.x"
typedef struct ctfDedCfgInfo {
   CmLteCellId cellId;
   CmLteRnti ueId;
   CtfUeCatCfgInfo ueCatCfg;
   CtfDedPdschCfgInfo pdschCfg;
   CtfDedPucchCfgInfo pucchCfg;
   CtfDedPuschCfgInfo puschCfg;

   CtfCqiReportCfgInfo cqiRptCfg;
   CtfDedSrsUlCfgInfo srsUlCfg;
   CtfDedSRCfgInfo dedSRCfg;

   CtfDedAntCfgInfo antInfo;
} CtfDedCfgInfo;






typedef struct ctfDedRecfgInfo {
   CmLteCellId cellId;
   CmLteRnti ueId;
# 949 "../..//cm/ctf.x"
     CmLteRnti newUeId;
# 958 "../..//cm/ctf.x"
   CtfUeCatCfgInfo ueCatCfg;
   CtfDedPdschCfgInfo pdschCfg;
   CtfDedPucchCfgInfo pucchCfg;
   CtfDedPuschCfgInfo puschCfg;

   CtfDedSrsUlCfgInfo srsUlCfg;
   CtfDedSRCfgInfo dedSRCfg;

   CtfCqiReportCfgInfo cqiRptCfg;

   CtfDedAntCfgInfo antInfo;
} CtfDedRecfgInfo;






typedef struct ctfCellReleaseInfo {
   CmLteCellId cellId;
} CtfCellReleaseInfo;






typedef struct ctfDedReleaseInfo {
   CmLteCellId cellId;
   CmLteRnti ueId;
} CtfDedReleaseInfo;






typedef struct ctfCfgInfo {
   U8 cfgElem;
   union
   {
      CtfCellCfgInfo cellCfg;
      CtfDedCfgInfo dedCfg;
   } u;
} CtfCfgInfo;






typedef struct ctfReCfgInfo {
   U8 cfgElem;
   union
   {
      CtfCellRecfgInfo cellRecfg;
      CtfDedRecfgInfo dedRecfg;
   } u;
} CtfReCfgInfo;






typedef struct ctfReleaseInfo {
   U8 cfgElem;
   union
   {
      CtfCellReleaseInfo cellRel;
      CtfDedReleaseInfo dedRel;
   } u;
} CtfReleaseInfo;
# 1042 "../..//cm/ctf.x"
typedef struct ctfCfgReqInfo {
   U8 cfgType;
   union
   {
      CtfCfgInfo cfg;
      CtfReCfgInfo reCfg;
      CtfReleaseInfo release;
   } u;




} CtfCfgReqInfo;
# 1131 "../..//cm/ctf.x"
typedef S16 (*CtfBndReq) ( Pst* pst, SuId suId, SpId spId);






typedef S16 (*CtfBndCfm) ( Pst* pst, SuId suId, U8 status);





typedef S16 (*CtfUbndReq) ( Pst* pst, SpId spId, Reason reason);






typedef S16 (*CtfCfgReq) ( Pst* pst, SpId spId, CtfCfgTransId transId, CtfCfgReqInfo* cfgReqInfo);






typedef S16 (*CtfCfgCfm) ( Pst* pst, SuId suId, CtfCfgTransId transId, U8 status);
# 1180 "../..//cm/ctf.x"
typedef S16 (*CtfUeIdChgReq) ( Pst* pst, SpId spId, CtfCfgTransId transId, CtfUeInfo * ueInfo, CtfUeInfo * newUeInfo);







typedef S16 (*CtfUeIdChgCfm) ( Pst* pst, SuId suId, CtfCfgTransId transId, CtfUeInfo * ueInfo, CmStatus status);
# 1222 "../..//cm/ctf.x"
extern S16 TfUiCtfBndReq ( Pst* pst, SuId suId, SpId spId );
# 1254 "../..//cm/ctf.x"
extern S16 TfUiCtfBndCfm ( Pst* pst, SuId suId, U8 status );
# 1278 "../..//cm/ctf.x"
extern S16 TfUiCtfUbndReq ( Pst* pst, SpId spId, Reason reason );
# 1310 "../..//cm/ctf.x"
extern S16 TfUiCtfCfgReq ( Pst* pst, SpId spId, CtfCfgTransId transId, CtfCfgReqInfo* cfgReqInfo );
# 1341 "../..//cm/ctf.x"
extern S16 TfUiCtfCfgCfm ( Pst* pst, SuId suId, CtfCfgTransId transId, U8 status );
# 1365 "../..//cm/ctf.x"
extern S16 TfUiCtfUeIdChgReq ( Pst* pst, SpId spId, CtfCfgTransId transId, CtfUeInfo * ueInfo, CtfUeInfo * newUeInfo );
# 1398 "../..//cm/ctf.x"
extern S16 TfUiCtfUeIdChgCfm ( Pst* pst, SuId suId, CtfCfgTransId transId, CtfUeInfo * ueInfo, CmStatus status );
# 1409 "../..//cm/ctf.x"
extern S16 NhLiCtfBndReq ( Pst* pst, SuId suId, SpId spId );






extern S16 NhLiCtfBndCfm ( Pst* pst, SuId suId, U8 status );





extern S16 NhLiCtfUbndReq ( Pst* pst, SpId spId, Reason reason );






extern S16 NhLiCtfCfgReq ( Pst* pst, SpId spId, CtfCfgTransId transId, CtfCfgReqInfo* cfgReqInfo );






extern S16 NhLiCtfCfgCfm ( Pst* pst, SuId suId, CtfCfgTransId transId, U8 status );






extern S16 NhLiCtfUeIdChgReq ( Pst* pst, SpId spId, CtfCfgTransId transId, CtfUeInfo * ueInfo, CtfUeInfo * newUeInfo );







extern S16 NhLiCtfUeIdChgCfm ( Pst* pst, SuId suId, CtfCfgTransId transId, CtfUeInfo * ueInfo, CmStatus status );
# 1462 "../..//cm/ctf.x"
extern S16 cmPkCtfBndReq ( Pst* pst, SuId suId, SpId spId );





extern S16 cmUnpkCtfBndReq ( CtfBndReq func, Pst* pst, Buffer *mBuf );







extern S16 cmPkCtfBndCfm ( Pst* pst, SuId suId, U8 status );







extern S16 cmUnpkCtfBndCfm ( CtfBndCfm func, Pst* pst, Buffer *mBuf );





extern S16 cmPkCtfUbndReq ( Pst* pst, SpId spId, Reason reason );





extern S16 cmUnpkCtfUbndReq ( CtfUbndReq func, Pst* pst, Buffer *mBuf );
# 1536 "../..//cm/ctf.x"
extern S16 cmPkCtfCfgReq ( Pst* pst, SpId spId, CtfCfgTransId transId, CtfCfgReqInfo * cfgReqInfo );
# 1545 "../..//cm/ctf.x"
extern S16 cmUnpkCtfCfgReq ( CtfCfgReq func, Pst* pst, Buffer *mBuf );





extern S16 cmPkCtfCfgCfm ( Pst* pst, SuId suId, CtfCfgTransId transId, U8 status );






extern S16 cmUnpkCtfCfgCfm ( CtfCfgCfm func, Pst* pst, Buffer *mBuf );





extern S16 cmPkCtfUeIdChgReq ( Pst* pst, SpId spId, CtfCfgTransId transId, CtfUeInfo * ueInfo, CtfUeInfo * newUeInfo );







extern S16 cmUnpkCtfUeIdChgReq ( CtfUeIdChgReq func, Pst* pst, Buffer *mBuf );





extern S16 cmPkCtfUeIdChgCfm ( Pst* pst, SuId suId, CtfCfgTransId transId, CtfUeInfo * ueInfo, CmStatus status );







extern S16 cmUnpkCtfUeIdChgCfm ( CtfUeIdChgCfm func, Pst* pst, Buffer *mBuf );
# 1652 "../..//cm/ctf.x"
extern S16 cmPkCtfCfgTransId ( CtfCfgTransId *param, Buffer *mBuf );



extern S16 cmUnpkCtfCfgTransId ( CtfCfgTransId *param, Buffer *mBuf );



extern S16 cmPkCtfUeInfo ( CtfUeInfo *param, Buffer *mBuf );



extern S16 cmUnpkCtfUeInfo ( CtfUeInfo *param, Buffer *mBuf );



extern S16 cmPkCtfBwCfgInfo ( CtfBwCfgInfo *param, Buffer *mBuf );



extern S16 cmUnpkCtfBwCfgInfo ( CtfBwCfgInfo *param, Buffer *mBuf );



extern S16 cmPkCtfTxSchemeCfg ( CtfTxSchemeCfg *param, Buffer *mBuf );



extern S16 cmUnpkCtfTxSchemeCfg ( CtfTxSchemeCfg *param, Buffer *mBuf );



extern S16 cmPkCtfAntennaCfgInfo ( CtfAntennaCfgInfo *param, Buffer *mBuf );



extern S16 cmUnpkCtfAntennaCfgInfo ( CtfAntennaCfgInfo *param, Buffer *mBuf );



extern S16 cmPkCtfPrachCfgInfo ( CtfPrachCfgInfo *param, Buffer *mBuf );



extern S16 cmUnpkCtfPrachCfgInfo ( CtfPrachCfgInfo *param, Buffer *mBuf );



extern S16 cmPkCtfPdschCfgInfo ( CtfPdschCfgInfo *param, Buffer *mBuf );



extern S16 cmUnpkCtfPdschCfgInfo ( CtfPdschCfgInfo *param, Buffer *mBuf );



extern S16 cmPkCtfPuschCfgBasic ( CtfPuschCfgBasic *param, Buffer *mBuf );



extern S16 cmUnpkCtfPuschCfgBasic ( CtfPuschCfgBasic *param, Buffer *mBuf );



extern S16 cmPkCtfPuschUlRS ( CtfPuschUlRS *param, Buffer *mBuf );



extern S16 cmUnpkCtfPuschUlRS ( CtfPuschUlRS *param, Buffer *mBuf );



extern S16 cmPkCtfPuschCfgInfo ( CtfPuschCfgInfo *param, Buffer *mBuf );



extern S16 cmUnpkCtfPuschCfgInfo ( CtfPuschCfgInfo *param, Buffer *mBuf );



extern S16 cmPkCtfPhichCfgInfo ( CtfPhichCfgInfo *param, Buffer *mBuf );



extern S16 cmUnpkCtfPhichCfgInfo ( CtfPhichCfgInfo *param, Buffer *mBuf );



extern S16 cmPkCtfPucchCfgInfo ( CtfPucchCfgInfo *param, Buffer *mBuf );



extern S16 cmUnpkCtfPucchCfgInfo ( CtfPucchCfgInfo *param, Buffer *mBuf );



extern S16 cmPkCtfSrsUlCfgInfo ( CtfSrsUlCfgInfo *param, Buffer *mBuf );



extern S16 cmUnpkCtfSrsUlCfgInfo ( CtfSrsUlCfgInfo *param, Buffer *mBuf );



extern S16 cmPkCtfTddSfCfgInfo ( CtfTddSfCfgInfo *param, Buffer *mBuf );



extern S16 cmUnpkCtfTddSfCfgInfo ( CtfTddSfCfgInfo *param, Buffer *mBuf );



extern S16 cmPkCtfCellCfgInfo ( CtfCellCfgInfo *param, Buffer *mBuf );



extern S16 cmUnpkCtfCellCfgInfo ( CtfCellCfgInfo *param, Buffer *mBuf );



extern S16 cmPkCtfCellRecfgInfo ( CtfCellRecfgInfo *param, Buffer *mBuf );



extern S16 cmUnpkCtfCellRecfgInfo ( CtfCellRecfgInfo *param, Buffer *mBuf );



extern S16 cmPkCtfDedPdschCfgInfo ( CtfDedPdschCfgInfo *param, Buffer *mBuf );



extern S16 cmUnpkCtfDedPdschCfgInfo ( CtfDedPdschCfgInfo *param, Buffer *mBuf );



extern S16 cmPkCtfDedPucchCfgInfo ( CtfDedPucchCfgInfo *param, Buffer *mBuf );



extern S16 cmUnpkCtfDedPucchCfgInfo ( CtfDedPucchCfgInfo *param, Buffer *mBuf );



extern S16 cmPkCtfDedPuschCfgInfo ( CtfDedPuschCfgInfo *param, Buffer *mBuf );



extern S16 cmUnpkCtfDedPuschCfgInfo ( CtfDedPuschCfgInfo *param, Buffer *mBuf );




extern S16 cmPkCtfCqiRptModePeriodic ( CtfCqiRptModePeriodic *param, Buffer *mBuf );



extern S16 cmUnpkCtfCqiRptModePeriodic ( CtfCqiRptModePeriodic *param, Buffer *mBuf );



extern S16 cmPkCtfCqiReportCfgInfo ( CtfCqiReportCfgInfo *param, Buffer *mBuf );



extern S16 cmUnpkCtfCqiReportCfgInfo ( CtfCqiReportCfgInfo *param, Buffer *mBuf );



extern S16 cmPkCtfDedSrsUlCfgInfo ( CtfDedSrsUlCfgInfo *param, Buffer *mBuf );



extern S16 cmUnpkCtfDedSrsUlCfgInfo ( CtfDedSrsUlCfgInfo *param, Buffer *mBuf );



extern S16 cmPkCtfDedSRCfgInfo ( CtfDedSRCfgInfo *param, Buffer *mBuf );



extern S16 cmUnpkCtfDedSRCfgInfo ( CtfDedSRCfgInfo *param, Buffer *mBuf );




extern S16 cmPkCtfDedAntCfgInfo ( CtfDedAntCfgInfo *param, Buffer *mBuf );



extern S16 cmUnpkCtfDedAntCfgInfo ( CtfDedAntCfgInfo *param, Buffer *mBuf );



extern S16 cmPkCtfUeCatCfgInfo ( CtfUeCatCfgInfo *param, Buffer *mBuf );



extern S16 cmUnpkCtfUeCatCfgInfo ( CtfUeCatCfgInfo *param, Buffer *mBuf );



extern S16 cmPkCtfDedCfgInfo ( CtfDedCfgInfo *param, Buffer *mBuf );



extern S16 cmUnpkCtfDedCfgInfo ( CtfDedCfgInfo *param, Buffer *mBuf );



extern S16 cmPkCtfDedRecfgInfo ( CtfDedRecfgInfo *param, Buffer *mBuf );



extern S16 cmUnpkCtfDedRecfgInfo ( CtfDedRecfgInfo *param, Buffer *mBuf );



extern S16 cmPkCtfCellReleaseInfo ( CtfCellReleaseInfo *param, Buffer *mBuf );



extern S16 cmUnpkCtfCellReleaseInfo ( CtfCellReleaseInfo *param, Buffer *mBuf );



extern S16 cmPkCtfDedReleaseInfo ( CtfDedReleaseInfo *param, Buffer *mBuf );



extern S16 cmUnpkCtfDedReleaseInfo ( CtfDedReleaseInfo *param, Buffer *mBuf );



extern S16 cmPkCtfCfgInfo ( CtfCfgInfo *param, Buffer *mBuf );



extern S16 cmUnpkCtfCfgInfo ( CtfCfgInfo *param, Buffer *mBuf );



extern S16 cmPkCtfReCfgInfo ( CtfReCfgInfo *param, Buffer *mBuf );



extern S16 cmUnpkCtfReCfgInfo ( CtfReCfgInfo *param, Buffer *mBuf );



extern S16 cmPkCtfReleaseInfo ( CtfReleaseInfo *param, Buffer *mBuf );



extern S16 cmUnpkCtfReleaseInfo ( CtfReleaseInfo *param, Buffer *mBuf );



extern S16 cmPkCtfCfgReqInfo ( CtfCfgReqInfo *param, Buffer *mBuf );



extern S16 cmUnpkCtfCfgReqInfo ( CtfCfgReqInfo *param, Buffer *mBuf );
# 1933 "../..//cm/ctf.x"
extern S16 cmPkCtfCellPwrcfgInfo ( CtfCellRecfgInfo *param, Buffer *mBuf );





extern S16 cmUnpkCtfCellPwrcfgInfo ( CtfCellRecfgInfo *param, Buffer *mBuf );
# 147 "../..//enbapp/src/wr.h" 2
# 1 "../..//cm/szt_asn.x" 1
# 9882 "../..//cm/szt_asn.x"
#define __SZTASNX__ 


typedef enum enumSztCriticality
{
   SztCriticalityrejectEnum,
   SztCriticalityignoreEnum,
   SztCriticalitynotifyEnum
} EnumSztCriticality;
typedef TknU32 SztCriticality;


typedef enum enumSztPresence
{
   SztPresenceoptionalEnum,
   SztPresenceconditionalEnum,
   SztPresencemandatoryEnum
} EnumSztPresence;
typedef TknU32 SztPresence;


typedef TknU32 SztPrivIE_IDlocal;

typedef struct s1apPrivIE_ID
{
   TknU8 choice;
   union {
      SztPrivIE_IDlocal local;

   } val;
} SztPrivIE_ID;


typedef TknU32 SztProcedureCode;


typedef TknU32 SztProtExtnID;


typedef TknU32 SztProtIE_ID;


typedef enum enumSztTrgMsg
{
   SztTrgMsginitiating_messageEnum,
   SztTrgMsgsuccessful_outcomeEnum,
   SztTrgMsgunsuccessfull_outcomeEnum
} EnumSztTrgMsg;
typedef TknU32 SztTrgMsg;


typedef TknU32 SztPriorityLvl;


typedef enum enumSztPre_emptionCapblty
{
   SztPre_emptionCapbltyshall_not_trigger_pre_emptionEnum,
   SztPre_emptionCapbltymay_trigger_pre_emptionEnum
} EnumSztPre_emptionCapblty;
typedef TknU32 SztPre_emptionCapblty;


typedef enum enumSztPre_emptionVulnerability
{
   SztPre_emptionVulnerabilitynot_pre_emptableEnum,
   SztPre_emptionVulnerabilitypre_emptableEnum
} EnumSztPre_emptionVulnerability;
typedef TknU32 SztPre_emptionVulnerability;

typedef struct s1ap_ExtnAllocnAndRetentionPriority_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnAllocnAndRetentionPriority_ExtIEsCls;
typedef struct s1apProtExtnField_AllocnAndRetentionPriority_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnAllocnAndRetentionPriority_ExtIEsCls extensionValue;
} SztProtExtnField_AllocnAndRetentionPriority_ExtIEs;

typedef struct s1apProtExtnCont_AllocnAndRetentionPriority_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_AllocnAndRetentionPriority_ExtIEs *member;
}SztProtExtnCont_AllocnAndRetentionPriority_ExtIEs;

typedef struct s1apAllocnAndRetentionPriority
{
   TknPres pres;
   SztPriorityLvl priorityLvl;
   SztPre_emptionCapblty pre_emptionCapblty;
   SztPre_emptionVulnerability pre_emptionVulnerability;
   SztProtExtnCont_AllocnAndRetentionPriority_ExtIEs iE_Extns;
} SztAllocnAndRetentionPriority;


typedef TknU32 SztE_RAB_ID;


typedef TknU32 SztPDCP_SN;


typedef TknU32 SztHFN;

typedef struct s1ap_ExtnCOUNTvalue_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnCOUNTvalue_ExtIEsCls;
typedef struct s1apProtExtnField_COUNTvalue_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnCOUNTvalue_ExtIEsCls extensionValue;
} SztProtExtnField_COUNTvalue_ExtIEs;

typedef struct s1apProtExtnCont_COUNTvalue_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_COUNTvalue_ExtIEs *member;
}SztProtExtnCont_COUNTvalue_ExtIEs;

typedef struct s1apCOUNTvalue
{
   TknPres pres;
   SztPDCP_SN pDCP_SN;
   SztHFN hFN;
   SztProtExtnCont_COUNTvalue_ExtIEs iE_Extns;
} SztCOUNTvalue;


typedef TknStrBSXL SztReceiveStatusofULPDCPSDUs;
typedef struct s1ap_ExtnBrs_SubjToStatusTfr_ItemExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnBrs_SubjToStatusTfr_ItemExtIEsCls;
typedef struct s1apProtExtnField_Brs_SubjToStatusTfr_ItemExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnBrs_SubjToStatusTfr_ItemExtIEsCls extensionValue;
} SztProtExtnField_Brs_SubjToStatusTfr_ItemExtIEs;

typedef struct s1apProtExtnCont_Brs_SubjToStatusTfr_ItemExtIEs
{
   TknU16 noComp;
   SztProtExtnField_Brs_SubjToStatusTfr_ItemExtIEs *member;
}SztProtExtnCont_Brs_SubjToStatusTfr_ItemExtIEs;

typedef struct s1apBrs_SubjToStatusTfr_Item
{
   TknPres pres;
   SztE_RAB_ID e_RAB_ID;
   SztCOUNTvalue uL_COUNTvalue;
   SztCOUNTvalue dL_COUNTvalue;
   SztReceiveStatusofULPDCPSDUs receiveStatusofULPDCPSDUs;
   SztProtExtnCont_Brs_SubjToStatusTfr_ItemExtIEs iE_Extns;
} SztBrs_SubjToStatusTfr_Item;

typedef struct s1ap_ValueBrs_SubjToStatusTfr_ItemIEsCls{
   union {
      SztBrs_SubjToStatusTfr_Item sztBrs_SubjToStatusTfr_Item;
   } u;
} Szt_ValueBrs_SubjToStatusTfr_ItemIEsCls;
typedef struct s1apProtIE_Field_Brs_SubjToStatusTfr_ItemIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueBrs_SubjToStatusTfr_ItemIEsCls value;
} SztProtIE_Field_Brs_SubjToStatusTfr_ItemIEs;


typedef SztProtIE_Field_Brs_SubjToStatusTfr_ItemIEs SztProtIE_SingleCont_Brs_SubjToStatusTfr_ItemIEs;
typedef struct s1apBrs_SubjToStatusTfrLst
{
   TknU16 noComp;
   SztProtIE_SingleCont_Brs_SubjToStatusTfr_ItemIEs *member;
}SztBrs_SubjToStatusTfrLst;


typedef TknStrOSXL SztBitRate;


typedef TknStrOSXL SztTBCD_STRING;

typedef SztTBCD_STRING SztPLMNidentity;
typedef struct s1apBPLMNs
{
   TknU16 noComp;
   SztPLMNidentity *member;
}SztBPLMNs;


typedef TknBStr32 SztCellIdentity;
typedef struct s1ap_ExtnEUTRAN_CGI_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnEUTRAN_CGI_ExtIEsCls;
typedef struct s1apProtExtnField_EUTRAN_CGI_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnEUTRAN_CGI_ExtIEsCls extensionValue;
} SztProtExtnField_EUTRAN_CGI_ExtIEs;

typedef struct s1apProtExtnCont_EUTRAN_CGI_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_EUTRAN_CGI_ExtIEs *member;
}SztProtExtnCont_EUTRAN_CGI_ExtIEs;

typedef struct s1apEUTRAN_CGI
{
   TknPres pres;
   SztPLMNidentity pLMNidentity;
   SztCellIdentity cell_ID;
   SztProtExtnCont_EUTRAN_CGI_ExtIEs iE_Extns;
} SztEUTRAN_CGI;


typedef TknU32 SztNumberOfBroadcasts;

typedef struct s1ap_ExtnCellID_Cancelled_Item_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnCellID_Cancelled_Item_ExtIEsCls;
typedef struct s1apProtExtnField_CellID_Cancelled_Item_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnCellID_Cancelled_Item_ExtIEsCls extensionValue;
} SztProtExtnField_CellID_Cancelled_Item_ExtIEs;

typedef struct s1apProtExtnCont_CellID_Cancelled_Item_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_CellID_Cancelled_Item_ExtIEs *member;
}SztProtExtnCont_CellID_Cancelled_Item_ExtIEs;

typedef struct s1apCellID_Cancelled_Item
{
   TknPres pres;
   SztEUTRAN_CGI eCGI;
   SztNumberOfBroadcasts numberOfBroadcasts;
   SztProtExtnCont_CellID_Cancelled_Item_ExtIEs iE_Extns;
} SztCellID_Cancelled_Item;

typedef struct s1apCellID_Cancelled
{
   TknU16 noComp;
   SztCellID_Cancelled_Item *member;
}SztCellID_Cancelled;


typedef TknStr4 SztTAC;
typedef struct s1ap_ExtnTAI_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnTAI_ExtIEsCls;
typedef struct s1apProtExtnField_TAI_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnTAI_ExtIEsCls extensionValue;
} SztProtExtnField_TAI_ExtIEs;

typedef struct s1apProtExtnCont_TAI_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_TAI_ExtIEs *member;
}SztProtExtnCont_TAI_ExtIEs;

typedef struct s1apTAI
{
   TknPres pres;
   SztPLMNidentity pLMNidentity;
   SztTAC tAC;
   SztProtExtnCont_TAI_ExtIEs iE_Extns;
} SztTAI;

typedef struct s1ap_ExtnCancelledCellinTAI_Item_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnCancelledCellinTAI_Item_ExtIEsCls;
typedef struct s1apProtExtnField_CancelledCellinTAI_Item_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnCancelledCellinTAI_Item_ExtIEsCls extensionValue;
} SztProtExtnField_CancelledCellinTAI_Item_ExtIEs;

typedef struct s1apProtExtnCont_CancelledCellinTAI_Item_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_CancelledCellinTAI_Item_ExtIEs *member;
}SztProtExtnCont_CancelledCellinTAI_Item_ExtIEs;

typedef struct s1apCancelledCellinTAI_Item
{
   TknPres pres;
   SztEUTRAN_CGI eCGI;
   SztNumberOfBroadcasts numberOfBroadcasts;
   SztProtExtnCont_CancelledCellinTAI_Item_ExtIEs iE_Extns;
} SztCancelledCellinTAI_Item;

typedef struct s1apCancelledCellinTAI
{
   TknU16 noComp;
   SztCancelledCellinTAI_Item *member;
}SztCancelledCellinTAI;

typedef struct s1ap_ExtnTAI_Cancelled_Item_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnTAI_Cancelled_Item_ExtIEsCls;
typedef struct s1apProtExtnField_TAI_Cancelled_Item_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnTAI_Cancelled_Item_ExtIEsCls extensionValue;
} SztProtExtnField_TAI_Cancelled_Item_ExtIEs;

typedef struct s1apProtExtnCont_TAI_Cancelled_Item_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_TAI_Cancelled_Item_ExtIEs *member;
}SztProtExtnCont_TAI_Cancelled_Item_ExtIEs;

typedef struct s1apTAI_Cancelled_Item
{
   TknPres pres;
   SztTAI tAI;
   SztCancelledCellinTAI cancelledCellinTAI;
   SztProtExtnCont_TAI_Cancelled_Item_ExtIEs iE_Extns;
} SztTAI_Cancelled_Item;

typedef struct s1apTAI_Cancelled
{
   TknU16 noComp;
   SztTAI_Cancelled_Item *member;
}SztTAI_Cancelled;


typedef TknStrOSXL SztEmergencyAreaID;
typedef struct s1ap_ExtnCancelledCellinEAI_Item_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnCancelledCellinEAI_Item_ExtIEsCls;
typedef struct s1apProtExtnField_CancelledCellinEAI_Item_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnCancelledCellinEAI_Item_ExtIEsCls extensionValue;
} SztProtExtnField_CancelledCellinEAI_Item_ExtIEs;

typedef struct s1apProtExtnCont_CancelledCellinEAI_Item_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_CancelledCellinEAI_Item_ExtIEs *member;
}SztProtExtnCont_CancelledCellinEAI_Item_ExtIEs;

typedef struct s1apCancelledCellinEAI_Item
{
   TknPres pres;
   SztEUTRAN_CGI eCGI;
   SztNumberOfBroadcasts numberOfBroadcasts;
   SztProtExtnCont_CancelledCellinEAI_Item_ExtIEs iE_Extns;
} SztCancelledCellinEAI_Item;

typedef struct s1apCancelledCellinEAI
{
   TknU16 noComp;
   SztCancelledCellinEAI_Item *member;
}SztCancelledCellinEAI;

typedef struct s1ap_ExtnEmergencyAreaID_Cancelled_Item_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnEmergencyAreaID_Cancelled_Item_ExtIEsCls;
typedef struct s1apProtExtnField_EmergencyAreaID_Cancelled_Item_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnEmergencyAreaID_Cancelled_Item_ExtIEsCls extensionValue;
} SztProtExtnField_EmergencyAreaID_Cancelled_Item_ExtIEs;

typedef struct s1apProtExtnCont_EmergencyAreaID_Cancelled_Item_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_EmergencyAreaID_Cancelled_Item_ExtIEs *member;
}SztProtExtnCont_EmergencyAreaID_Cancelled_Item_ExtIEs;

typedef struct s1apEmergencyAreaID_Cancelled_Item
{
   TknPres pres;
   SztEmergencyAreaID emergencyAreaID;
   SztCancelledCellinEAI cancelledCellinEAI;
   SztProtExtnCont_EmergencyAreaID_Cancelled_Item_ExtIEs iE_Extns;
} SztEmergencyAreaID_Cancelled_Item;

typedef struct s1apEmergencyAreaID_Cancelled
{
   TknU16 noComp;
   SztEmergencyAreaID_Cancelled_Item *member;
}SztEmergencyAreaID_Cancelled;

typedef struct s1apBroadcastCancelledAreaLst
{
   TknU8 choice;
   union {
      SztCellID_Cancelled cellID_Cancelled;
      SztTAI_Cancelled tAI_Cancelled;
      SztEmergencyAreaID_Cancelled emergencyAreaID_Cancelled;
   } val;
} SztBroadcastCancelledAreaLst;

typedef struct s1ap_ExtnCellID_Broadcast_Item_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnCellID_Broadcast_Item_ExtIEsCls;
typedef struct s1apProtExtnField_CellID_Broadcast_Item_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnCellID_Broadcast_Item_ExtIEsCls extensionValue;
} SztProtExtnField_CellID_Broadcast_Item_ExtIEs;

typedef struct s1apProtExtnCont_CellID_Broadcast_Item_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_CellID_Broadcast_Item_ExtIEs *member;
}SztProtExtnCont_CellID_Broadcast_Item_ExtIEs;

typedef struct s1apCellID_Broadcast_Item
{
   TknPres pres;
   SztEUTRAN_CGI eCGI;
   SztProtExtnCont_CellID_Broadcast_Item_ExtIEs iE_Extns;
} SztCellID_Broadcast_Item;

typedef struct s1apCellID_Broadcast
{
   TknU16 noComp;
   SztCellID_Broadcast_Item *member;
}SztCellID_Broadcast;

typedef struct s1ap_ExtnCompletedCellinTAI_Item_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnCompletedCellinTAI_Item_ExtIEsCls;
typedef struct s1apProtExtnField_CompletedCellinTAI_Item_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnCompletedCellinTAI_Item_ExtIEsCls extensionValue;
} SztProtExtnField_CompletedCellinTAI_Item_ExtIEs;

typedef struct s1apProtExtnCont_CompletedCellinTAI_Item_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_CompletedCellinTAI_Item_ExtIEs *member;
}SztProtExtnCont_CompletedCellinTAI_Item_ExtIEs;

typedef struct s1apCompletedCellinTAI_Item
{
   TknPres pres;
   SztEUTRAN_CGI eCGI;
   SztProtExtnCont_CompletedCellinTAI_Item_ExtIEs iE_Extns;
} SztCompletedCellinTAI_Item;

typedef struct s1apCompletedCellinTAI
{
   TknU16 noComp;
   SztCompletedCellinTAI_Item *member;
}SztCompletedCellinTAI;

typedef struct s1ap_ExtnTAI_Broadcast_Item_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnTAI_Broadcast_Item_ExtIEsCls;
typedef struct s1apProtExtnField_TAI_Broadcast_Item_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnTAI_Broadcast_Item_ExtIEsCls extensionValue;
} SztProtExtnField_TAI_Broadcast_Item_ExtIEs;

typedef struct s1apProtExtnCont_TAI_Broadcast_Item_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_TAI_Broadcast_Item_ExtIEs *member;
}SztProtExtnCont_TAI_Broadcast_Item_ExtIEs;

typedef struct s1apTAI_Broadcast_Item
{
   TknPres pres;
   SztTAI tAI;
   SztCompletedCellinTAI completedCellinTAI;
   SztProtExtnCont_TAI_Broadcast_Item_ExtIEs iE_Extns;
} SztTAI_Broadcast_Item;

typedef struct s1apTAI_Broadcast
{
   TknU16 noComp;
   SztTAI_Broadcast_Item *member;
}SztTAI_Broadcast;

typedef struct s1ap_ExtnCompletedCellinEAI_Item_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnCompletedCellinEAI_Item_ExtIEsCls;
typedef struct s1apProtExtnField_CompletedCellinEAI_Item_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnCompletedCellinEAI_Item_ExtIEsCls extensionValue;
} SztProtExtnField_CompletedCellinEAI_Item_ExtIEs;

typedef struct s1apProtExtnCont_CompletedCellinEAI_Item_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_CompletedCellinEAI_Item_ExtIEs *member;
}SztProtExtnCont_CompletedCellinEAI_Item_ExtIEs;

typedef struct s1apCompletedCellinEAI_Item
{
   TknPres pres;
   SztEUTRAN_CGI eCGI;
   SztProtExtnCont_CompletedCellinEAI_Item_ExtIEs iE_Extns;
} SztCompletedCellinEAI_Item;

typedef struct s1apCompletedCellinEAI
{
   TknU16 noComp;
   SztCompletedCellinEAI_Item *member;
}SztCompletedCellinEAI;

typedef struct s1ap_ExtnEmergencyAreaID_Broadcast_Item_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnEmergencyAreaID_Broadcast_Item_ExtIEsCls;
typedef struct s1apProtExtnField_EmergencyAreaID_Broadcast_Item_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnEmergencyAreaID_Broadcast_Item_ExtIEsCls extensionValue;
} SztProtExtnField_EmergencyAreaID_Broadcast_Item_ExtIEs;

typedef struct s1apProtExtnCont_EmergencyAreaID_Broadcast_Item_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_EmergencyAreaID_Broadcast_Item_ExtIEs *member;
}SztProtExtnCont_EmergencyAreaID_Broadcast_Item_ExtIEs;

typedef struct s1apEmergencyAreaID_Broadcast_Item
{
   TknPres pres;
   SztEmergencyAreaID emergencyAreaID;
   SztCompletedCellinEAI completedCellinEAI;
   SztProtExtnCont_EmergencyAreaID_Broadcast_Item_ExtIEs iE_Extns;
} SztEmergencyAreaID_Broadcast_Item;

typedef struct s1apEmergencyAreaID_Broadcast
{
   TknU16 noComp;
   SztEmergencyAreaID_Broadcast_Item *member;
}SztEmergencyAreaID_Broadcast;

typedef struct s1apBroadcastCompletedAreaLst
{
   TknU8 choice;
   union {
      SztCellID_Broadcast cellID_Broadcast;
      SztTAI_Broadcast tAI_Broadcast;
      SztEmergencyAreaID_Broadcast emergencyAreaID_Broadcast;
   } val;
} SztBroadcastCompletedAreaLst;


typedef enum enumSztCauseRadioNw
{
   SztCauseRadioNwunspecifiedEnum,
   SztCauseRadioNwtx2relocoverall_expiryEnum,
   SztCauseRadioNwsuccessful_handoverEnum,
   SztCauseRadioNwrelease_due_to_eutran_generated_reasonEnum,
   SztCauseRadioNwhandover_cancelledEnum,
   SztCauseRadioNwpartial_handoverEnum,
   SztCauseRadioNwho_failure_in_target_EPC_eNB_or_target_systemEnum,
   SztCauseRadioNwho_target_not_allowedEnum,
   SztCauseRadioNwtS1relocoverall_expiryEnum,
   SztCauseRadioNwtS1relocprep_expiryEnum,
   SztCauseRadioNwcell_not_availableEnum,
   SztCauseRadioNwunknown_targetIDEnum,
   SztCauseRadioNwno_radio_resources_available_in_target_cellEnum,
   SztCauseRadioNwunknown_mme_ue_s1ap_idEnum,
   SztCauseRadioNwunknown_enb_ue_s1ap_idEnum,
   SztCauseRadioNwunknown_pair_ue_s1ap_idEnum,
   SztCauseRadioNwhandover_desirable_for_radio_reasonEnum,
   SztCauseRadioNwtime_critical_handoverEnum,
   SztCauseRadioNwresource_optimisation_handoverEnum,
   SztCauseRadioNwreduce_load_in_serving_cellEnum,
   SztCauseRadioNwuser_inactivityEnum,
   SztCauseRadioNwradio_connection_with_ue_lostEnum,
   SztCauseRadioNwload_balancing_tau_requiredEnum,
   SztCauseRadioNwcs_fallback_triggeredEnum,
   SztCauseRadioNwue_not_available_for_ps_serviceEnum,
   SztCauseRadioNwradio_resources_not_availableEnum,
   SztCauseRadioNwfailure_in_radio_interface_procedureEnum,
   SztCauseRadioNwinvalid_qos_combinationEnum,
   SztCauseRadioNwinterrat_redirectionEnum,
   SztCauseRadioNwinteraction_with_other_procedureEnum,
   SztCauseRadioNwunknown_E_RAB_IDEnum,
   SztCauseRadioNwmultiple_E_RAB_ID_instancesEnum,
   SztCauseRadioNwencryption_and_or_integrity_protection_algorithms_not_supportedEnum,
   SztCauseRadioNws1_intra_system_handover_triggeredEnum,
   SztCauseRadioNws1_inter_system_handover_triggeredEnum,
   SztCauseRadioNwx2_handover_triggeredEnum,
   SztCauseRadioNwredirection_towards_1xRTTEnum,
   SztCauseRadioNwnot_supported_QCI_valueEnum,
   SztCauseRadioNwinvalid_CSG_IdEnum
} EnumSztCauseRadioNw;
typedef TknU32 SztCauseRadioNw;


typedef enum enumSztCauseTport
{
   SztCauseTporttransport_resource_unavailableEnum,
   SztCauseTportunspecifiedEnum
} EnumSztCauseTport;
typedef TknU32 SztCauseTport;


typedef enum enumSztCauseNas
{
   SztCauseNasnormal_releaseEnum,
   SztCauseNasauthentication_failureEnum,
   SztCauseNasdetachEnum,
   SztCauseNasunspecifiedEnum,
   SztCauseNascsg_subscription_expiryEnum
} EnumSztCauseNas;
typedef TknU32 SztCauseNas;


typedef enum enumSztCauseProt
{
   SztCauseProttransfer_syntax_errorEnum,
   SztCauseProtabstract_syntax_error_rejectEnum,
   SztCauseProtabstract_syntax_error_ignore_and_notifyEnum,
   SztCauseProtmessage_not_compatible_with_receiver_stateEnum,
   SztCauseProtsemantic_errorEnum,
   SztCauseProtabstract_syntax_error_falsely_constructed_messageEnum,
   SztCauseProtunspecifiedEnum
} EnumSztCauseProt;
typedef TknU32 SztCauseProt;


typedef enum enumSztCauseMisc
{
   SztCauseMisccontrol_processing_overloadEnum,
   SztCauseMiscnot_enough_user_plane_processing_resourcesEnum,
   SztCauseMischardware_failureEnum,
   SztCauseMiscom_interventionEnum,
   SztCauseMiscunspecifiedEnum,
   SztCauseMiscunknown_PLMNEnum
} EnumSztCauseMisc;
typedef TknU32 SztCauseMisc;

typedef struct s1apCause
{
   TknU8 choice;
   union {
      SztCauseRadioNw radioNw;
      SztCauseTport transport;
      SztCauseNas nas;
      SztCauseProt protocol;
      SztCauseMisc misc;
   } val;
} SztCause;


typedef enum enumSztCellAccessMode
{
   SztCellAccessModehybridEnum
} EnumSztCellAccessMode;
typedef TknU32 SztCellAccessMode;


typedef TknStrOSXL SztCdma2000PDU;

typedef enum enumSztCdma2000RATTyp
{
   SztCdma2000RATTyphRPDEnum,
   SztCdma2000RATTyponexRTTEnum
} EnumSztCdma2000RATTyp;
typedef TknU32 SztCdma2000RATTyp;


typedef TknStrOSXL SztCdma2000SectorID;

typedef enum enumSztCdma2000HOStatus
{
   SztCdma2000HOStatushOSuccessEnum,
   SztCdma2000HOStatushOFailEnum
} EnumSztCdma2000HOStatus;
typedef TknU32 SztCdma2000HOStatus;


typedef enum enumSztCdma2000HOReqdInd
{
   SztCdma2000HOReqdIndtrueEnum
} EnumSztCdma2000HOReqdInd;
typedef TknU32 SztCdma2000HOReqdInd;


typedef TknStrOSXL SztCdma2000OneXMEID;

typedef TknStrOSXL SztCdma2000OneXMSI;

typedef TknStrOSXL SztCdma2000OneXPilot;
typedef struct s1ap_ExtnCdma2000OneXSRVCCInfo_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnCdma2000OneXSRVCCInfo_ExtIEsCls;
typedef struct s1apProtExtnField_Cdma2000OneXSRVCCInfo_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnCdma2000OneXSRVCCInfo_ExtIEsCls extensionValue;
} SztProtExtnField_Cdma2000OneXSRVCCInfo_ExtIEs;

typedef struct s1apProtExtnCont_Cdma2000OneXSRVCCInfo_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_Cdma2000OneXSRVCCInfo_ExtIEs *member;
}SztProtExtnCont_Cdma2000OneXSRVCCInfo_ExtIEs;

typedef struct s1apCdma2000OneXSRVCCInfo
{
   TknPres pres;
   SztCdma2000OneXMEID cdma2000OneXMEID;
   SztCdma2000OneXMSI cdma2000OneXMSI;
   SztCdma2000OneXPilot cdma2000OneXPilot;
   SztProtExtnCont_Cdma2000OneXSRVCCInfo_ExtIEs iE_Extns;
} SztCdma2000OneXSRVCCInfo;


typedef TknStrOSXL SztCdma2000OneXRAND;

typedef enum enumSztCell_Size
{
   SztCell_SizeverysmallEnum,
   SztCell_SizesmallEnum,
   SztCell_SizemediumEnum,
   SztCell_SizelargeEnum
} EnumSztCell_Size;
typedef TknU32 SztCell_Size;

typedef struct s1ap_ExtnCellTyp_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnCellTyp_ExtIEsCls;
typedef struct s1apProtExtnField_CellTyp_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnCellTyp_ExtIEsCls extensionValue;
} SztProtExtnField_CellTyp_ExtIEs;

typedef struct s1apProtExtnCont_CellTyp_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_CellTyp_ExtIEs *member;
}SztProtExtnCont_CellTyp_ExtIEs;

typedef struct s1apCellTyp
{
   TknPres pres;
   SztCell_Size cell_Size;
   SztProtExtnCont_CellTyp_ExtIEs iE_Extns;
} SztCellTyp;


typedef TknStr4 SztLAC;

typedef TknStr4 SztCI;

typedef TknStr4 SztRAC;
typedef struct s1ap_ExtnCGI_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnCGI_ExtIEsCls;
typedef struct s1apProtExtnField_CGI_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnCGI_ExtIEsCls extensionValue;
} SztProtExtnField_CGI_ExtIEs;

typedef struct s1apProtExtnCont_CGI_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_CGI_ExtIEs *member;
}SztProtExtnCont_CGI_ExtIEs;

typedef struct s1apCGI
{
   TknPres pres;
   SztPLMNidentity pLMNidentity;
   SztLAC lAC;
   SztCI cI;
   SztRAC rAC;
   SztProtExtnCont_CGI_ExtIEs iE_Extns;
} SztCGI;


typedef enum enumSztCNDomain
{
   SztCNDomainpsEnum,
   SztCNDomaincsEnum
} EnumSztCNDomain;
typedef TknU32 SztCNDomain;


typedef enum enumSztConcurrentWarningMsgIndicator
{
   SztConcurrentWarningMsgIndicatortrueEnum
} EnumSztConcurrentWarningMsgIndicator;
typedef TknU32 SztConcurrentWarningMsgIndicator;


typedef enum enumSztCSFallbackIndicator
{
   SztCSFallbackIndicatorcs_fallback_requiredEnum,
   SztCSFallbackIndicatorcs_fallback_high_priorityEnum
} EnumSztCSFallbackIndicator;
typedef TknU32 SztCSFallbackIndicator;


typedef TknBStr32 SztCSG_Id;
typedef struct s1ap_ExtnCSG_IdLst_Item_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnCSG_IdLst_Item_ExtIEsCls;
typedef struct s1apProtExtnField_CSG_IdLst_Item_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnCSG_IdLst_Item_ExtIEsCls extensionValue;
} SztProtExtnField_CSG_IdLst_Item_ExtIEs;

typedef struct s1apProtExtnCont_CSG_IdLst_Item_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_CSG_IdLst_Item_ExtIEs *member;
}SztProtExtnCont_CSG_IdLst_Item_ExtIEs;

typedef struct s1apCSG_IdLst_Item
{
   TknPres pres;
   SztCSG_Id cSG_Id;
   SztProtExtnCont_CSG_IdLst_Item_ExtIEs iE_Extns;
} SztCSG_IdLst_Item;

typedef struct s1apCSG_IdLst
{
   TknU16 noComp;
   SztCSG_IdLst_Item *member;
}SztCSG_IdLst;


typedef enum enumSztCSGMembershipStatus
{
   SztCSGMembershipStatusmemberEnum,
   SztCSGMembershipStatusnot_memberEnum
} EnumSztCSGMembershipStatus;
typedef TknU32 SztCSGMembershipStatus;


typedef enum enumSztTypOfErr
{
   SztTypOfErrnot_understoodEnum,
   SztTypOfErrmissingEnum
} EnumSztTypOfErr;
typedef TknU32 SztTypOfErr;

typedef struct s1ap_ExtnCriticalityDiag_IE_Item_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnCriticalityDiag_IE_Item_ExtIEsCls;
typedef struct s1apProtExtnField_CriticalityDiag_IE_Item_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnCriticalityDiag_IE_Item_ExtIEsCls extensionValue;
} SztProtExtnField_CriticalityDiag_IE_Item_ExtIEs;

typedef struct s1apProtExtnCont_CriticalityDiag_IE_Item_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_CriticalityDiag_IE_Item_ExtIEs *member;
}SztProtExtnCont_CriticalityDiag_IE_Item_ExtIEs;

typedef struct s1apCriticalityDiag_IE_Item
{
   TknPres pres;
   SztCriticality iECriticality;
   SztProtIE_ID iE_ID;
   SztTypOfErr typeOfErr;
   SztProtExtnCont_CriticalityDiag_IE_Item_ExtIEs iE_Extns;
} SztCriticalityDiag_IE_Item;

typedef struct s1apCriticalityDiag_IE_Lst
{
   TknU16 noComp;
   SztCriticalityDiag_IE_Item *member;
}SztCriticalityDiag_IE_Lst;

typedef struct s1ap_ExtnCriticalityDiag_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnCriticalityDiag_ExtIEsCls;
typedef struct s1apProtExtnField_CriticalityDiag_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnCriticalityDiag_ExtIEsCls extensionValue;
} SztProtExtnField_CriticalityDiag_ExtIEs;

typedef struct s1apProtExtnCont_CriticalityDiag_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_CriticalityDiag_ExtIEs *member;
}SztProtExtnCont_CriticalityDiag_ExtIEs;

typedef struct s1apCriticalityDiag
{
   TknPres pres;
   SztProcedureCode procedureCode;
   SztTrgMsg triggeringMsg;
   SztCriticality procedureCriticality;
   SztCriticalityDiag_IE_Lst iEsCriticalityDiag;
   SztProtExtnCont_CriticalityDiag_ExtIEs iE_Extns;
} SztCriticalityDiag;


typedef TknBStr32 SztDataCodingScheme;

typedef enum enumSztDL_Fwding
{
   SztDL_FwdingdL_Fwding_proposedEnum
} EnumSztDL_Fwding;
typedef TknU32 SztDL_Fwding;


typedef enum enumSztDirect_Fwding_Path_Avlblty
{
   SztDirect_Fwding_Path_AvlbltydirectPathAvailableEnum
} EnumSztDirect_Fwding_Path_Avlblty;
typedef TknU32 SztDirect_Fwding_Path_Avlblty;


typedef enum enumSztData_Fwding_Not_Possible
{
   SztData_Fwding_Not_Possibledata_Fwding_not_PossibleEnum
} EnumSztData_Fwding_Not_Possible;
typedef TknU32 SztData_Fwding_Not_Possible;

typedef struct s1apECGILst
{
   TknU16 noComp;
   SztEUTRAN_CGI *member;
}SztECGILst;

typedef struct s1apEmergencyAreaIDLst
{
   TknU16 noComp;
   SztEmergencyAreaID *member;
}SztEmergencyAreaIDLst;


typedef TknBStr32 SztENB_IDmacroENB_ID;

typedef TknBStr32 SztENB_IDhomeENB_ID;
typedef struct s1apENB_ID
{
   TknU8 choice;
   union {
      SztENB_IDmacroENB_ID macroENB_ID;
      SztENB_IDhomeENB_ID homeENB_ID;
   } val;
} SztENB_ID;

typedef struct s1ap_ExtnLAI_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnLAI_ExtIEsCls;
typedef struct s1apProtExtnField_LAI_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnLAI_ExtIEsCls extensionValue;
} SztProtExtnField_LAI_ExtIEs;

typedef struct s1apProtExtnCont_LAI_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_LAI_ExtIEs *member;
}SztProtExtnCont_LAI_ExtIEs;

typedef struct s1apLAI
{
   TknPres pres;
   SztPLMNidentity pLMNidentity;
   SztLAC lAC;
   SztProtExtnCont_LAI_ExtIEs iE_Extns;
} SztLAI;

typedef struct s1ap_ExtnGERAN_Cell_ID_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnGERAN_Cell_ID_ExtIEsCls;
typedef struct s1apProtExtnField_GERAN_Cell_ID_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnGERAN_Cell_ID_ExtIEsCls extensionValue;
} SztProtExtnField_GERAN_Cell_ID_ExtIEs;

typedef struct s1apProtExtnCont_GERAN_Cell_ID_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_GERAN_Cell_ID_ExtIEs *member;
}SztProtExtnCont_GERAN_Cell_ID_ExtIEs;

typedef struct s1apGERAN_Cell_ID
{
   TknPres pres;
   SztLAI lAI;
   SztRAC rAC;
   SztCI cI;
   SztProtExtnCont_GERAN_Cell_ID_ExtIEs iE_Extns;
} SztGERAN_Cell_ID;

typedef struct s1ap_ExtnGlobalENB_ID_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnGlobalENB_ID_ExtIEsCls;
typedef struct s1apProtExtnField_GlobalENB_ID_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnGlobalENB_ID_ExtIEsCls extensionValue;
} SztProtExtnField_GlobalENB_ID_ExtIEs;

typedef struct s1apProtExtnCont_GlobalENB_ID_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_GlobalENB_ID_ExtIEs *member;
}SztProtExtnCont_GlobalENB_ID_ExtIEs;

typedef struct s1apGlobal_ENB_ID
{
   TknPres pres;
   SztPLMNidentity pLMNidentity;
   SztENB_ID eNB_ID;
   SztProtExtnCont_GlobalENB_ID_ExtIEs iE_Extns;
} SztGlobal_ENB_ID;

typedef struct s1ap_ExtnENB_StatusTfr_TprntCont_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnENB_StatusTfr_TprntCont_ExtIEsCls;
typedef struct s1apProtExtnField_ENB_StatusTfr_TprntCont_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnENB_StatusTfr_TprntCont_ExtIEsCls extensionValue;
} SztProtExtnField_ENB_StatusTfr_TprntCont_ExtIEs;

typedef struct s1apProtExtnCont_ENB_StatusTfr_TprntCont_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_ENB_StatusTfr_TprntCont_ExtIEs *member;
}SztProtExtnCont_ENB_StatusTfr_TprntCont_ExtIEs;

typedef struct s1apENB_StatusTfr_TprntCont
{
   TknPres pres;
   SztBrs_SubjToStatusTfrLst bearers_SubjToStatusTfrLst;
   SztProtExtnCont_ENB_StatusTfr_TprntCont_ExtIEs iE_Extns;
} SztENB_StatusTfr_TprntCont;


typedef TknU32 SztENB_UE_S1AP_ID;


typedef TknStrOSXL SztENBname;

typedef TknStrBSXL SztTportLyrAddr;
typedef struct s1apENBX2TLAs
{
   TknU16 noComp;
   SztTportLyrAddr *member;
}SztENBX2TLAs;


typedef TknBStr32 SztEncryptionAlgorithms;
typedef struct s1apEPLMNs
{
   TknU16 noComp;
   SztPLMNidentity *member;
}SztEPLMNs;


typedef enum enumSztEventTyp
{
   SztEventTypdirectEnum,
   SztEventTypchange_of_serve_cellEnum,
   SztEventTypstop_change_of_serve_cellEnum
} EnumSztEventTyp;
typedef TknU32 SztEventTyp;

typedef struct s1ap_ExtnE_RABInformLstItem_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnE_RABInformLstItem_ExtIEsCls;
typedef struct s1apProtExtnField_E_RABInformLstItem_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnE_RABInformLstItem_ExtIEsCls extensionValue;
} SztProtExtnField_E_RABInformLstItem_ExtIEs;

typedef struct s1apProtExtnCont_E_RABInformLstItem_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_E_RABInformLstItem_ExtIEs *member;
}SztProtExtnCont_E_RABInformLstItem_ExtIEs;

typedef struct s1apE_RABInformLstItem
{
   TknPres pres;
   SztE_RAB_ID e_RAB_ID;
   SztDL_Fwding dL_Fwding;
   SztProtExtnCont_E_RABInformLstItem_ExtIEs iE_Extns;
} SztE_RABInformLstItem;

typedef struct s1ap_ValueE_RABInformLstIEsCls{
   union {
      SztE_RABInformLstItem sztE_RABInformLstItem;
   } u;
} Szt_ValueE_RABInformLstIEsCls;
typedef struct s1apProtIE_Field_E_RABInformLstIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueE_RABInformLstIEsCls value;
} SztProtIE_Field_E_RABInformLstIEs;


typedef SztProtIE_Field_E_RABInformLstIEs SztProtIE_SingleCont_E_RABInformLstIEs;
typedef struct s1apE_RABInformLst
{
   TknU16 noComp;
   SztProtIE_SingleCont_E_RABInformLstIEs *member;
}SztE_RABInformLst;

typedef struct s1ap_ExtnE_RABItem_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnE_RABItem_ExtIEsCls;
typedef struct s1apProtExtnField_E_RABItem_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnE_RABItem_ExtIEsCls extensionValue;
} SztProtExtnField_E_RABItem_ExtIEs;

typedef struct s1apProtExtnCont_E_RABItem_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_E_RABItem_ExtIEs *member;
}SztProtExtnCont_E_RABItem_ExtIEs;

typedef struct s1apE_RABItem
{
   TknPres pres;
   SztE_RAB_ID e_RAB_ID;
   SztCause cause;
   SztProtExtnCont_E_RABItem_ExtIEs iE_Extns;
} SztE_RABItem;

typedef struct s1ap_ValueE_RABItemIEsCls{
   union {
      SztE_RABItem sztE_RABItem;
   } u;
} Szt_ValueE_RABItemIEsCls;
typedef struct s1apProtIE_Field_E_RABItemIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueE_RABItemIEsCls value;
} SztProtIE_Field_E_RABItemIEs;


typedef SztProtIE_Field_E_RABItemIEs SztProtIE_SingleCont_E_RABItemIEs;
typedef struct s1apE_RABLst
{
   TknU16 noComp;
   SztProtIE_SingleCont_E_RABItemIEs *member;
}SztE_RABLst;


typedef TknU32 SztQCI;

typedef struct s1ap_ExtnGBR_QosInform_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnGBR_QosInform_ExtIEsCls;
typedef struct s1apProtExtnField_GBR_QosInform_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnGBR_QosInform_ExtIEsCls extensionValue;
} SztProtExtnField_GBR_QosInform_ExtIEs;

typedef struct s1apProtExtnCont_GBR_QosInform_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_GBR_QosInform_ExtIEs *member;
}SztProtExtnCont_GBR_QosInform_ExtIEs;

typedef struct s1apGBR_QosInform
{
   TknPres pres;
   SztBitRate e_RAB_MaxBitrateDL;
   SztBitRate e_RAB_MaxBitrateUL;
   SztBitRate e_RAB_GuaranteedBitrateDL;
   SztBitRate e_RAB_GuaranteedBitrateUL;
   SztProtExtnCont_GBR_QosInform_ExtIEs iE_Extns;
} SztGBR_QosInform;

typedef struct s1ap_ExtnE_RABQoSParams_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnE_RABQoSParams_ExtIEsCls;
typedef struct s1apProtExtnField_E_RABQoSParams_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnE_RABQoSParams_ExtIEsCls extensionValue;
} SztProtExtnField_E_RABQoSParams_ExtIEs;

typedef struct s1apProtExtnCont_E_RABQoSParams_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_E_RABQoSParams_ExtIEs *member;
}SztProtExtnCont_E_RABQoSParams_ExtIEs;

typedef struct s1apE_RABLvlQoSParams
{
   TknPres pres;
   SztQCI qCI;
   SztAllocnAndRetentionPriority allocationRetentionPriority;
   SztGBR_QosInform gbrQosInform;
   SztProtExtnCont_E_RABQoSParams_ExtIEs iE_Extns;
} SztE_RABLvlQoSParams;


typedef TknU32 SztEUTRANRoundTripDelayEstimationInfo;


typedef TknU32 SztExtendedRNC_ID;


typedef TknU32 SztExtendedRepetitionPeriod;


typedef enum enumSztForbiddenInterRATs
{
   SztForbiddenInterRATsallEnum,
   SztForbiddenInterRATsgeranEnum,
   SztForbiddenInterRATsutranEnum,
   SztForbiddenInterRATscdma2000Enum,
   SztForbiddenInterRATsgeranandutranEnum,
   SztForbiddenInterRATscdma2000andutranEnum
} EnumSztForbiddenInterRATs;
typedef TknU32 SztForbiddenInterRATs;

typedef struct s1apForbiddenTACs
{
   TknU16 noComp;
   SztTAC *member;
}SztForbiddenTACs;

typedef struct s1ap_ExtnForbiddenTAs_Item_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnForbiddenTAs_Item_ExtIEsCls;
typedef struct s1apProtExtnField_ForbiddenTAs_Item_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnForbiddenTAs_Item_ExtIEsCls extensionValue;
} SztProtExtnField_ForbiddenTAs_Item_ExtIEs;

typedef struct s1apProtExtnCont_ForbiddenTAs_Item_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_ForbiddenTAs_Item_ExtIEs *member;
}SztProtExtnCont_ForbiddenTAs_Item_ExtIEs;

typedef struct s1apForbiddenTAs_Item
{
   TknPres pres;
   SztPLMNidentity pLMN_Identity;
   SztForbiddenTACs forbiddenTACs;
   SztProtExtnCont_ForbiddenTAs_Item_ExtIEs iE_Extns;
} SztForbiddenTAs_Item;

typedef struct s1apForbiddenTAs
{
   TknU16 noComp;
   SztForbiddenTAs_Item *member;
}SztForbiddenTAs;

typedef struct s1apForbiddenLACs
{
   TknU16 noComp;
   SztLAC *member;
}SztForbiddenLACs;

typedef struct s1ap_ExtnForbiddenLAs_Item_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnForbiddenLAs_Item_ExtIEsCls;
typedef struct s1apProtExtnField_ForbiddenLAs_Item_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnForbiddenLAs_Item_ExtIEsCls extensionValue;
} SztProtExtnField_ForbiddenLAs_Item_ExtIEs;

typedef struct s1apProtExtnCont_ForbiddenLAs_Item_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_ForbiddenLAs_Item_ExtIEs *member;
}SztProtExtnCont_ForbiddenLAs_Item_ExtIEs;

typedef struct s1apForbiddenLAs_Item
{
   TknPres pres;
   SztPLMNidentity pLMN_Identity;
   SztForbiddenLACs forbiddenLACs;
   SztProtExtnCont_ForbiddenLAs_Item_ExtIEs iE_Extns;
} SztForbiddenLAs_Item;

typedef struct s1apForbiddenLAs
{
   TknU16 noComp;
   SztForbiddenLAs_Item *member;
}SztForbiddenLAs;


typedef TknStrOSXL SztGTP_TEID;

typedef TknStr4 SztMME_Group_ID;

typedef TknStr4 SztMME_Code;
typedef struct s1ap_ExtnGUMMEI_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnGUMMEI_ExtIEsCls;
typedef struct s1apProtExtnField_GUMMEI_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnGUMMEI_ExtIEsCls extensionValue;
} SztProtExtnField_GUMMEI_ExtIEs;

typedef struct s1apProtExtnCont_GUMMEI_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_GUMMEI_ExtIEs *member;
}SztProtExtnCont_GUMMEI_ExtIEs;

typedef struct s1apGUMMEI
{
   TknPres pres;
   SztPLMNidentity pLMN_Identity;
   SztMME_Group_ID mME_Group_ID;
   SztMME_Code mME_Code;
   SztProtExtnCont_GUMMEI_ExtIEs iE_Extns;
} SztGUMMEI;

typedef struct s1ap_ExtnHovrRestrnLst_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnHovrRestrnLst_ExtIEsCls;
typedef struct s1apProtExtnField_HovrRestrnLst_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnHovrRestrnLst_ExtIEsCls extensionValue;
} SztProtExtnField_HovrRestrnLst_ExtIEs;

typedef struct s1apProtExtnCont_HovrRestrnLst_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_HovrRestrnLst_ExtIEs *member;
}SztProtExtnCont_HovrRestrnLst_ExtIEs;

typedef struct s1apHovrRestrnLst
{
   TknPres pres;
   SztPLMNidentity servingPLMN;
   SztEPLMNs equivalentPLMNs;
   SztForbiddenTAs forbiddenTAs;
   SztForbiddenLAs forbiddenLAs;
   SztForbiddenInterRATs forbiddenInterRATs;
   SztProtExtnCont_HovrRestrnLst_ExtIEs iE_Extns;
} SztHovrRestrnLst;


typedef enum enumSztHovrTyp
{
   SztHovrTypintralteEnum,
   SztHovrTypltetoutranEnum,
   SztHovrTypltetogeranEnum,
   SztHovrTyputrantolteEnum,
   SztHovrTypgerantolteEnum
} EnumSztHovrTyp;
typedef TknU32 SztHovrTyp;


typedef TknStrOSXL SztIMSI;

typedef TknBStr32 SztIntegrityProtectionAlgorithms;

typedef TknBStr32 SztIntfsToTrace;

typedef TknU32 SztTime_UE_StayedInCell;

typedef struct s1ap_ExtnLastVisitedEUTRANCellInform_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnLastVisitedEUTRANCellInform_ExtIEsCls;
typedef struct s1apProtExtnField_LastVisitedEUTRANCellInform_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnLastVisitedEUTRANCellInform_ExtIEsCls extensionValue;
} SztProtExtnField_LastVisitedEUTRANCellInform_ExtIEs;

typedef struct s1apProtExtnCont_LastVisitedEUTRANCellInform_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_LastVisitedEUTRANCellInform_ExtIEs *member;
}SztProtExtnCont_LastVisitedEUTRANCellInform_ExtIEs;

typedef struct s1apLastVisitedEUTRANCellInform
{
   TknPres pres;
   SztEUTRAN_CGI global_Cell_ID;
   SztCellTyp cellTyp;
   SztTime_UE_StayedInCell time_UE_StayedInCell;
   SztProtExtnCont_LastVisitedEUTRANCellInform_ExtIEs iE_Extns;
} SztLastVisitedEUTRANCellInform;


typedef TknStrOSXL SztLastVisitedUTRANCellInform;
typedef struct s1apLastVisitedGERANCellInform
{
   TknU8 choice;
   union {
      TknU8 unused;
   } val;
} SztLastVisitedGERANCellInform;

typedef struct s1apLastVisitedCell_Item
{
   TknU8 choice;
   union {
      SztLastVisitedEUTRANCellInform e_UTRAN_Cell;
      SztLastVisitedUTRANCellInform uTRAN_Cell;
      SztLastVisitedGERANCellInform gERAN_Cell;
   } val;
} SztLastVisitedCell_Item;


typedef TknStrOSXL SztL3_Inform;

typedef TknStrOSXL SztLPPa_PDU;

typedef TknBStr32 SztMsgIdentifier;

typedef TknStrOSXL SztMMEname;

typedef TknU32 SztMME_UE_S1AP_ID;


typedef TknStrOSXL SztM_TMSI;

typedef TknStrOSXL SztMSClassmark2;

typedef TknStrOSXL SztMSClassmark3;

typedef TknStrOSXL SztNAS_PDU;

typedef TknStrOSXL SztNASSecurParamsfromE_UTRAN;

typedef TknStrOSXL SztNASSecurParamstoE_UTRAN;

typedef TknU32 SztNumberofBroadcastRqst;


typedef TknStrOSXL SztOldBSS_ToNewBSS_Inform;

typedef enum enumSztOverloadAction
{
   SztOverloadActionreject_non_emergency_mo_dtEnum,
   SztOverloadActionreject_all_rrc_cr_signallingEnum,
   SztOverloadActionpermit_emergency_sessions_and_mobile_terminated_services_onlyEnum
} EnumSztOverloadAction;
typedef TknU32 SztOverloadAction;

typedef struct s1apOverloadResp
{
   TknU8 choice;
   union {
      SztOverloadAction overloadAction;
   } val;
} SztOverloadResp;


typedef enum enumSztPagDRX
{
   SztPagDRXv32Enum,
   SztPagDRXv64Enum,
   SztPagDRXv128Enum,
   SztPagDRXv256Enum
} EnumSztPagDRX;
typedef TknU32 SztPagDRX;


typedef enum enumSztPS_ServiceNotAvailable
{
   SztPS_ServiceNotAvailableps_service_not_availableEnum
} EnumSztPS_ServiceNotAvailable;
typedef TknU32 SztPS_ServiceNotAvailable;


typedef TknU32 SztRelativeMMECapacity;


typedef enum enumSztReportArea
{
   SztReportAreaecgiEnum
} EnumSztReportArea;
typedef TknU32 SztReportArea;

typedef struct s1ap_ExtnRqstTyp_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnRqstTyp_ExtIEsCls;
typedef struct s1apProtExtnField_RqstTyp_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnRqstTyp_ExtIEsCls extensionValue;
} SztProtExtnField_RqstTyp_ExtIEs;

typedef struct s1apProtExtnCont_RqstTyp_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_RqstTyp_ExtIEs *member;
}SztProtExtnCont_RqstTyp_ExtIEs;

typedef struct s1apRqstTyp
{
   TknPres pres;
   SztEventTyp eventTyp;
   SztReportArea reportArea;
   SztProtExtnCont_RqstTyp_ExtIEs iE_Extns;
} SztRqstTyp;


typedef TknStrOSXL SztRIMInform;

typedef TknU32 SztRNC_ID;

typedef struct s1ap_ExtnTgetRNC_ID_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnTgetRNC_ID_ExtIEsCls;
typedef struct s1apProtExtnField_TgetRNC_ID_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnTgetRNC_ID_ExtIEsCls extensionValue;
} SztProtExtnField_TgetRNC_ID_ExtIEs;

typedef struct s1apProtExtnCont_TgetRNC_ID_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_TgetRNC_ID_ExtIEs *member;
}SztProtExtnCont_TgetRNC_ID_ExtIEs;

typedef struct s1apTgetRNC_ID
{
   TknPres pres;
   SztLAI lAI;
   SztRAC rAC;
   SztRNC_ID rNC_ID;
   SztExtendedRNC_ID extendedRNC_ID;
   SztProtExtnCont_TgetRNC_ID_ExtIEs iE_Extns;
} SztTgetRNC_ID;

typedef struct s1apRIMRoutingAddr
{
   TknU8 choice;
   union {
      SztGERAN_Cell_ID gERAN_Cell_ID;
      SztTgetRNC_ID targetRNC_ID;
   } val;
} SztRIMRoutingAddr;

typedef struct s1ap_ExtnRIMTfr_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnRIMTfr_ExtIEsCls;
typedef struct s1apProtExtnField_RIMTfr_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnRIMTfr_ExtIEsCls extensionValue;
} SztProtExtnField_RIMTfr_ExtIEs;

typedef struct s1apProtExtnCont_RIMTfr_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_RIMTfr_ExtIEs *member;
}SztProtExtnCont_RIMTfr_ExtIEs;

typedef struct s1apRIMTfr
{
   TknPres pres;
   SztRIMInform rIMInform;
   SztRIMRoutingAddr rIMRoutingAddr;
   SztProtExtnCont_RIMTfr_ExtIEs iE_Extns;
} SztRIMTfr;


typedef TknU32 SztRepetitionPeriod;


typedef TknStrOSXL SztRRC_Cont;

typedef enum enumSztRRC_Establishment_Cause
{
   SztRRC_Establishment_CauseemergencyEnum,
   SztRRC_Establishment_CausehighPriorityAccessEnum,
   SztRRC_Establishment_Causemt_AccessEnum,
   SztRRC_Establishment_Causemo_SignallingEnum,
   SztRRC_Establishment_Causemo_DataEnum
} EnumSztRRC_Establishment_Cause;
typedef TknU32 SztRRC_Establishment_Cause;


typedef TknU32 SztRouting_ID;


typedef TknStrBSXL SztSecurKey;

typedef TknU32 SztSecurCntxtnextHopChainingCount;

typedef struct s1ap_ExtnSecurCntxt_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnSecurCntxt_ExtIEsCls;
typedef struct s1apProtExtnField_SecurCntxt_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnSecurCntxt_ExtIEsCls extensionValue;
} SztProtExtnField_SecurCntxt_ExtIEs;

typedef struct s1apProtExtnCont_SecurCntxt_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_SecurCntxt_ExtIEs *member;
}SztProtExtnCont_SecurCntxt_ExtIEs;

typedef struct s1apSecurCntxt
{
   TknPres pres;
   SztSecurCntxtnextHopChainingCount nextHopChainingCount;
   SztSecurKey nextHopParameter;
   SztProtExtnCont_SecurCntxt_ExtIEs iE_Extns;
} SztSecurCntxt;


typedef TknBStr32 SztSerialNumber;

typedef enum enumSztSONInformRqst
{
   SztSONInformRqstx2TNL_Config_InfoEnum,
   SztSONInformRqsttime_Synchronization_InfoEnum
} EnumSztSONInformRqst;
typedef TknU32 SztSONInformRqst;

typedef struct s1ap_ExtnX2TNLConfigInfo_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnX2TNLConfigInfo_ExtIEsCls;
typedef struct s1apProtExtnField_X2TNLConfigInfo_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnX2TNLConfigInfo_ExtIEsCls extensionValue;
} SztProtExtnField_X2TNLConfigInfo_ExtIEs;

typedef struct s1apProtExtnCont_X2TNLConfigInfo_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_X2TNLConfigInfo_ExtIEs *member;
}SztProtExtnCont_X2TNLConfigInfo_ExtIEs;

typedef struct s1apX2TNLConfigInfo
{
   TknPres pres;
   SztENBX2TLAs eNBX2TportLyrAddres;
   SztProtExtnCont_X2TNLConfigInfo_ExtIEs iE_Extns;
} SztX2TNLConfigInfo;


typedef TknU32 SztStratumLvl;


typedef enum enumSztSynchronizationStatus
{
   SztSynchronizationStatussynchronousEnum,
   SztSynchronizationStatusasynchronousEnum
} EnumSztSynchronizationStatus;
typedef TknU32 SztSynchronizationStatus;

typedef struct s1ap_ExtnTimeSynchronizationInfo_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnTimeSynchronizationInfo_ExtIEsCls;
typedef struct s1apProtExtnField_TimeSynchronizationInfo_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnTimeSynchronizationInfo_ExtIEsCls extensionValue;
} SztProtExtnField_TimeSynchronizationInfo_ExtIEs;

typedef struct s1apProtExtnCont_TimeSynchronizationInfo_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_TimeSynchronizationInfo_ExtIEs *member;
}SztProtExtnCont_TimeSynchronizationInfo_ExtIEs;

typedef struct s1apTimeSynchronizationInfo
{
   TknPres pres;
   SztStratumLvl stratumLvl;
   SztSynchronizationStatus synchronizationStatus;
   SztProtExtnCont_TimeSynchronizationInfo_ExtIEs iE_Extns;
} SztTimeSynchronizationInfo;

typedef struct s1ap_ExtnSONInformReply_ExtIEsCls{
   union {
      SztTimeSynchronizationInfo sztTimeSynchronizationInfo;
   } u;
} Szt_ExtnSONInformReply_ExtIEsCls;
typedef struct s1apProtExtnField_SONInformReply_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnSONInformReply_ExtIEsCls extensionValue;
} SztProtExtnField_SONInformReply_ExtIEs;

typedef struct s1apProtExtnCont_SONInformReply_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_SONInformReply_ExtIEs *member;
}SztProtExtnCont_SONInformReply_ExtIEs;

typedef struct s1apSONInformReply
{
   TknPres pres;
   SztX2TNLConfigInfo x2TNLConfigInfo;
   SztProtExtnCont_SONInformReply_ExtIEs iE_Extns;
} SztSONInformReply;

typedef struct s1apSONInform
{
   TknU8 choice;
   union {
      SztSONInformRqst sONInformRqst;
      SztSONInformReply sONInformReply;
   } val;
} SztSONInform;

typedef struct s1ap_ExtnTgeteNB_ID_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnTgeteNB_ID_ExtIEsCls;
typedef struct s1apProtExtnField_TgeteNB_ID_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnTgeteNB_ID_ExtIEsCls extensionValue;
} SztProtExtnField_TgeteNB_ID_ExtIEs;

typedef struct s1apProtExtnCont_TgeteNB_ID_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_TgeteNB_ID_ExtIEs *member;
}SztProtExtnCont_TgeteNB_ID_ExtIEs;

typedef struct s1apTgeteNB_ID
{
   TknPres pres;
   SztGlobal_ENB_ID global_ENB_ID;
   SztTAI selected_TAI;
   SztProtExtnCont_TgeteNB_ID_ExtIEs iE_Extns;
} SztTgeteNB_ID;

typedef struct s1ap_ExtnSrceNB_ID_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnSrceNB_ID_ExtIEsCls;
typedef struct s1apProtExtnField_SrceNB_ID_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnSrceNB_ID_ExtIEsCls extensionValue;
} SztProtExtnField_SrceNB_ID_ExtIEs;

typedef struct s1apProtExtnCont_SrceNB_ID_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_SrceNB_ID_ExtIEs *member;
}SztProtExtnCont_SrceNB_ID_ExtIEs;

typedef struct s1apSrceNB_ID
{
   TknPres pres;
   SztGlobal_ENB_ID global_ENB_ID;
   SztTAI selected_TAI;
   SztProtExtnCont_SrceNB_ID_ExtIEs iE_Extns;
} SztSrceNB_ID;

typedef struct s1ap_ExtnSONConfigTfr_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnSONConfigTfr_ExtIEsCls;
typedef struct s1apProtExtnField_SONConfigTfr_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnSONConfigTfr_ExtIEsCls extensionValue;
} SztProtExtnField_SONConfigTfr_ExtIEs;

typedef struct s1apProtExtnCont_SONConfigTfr_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_SONConfigTfr_ExtIEs *member;
}SztProtExtnCont_SONConfigTfr_ExtIEs;

typedef struct s1apSONConfigTfr
{
   TknPres pres;
   SztTgeteNB_ID targeteNB_ID;
   SztSrceNB_ID sourceeNB_ID;
   SztSONInform sONInform;
   SztProtExtnCont_SONConfigTfr_ExtIEs iE_Extns;
} SztSONConfigTfr;


typedef TknStrOSXL SztSrc_ToTget_TprntCont;

typedef TknStrOSXL SztSrcBSS_ToTgetBSS_TprntCont;

typedef enum enumSztSRVCCOperationPossible
{
   SztSRVCCOperationPossiblepossibleEnum
} EnumSztSRVCCOperationPossible;
typedef TknU32 SztSRVCCOperationPossible;


typedef enum enumSztSRVCCHOInd
{
   SztSRVCCHOIndpSandCSEnum,
   SztSRVCCHOIndcSonlyEnum
} EnumSztSRVCCHOInd;
typedef TknU32 SztSRVCCHOInd;


typedef TknU32 SztSubscriberProfileIDforRFP;

typedef struct s1apUE_HistoryInform
{
   TknU16 noComp;
   SztLastVisitedCell_Item *member;
}SztUE_HistoryInform;

typedef struct s1ap_ExtnSrceNB_ToTgeteNB_TprntCont_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnSrceNB_ToTgeteNB_TprntCont_ExtIEsCls;
typedef struct s1apProtExtnField_SrceNB_ToTgeteNB_TprntCont_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnSrceNB_ToTgeteNB_TprntCont_ExtIEsCls extensionValue;
} SztProtExtnField_SrceNB_ToTgeteNB_TprntCont_ExtIEs;

typedef struct s1apProtExtnCont_SrceNB_ToTgeteNB_TprntCont_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_SrceNB_ToTgeteNB_TprntCont_ExtIEs *member;
}SztProtExtnCont_SrceNB_ToTgeteNB_TprntCont_ExtIEs;

typedef struct s1apSrceNB_ToTgeteNB_TprntCont
{
   TknPres pres;
   SztRRC_Cont rRC_Cont;
   SztE_RABInformLst e_RABInformLst;
   SztEUTRAN_CGI targetCell_ID;
   SztSubscriberProfileIDforRFP subscriberProfileIDforRFP;
   SztUE_HistoryInform uE_HistoryInform;
   SztProtExtnCont_SrceNB_ToTgeteNB_TprntCont_ExtIEs iE_Extns;
} SztSrceNB_ToTgeteNB_TprntCont;


typedef TknStrOSXL SztSrcRNC_ToTgetRNC_TprntCont;
typedef struct s1apSrvdPLMNs
{
   TknU16 noComp;
   SztPLMNidentity *member;
}SztSrvdPLMNs;

typedef struct s1apSrvdGroupIDs
{
   TknU16 noComp;
   SztMME_Group_ID *member;
}SztSrvdGroupIDs;

typedef struct s1apSrvdMMECs
{
   TknU16 noComp;
   SztMME_Code *member;
}SztSrvdMMECs;

typedef struct s1ap_ExtnSrvdGUMMEIsItem_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnSrvdGUMMEIsItem_ExtIEsCls;
typedef struct s1apProtExtnField_SrvdGUMMEIsItem_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnSrvdGUMMEIsItem_ExtIEsCls extensionValue;
} SztProtExtnField_SrvdGUMMEIsItem_ExtIEs;

typedef struct s1apProtExtnCont_SrvdGUMMEIsItem_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_SrvdGUMMEIsItem_ExtIEs *member;
}SztProtExtnCont_SrvdGUMMEIsItem_ExtIEs;

typedef struct s1apSrvdGUMMEIsItem
{
   TknPres pres;
   SztSrvdPLMNs servedPLMNs;
   SztSrvdGroupIDs servedGroupIDs;
   SztSrvdMMECs servedMMECs;
   SztProtExtnCont_SrvdGUMMEIsItem_ExtIEs iE_Extns;
} SztSrvdGUMMEIsItem;

typedef struct s1apSrvdGUMMEIs
{
   TknU16 noComp;
   SztSrvdGUMMEIsItem *member;
}SztSrvdGUMMEIs;

typedef struct s1ap_ExtnSuppTAs_Item_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnSuppTAs_Item_ExtIEsCls;
typedef struct s1apProtExtnField_SuppTAs_Item_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnSuppTAs_Item_ExtIEsCls extensionValue;
} SztProtExtnField_SuppTAs_Item_ExtIEs;

typedef struct s1apProtExtnCont_SuppTAs_Item_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_SuppTAs_Item_ExtIEs *member;
}SztProtExtnCont_SuppTAs_Item_ExtIEs;

typedef struct s1apSuppTAs_Item
{
   TknPres pres;
   SztTAC tAC;
   SztBPLMNs broadcastPLMNs;
   SztProtExtnCont_SuppTAs_Item_ExtIEs iE_Extns;
} SztSuppTAs_Item;

typedef struct s1apSuppTAs
{
   TknU16 noComp;
   SztSuppTAs_Item *member;
}SztSuppTAs;

typedef struct s1ap_ExtnS_TMSI_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnS_TMSI_ExtIEsCls;
typedef struct s1apProtExtnField_S_TMSI_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnS_TMSI_ExtIEsCls extensionValue;
} SztProtExtnField_S_TMSI_ExtIEs;

typedef struct s1apProtExtnCont_S_TMSI_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_S_TMSI_ExtIEs *member;
}SztProtExtnCont_S_TMSI_ExtIEs;

typedef struct s1apS_TMSI
{
   TknPres pres;
   SztMME_Code mMEC;
   SztM_TMSI m_TMSI;
   SztProtExtnCont_S_TMSI_ExtIEs iE_Extns;
} SztS_TMSI;

typedef struct s1apTAILstforWarning
{
   TknU16 noComp;
   SztTAI *member;
}SztTAILstforWarning;

typedef struct s1apTgetID
{
   TknU8 choice;
   union {
      SztTgeteNB_ID targeteNB_ID;
      SztTgetRNC_ID targetRNC_ID;
      SztCGI cGI;
   } val;
} SztTgetID;

typedef struct s1ap_ExtnTgeteNB_ToSrceNB_TprntCont_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnTgeteNB_ToSrceNB_TprntCont_ExtIEsCls;
typedef struct s1apProtExtnField_TgeteNB_ToSrceNB_TprntCont_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnTgeteNB_ToSrceNB_TprntCont_ExtIEsCls extensionValue;
} SztProtExtnField_TgeteNB_ToSrceNB_TprntCont_ExtIEs;

typedef struct s1apProtExtnCont_TgeteNB_ToSrceNB_TprntCont_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_TgeteNB_ToSrceNB_TprntCont_ExtIEs *member;
}SztProtExtnCont_TgeteNB_ToSrceNB_TprntCont_ExtIEs;

typedef struct s1apTgeteNB_ToSrceNB_TprntCont
{
   TknPres pres;
   SztRRC_Cont rRC_Cont;
   SztProtExtnCont_TgeteNB_ToSrceNB_TprntCont_ExtIEs iE_Extns;
} SztTgeteNB_ToSrceNB_TprntCont;


typedef TknStrOSXL SztTget_ToSrc_TprntCont;

typedef TknStrOSXL SztTgetRNC_ToSrcRNC_TprntCont;

typedef TknStrOSXL SztTgetBSS_ToSrcBSS_TprntCont;

typedef enum enumSztTimeToWait
{
   SztTimeToWaitv1sEnum,
   SztTimeToWaitv2sEnum,
   SztTimeToWaitv5sEnum,
   SztTimeToWaitv10sEnum,
   SztTimeToWaitv20sEnum,
   SztTimeToWaitv60sEnum
} EnumSztTimeToWait;
typedef TknU32 SztTimeToWait;


typedef TknStrOSXL SztE_UTRAN_Trace_ID;

typedef enum enumSztTraceDepth
{
   SztTraceDepthminimumEnum,
   SztTraceDepthmediumEnum,
   SztTraceDepthmaximumEnum,
   SztTraceDepthminimumWithoutVendorSpecificExtnEnum,
   SztTraceDepthmediumWithoutVendorSpecificExtnEnum,
   SztTraceDepthmaximumWithoutVendorSpecificExtnEnum
} EnumSztTraceDepth;
typedef TknU32 SztTraceDepth;

typedef struct s1ap_ExtnTraceActvn_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnTraceActvn_ExtIEsCls;
typedef struct s1apProtExtnField_TraceActvn_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnTraceActvn_ExtIEsCls extensionValue;
} SztProtExtnField_TraceActvn_ExtIEs;

typedef struct s1apProtExtnCont_TraceActvn_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_TraceActvn_ExtIEs *member;
}SztProtExtnCont_TraceActvn_ExtIEs;

typedef struct s1apTraceActvn
{
   TknPres pres;
   SztE_UTRAN_Trace_ID e_UTRAN_Trace_ID;
   SztIntfsToTrace interfacesToTrace;
   SztTraceDepth traceDepth;
   SztTportLyrAddr traceCollectionEntityIPAddr;
   SztProtExtnCont_TraceActvn_ExtIEs iE_Extns;
} SztTraceActvn;

typedef struct s1ap_ExtnUEAgg_MaxBitrates_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnUEAgg_MaxBitrates_ExtIEsCls;
typedef struct s1apProtExtnField_UEAgg_MaxBitrates_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnUEAgg_MaxBitrates_ExtIEsCls extensionValue;
} SztProtExtnField_UEAgg_MaxBitrates_ExtIEs;

typedef struct s1apProtExtnCont_UEAgg_MaxBitrates_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_UEAgg_MaxBitrates_ExtIEs *member;
}SztProtExtnCont_UEAgg_MaxBitrates_ExtIEs;

typedef struct s1apUEAggMaxBitrate
{
   TknPres pres;
   SztBitRate uEaggregateMaxBitRateDL;
   SztBitRate uEaggregateMaxBitRateUL;
   SztProtExtnCont_UEAgg_MaxBitrates_ExtIEs iE_Extns;
} SztUEAggMaxBitrate;

typedef struct s1ap_ExtnUE_S1AP_ID_pair_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnUE_S1AP_ID_pair_ExtIEsCls;
typedef struct s1apProtExtnField_UE_S1AP_ID_pair_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnUE_S1AP_ID_pair_ExtIEsCls extensionValue;
} SztProtExtnField_UE_S1AP_ID_pair_ExtIEs;

typedef struct s1apProtExtnCont_UE_S1AP_ID_pair_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_UE_S1AP_ID_pair_ExtIEs *member;
}SztProtExtnCont_UE_S1AP_ID_pair_ExtIEs;

typedef struct s1apUE_S1AP_ID_pair
{
   TknPres pres;
   SztMME_UE_S1AP_ID mME_UE_S1AP_ID;
   SztENB_UE_S1AP_ID eNB_UE_S1AP_ID;
   SztProtExtnCont_UE_S1AP_ID_pair_ExtIEs iE_Extns;
} SztUE_S1AP_ID_pair;

typedef struct s1apUE_S1AP_IDs
{
   TknU8 choice;
   union {
      SztUE_S1AP_ID_pair uE_S1AP_ID_pair;
      SztMME_UE_S1AP_ID mME_UE_S1AP_ID;
   } val;
} SztUE_S1AP_IDs;

typedef struct s1ap_ExtnUE_assocLogS1_ConItemExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnUE_assocLogS1_ConItemExtIEsCls;
typedef struct s1apProtExtnField_UE_assocLogS1_ConItemExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnUE_assocLogS1_ConItemExtIEsCls extensionValue;
} SztProtExtnField_UE_assocLogS1_ConItemExtIEs;

typedef struct s1apProtExtnCont_UE_assocLogS1_ConItemExtIEs
{
   TknU16 noComp;
   SztProtExtnField_UE_assocLogS1_ConItemExtIEs *member;
}SztProtExtnCont_UE_assocLogS1_ConItemExtIEs;

typedef struct s1apUE_assocLogS1_ConItem
{
   TknPres pres;
   SztMME_UE_S1AP_ID mME_UE_S1AP_ID;
   SztENB_UE_S1AP_ID eNB_UE_S1AP_ID;
   SztProtExtnCont_UE_assocLogS1_ConItemExtIEs iE_Extns;
} SztUE_assocLogS1_ConItem;


typedef TknBStr32 SztUEIdentityIdxValue;
typedef struct s1apUEPagID
{
   TknU8 choice;
   union {
      SztS_TMSI s_TMSI;
      SztIMSI iMSI;
   } val;
} SztUEPagID;


typedef TknStrOSXL SztUERadioCapblty;
typedef struct s1ap_ExtnUESecurCapabilities_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnUESecurCapabilities_ExtIEsCls;
typedef struct s1apProtExtnField_UESecurCapabilities_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnUESecurCapabilities_ExtIEsCls extensionValue;
} SztProtExtnField_UESecurCapabilities_ExtIEs;

typedef struct s1apProtExtnCont_UESecurCapabilities_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_UESecurCapabilities_ExtIEs *member;
}SztProtExtnCont_UESecurCapabilities_ExtIEs;

typedef struct s1apUESecurCapabilities
{
   TknPres pres;
   SztEncryptionAlgorithms encryptionAlgorithms;
   SztIntegrityProtectionAlgorithms integrityProtectionAlgorithms;
   SztProtExtnCont_UESecurCapabilities_ExtIEs iE_Extns;
} SztUESecurCapabilities;

typedef struct s1apWarningAreaLst
{
   TknU8 choice;
   union {
      SztECGILst cellIDLst;
      SztTAILstforWarning trackingAreaLstforWarning;
      SztEmergencyAreaIDLst emergencyAreaIDLst;
   } val;
} SztWarningAreaLst;


typedef TknStr4 SztWarningTyp;

typedef TknStrOSXL SztWarningSecurInfo;

typedef TknStrOSXL SztWarningMsgContents;
typedef struct s1ap_ValueHovrReqdIEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztHovrTyp sztHovrTyp;
      SztCause sztCause;
      SztTgetID sztTgetID;
      SztDirect_Fwding_Path_Avlblty sztDirect_Fwding_Path_Avlblty;
      SztSRVCCHOInd sztSRVCCHOInd;
      SztSrc_ToTget_TprntCont sztSrc_ToTget_TprntCont;
      SztSrc_ToTget_TprntCont sztSrc_ToTget_TprntCont_Secondary;
      SztMSClassmark2 sztMSClassmark2;
      SztMSClassmark3 sztMSClassmark3;
      SztCSG_Id sztCSG_Id;
      SztCellAccessMode sztCellAccessMode;
      SztPS_ServiceNotAvailable sztPS_ServiceNotAvailable;
   } u;
} Szt_ValueHovrReqdIEsCls;
typedef struct s1apProtIE_Field_HovrReqdIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueHovrReqdIEsCls value;
} SztProtIE_Field_HovrReqdIEs;

typedef struct s1apProtIE_Cont_HovrReqdIEs
{
   TknU16 noComp;
   SztProtIE_Field_HovrReqdIEs *member;
}SztProtIE_Cont_HovrReqdIEs;

typedef struct s1apHovrReqd
{
   TknPres pres;
   SztProtIE_Cont_HovrReqdIEs protocolIEs;
} SztHovrReqd;

typedef struct s1ap_ExtnE_RABDataFwdingItem_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnE_RABDataFwdingItem_ExtIEsCls;
typedef struct s1apProtExtnField_E_RABDataFwdingItem_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnE_RABDataFwdingItem_ExtIEsCls extensionValue;
} SztProtExtnField_E_RABDataFwdingItem_ExtIEs;

typedef struct s1apProtExtnCont_E_RABDataFwdingItem_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_E_RABDataFwdingItem_ExtIEs *member;
}SztProtExtnCont_E_RABDataFwdingItem_ExtIEs;

typedef struct s1apE_RABDataFwdingItem
{
   TknPres pres;
   SztE_RAB_ID e_RAB_ID;
   SztTportLyrAddr dL_transportLyrAddr;
   SztGTP_TEID dL_gTP_TEID;
   SztTportLyrAddr uL_TportLyrAddr;
   SztGTP_TEID uL_GTP_TEID;
   SztProtExtnCont_E_RABDataFwdingItem_ExtIEs iE_Extns;
} SztE_RABDataFwdingItem;

typedef struct s1ap_ValueE_RABDataFwdingItemIEsCls{
   union {
      SztE_RABDataFwdingItem sztE_RABDataFwdingItem;
   } u;
} Szt_ValueE_RABDataFwdingItemIEsCls;
typedef struct s1apProtIE_Field_E_RABDataFwdingItemIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueE_RABDataFwdingItemIEsCls value;
} SztProtIE_Field_E_RABDataFwdingItemIEs;


typedef SztProtIE_Field_E_RABDataFwdingItemIEs SztProtIE_SingleCont_E_RABDataFwdingItemIEs;
typedef struct s1apProtIE_ContLst_E_RABDataFwdingItemIEs
{
   TknU16 noComp;
   SztProtIE_SingleCont_E_RABDataFwdingItemIEs *member;
}SztProtIE_ContLst_E_RABDataFwdingItemIEs;


typedef SztProtIE_ContLst_E_RABDataFwdingItemIEs SztE_RAB_IE_ContLst_E_RABDataFwdingItemIEs;

typedef SztE_RAB_IE_ContLst_E_RABDataFwdingItemIEs SztE_RABSubjtoDataFwdingLst;
typedef struct s1ap_ValueHovrCmmdIEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztHovrTyp sztHovrTyp;
      SztNASSecurParamsfromE_UTRAN sztNASSecurParamsfromE_UTRAN;
      SztE_RABSubjtoDataFwdingLst sztE_RABSubjtoDataFwdingLst;
      SztE_RABLst sztE_RABLst;
      SztTget_ToSrc_TprntCont sztTget_ToSrc_TprntCont;
      SztTget_ToSrc_TprntCont sztTget_ToSrc_TprntCont_Secondary;
      SztCriticalityDiag sztCriticalityDiag;
   } u;
} Szt_ValueHovrCmmdIEsCls;
typedef struct s1apProtIE_Field_HovrCmmdIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueHovrCmmdIEsCls value;
} SztProtIE_Field_HovrCmmdIEs;

typedef struct s1apProtIE_Cont_HovrCmmdIEs
{
   TknU16 noComp;
   SztProtIE_Field_HovrCmmdIEs *member;
}SztProtIE_Cont_HovrCmmdIEs;

typedef struct s1apHovrCmmd
{
   TknPres pres;
   SztProtIE_Cont_HovrCmmdIEs protocolIEs;
} SztHovrCmmd;

typedef struct s1ap_ValueHovrPrepFailIEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztCause sztCause;
      SztCriticalityDiag sztCriticalityDiag;
   } u;
} Szt_ValueHovrPrepFailIEsCls;
typedef struct s1apProtIE_Field_HovrPrepFailIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueHovrPrepFailIEsCls value;
} SztProtIE_Field_HovrPrepFailIEs;

typedef struct s1apProtIE_Cont_HovrPrepFailIEs
{
   TknU16 noComp;
   SztProtIE_Field_HovrPrepFailIEs *member;
}SztProtIE_Cont_HovrPrepFailIEs;

typedef struct s1apHovrPrepFail
{
   TknPres pres;
   SztProtIE_Cont_HovrPrepFailIEs protocolIEs;
} SztHovrPrepFail;

typedef struct s1ap_ExtnE_RABToBeSetupItemHOReq_ExtIEsCls{
   union {
      SztData_Fwding_Not_Possible sztData_Fwding_Not_Possible;
   } u;
} Szt_ExtnE_RABToBeSetupItemHOReq_ExtIEsCls;
typedef struct s1apProtExtnField_E_RABToBeSetupItemHOReq_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnE_RABToBeSetupItemHOReq_ExtIEsCls extensionValue;
} SztProtExtnField_E_RABToBeSetupItemHOReq_ExtIEs;

typedef struct s1apProtExtnCont_E_RABToBeSetupItemHOReq_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_E_RABToBeSetupItemHOReq_ExtIEs *member;
}SztProtExtnCont_E_RABToBeSetupItemHOReq_ExtIEs;

typedef struct s1apE_RABToBeSetupItemHOReq
{
   TknPres pres;
   SztE_RAB_ID e_RAB_ID;
   SztTportLyrAddr transportLyrAddr;
   SztGTP_TEID gTP_TEID;
   SztE_RABLvlQoSParams e_RABlevelQosParams;
   SztProtExtnCont_E_RABToBeSetupItemHOReq_ExtIEs iE_Extns;
} SztE_RABToBeSetupItemHOReq;

typedef struct s1ap_ValueE_RABToBeSetupItemHOReqIEsCls{
   union {
      SztE_RABToBeSetupItemHOReq sztE_RABToBeSetupItemHOReq;
   } u;
} Szt_ValueE_RABToBeSetupItemHOReqIEsCls;
typedef struct s1apProtIE_Field_E_RABToBeSetupItemHOReqIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueE_RABToBeSetupItemHOReqIEsCls value;
} SztProtIE_Field_E_RABToBeSetupItemHOReqIEs;


typedef SztProtIE_Field_E_RABToBeSetupItemHOReqIEs SztProtIE_SingleCont_E_RABToBeSetupItemHOReqIEs;
typedef struct s1apProtIE_ContLst_E_RABToBeSetupItemHOReqIEs
{
   TknU16 noComp;
   SztProtIE_SingleCont_E_RABToBeSetupItemHOReqIEs *member;
}SztProtIE_ContLst_E_RABToBeSetupItemHOReqIEs;


typedef SztProtIE_ContLst_E_RABToBeSetupItemHOReqIEs SztE_RAB_IE_ContLst_E_RABToBeSetupItemHOReqIEs;

typedef SztE_RAB_IE_ContLst_E_RABToBeSetupItemHOReqIEs SztE_RABToBeSetupLstHOReq;
typedef struct s1ap_ValueHovrRqstIEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztHovrTyp sztHovrTyp;
      SztCause sztCause;
      SztUEAggMaxBitrate sztUEAggMaxBitrate;
      SztE_RABToBeSetupLstHOReq sztE_RABToBeSetupLstHOReq;
      SztSrc_ToTget_TprntCont sztSrc_ToTget_TprntCont;
      SztUESecurCapabilities sztUESecurCapabilities;
      SztHovrRestrnLst sztHovrRestrnLst;
      SztTraceActvn sztTraceActvn;
      SztRqstTyp sztRqstTyp;
      SztSRVCCOperationPossible sztSRVCCOperationPossible;
      SztSecurCntxt sztSecurCntxt;
      SztNASSecurParamstoE_UTRAN sztNASSecurParamstoE_UTRAN;
      SztCSG_Id sztCSG_Id;
      SztCSGMembershipStatus sztCSGMembershipStatus;
      SztGUMMEI sztGUMMEI;
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID_2;
   } u;
} Szt_ValueHovrRqstIEsCls;
typedef struct s1apProtIE_Field_HovrRqstIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueHovrRqstIEsCls value;
} SztProtIE_Field_HovrRqstIEs;

typedef struct s1apProtIE_Cont_HovrRqstIEs
{
   TknU16 noComp;
   SztProtIE_Field_HovrRqstIEs *member;
}SztProtIE_Cont_HovrRqstIEs;

typedef struct s1apHovrRqst
{
   TknPres pres;
   SztProtIE_Cont_HovrRqstIEs protocolIEs;
} SztHovrRqst;

typedef struct s1ap_ExtnE_RABAdmtdItem_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnE_RABAdmtdItem_ExtIEsCls;
typedef struct s1apProtExtnField_E_RABAdmtdItem_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnE_RABAdmtdItem_ExtIEsCls extensionValue;
} SztProtExtnField_E_RABAdmtdItem_ExtIEs;

typedef struct s1apProtExtnCont_E_RABAdmtdItem_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_E_RABAdmtdItem_ExtIEs *member;
}SztProtExtnCont_E_RABAdmtdItem_ExtIEs;

typedef struct s1apE_RABAdmtdItem
{
   TknPres pres;
   SztE_RAB_ID e_RAB_ID;
   SztTportLyrAddr transportLyrAddr;
   SztGTP_TEID gTP_TEID;
   SztTportLyrAddr dL_transportLyrAddr;
   SztGTP_TEID dL_gTP_TEID;
   SztTportLyrAddr uL_TportLyrAddr;
   SztGTP_TEID uL_GTP_TEID;
   SztProtExtnCont_E_RABAdmtdItem_ExtIEs iE_Extns;
} SztE_RABAdmtdItem;

typedef struct s1ap_ValueE_RABAdmtdItemIEsCls{
   union {
      SztE_RABAdmtdItem sztE_RABAdmtdItem;
   } u;
} Szt_ValueE_RABAdmtdItemIEsCls;
typedef struct s1apProtIE_Field_E_RABAdmtdItemIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueE_RABAdmtdItemIEsCls value;
} SztProtIE_Field_E_RABAdmtdItemIEs;


typedef SztProtIE_Field_E_RABAdmtdItemIEs SztProtIE_SingleCont_E_RABAdmtdItemIEs;
typedef struct s1apProtIE_ContLst_E_RABAdmtdItemIEs
{
   TknU16 noComp;
   SztProtIE_SingleCont_E_RABAdmtdItemIEs *member;
}SztProtIE_ContLst_E_RABAdmtdItemIEs;


typedef SztProtIE_ContLst_E_RABAdmtdItemIEs SztE_RAB_IE_ContLst_E_RABAdmtdItemIEs;

typedef SztE_RAB_IE_ContLst_E_RABAdmtdItemIEs SztE_RABAdmtdLst;
typedef struct s1ap_ExtnE_RABFailedToSetupItemHOReqAckExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnE_RABFailedToSetupItemHOReqAckExtIEsCls;
typedef struct s1apProtExtnField_E_RABFailedToSetupItemHOReqAckExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnE_RABFailedToSetupItemHOReqAckExtIEsCls extensionValue;
} SztProtExtnField_E_RABFailedToSetupItemHOReqAckExtIEs;

typedef struct s1apProtExtnCont_E_RABFailedToSetupItemHOReqAckExtIEs
{
   TknU16 noComp;
   SztProtExtnField_E_RABFailedToSetupItemHOReqAckExtIEs *member;
}SztProtExtnCont_E_RABFailedToSetupItemHOReqAckExtIEs;

typedef struct s1apE_RABFailedToSetupItemHOReqAck
{
   TknPres pres;
   SztE_RAB_ID e_RAB_ID;
   SztCause cause;
   SztProtExtnCont_E_RABFailedToSetupItemHOReqAckExtIEs iE_Extns;
} SztE_RABFailedToSetupItemHOReqAck;

typedef struct s1ap_ValueE_RABFailedtoSetupItemHOReqAckIEsCls{
   union {
      SztE_RABFailedToSetupItemHOReqAck sztE_RABFailedToSetupItemHOReqAck;
   } u;
} Szt_ValueE_RABFailedtoSetupItemHOReqAckIEsCls;
typedef struct s1apProtIE_Field_E_RABFailedtoSetupItemHOReqAckIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueE_RABFailedtoSetupItemHOReqAckIEsCls value;
} SztProtIE_Field_E_RABFailedtoSetupItemHOReqAckIEs;


typedef SztProtIE_Field_E_RABFailedtoSetupItemHOReqAckIEs SztProtIE_SingleCont_E_RABFailedtoSetupItemHOReqAckIEs;
typedef struct s1apProtIE_ContLst_E_RABFailedtoSetupItemHOReqAckIEs
{
   TknU16 noComp;
   SztProtIE_SingleCont_E_RABFailedtoSetupItemHOReqAckIEs *member;
}SztProtIE_ContLst_E_RABFailedtoSetupItemHOReqAckIEs;


typedef SztProtIE_ContLst_E_RABFailedtoSetupItemHOReqAckIEs SztE_RAB_IE_ContLst_E_RABFailedtoSetupItemHOReqAckIEs;

typedef SztE_RAB_IE_ContLst_E_RABFailedtoSetupItemHOReqAckIEs SztE_RABFailedtoSetupLstHOReqAck;
typedef struct s1ap_ValueHovrRqstAckgIEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztE_RABAdmtdLst sztE_RABAdmtdLst;
      SztE_RABFailedtoSetupLstHOReqAck sztE_RABFailedtoSetupLstHOReqAck;
      SztTget_ToSrc_TprntCont sztTget_ToSrc_TprntCont;
      SztCSG_Id sztCSG_Id;
      SztCriticalityDiag sztCriticalityDiag;
   } u;
} Szt_ValueHovrRqstAckgIEsCls;
typedef struct s1apProtIE_Field_HovrRqstAckgIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueHovrRqstAckgIEsCls value;
} SztProtIE_Field_HovrRqstAckgIEs;

typedef struct s1apProtIE_Cont_HovrRqstAckgIEs
{
   TknU16 noComp;
   SztProtIE_Field_HovrRqstAckgIEs *member;
}SztProtIE_Cont_HovrRqstAckgIEs;

typedef struct s1apHovrRqstAckg
{
   TknPres pres;
   SztProtIE_Cont_HovrRqstAckgIEs protocolIEs;
} SztHovrRqstAckg;

typedef struct s1ap_ValueHovrFailIEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztCause sztCause;
      SztCriticalityDiag sztCriticalityDiag;
   } u;
} Szt_ValueHovrFailIEsCls;
typedef struct s1apProtIE_Field_HovrFailIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueHovrFailIEsCls value;
} SztProtIE_Field_HovrFailIEs;

typedef struct s1apProtIE_Cont_HovrFailIEs
{
   TknU16 noComp;
   SztProtIE_Field_HovrFailIEs *member;
}SztProtIE_Cont_HovrFailIEs;

typedef struct s1apHovrFail
{
   TknPres pres;
   SztProtIE_Cont_HovrFailIEs protocolIEs;
} SztHovrFail;

typedef struct s1ap_ValueHovrNtfyIEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztEUTRAN_CGI sztEUTRAN_CGI;
      SztTAI sztTAI;
   } u;
} Szt_ValueHovrNtfyIEsCls;
typedef struct s1apProtIE_Field_HovrNtfyIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueHovrNtfyIEsCls value;
} SztProtIE_Field_HovrNtfyIEs;

typedef struct s1apProtIE_Cont_HovrNtfyIEs
{
   TknU16 noComp;
   SztProtIE_Field_HovrNtfyIEs *member;
}SztProtIE_Cont_HovrNtfyIEs;

typedef struct s1apHovrNtfy
{
   TknPres pres;
   SztProtIE_Cont_HovrNtfyIEs protocolIEs;
} SztHovrNtfy;

typedef struct s1ap_ExtnE_RABToBeSwedDLItem_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnE_RABToBeSwedDLItem_ExtIEsCls;
typedef struct s1apProtExtnField_E_RABToBeSwedDLItem_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnE_RABToBeSwedDLItem_ExtIEsCls extensionValue;
} SztProtExtnField_E_RABToBeSwedDLItem_ExtIEs;

typedef struct s1apProtExtnCont_E_RABToBeSwedDLItem_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_E_RABToBeSwedDLItem_ExtIEs *member;
}SztProtExtnCont_E_RABToBeSwedDLItem_ExtIEs;

typedef struct s1apE_RABToBeSwedDLItem
{
   TknPres pres;
   SztE_RAB_ID e_RAB_ID;
   SztTportLyrAddr transportLyrAddr;
   SztGTP_TEID gTP_TEID;
   SztProtExtnCont_E_RABToBeSwedDLItem_ExtIEs iE_Extns;
} SztE_RABToBeSwedDLItem;

typedef struct s1ap_ValueE_RABToBeSwedDLItemIEsCls{
   union {
      SztE_RABToBeSwedDLItem sztE_RABToBeSwedDLItem;
   } u;
} Szt_ValueE_RABToBeSwedDLItemIEsCls;
typedef struct s1apProtIE_Field_E_RABToBeSwedDLItemIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueE_RABToBeSwedDLItemIEsCls value;
} SztProtIE_Field_E_RABToBeSwedDLItemIEs;


typedef SztProtIE_Field_E_RABToBeSwedDLItemIEs SztProtIE_SingleCont_E_RABToBeSwedDLItemIEs;
typedef struct s1apProtIE_ContLst_E_RABToBeSwedDLItemIEs
{
   TknU16 noComp;
   SztProtIE_SingleCont_E_RABToBeSwedDLItemIEs *member;
}SztProtIE_ContLst_E_RABToBeSwedDLItemIEs;


typedef SztProtIE_ContLst_E_RABToBeSwedDLItemIEs SztE_RAB_IE_ContLst_E_RABToBeSwedDLItemIEs;

typedef SztE_RAB_IE_ContLst_E_RABToBeSwedDLItemIEs SztE_RABToBeSwedDLLst;
typedef struct s1ap_ValuePathSwRqstIEsCls{
   union {
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztE_RABToBeSwedDLLst sztE_RABToBeSwedDLLst;
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztEUTRAN_CGI sztEUTRAN_CGI;
      SztTAI sztTAI;
      SztUESecurCapabilities sztUESecurCapabilities;
      SztGUMMEI sztGUMMEI;
   } u;
} Szt_ValuePathSwRqstIEsCls;
typedef struct s1apProtIE_Field_PathSwRqstIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValuePathSwRqstIEsCls value;
} SztProtIE_Field_PathSwRqstIEs;

typedef struct s1apProtIE_Cont_PathSwRqstIEs
{
   TknU16 noComp;
   SztProtIE_Field_PathSwRqstIEs *member;
}SztProtIE_Cont_PathSwRqstIEs;

typedef struct s1apPathSwRqst
{
   TknPres pres;
   SztProtIE_Cont_PathSwRqstIEs protocolIEs;
} SztPathSwRqst;

typedef struct s1ap_ExtnE_RABToBeSwedULItem_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnE_RABToBeSwedULItem_ExtIEsCls;
typedef struct s1apProtExtnField_E_RABToBeSwedULItem_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnE_RABToBeSwedULItem_ExtIEsCls extensionValue;
} SztProtExtnField_E_RABToBeSwedULItem_ExtIEs;

typedef struct s1apProtExtnCont_E_RABToBeSwedULItem_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_E_RABToBeSwedULItem_ExtIEs *member;
}SztProtExtnCont_E_RABToBeSwedULItem_ExtIEs;

typedef struct s1apE_RABToBeSwedULItem
{
   TknPres pres;
   SztE_RAB_ID e_RAB_ID;
   SztTportLyrAddr transportLyrAddr;
   SztGTP_TEID gTP_TEID;
   SztProtExtnCont_E_RABToBeSwedULItem_ExtIEs iE_Extns;
} SztE_RABToBeSwedULItem;

typedef struct s1ap_ValueE_RABToBeSwedULItemIEsCls{
   union {
      SztE_RABToBeSwedULItem sztE_RABToBeSwedULItem;
   } u;
} Szt_ValueE_RABToBeSwedULItemIEsCls;
typedef struct s1apProtIE_Field_E_RABToBeSwedULItemIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueE_RABToBeSwedULItemIEsCls value;
} SztProtIE_Field_E_RABToBeSwedULItemIEs;


typedef SztProtIE_Field_E_RABToBeSwedULItemIEs SztProtIE_SingleCont_E_RABToBeSwedULItemIEs;
typedef struct s1apProtIE_ContLst_E_RABToBeSwedULItemIEs
{
   TknU16 noComp;
   SztProtIE_SingleCont_E_RABToBeSwedULItemIEs *member;
}SztProtIE_ContLst_E_RABToBeSwedULItemIEs;


typedef SztProtIE_ContLst_E_RABToBeSwedULItemIEs SztE_RAB_IE_ContLst_E_RABToBeSwedULItemIEs;

typedef SztE_RAB_IE_ContLst_E_RABToBeSwedULItemIEs SztE_RABToBeSwedULLst;
typedef struct s1ap_ValuePathSwRqstAckgIEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztUEAggMaxBitrate sztUEAggMaxBitrate;
      SztE_RABToBeSwedULLst sztE_RABToBeSwedULLst;
      SztE_RABLst sztE_RABLst;
      SztSecurCntxt sztSecurCntxt;
      SztCriticalityDiag sztCriticalityDiag;
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID_2;
   } u;
} Szt_ValuePathSwRqstAckgIEsCls;
typedef struct s1apProtIE_Field_PathSwRqstAckgIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValuePathSwRqstAckgIEsCls value;
} SztProtIE_Field_PathSwRqstAckgIEs;

typedef struct s1apProtIE_Cont_PathSwRqstAckgIEs
{
   TknU16 noComp;
   SztProtIE_Field_PathSwRqstAckgIEs *member;
}SztProtIE_Cont_PathSwRqstAckgIEs;

typedef struct s1apPathSwRqstAckg
{
   TknPres pres;
   SztProtIE_Cont_PathSwRqstAckgIEs protocolIEs;
} SztPathSwRqstAckg;

typedef struct s1ap_ValuePathSwRqstFailIEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztCause sztCause;
      SztCriticalityDiag sztCriticalityDiag;
   } u;
} Szt_ValuePathSwRqstFailIEsCls;
typedef struct s1apProtIE_Field_PathSwRqstFailIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValuePathSwRqstFailIEsCls value;
} SztProtIE_Field_PathSwRqstFailIEs;

typedef struct s1apProtIE_Cont_PathSwRqstFailIEs
{
   TknU16 noComp;
   SztProtIE_Field_PathSwRqstFailIEs *member;
}SztProtIE_Cont_PathSwRqstFailIEs;

typedef struct s1apPathSwRqstFail
{
   TknPres pres;
   SztProtIE_Cont_PathSwRqstFailIEs protocolIEs;
} SztPathSwRqstFail;

typedef struct s1ap_ValueHovrCancelIEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztCause sztCause;
   } u;
} Szt_ValueHovrCancelIEsCls;
typedef struct s1apProtIE_Field_HovrCancelIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueHovrCancelIEsCls value;
} SztProtIE_Field_HovrCancelIEs;

typedef struct s1apProtIE_Cont_HovrCancelIEs
{
   TknU16 noComp;
   SztProtIE_Field_HovrCancelIEs *member;
}SztProtIE_Cont_HovrCancelIEs;

typedef struct s1apHovrCancel
{
   TknPres pres;
   SztProtIE_Cont_HovrCancelIEs protocolIEs;
} SztHovrCancel;

typedef struct s1ap_ValueHovrCancelAckgIEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztCriticalityDiag sztCriticalityDiag;
   } u;
} Szt_ValueHovrCancelAckgIEsCls;
typedef struct s1apProtIE_Field_HovrCancelAckgIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueHovrCancelAckgIEsCls value;
} SztProtIE_Field_HovrCancelAckgIEs;

typedef struct s1apProtIE_Cont_HovrCancelAckgIEs
{
   TknU16 noComp;
   SztProtIE_Field_HovrCancelAckgIEs *member;
}SztProtIE_Cont_HovrCancelAckgIEs;

typedef struct s1apHovrCancelAckg
{
   TknPres pres;
   SztProtIE_Cont_HovrCancelAckgIEs protocolIEs;
} SztHovrCancelAckg;

typedef struct s1ap_ExtnE_RABToBeSetupItemBrSUReqExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnE_RABToBeSetupItemBrSUReqExtIEsCls;
typedef struct s1apProtExtnField_E_RABToBeSetupItemBrSUReqExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnE_RABToBeSetupItemBrSUReqExtIEsCls extensionValue;
} SztProtExtnField_E_RABToBeSetupItemBrSUReqExtIEs;

typedef struct s1apProtExtnCont_E_RABToBeSetupItemBrSUReqExtIEs
{
   TknU16 noComp;
   SztProtExtnField_E_RABToBeSetupItemBrSUReqExtIEs *member;
}SztProtExtnCont_E_RABToBeSetupItemBrSUReqExtIEs;

typedef struct s1apE_RABToBeSetupItemBrSUReq
{
   TknPres pres;
   SztE_RAB_ID e_RAB_ID;
   SztE_RABLvlQoSParams e_RABlevelQoSParams;
   SztTportLyrAddr transportLyrAddr;
   SztGTP_TEID gTP_TEID;
   SztNAS_PDU nAS_PDU;
   SztProtExtnCont_E_RABToBeSetupItemBrSUReqExtIEs iE_Extns;
} SztE_RABToBeSetupItemBrSUReq;

typedef struct s1ap_ValueE_RABToBeSetupItemBrSUReqIEsCls{
   union {
      SztE_RABToBeSetupItemBrSUReq sztE_RABToBeSetupItemBrSUReq;
   } u;
} Szt_ValueE_RABToBeSetupItemBrSUReqIEsCls;
typedef struct s1apProtIE_Field_E_RABToBeSetupItemBrSUReqIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueE_RABToBeSetupItemBrSUReqIEsCls value;
} SztProtIE_Field_E_RABToBeSetupItemBrSUReqIEs;


typedef SztProtIE_Field_E_RABToBeSetupItemBrSUReqIEs SztProtIE_SingleCont_E_RABToBeSetupItemBrSUReqIEs;
typedef struct s1apE_RABToBeSetupLstBrSUReq
{
   TknU16 noComp;
   SztProtIE_SingleCont_E_RABToBeSetupItemBrSUReqIEs *member;
}SztE_RABToBeSetupLstBrSUReq;

typedef struct s1ap_ValueE_RABSetupRqstIEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztUEAggMaxBitrate sztUEAggMaxBitrate;
      SztE_RABToBeSetupLstBrSUReq sztE_RABToBeSetupLstBrSUReq;
   } u;
} Szt_ValueE_RABSetupRqstIEsCls;
typedef struct s1apProtIE_Field_E_RABSetupRqstIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueE_RABSetupRqstIEsCls value;
} SztProtIE_Field_E_RABSetupRqstIEs;

typedef struct s1apProtIE_Cont_E_RABSetupRqstIEs
{
   TknU16 noComp;
   SztProtIE_Field_E_RABSetupRqstIEs *member;
}SztProtIE_Cont_E_RABSetupRqstIEs;

typedef struct s1apE_RABSetupRqst
{
   TknPres pres;
   SztProtIE_Cont_E_RABSetupRqstIEs protocolIEs;
} SztE_RABSetupRqst;

typedef struct s1ap_ExtnE_RABSetupItemBrSUResExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnE_RABSetupItemBrSUResExtIEsCls;
typedef struct s1apProtExtnField_E_RABSetupItemBrSUResExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnE_RABSetupItemBrSUResExtIEsCls extensionValue;
} SztProtExtnField_E_RABSetupItemBrSUResExtIEs;

typedef struct s1apProtExtnCont_E_RABSetupItemBrSUResExtIEs
{
   TknU16 noComp;
   SztProtExtnField_E_RABSetupItemBrSUResExtIEs *member;
}SztProtExtnCont_E_RABSetupItemBrSUResExtIEs;

typedef struct s1apE_RABSetupItemBrSURes
{
   TknPres pres;
   SztE_RAB_ID e_RAB_ID;
   SztTportLyrAddr transportLyrAddr;
   SztGTP_TEID gTP_TEID;
   SztProtExtnCont_E_RABSetupItemBrSUResExtIEs iE_Extns;
} SztE_RABSetupItemBrSURes;

typedef struct s1ap_ValueE_RABSetupItemBrSUResIEsCls{
   union {
      SztE_RABSetupItemBrSURes sztE_RABSetupItemBrSURes;
   } u;
} Szt_ValueE_RABSetupItemBrSUResIEsCls;
typedef struct s1apProtIE_Field_E_RABSetupItemBrSUResIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueE_RABSetupItemBrSUResIEsCls value;
} SztProtIE_Field_E_RABSetupItemBrSUResIEs;


typedef SztProtIE_Field_E_RABSetupItemBrSUResIEs SztProtIE_SingleCont_E_RABSetupItemBrSUResIEs;
typedef struct s1apE_RABSetupLstBrSURes
{
   TknU16 noComp;
   SztProtIE_SingleCont_E_RABSetupItemBrSUResIEs *member;
}SztE_RABSetupLstBrSURes;

typedef struct s1ap_ValueE_RABSetupRespIEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztE_RABSetupLstBrSURes sztE_RABSetupLstBrSURes;
      SztE_RABLst sztE_RABLst;
      SztCriticalityDiag sztCriticalityDiag;
   } u;
} Szt_ValueE_RABSetupRespIEsCls;
typedef struct s1apProtIE_Field_E_RABSetupRespIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueE_RABSetupRespIEsCls value;
} SztProtIE_Field_E_RABSetupRespIEs;

typedef struct s1apProtIE_Cont_E_RABSetupRespIEs
{
   TknU16 noComp;
   SztProtIE_Field_E_RABSetupRespIEs *member;
}SztProtIE_Cont_E_RABSetupRespIEs;

typedef struct s1apE_RABSetupResp
{
   TknPres pres;
   SztProtIE_Cont_E_RABSetupRespIEs protocolIEs;
} SztE_RABSetupResp;

typedef struct s1ap_ExtnE_RABToBeMdfyItemBrModReqExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnE_RABToBeMdfyItemBrModReqExtIEsCls;
typedef struct s1apProtExtnField_E_RABToBeMdfyItemBrModReqExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnE_RABToBeMdfyItemBrModReqExtIEsCls extensionValue;
} SztProtExtnField_E_RABToBeMdfyItemBrModReqExtIEs;

typedef struct s1apProtExtnCont_E_RABToBeMdfyItemBrModReqExtIEs
{
   TknU16 noComp;
   SztProtExtnField_E_RABToBeMdfyItemBrModReqExtIEs *member;
}SztProtExtnCont_E_RABToBeMdfyItemBrModReqExtIEs;

typedef struct s1apE_RABToBeMdfdItemBrModReq
{
   TknPres pres;
   SztE_RAB_ID e_RAB_ID;
   SztE_RABLvlQoSParams e_RABLvlQoSParams;
   SztNAS_PDU nAS_PDU;
   SztProtExtnCont_E_RABToBeMdfyItemBrModReqExtIEs iE_Extns;
} SztE_RABToBeMdfdItemBrModReq;

typedef struct s1ap_ValueE_RABToBeMdfdItemBrModReqIEsCls{
   union {
      SztE_RABToBeMdfdItemBrModReq sztE_RABToBeMdfdItemBrModReq;
   } u;
} Szt_ValueE_RABToBeMdfdItemBrModReqIEsCls;
typedef struct s1apProtIE_Field_E_RABToBeMdfdItemBrModReqIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueE_RABToBeMdfdItemBrModReqIEsCls value;
} SztProtIE_Field_E_RABToBeMdfdItemBrModReqIEs;


typedef SztProtIE_Field_E_RABToBeMdfdItemBrModReqIEs SztProtIE_SingleCont_E_RABToBeMdfdItemBrModReqIEs;
typedef struct s1apE_RABToBeMdfdLstBrModReq
{
   TknU16 noComp;
   SztProtIE_SingleCont_E_RABToBeMdfdItemBrModReqIEs *member;
}SztE_RABToBeMdfdLstBrModReq;

typedef struct s1ap_ValueE_RABMdfyRqstIEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztUEAggMaxBitrate sztUEAggMaxBitrate;
      SztE_RABToBeMdfdLstBrModReq sztE_RABToBeMdfdLstBrModReq;
   } u;
} Szt_ValueE_RABMdfyRqstIEsCls;
typedef struct s1apProtIE_Field_E_RABMdfyRqstIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueE_RABMdfyRqstIEsCls value;
} SztProtIE_Field_E_RABMdfyRqstIEs;

typedef struct s1apProtIE_Cont_E_RABMdfyRqstIEs
{
   TknU16 noComp;
   SztProtIE_Field_E_RABMdfyRqstIEs *member;
}SztProtIE_Cont_E_RABMdfyRqstIEs;

typedef struct s1apE_RABMdfyRqst
{
   TknPres pres;
   SztProtIE_Cont_E_RABMdfyRqstIEs protocolIEs;
} SztE_RABMdfyRqst;

typedef struct s1ap_ExtnE_RABMdfyItemBrModResExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnE_RABMdfyItemBrModResExtIEsCls;
typedef struct s1apProtExtnField_E_RABMdfyItemBrModResExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnE_RABMdfyItemBrModResExtIEsCls extensionValue;
} SztProtExtnField_E_RABMdfyItemBrModResExtIEs;

typedef struct s1apProtExtnCont_E_RABMdfyItemBrModResExtIEs
{
   TknU16 noComp;
   SztProtExtnField_E_RABMdfyItemBrModResExtIEs *member;
}SztProtExtnCont_E_RABMdfyItemBrModResExtIEs;

typedef struct s1apE_RABMdfyItemBrModRes
{
   TknPres pres;
   SztE_RAB_ID e_RAB_ID;
   SztProtExtnCont_E_RABMdfyItemBrModResExtIEs iE_Extns;
} SztE_RABMdfyItemBrModRes;

typedef struct s1ap_ValueE_RABMdfyItemBrModResIEsCls{
   union {
      SztE_RABMdfyItemBrModRes sztE_RABMdfyItemBrModRes;
   } u;
} Szt_ValueE_RABMdfyItemBrModResIEsCls;
typedef struct s1apProtIE_Field_E_RABMdfyItemBrModResIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueE_RABMdfyItemBrModResIEsCls value;
} SztProtIE_Field_E_RABMdfyItemBrModResIEs;


typedef SztProtIE_Field_E_RABMdfyItemBrModResIEs SztProtIE_SingleCont_E_RABMdfyItemBrModResIEs;
typedef struct s1apE_RABMdfyLstBrModRes
{
   TknU16 noComp;
   SztProtIE_SingleCont_E_RABMdfyItemBrModResIEs *member;
}SztE_RABMdfyLstBrModRes;

typedef struct s1ap_ValueE_RABMdfyRespIEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztE_RABMdfyLstBrModRes sztE_RABMdfyLstBrModRes;
      SztE_RABLst sztE_RABLst;
      SztCriticalityDiag sztCriticalityDiag;
   } u;
} Szt_ValueE_RABMdfyRespIEsCls;
typedef struct s1apProtIE_Field_E_RABMdfyRespIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueE_RABMdfyRespIEsCls value;
} SztProtIE_Field_E_RABMdfyRespIEs;

typedef struct s1apProtIE_Cont_E_RABMdfyRespIEs
{
   TknU16 noComp;
   SztProtIE_Field_E_RABMdfyRespIEs *member;
}SztProtIE_Cont_E_RABMdfyRespIEs;

typedef struct s1apE_RABMdfyResp
{
   TknPres pres;
   SztProtIE_Cont_E_RABMdfyRespIEs protocolIEs;
} SztE_RABMdfyResp;

typedef struct s1ap_ValueE_RABRlsCmmdIEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztUEAggMaxBitrate sztUEAggMaxBitrate;
      SztE_RABLst sztE_RABLst;
      SztNAS_PDU sztNAS_PDU;
   } u;
} Szt_ValueE_RABRlsCmmdIEsCls;
typedef struct s1apProtIE_Field_E_RABRlsCmmdIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueE_RABRlsCmmdIEsCls value;
} SztProtIE_Field_E_RABRlsCmmdIEs;

typedef struct s1apProtIE_Cont_E_RABRlsCmmdIEs
{
   TknU16 noComp;
   SztProtIE_Field_E_RABRlsCmmdIEs *member;
}SztProtIE_Cont_E_RABRlsCmmdIEs;

typedef struct s1apE_RABRlsCmmd
{
   TknPres pres;
   SztProtIE_Cont_E_RABRlsCmmdIEs protocolIEs;
} SztE_RABRlsCmmd;

typedef struct s1ap_ExtnE_RABRlsItemBrRelCompExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnE_RABRlsItemBrRelCompExtIEsCls;
typedef struct s1apProtExtnField_E_RABRlsItemBrRelCompExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnE_RABRlsItemBrRelCompExtIEsCls extensionValue;
} SztProtExtnField_E_RABRlsItemBrRelCompExtIEs;

typedef struct s1apProtExtnCont_E_RABRlsItemBrRelCompExtIEs
{
   TknU16 noComp;
   SztProtExtnField_E_RABRlsItemBrRelCompExtIEs *member;
}SztProtExtnCont_E_RABRlsItemBrRelCompExtIEs;

typedef struct s1apE_RABRlsItemBrRelComp
{
   TknPres pres;
   SztE_RAB_ID e_RAB_ID;
   SztProtExtnCont_E_RABRlsItemBrRelCompExtIEs iE_Extns;
} SztE_RABRlsItemBrRelComp;

typedef struct s1ap_ValueE_RABRlsItemBrRelCompIEsCls{
   union {
      SztE_RABRlsItemBrRelComp sztE_RABRlsItemBrRelComp;
   } u;
} Szt_ValueE_RABRlsItemBrRelCompIEsCls;
typedef struct s1apProtIE_Field_E_RABRlsItemBrRelCompIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueE_RABRlsItemBrRelCompIEsCls value;
} SztProtIE_Field_E_RABRlsItemBrRelCompIEs;


typedef SztProtIE_Field_E_RABRlsItemBrRelCompIEs SztProtIE_SingleCont_E_RABRlsItemBrRelCompIEs;
typedef struct s1apE_RABRlsLstBrRelComp
{
   TknU16 noComp;
   SztProtIE_SingleCont_E_RABRlsItemBrRelCompIEs *member;
}SztE_RABRlsLstBrRelComp;

typedef struct s1ap_ValueE_RABRlsRespIEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztE_RABRlsLstBrRelComp sztE_RABRlsLstBrRelComp;
      SztE_RABLst sztE_RABLst;
      SztCriticalityDiag sztCriticalityDiag;
   } u;
} Szt_ValueE_RABRlsRespIEsCls;
typedef struct s1apProtIE_Field_E_RABRlsRespIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueE_RABRlsRespIEsCls value;
} SztProtIE_Field_E_RABRlsRespIEs;

typedef struct s1apProtIE_Cont_E_RABRlsRespIEs
{
   TknU16 noComp;
   SztProtIE_Field_E_RABRlsRespIEs *member;
}SztProtIE_Cont_E_RABRlsRespIEs;

typedef struct s1apE_RABRlsResp
{
   TknPres pres;
   SztProtIE_Cont_E_RABRlsRespIEs protocolIEs;
} SztE_RABRlsResp;

typedef struct s1ap_ValueE_RABRlsIndIEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztE_RABLst sztE_RABLst;
   } u;
} Szt_ValueE_RABRlsIndIEsCls;
typedef struct s1apProtIE_Field_E_RABRlsIndIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueE_RABRlsIndIEsCls value;
} SztProtIE_Field_E_RABRlsIndIEs;

typedef struct s1apProtIE_Cont_E_RABRlsIndIEs
{
   TknU16 noComp;
   SztProtIE_Field_E_RABRlsIndIEs *member;
}SztProtIE_Cont_E_RABRlsIndIEs;

typedef struct s1apE_RABRlsInd
{
   TknPres pres;
   SztProtIE_Cont_E_RABRlsIndIEs protocolIEs;
} SztE_RABRlsInd;

typedef struct s1ap_ExtnE_RABToBeSetupItemCtxtSUReqExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnE_RABToBeSetupItemCtxtSUReqExtIEsCls;
typedef struct s1apProtExtnField_E_RABToBeSetupItemCtxtSUReqExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnE_RABToBeSetupItemCtxtSUReqExtIEsCls extensionValue;
} SztProtExtnField_E_RABToBeSetupItemCtxtSUReqExtIEs;

typedef struct s1apProtExtnCont_E_RABToBeSetupItemCtxtSUReqExtIEs
{
   TknU16 noComp;
   SztProtExtnField_E_RABToBeSetupItemCtxtSUReqExtIEs *member;
}SztProtExtnCont_E_RABToBeSetupItemCtxtSUReqExtIEs;

typedef struct s1apE_RABToBeSetupItemCtxtSUReq
{
   TknPres pres;
   SztE_RAB_ID e_RAB_ID;
   SztE_RABLvlQoSParams e_RABlevelQoSParams;
   SztTportLyrAddr transportLyrAddr;
   SztGTP_TEID gTP_TEID;
   SztNAS_PDU nAS_PDU;
   SztProtExtnCont_E_RABToBeSetupItemCtxtSUReqExtIEs iE_Extns;
} SztE_RABToBeSetupItemCtxtSUReq;

typedef struct s1ap_ValueE_RABToBeSetupItemCtxtSUReqIEsCls{
   union {
      SztE_RABToBeSetupItemCtxtSUReq sztE_RABToBeSetupItemCtxtSUReq;
   } u;
} Szt_ValueE_RABToBeSetupItemCtxtSUReqIEsCls;
typedef struct s1apProtIE_Field_E_RABToBeSetupItemCtxtSUReqIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueE_RABToBeSetupItemCtxtSUReqIEsCls value;
} SztProtIE_Field_E_RABToBeSetupItemCtxtSUReqIEs;


typedef SztProtIE_Field_E_RABToBeSetupItemCtxtSUReqIEs SztProtIE_SingleCont_E_RABToBeSetupItemCtxtSUReqIEs;
typedef struct s1apE_RABToBeSetupLstCtxtSUReq
{
   TknU16 noComp;
   SztProtIE_SingleCont_E_RABToBeSetupItemCtxtSUReqIEs *member;
}SztE_RABToBeSetupLstCtxtSUReq;


typedef struct s1ap_ValueInitCntxtSetupRqstIEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztUEAggMaxBitrate sztUEAggMaxBitrate;
      SztE_RABToBeSetupLstCtxtSUReq sztE_RABToBeSetupLstCtxtSUReq;
      SztUESecurCapabilities sztUESecurCapabilities;
      SztSecurKey sztSecurKey;
      SztTraceActvn sztTraceActvn;
      SztHovrRestrnLst sztHovrRestrnLst;
      SztUERadioCapblty sztUERadioCapblty;
      SztSubscriberProfileIDforRFP sztSubscriberProfileIDforRFP;
      SztCSFallbackIndicator sztCSFallbackIndicator;
      SztSRVCCOperationPossible sztSRVCCOperationPossible;
      SztCSGMembershipStatus sztCSGMembershipStatus;
      SztLAI sztLAI;
      SztGUMMEI sztGUMMEI;
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID_2;
   } u;
} Szt_ValueInitCntxtSetupRqstIEsCls;
typedef struct s1apProtIE_Field_InitCntxtSetupRqstIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueInitCntxtSetupRqstIEsCls value;
} SztProtIE_Field_InitCntxtSetupRqstIEs;

typedef struct s1apProtIE_Cont_InitCntxtSetupRqstIEs
{
   TknU16 noComp;
   SztProtIE_Field_InitCntxtSetupRqstIEs *member;
}SztProtIE_Cont_InitCntxtSetupRqstIEs;

typedef struct s1apInitCntxtSetupRqst
{
   TknPres pres;
   SztProtIE_Cont_InitCntxtSetupRqstIEs protocolIEs;
} SztInitCntxtSetupRqst;

typedef struct s1ap_ExtnE_RABSetupItemCtxtSUResExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnE_RABSetupItemCtxtSUResExtIEsCls;
typedef struct s1apProtExtnField_E_RABSetupItemCtxtSUResExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnE_RABSetupItemCtxtSUResExtIEsCls extensionValue;
} SztProtExtnField_E_RABSetupItemCtxtSUResExtIEs;

typedef struct s1apProtExtnCont_E_RABSetupItemCtxtSUResExtIEs
{
   TknU16 noComp;
   SztProtExtnField_E_RABSetupItemCtxtSUResExtIEs *member;
}SztProtExtnCont_E_RABSetupItemCtxtSUResExtIEs;

typedef struct s1apE_RABSetupItemCtxtSURes
{
   TknPres pres;
   SztE_RAB_ID e_RAB_ID;
   SztTportLyrAddr transportLyrAddr;
   SztGTP_TEID gTP_TEID;
   SztProtExtnCont_E_RABSetupItemCtxtSUResExtIEs iE_Extns;
} SztE_RABSetupItemCtxtSURes;

typedef struct s1ap_ValueE_RABSetupItemCtxtSUResIEsCls{
   union {
      SztE_RABSetupItemCtxtSURes sztE_RABSetupItemCtxtSURes;
   } u;
} Szt_ValueE_RABSetupItemCtxtSUResIEsCls;
typedef struct s1apProtIE_Field_E_RABSetupItemCtxtSUResIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueE_RABSetupItemCtxtSUResIEsCls value;
} SztProtIE_Field_E_RABSetupItemCtxtSUResIEs;


typedef SztProtIE_Field_E_RABSetupItemCtxtSUResIEs SztProtIE_SingleCont_E_RABSetupItemCtxtSUResIEs;
typedef struct s1apE_RABSetupLstCtxtSURes
{
   TknU16 noComp;
   SztProtIE_SingleCont_E_RABSetupItemCtxtSUResIEs *member;
}SztE_RABSetupLstCtxtSURes;

typedef struct s1ap_ValueInitCntxtSetupRespIEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztE_RABSetupLstCtxtSURes sztE_RABSetupLstCtxtSURes;
      SztE_RABLst sztE_RABLst;
      SztCriticalityDiag sztCriticalityDiag;
   } u;
} Szt_ValueInitCntxtSetupRespIEsCls;
typedef struct s1apProtIE_Field_InitCntxtSetupRespIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueInitCntxtSetupRespIEsCls value;
} SztProtIE_Field_InitCntxtSetupRespIEs;

typedef struct s1apProtIE_Cont_InitCntxtSetupRespIEs
{
   TknU16 noComp;
   SztProtIE_Field_InitCntxtSetupRespIEs *member;
}SztProtIE_Cont_InitCntxtSetupRespIEs;

typedef struct s1apInitCntxtSetupResp
{
   TknPres pres;
   SztProtIE_Cont_InitCntxtSetupRespIEs protocolIEs;
} SztInitCntxtSetupResp;

typedef struct s1ap_ValueInitCntxtSetupFailIEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztCause sztCause;
      SztCriticalityDiag sztCriticalityDiag;
   } u;
} Szt_ValueInitCntxtSetupFailIEsCls;
typedef struct s1apProtIE_Field_InitCntxtSetupFailIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueInitCntxtSetupFailIEsCls value;
} SztProtIE_Field_InitCntxtSetupFailIEs;

typedef struct s1apProtIE_Cont_InitCntxtSetupFailIEs
{
   TknU16 noComp;
   SztProtIE_Field_InitCntxtSetupFailIEs *member;
}SztProtIE_Cont_InitCntxtSetupFailIEs;

typedef struct s1apInitCntxtSetupFail
{
   TknPres pres;
   SztProtIE_Cont_InitCntxtSetupFailIEs protocolIEs;
} SztInitCntxtSetupFail;

typedef struct s1ap_ExtnTAIItemExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnTAIItemExtIEsCls;
typedef struct s1apProtExtnField_TAIItemExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnTAIItemExtIEsCls extensionValue;
} SztProtExtnField_TAIItemExtIEs;

typedef struct s1apProtExtnCont_TAIItemExtIEs
{
   TknU16 noComp;
   SztProtExtnField_TAIItemExtIEs *member;
}SztProtExtnCont_TAIItemExtIEs;

typedef struct s1apTAIItem
{
   TknPres pres;
   SztTAI tAI;
   SztProtExtnCont_TAIItemExtIEs iE_Extns;
} SztTAIItem;

typedef struct s1ap_ValueTAIItemIEsCls{
   union {
      SztTAIItem sztTAIItem;
   } u;
} Szt_ValueTAIItemIEsCls;
typedef struct s1apProtIE_Field_TAIItemIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueTAIItemIEsCls value;
} SztProtIE_Field_TAIItemIEs;


typedef SztProtIE_Field_TAIItemIEs SztProtIE_SingleCont_TAIItemIEs;
typedef struct s1apTAILst
{
   TknU16 noComp;
   SztProtIE_SingleCont_TAIItemIEs *member;
}SztTAILst;

typedef struct s1ap_ValuePagIEsCls{
   union {
      SztUEIdentityIdxValue sztUEIdentityIdxValue;
      SztUEPagID sztUEPagID;
      SztPagDRX sztPagDRX;
      SztCNDomain sztCNDomain;
      SztTAILst sztTAILst;
      SztCSG_IdLst sztCSG_IdLst;
   } u;
} Szt_ValuePagIEsCls;
typedef struct s1apProtIE_Field_PagIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValuePagIEsCls value;
} SztProtIE_Field_PagIEs;

typedef struct s1apProtIE_Cont_PagIEs
{
   TknU16 noComp;
   SztProtIE_Field_PagIEs *member;
}SztProtIE_Cont_PagIEs;

typedef struct s1apPag
{
   TknPres pres;
   SztProtIE_Cont_PagIEs protocolIEs;
} SztPag;

typedef struct s1ap_ValueUECntxtRlsRqst_IEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztCause sztCause;
   } u;
} Szt_ValueUECntxtRlsRqst_IEsCls;
typedef struct s1apProtIE_Field_UECntxtRlsRqst_IEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueUECntxtRlsRqst_IEsCls value;
} SztProtIE_Field_UECntxtRlsRqst_IEs;

typedef struct s1apProtIE_Cont_UECntxtRlsRqst_IEs
{
   TknU16 noComp;
   SztProtIE_Field_UECntxtRlsRqst_IEs *member;
}SztProtIE_Cont_UECntxtRlsRqst_IEs;

typedef struct s1apUECntxtRlsRqst
{
   TknPres pres;
   SztProtIE_Cont_UECntxtRlsRqst_IEs protocolIEs;
} SztUECntxtRlsRqst;

typedef struct s1ap_ValueUECntxtRlsCmmd_IEsCls{
   union {
      SztUE_S1AP_IDs sztUE_S1AP_IDs;
      SztCause sztCause;
   } u;
} Szt_ValueUECntxtRlsCmmd_IEsCls;
typedef struct s1apProtIE_Field_UECntxtRlsCmmd_IEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueUECntxtRlsCmmd_IEsCls value;
} SztProtIE_Field_UECntxtRlsCmmd_IEs;

typedef struct s1apProtIE_Cont_UECntxtRlsCmmd_IEs
{
   TknU16 noComp;
   SztProtIE_Field_UECntxtRlsCmmd_IEs *member;
}SztProtIE_Cont_UECntxtRlsCmmd_IEs;

typedef struct s1apUECntxtRlsCmmd
{
   TknPres pres;
   SztProtIE_Cont_UECntxtRlsCmmd_IEs protocolIEs;
} SztUECntxtRlsCmmd;

typedef struct s1ap_ValueUECntxtRlsComplete_IEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztCriticalityDiag sztCriticalityDiag;
   } u;
} Szt_ValueUECntxtRlsComplete_IEsCls;
typedef struct s1apProtIE_Field_UECntxtRlsComplete_IEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueUECntxtRlsComplete_IEsCls value;
} SztProtIE_Field_UECntxtRlsComplete_IEs;

typedef struct s1apProtIE_Cont_UECntxtRlsComplete_IEs
{
   TknU16 noComp;
   SztProtIE_Field_UECntxtRlsComplete_IEs *member;
}SztProtIE_Cont_UECntxtRlsComplete_IEs;

typedef struct s1apUECntxtRlsComplete
{
   TknPres pres;
   SztProtIE_Cont_UECntxtRlsComplete_IEs protocolIEs;
} SztUECntxtRlsComplete;


typedef struct s1ap_ValueUECntxtModificationRqstIEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztSecurKey sztSecurKey;
      SztSubscriberProfileIDforRFP sztSubscriberProfileIDforRFP;
      SztUEAggMaxBitrate sztUEAggMaxBitrate;
      SztCSFallbackIndicator sztCSFallbackIndicator;
      SztUESecurCapabilities sztUESecurCapabilities;
      SztCSGMembershipStatus sztCSGMembershipStatus;
      SztLAI sztLAI;
   } u;
} Szt_ValueUECntxtModificationRqstIEsCls;
typedef struct s1apProtIE_Field_UECntxtModificationRqstIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueUECntxtModificationRqstIEsCls value;
} SztProtIE_Field_UECntxtModificationRqstIEs;

typedef struct s1apProtIE_Cont_UECntxtModificationRqstIEs
{
   TknU16 noComp;
   SztProtIE_Field_UECntxtModificationRqstIEs *member;
}SztProtIE_Cont_UECntxtModificationRqstIEs;

typedef struct s1apUECntxtModificationRqst
{
   TknPres pres;
   SztProtIE_Cont_UECntxtModificationRqstIEs protocolIEs;
} SztUECntxtModificationRqst;

typedef struct s1ap_ValueUECntxtModificationRespIEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztCriticalityDiag sztCriticalityDiag;
   } u;
} Szt_ValueUECntxtModificationRespIEsCls;
typedef struct s1apProtIE_Field_UECntxtModificationRespIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueUECntxtModificationRespIEsCls value;
} SztProtIE_Field_UECntxtModificationRespIEs;

typedef struct s1apProtIE_Cont_UECntxtModificationRespIEs
{
   TknU16 noComp;
   SztProtIE_Field_UECntxtModificationRespIEs *member;
}SztProtIE_Cont_UECntxtModificationRespIEs;

typedef struct s1apUECntxtModificationResp
{
   TknPres pres;
   SztProtIE_Cont_UECntxtModificationRespIEs protocolIEs;
} SztUECntxtModificationResp;

typedef struct s1ap_ValueUECntxtModificationFailIEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztCause sztCause;
      SztCriticalityDiag sztCriticalityDiag;
   } u;
} Szt_ValueUECntxtModificationFailIEsCls;
typedef struct s1apProtIE_Field_UECntxtModificationFailIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueUECntxtModificationFailIEsCls value;
} SztProtIE_Field_UECntxtModificationFailIEs;

typedef struct s1apProtIE_Cont_UECntxtModificationFailIEs
{
   TknU16 noComp;
   SztProtIE_Field_UECntxtModificationFailIEs *member;
}SztProtIE_Cont_UECntxtModificationFailIEs;

typedef struct s1apUECntxtModificationFail
{
   TknPres pres;
   SztProtIE_Cont_UECntxtModificationFailIEs protocolIEs;
} SztUECntxtModificationFail;

typedef struct s1ap_ValueDlnkNASTport_IEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztNAS_PDU sztNAS_PDU;
      SztHovrRestrnLst sztHovrRestrnLst;
   } u;
} Szt_ValueDlnkNASTport_IEsCls;
typedef struct s1apProtIE_Field_DlnkNASTport_IEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueDlnkNASTport_IEsCls value;
} SztProtIE_Field_DlnkNASTport_IEs;

typedef struct s1apProtIE_Cont_DlnkNASTport_IEs
{
   TknU16 noComp;
   SztProtIE_Field_DlnkNASTport_IEs *member;
}SztProtIE_Cont_DlnkNASTport_IEs;

typedef struct s1apDlnkNASTport
{
   TknPres pres;
   SztProtIE_Cont_DlnkNASTport_IEs protocolIEs;
} SztDlnkNASTport;

typedef struct s1ap_ValueInitUEMsg_IEsCls{
   union {
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztNAS_PDU sztNAS_PDU;
      SztTAI sztTAI;
      SztEUTRAN_CGI sztEUTRAN_CGI;
      SztRRC_Establishment_Cause sztRRC_Establishment_Cause;
      SztS_TMSI sztS_TMSI;
      SztCSG_Id sztCSG_Id;
      SztGUMMEI sztGUMMEI;
      SztCellAccessMode sztCellAccessMode;
   } u;
} Szt_ValueInitUEMsg_IEsCls;
typedef struct s1apProtIE_Field_InitUEMsg_IEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueInitUEMsg_IEsCls value;
} SztProtIE_Field_InitUEMsg_IEs;

typedef struct s1apProtIE_Cont_InitUEMsg_IEs
{
   TknU16 noComp;
   SztProtIE_Field_InitUEMsg_IEs *member;
}SztProtIE_Cont_InitUEMsg_IEs;

typedef struct s1apInitUEMsg
{
   TknPres pres;
   SztProtIE_Cont_InitUEMsg_IEs protocolIEs;
} SztInitUEMsg;

typedef struct s1ap_ValueUlnkNASTport_IEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztNAS_PDU sztNAS_PDU;
      SztEUTRAN_CGI sztEUTRAN_CGI;
      SztTAI sztTAI;
   } u;
} Szt_ValueUlnkNASTport_IEsCls;
typedef struct s1apProtIE_Field_UlnkNASTport_IEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueUlnkNASTport_IEsCls value;
} SztProtIE_Field_UlnkNASTport_IEs;

typedef struct s1apProtIE_Cont_UlnkNASTport_IEs
{
   TknU16 noComp;
   SztProtIE_Field_UlnkNASTport_IEs *member;
}SztProtIE_Cont_UlnkNASTport_IEs;

typedef struct s1apUlnkNASTport
{
   TknPres pres;
   SztProtIE_Cont_UlnkNASTport_IEs protocolIEs;
} SztUlnkNASTport;

typedef struct s1ap_ValueNASNonDlvryInd_IEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztNAS_PDU sztNAS_PDU;
      SztCause sztCause;
   } u;
} Szt_ValueNASNonDlvryInd_IEsCls;
typedef struct s1apProtIE_Field_NASNonDlvryInd_IEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueNASNonDlvryInd_IEsCls value;
} SztProtIE_Field_NASNonDlvryInd_IEs;

typedef struct s1apProtIE_Cont_NASNonDlvryInd_IEs
{
   TknU16 noComp;
   SztProtIE_Field_NASNonDlvryInd_IEs *member;
}SztProtIE_Cont_NASNonDlvryInd_IEs;

typedef struct s1apNASNonDlvryInd
{
   TknPres pres;
   SztProtIE_Cont_NASNonDlvryInd_IEs protocolIEs;
} SztNASNonDlvryInd;


typedef enum enumSztResetAll
{
   SztResetAllreset_allEnum
} EnumSztResetAll;
typedef TknU32 SztResetAll;

typedef struct s1ap_ValueUE_assocLogS1_ConItemResCls{
   union {
      SztUE_assocLogS1_ConItem sztUE_assocLogS1_ConItem;
   } u;
} Szt_ValueUE_assocLogS1_ConItemResCls;
typedef struct s1apProtIE_Field_UE_assocLogS1_ConItemRes
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueUE_assocLogS1_ConItemResCls value;
} SztProtIE_Field_UE_assocLogS1_ConItemRes;


typedef SztProtIE_Field_UE_assocLogS1_ConItemRes SztProtIE_SingleCont_UE_assocLogS1_ConItemRes;
typedef struct s1apUE_assocLogS1_ConLstRes
{
   TknU16 noComp;
   SztProtIE_SingleCont_UE_assocLogS1_ConItemRes *member;
}SztUE_assocLogS1_ConLstRes;

typedef struct s1apResetTyp
{
   TknU8 choice;
   union {
      SztResetAll s1_Intf;
      SztUE_assocLogS1_ConLstRes partOfS1_Intf;
   } val;
} SztResetTyp;

typedef struct s1ap_ValueResetIEsCls{
   union {
      SztCause sztCause;
      SztResetTyp sztResetTyp;
   } u;
} Szt_ValueResetIEsCls;
typedef struct s1apProtIE_Field_ResetIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueResetIEsCls value;
} SztProtIE_Field_ResetIEs;

typedef struct s1apProtIE_Cont_ResetIEs
{
   TknU16 noComp;
   SztProtIE_Field_ResetIEs *member;
}SztProtIE_Cont_ResetIEs;

typedef struct s1apReset
{
   TknPres pres;
   SztProtIE_Cont_ResetIEs protocolIEs;
} SztReset;

typedef struct s1ap_ValueUE_assocLogS1_ConItemResAckCls{
   union {
      SztUE_assocLogS1_ConItem sztUE_assocLogS1_ConItem;
   } u;
} Szt_ValueUE_assocLogS1_ConItemResAckCls;
typedef struct s1apProtIE_Field_UE_assocLogS1_ConItemResAck
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueUE_assocLogS1_ConItemResAckCls value;
} SztProtIE_Field_UE_assocLogS1_ConItemResAck;


typedef SztProtIE_Field_UE_assocLogS1_ConItemResAck SztProtIE_SingleCont_UE_assocLogS1_ConItemResAck;
typedef struct s1apUE_assocLogS1_ConLstResAck
{
   TknU16 noComp;
   SztProtIE_SingleCont_UE_assocLogS1_ConItemResAck *member;
}SztUE_assocLogS1_ConLstResAck;

typedef struct s1ap_ValueResetAckgIEsCls{
   union {
      SztUE_assocLogS1_ConLstResAck sztUE_assocLogS1_ConLstResAck;
      SztCriticalityDiag sztCriticalityDiag;
   } u;
} Szt_ValueResetAckgIEsCls;
typedef struct s1apProtIE_Field_ResetAckgIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueResetAckgIEsCls value;
} SztProtIE_Field_ResetAckgIEs;

typedef struct s1apProtIE_Cont_ResetAckgIEs
{
   TknU16 noComp;
   SztProtIE_Field_ResetAckgIEs *member;
}SztProtIE_Cont_ResetAckgIEs;

typedef struct s1apResetAckg
{
   TknPres pres;
   SztProtIE_Cont_ResetAckgIEs protocolIEs;
} SztResetAckg;

typedef struct s1ap_ValueErrIndIEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztCause sztCause;
      SztCriticalityDiag sztCriticalityDiag;
   } u;
} Szt_ValueErrIndIEsCls;
typedef struct s1apProtIE_Field_ErrIndIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueErrIndIEsCls value;
} SztProtIE_Field_ErrIndIEs;

typedef struct s1apProtIE_Cont_ErrIndIEs
{
   TknU16 noComp;
   SztProtIE_Field_ErrIndIEs *member;
}SztProtIE_Cont_ErrIndIEs;

typedef struct s1apErrInd
{
   TknPres pres;
   SztProtIE_Cont_ErrIndIEs protocolIEs;
} SztErrInd;

typedef struct s1ap_ValueS1SetupRqstIEsCls{
   union {
      SztGlobal_ENB_ID sztGlobal_ENB_ID;
      SztENBname sztENBname;
      SztSuppTAs sztSuppTAs;
      SztPagDRX sztPagDRX;
      SztCSG_IdLst sztCSG_IdLst;
   } u;
} Szt_ValueS1SetupRqstIEsCls;
typedef struct s1apProtIE_Field_S1SetupRqstIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueS1SetupRqstIEsCls value;
} SztProtIE_Field_S1SetupRqstIEs;

typedef struct s1apProtIE_Cont_S1SetupRqstIEs
{
   TknU16 noComp;
   SztProtIE_Field_S1SetupRqstIEs *member;
}SztProtIE_Cont_S1SetupRqstIEs;

typedef struct s1apS1SetupRqst
{
   TknPres pres;
   SztProtIE_Cont_S1SetupRqstIEs protocolIEs;
} SztS1SetupRqst;

typedef struct s1ap_ValueS1SetupRespIEsCls{
   union {
      SztMMEname sztMMEname;
      SztSrvdGUMMEIs sztSrvdGUMMEIs;
      SztRelativeMMECapacity sztRelativeMMECapacity;
      SztCriticalityDiag sztCriticalityDiag;
   } u;
} Szt_ValueS1SetupRespIEsCls;
typedef struct s1apProtIE_Field_S1SetupRespIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueS1SetupRespIEsCls value;
} SztProtIE_Field_S1SetupRespIEs;

typedef struct s1apProtIE_Cont_S1SetupRespIEs
{
   TknU16 noComp;
   SztProtIE_Field_S1SetupRespIEs *member;
}SztProtIE_Cont_S1SetupRespIEs;

typedef struct s1apS1SetupResp
{
   TknPres pres;
   SztProtIE_Cont_S1SetupRespIEs protocolIEs;
} SztS1SetupResp;

typedef struct s1ap_ValueS1SetupFailIEsCls{
   union {
      SztCause sztCause;
      SztTimeToWait sztTimeToWait;
      SztCriticalityDiag sztCriticalityDiag;
   } u;
} Szt_ValueS1SetupFailIEsCls;
typedef struct s1apProtIE_Field_S1SetupFailIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueS1SetupFailIEsCls value;
} SztProtIE_Field_S1SetupFailIEs;

typedef struct s1apProtIE_Cont_S1SetupFailIEs
{
   TknU16 noComp;
   SztProtIE_Field_S1SetupFailIEs *member;
}SztProtIE_Cont_S1SetupFailIEs;

typedef struct s1apS1SetupFail
{
   TknPres pres;
   SztProtIE_Cont_S1SetupFailIEs protocolIEs;
} SztS1SetupFail;

typedef struct s1ap_ValueENBConfigUpdIEsCls{
   union {
      SztENBname sztENBname;
      SztSuppTAs sztSuppTAs;
      SztCSG_IdLst sztCSG_IdLst;
      SztPagDRX sztPagDRX;
   } u;
} Szt_ValueENBConfigUpdIEsCls;
typedef struct s1apProtIE_Field_ENBConfigUpdIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueENBConfigUpdIEsCls value;
} SztProtIE_Field_ENBConfigUpdIEs;

typedef struct s1apProtIE_Cont_ENBConfigUpdIEs
{
   TknU16 noComp;
   SztProtIE_Field_ENBConfigUpdIEs *member;
}SztProtIE_Cont_ENBConfigUpdIEs;

typedef struct s1apENBConfigUpd
{
   TknPres pres;
   SztProtIE_Cont_ENBConfigUpdIEs protocolIEs;
} SztENBConfigUpd;

typedef struct s1ap_ValueENBConfigUpdAckgIEsCls{
   union {
      SztCriticalityDiag sztCriticalityDiag;
   } u;
} Szt_ValueENBConfigUpdAckgIEsCls;
typedef struct s1apProtIE_Field_ENBConfigUpdAckgIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueENBConfigUpdAckgIEsCls value;
} SztProtIE_Field_ENBConfigUpdAckgIEs;

typedef struct s1apProtIE_Cont_ENBConfigUpdAckgIEs
{
   TknU16 noComp;
   SztProtIE_Field_ENBConfigUpdAckgIEs *member;
}SztProtIE_Cont_ENBConfigUpdAckgIEs;

typedef struct s1apENBConfigUpdAckg
{
   TknPres pres;
   SztProtIE_Cont_ENBConfigUpdAckgIEs protocolIEs;
} SztENBConfigUpdAckg;

typedef struct s1ap_ValueENBConfigUpdFailIEsCls{
   union {
      SztCause sztCause;
      SztTimeToWait sztTimeToWait;
      SztCriticalityDiag sztCriticalityDiag;
   } u;
} Szt_ValueENBConfigUpdFailIEsCls;
typedef struct s1apProtIE_Field_ENBConfigUpdFailIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueENBConfigUpdFailIEsCls value;
} SztProtIE_Field_ENBConfigUpdFailIEs;

typedef struct s1apProtIE_Cont_ENBConfigUpdFailIEs
{
   TknU16 noComp;
   SztProtIE_Field_ENBConfigUpdFailIEs *member;
}SztProtIE_Cont_ENBConfigUpdFailIEs;

typedef struct s1apENBConfigUpdFail
{
   TknPres pres;
   SztProtIE_Cont_ENBConfigUpdFailIEs protocolIEs;
} SztENBConfigUpdFail;

typedef struct s1ap_ValueMMEConfigUpdIEsCls{
   union {
      SztMMEname sztMMEname;
      SztSrvdGUMMEIs sztSrvdGUMMEIs;
      SztRelativeMMECapacity sztRelativeMMECapacity;
   } u;
} Szt_ValueMMEConfigUpdIEsCls;
typedef struct s1apProtIE_Field_MMEConfigUpdIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueMMEConfigUpdIEsCls value;
} SztProtIE_Field_MMEConfigUpdIEs;

typedef struct s1apProtIE_Cont_MMEConfigUpdIEs
{
   TknU16 noComp;
   SztProtIE_Field_MMEConfigUpdIEs *member;
}SztProtIE_Cont_MMEConfigUpdIEs;

typedef struct s1apMMEConfigUpd
{
   TknPres pres;
   SztProtIE_Cont_MMEConfigUpdIEs protocolIEs;
} SztMMEConfigUpd;

typedef struct s1ap_ValueMMEConfigUpdAckgIEsCls{
   union {
      SztCriticalityDiag sztCriticalityDiag;
   } u;
} Szt_ValueMMEConfigUpdAckgIEsCls;
typedef struct s1apProtIE_Field_MMEConfigUpdAckgIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueMMEConfigUpdAckgIEsCls value;
} SztProtIE_Field_MMEConfigUpdAckgIEs;

typedef struct s1apProtIE_Cont_MMEConfigUpdAckgIEs
{
   TknU16 noComp;
   SztProtIE_Field_MMEConfigUpdAckgIEs *member;
}SztProtIE_Cont_MMEConfigUpdAckgIEs;

typedef struct s1apMMEConfigUpdAckg
{
   TknPres pres;
   SztProtIE_Cont_MMEConfigUpdAckgIEs protocolIEs;
} SztMMEConfigUpdAckg;

typedef struct s1ap_ValueMMEConfigUpdFailIEsCls{
   union {
      SztCause sztCause;
      SztTimeToWait sztTimeToWait;
      SztCriticalityDiag sztCriticalityDiag;
   } u;
} Szt_ValueMMEConfigUpdFailIEsCls;
typedef struct s1apProtIE_Field_MMEConfigUpdFailIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueMMEConfigUpdFailIEsCls value;
} SztProtIE_Field_MMEConfigUpdFailIEs;

typedef struct s1apProtIE_Cont_MMEConfigUpdFailIEs
{
   TknU16 noComp;
   SztProtIE_Field_MMEConfigUpdFailIEs *member;
}SztProtIE_Cont_MMEConfigUpdFailIEs;

typedef struct s1apMMEConfigUpdFail
{
   TknPres pres;
   SztProtIE_Cont_MMEConfigUpdFailIEs protocolIEs;
} SztMMEConfigUpdFail;

typedef struct s1ap_ValueDlnkS1cdma2000tunnelingIEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztE_RABSubjtoDataFwdingLst sztE_RABSubjtoDataFwdingLst;
      SztCdma2000HOStatus sztCdma2000HOStatus;
      SztCdma2000RATTyp sztCdma2000RATTyp;
      SztCdma2000PDU sztCdma2000PDU;
   } u;
} Szt_ValueDlnkS1cdma2000tunnelingIEsCls;
typedef struct s1apProtIE_Field_DlnkS1cdma2000tunnelingIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueDlnkS1cdma2000tunnelingIEsCls value;
} SztProtIE_Field_DlnkS1cdma2000tunnelingIEs;

typedef struct s1apProtIE_Cont_DlnkS1cdma2000tunnelingIEs
{
   TknU16 noComp;
   SztProtIE_Field_DlnkS1cdma2000tunnelingIEs *member;
}SztProtIE_Cont_DlnkS1cdma2000tunnelingIEs;

typedef struct s1apDlnkS1cdma2000tunneling
{
   TknPres pres;
   SztProtIE_Cont_DlnkS1cdma2000tunnelingIEs protocolIEs;
} SztDlnkS1cdma2000tunneling;

typedef struct s1ap_ValueUlnkS1cdma2000tunnelingIEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztCdma2000RATTyp sztCdma2000RATTyp;
      SztCdma2000SectorID sztCdma2000SectorID;
      SztCdma2000HOReqdInd sztCdma2000HOReqdInd;
      SztCdma2000OneXSRVCCInfo sztCdma2000OneXSRVCCInfo;
      SztCdma2000OneXRAND sztCdma2000OneXRAND;
      SztCdma2000PDU sztCdma2000PDU;
      SztEUTRANRoundTripDelayEstimationInfo sztEUTRANRoundTripDelayEstimationInfo;
   } u;
} Szt_ValueUlnkS1cdma2000tunnelingIEsCls;
typedef struct s1apProtIE_Field_UlnkS1cdma2000tunnelingIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueUlnkS1cdma2000tunnelingIEsCls value;
} SztProtIE_Field_UlnkS1cdma2000tunnelingIEs;

typedef struct s1apProtIE_Cont_UlnkS1cdma2000tunnelingIEs
{
   TknU16 noComp;
   SztProtIE_Field_UlnkS1cdma2000tunnelingIEs *member;
}SztProtIE_Cont_UlnkS1cdma2000tunnelingIEs;

typedef struct s1apUlnkS1cdma2000tunneling
{
   TknPres pres;
   SztProtIE_Cont_UlnkS1cdma2000tunnelingIEs protocolIEs;
} SztUlnkS1cdma2000tunneling;

typedef struct s1ap_ValueUECapbltyInfoIndIEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztUERadioCapblty sztUERadioCapblty;
   } u;
} Szt_ValueUECapbltyInfoIndIEsCls;
typedef struct s1apProtIE_Field_UECapbltyInfoIndIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueUECapbltyInfoIndIEsCls value;
} SztProtIE_Field_UECapbltyInfoIndIEs;

typedef struct s1apProtIE_Cont_UECapbltyInfoIndIEs
{
   TknU16 noComp;
   SztProtIE_Field_UECapbltyInfoIndIEs *member;
}SztProtIE_Cont_UECapbltyInfoIndIEs;

typedef struct s1apUECapbltyInfoInd
{
   TknPres pres;
   SztProtIE_Cont_UECapbltyInfoIndIEs protocolIEs;
} SztUECapbltyInfoInd;

typedef struct s1ap_ValueENBStatusTfrIEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztENB_StatusTfr_TprntCont sztENB_StatusTfr_TprntCont;
   } u;
} Szt_ValueENBStatusTfrIEsCls;
typedef struct s1apProtIE_Field_ENBStatusTfrIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueENBStatusTfrIEsCls value;
} SztProtIE_Field_ENBStatusTfrIEs;

typedef struct s1apProtIE_Cont_ENBStatusTfrIEs
{
   TknU16 noComp;
   SztProtIE_Field_ENBStatusTfrIEs *member;
}SztProtIE_Cont_ENBStatusTfrIEs;

typedef struct s1apENBStatusTfr
{
   TknPres pres;
   SztProtIE_Cont_ENBStatusTfrIEs protocolIEs;
} SztENBStatusTfr;

typedef struct s1ap_ValueMMEStatusTfrIEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztENB_StatusTfr_TprntCont sztENB_StatusTfr_TprntCont;
   } u;
} Szt_ValueMMEStatusTfrIEsCls;
typedef struct s1apProtIE_Field_MMEStatusTfrIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueMMEStatusTfrIEsCls value;
} SztProtIE_Field_MMEStatusTfrIEs;

typedef struct s1apProtIE_Cont_MMEStatusTfrIEs
{
   TknU16 noComp;
   SztProtIE_Field_MMEStatusTfrIEs *member;
}SztProtIE_Cont_MMEStatusTfrIEs;

typedef struct s1apMMEStatusTfr
{
   TknPres pres;
   SztProtIE_Cont_MMEStatusTfrIEs protocolIEs;
} SztMMEStatusTfr;

typedef struct s1ap_ValueTraceStartIEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztTraceActvn sztTraceActvn;
   } u;
} Szt_ValueTraceStartIEsCls;
typedef struct s1apProtIE_Field_TraceStartIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueTraceStartIEsCls value;
} SztProtIE_Field_TraceStartIEs;

typedef struct s1apProtIE_Cont_TraceStartIEs
{
   TknU16 noComp;
   SztProtIE_Field_TraceStartIEs *member;
}SztProtIE_Cont_TraceStartIEs;

typedef struct s1apTraceStart
{
   TknPres pres;
   SztProtIE_Cont_TraceStartIEs protocolIEs;
} SztTraceStart;

typedef struct s1ap_ValueTraceFailIndIEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztE_UTRAN_Trace_ID sztE_UTRAN_Trace_ID;
      SztCause sztCause;
   } u;
} Szt_ValueTraceFailIndIEsCls;
typedef struct s1apProtIE_Field_TraceFailIndIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueTraceFailIndIEsCls value;
} SztProtIE_Field_TraceFailIndIEs;

typedef struct s1apProtIE_Cont_TraceFailIndIEs
{
   TknU16 noComp;
   SztProtIE_Field_TraceFailIndIEs *member;
}SztProtIE_Cont_TraceFailIndIEs;

typedef struct s1apTraceFailInd
{
   TknPres pres;
   SztProtIE_Cont_TraceFailIndIEs protocolIEs;
} SztTraceFailInd;

typedef struct s1ap_ValueDeactvTraceIEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztE_UTRAN_Trace_ID sztE_UTRAN_Trace_ID;
   } u;
} Szt_ValueDeactvTraceIEsCls;
typedef struct s1apProtIE_Field_DeactvTraceIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueDeactvTraceIEsCls value;
} SztProtIE_Field_DeactvTraceIEs;

typedef struct s1apProtIE_Cont_DeactvTraceIEs
{
   TknU16 noComp;
   SztProtIE_Field_DeactvTraceIEs *member;
}SztProtIE_Cont_DeactvTraceIEs;

typedef struct s1apDeactvTrace
{
   TknPres pres;
   SztProtIE_Cont_DeactvTraceIEs protocolIEs;
} SztDeactvTrace;

typedef struct s1ap_ValueCellTrafficTraceIEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztE_UTRAN_Trace_ID sztE_UTRAN_Trace_ID;
      SztEUTRAN_CGI sztEUTRAN_CGI;
      SztTportLyrAddr sztTportLyrAddr;
   } u;
} Szt_ValueCellTrafficTraceIEsCls;
typedef struct s1apProtIE_Field_CellTrafficTraceIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueCellTrafficTraceIEsCls value;
} SztProtIE_Field_CellTrafficTraceIEs;

typedef struct s1apProtIE_Cont_CellTrafficTraceIEs
{
   TknU16 noComp;
   SztProtIE_Field_CellTrafficTraceIEs *member;
}SztProtIE_Cont_CellTrafficTraceIEs;

typedef struct s1apCellTrafficTrace
{
   TknPres pres;
   SztProtIE_Cont_CellTrafficTraceIEs protocolIEs;
} SztCellTrafficTrace;

typedef struct s1ap_ValueLocRprtngCntrlIEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztRqstTyp sztRqstTyp;
   } u;
} Szt_ValueLocRprtngCntrlIEsCls;
typedef struct s1apProtIE_Field_LocRprtngCntrlIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueLocRprtngCntrlIEsCls value;
} SztProtIE_Field_LocRprtngCntrlIEs;

typedef struct s1apProtIE_Cont_LocRprtngCntrlIEs
{
   TknU16 noComp;
   SztProtIE_Field_LocRprtngCntrlIEs *member;
}SztProtIE_Cont_LocRprtngCntrlIEs;

typedef struct s1apLocRprtngCntrl
{
   TknPres pres;
   SztProtIE_Cont_LocRprtngCntrlIEs protocolIEs;
} SztLocRprtngCntrl;

typedef struct s1ap_ValueLocRprtngFailIndIEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztCause sztCause;
   } u;
} Szt_ValueLocRprtngFailIndIEsCls;
typedef struct s1apProtIE_Field_LocRprtngFailIndIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueLocRprtngFailIndIEsCls value;
} SztProtIE_Field_LocRprtngFailIndIEs;

typedef struct s1apProtIE_Cont_LocRprtngFailIndIEs
{
   TknU16 noComp;
   SztProtIE_Field_LocRprtngFailIndIEs *member;
}SztProtIE_Cont_LocRprtngFailIndIEs;

typedef struct s1apLocRprtngFailInd
{
   TknPres pres;
   SztProtIE_Cont_LocRprtngFailIndIEs protocolIEs;
} SztLocRprtngFailInd;

typedef struct s1ap_ValueLocReportIEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztEUTRAN_CGI sztEUTRAN_CGI;
      SztTAI sztTAI;
      SztRqstTyp sztRqstTyp;
   } u;
} Szt_ValueLocReportIEsCls;
typedef struct s1apProtIE_Field_LocReportIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueLocReportIEsCls value;
} SztProtIE_Field_LocReportIEs;

typedef struct s1apProtIE_Cont_LocReportIEs
{
   TknU16 noComp;
   SztProtIE_Field_LocReportIEs *member;
}SztProtIE_Cont_LocReportIEs;

typedef struct s1apLocReport
{
   TknPres pres;
   SztProtIE_Cont_LocReportIEs protocolIEs;
} SztLocReport;

typedef struct s1ap_ValueOverloadStartIEsCls{
   union {
      SztOverloadResp sztOverloadResp;
   } u;
} Szt_ValueOverloadStartIEsCls;
typedef struct s1apProtIE_Field_OverloadStartIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueOverloadStartIEsCls value;
} SztProtIE_Field_OverloadStartIEs;

typedef struct s1apProtIE_Cont_OverloadStartIEs
{
   TknU16 noComp;
   SztProtIE_Field_OverloadStartIEs *member;
}SztProtIE_Cont_OverloadStartIEs;

typedef struct s1apOverloadStart
{
   TknPres pres;
   SztProtIE_Cont_OverloadStartIEs protocolIEs;
} SztOverloadStart;

typedef struct s1ap_ValueOverloadStopIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ValueOverloadStopIEsCls;
typedef struct s1apProtIE_Field_OverloadStopIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueOverloadStopIEsCls value;
} SztProtIE_Field_OverloadStopIEs;

typedef struct s1apProtIE_Cont_OverloadStopIEs
{
   TknU16 noComp;
   SztProtIE_Field_OverloadStopIEs *member;
}SztProtIE_Cont_OverloadStopIEs;

typedef struct s1apOverloadStop
{
   TknPres pres;
   SztProtIE_Cont_OverloadStopIEs protocolIEs;
} SztOverloadStop;

typedef struct s1ap_ValueWriteReplaceWarningRqstIEsCls{
   union {
      SztMsgIdentifier sztMsgIdentifier;
      SztSerialNumber sztSerialNumber;
      SztWarningAreaLst sztWarningAreaLst;
      SztRepetitionPeriod sztRepetitionPeriod;
      SztExtendedRepetitionPeriod sztExtendedRepetitionPeriod;
      SztNumberofBroadcastRqst sztNumberofBroadcastRqst;
      SztWarningTyp sztWarningTyp;
      SztWarningSecurInfo sztWarningSecurInfo;
      SztDataCodingScheme sztDataCodingScheme;
      SztWarningMsgContents sztWarningMsgContents;
      SztConcurrentWarningMsgIndicator sztConcurrentWarningMsgIndicator;
   } u;
} Szt_ValueWriteReplaceWarningRqstIEsCls;
typedef struct s1apProtIE_Field_WriteReplaceWarningRqstIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueWriteReplaceWarningRqstIEsCls value;
} SztProtIE_Field_WriteReplaceWarningRqstIEs;

typedef struct s1apProtIE_Cont_WriteReplaceWarningRqstIEs
{
   TknU16 noComp;
   SztProtIE_Field_WriteReplaceWarningRqstIEs *member;
}SztProtIE_Cont_WriteReplaceWarningRqstIEs;

typedef struct s1apWriteReplaceWarningRqst
{
   TknPres pres;
   SztProtIE_Cont_WriteReplaceWarningRqstIEs protocolIEs;
} SztWriteReplaceWarningRqst;

typedef struct s1ap_ValueWriteReplaceWarningRespIEsCls{
   union {
      SztMsgIdentifier sztMsgIdentifier;
      SztSerialNumber sztSerialNumber;
      SztBroadcastCompletedAreaLst sztBroadcastCompletedAreaLst;
      SztCriticalityDiag sztCriticalityDiag;
   } u;
} Szt_ValueWriteReplaceWarningRespIEsCls;
typedef struct s1apProtIE_Field_WriteReplaceWarningRespIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueWriteReplaceWarningRespIEsCls value;
} SztProtIE_Field_WriteReplaceWarningRespIEs;

typedef struct s1apProtIE_Cont_WriteReplaceWarningRespIEs
{
   TknU16 noComp;
   SztProtIE_Field_WriteReplaceWarningRespIEs *member;
}SztProtIE_Cont_WriteReplaceWarningRespIEs;

typedef struct s1apWriteReplaceWarningResp
{
   TknPres pres;
   SztProtIE_Cont_WriteReplaceWarningRespIEs protocolIEs;
} SztWriteReplaceWarningResp;

typedef struct s1apInter_SystemInformTfrTyp
{
   TknU8 choice;
   union {
      SztRIMTfr rIMTfr;
   } val;
} SztInter_SystemInformTfrTyp;

typedef struct s1ap_ValueENBDirectInformTfrIEsCls{
   union {
      SztInter_SystemInformTfrTyp sztInter_SystemInformTfrTyp;
   } u;
} Szt_ValueENBDirectInformTfrIEsCls;
typedef struct s1apProtIE_Field_ENBDirectInformTfrIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueENBDirectInformTfrIEsCls value;
} SztProtIE_Field_ENBDirectInformTfrIEs;

typedef struct s1apProtIE_Cont_ENBDirectInformTfrIEs
{
   TknU16 noComp;
   SztProtIE_Field_ENBDirectInformTfrIEs *member;
}SztProtIE_Cont_ENBDirectInformTfrIEs;

typedef struct s1apENBDirectInformTfr
{
   TknPres pres;
   SztProtIE_Cont_ENBDirectInformTfrIEs protocolIEs;
} SztENBDirectInformTfr;

typedef struct s1ap_ValueMMEDirectInformTfrIEsCls{
   union {
      SztInter_SystemInformTfrTyp sztInter_SystemInformTfrTyp;
   } u;
} Szt_ValueMMEDirectInformTfrIEsCls;
typedef struct s1apProtIE_Field_MMEDirectInformTfrIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueMMEDirectInformTfrIEsCls value;
} SztProtIE_Field_MMEDirectInformTfrIEs;

typedef struct s1apProtIE_Cont_MMEDirectInformTfrIEs
{
   TknU16 noComp;
   SztProtIE_Field_MMEDirectInformTfrIEs *member;
}SztProtIE_Cont_MMEDirectInformTfrIEs;

typedef struct s1apMMEDirectInformTfr
{
   TknPres pres;
   SztProtIE_Cont_MMEDirectInformTfrIEs protocolIEs;
} SztMMEDirectInformTfr;

typedef struct s1ap_ValueENBConfigTfrIEsCls{
   union {
      SztSONConfigTfr sztSONConfigTfr;
   } u;
} Szt_ValueENBConfigTfrIEsCls;
typedef struct s1apProtIE_Field_ENBConfigTfrIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueENBConfigTfrIEsCls value;
} SztProtIE_Field_ENBConfigTfrIEs;

typedef struct s1apProtIE_Cont_ENBConfigTfrIEs
{
   TknU16 noComp;
   SztProtIE_Field_ENBConfigTfrIEs *member;
}SztProtIE_Cont_ENBConfigTfrIEs;

typedef struct s1apENBConfigTfr
{
   TknPres pres;
   SztProtIE_Cont_ENBConfigTfrIEs protocolIEs;
} SztENBConfigTfr;

typedef struct s1ap_ValueMMEConfigTfrIEsCls{
   union {
      SztSONConfigTfr sztSONConfigTfr;
   } u;
} Szt_ValueMMEConfigTfrIEsCls;
typedef struct s1apProtIE_Field_MMEConfigTfrIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueMMEConfigTfrIEsCls value;
} SztProtIE_Field_MMEConfigTfrIEs;

typedef struct s1apProtIE_Cont_MMEConfigTfrIEs
{
   TknU16 noComp;
   SztProtIE_Field_MMEConfigTfrIEs *member;
}SztProtIE_Cont_MMEConfigTfrIEs;

typedef struct s1apMMEConfigTfr
{
   TknPres pres;
   SztProtIE_Cont_MMEConfigTfrIEs protocolIEs;
} SztMMEConfigTfr;

typedef struct s1ap_ValuePrivMsgIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ValuePrivMsgIEsCls;
typedef struct s1apPrivIE_Field_PrivMsgIEs
{
   TknPres pres;
   SztPrivIE_ID id;
   SztCriticality criticality;
   Szt_ValuePrivMsgIEsCls value;
} SztPrivIE_Field_PrivMsgIEs;

typedef struct s1apPrivIE_Cont_PrivMsgIEs
{
   TknU16 noComp;
   SztPrivIE_Field_PrivMsgIEs *member;
}SztPrivIE_Cont_PrivMsgIEs;

typedef struct s1apPrivMsg
{
   TknPres pres;
   SztPrivIE_Cont_PrivMsgIEs privateIEs;
} SztPrivMsg;

typedef struct s1ap_ValueKillRqstIEsCls{
   union {
      SztMsgIdentifier sztMsgIdentifier;
      SztSerialNumber sztSerialNumber;
      SztWarningAreaLst sztWarningAreaLst;
   } u;
} Szt_ValueKillRqstIEsCls;
typedef struct s1apProtIE_Field_KillRqstIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueKillRqstIEsCls value;
} SztProtIE_Field_KillRqstIEs;

typedef struct s1apProtIE_Cont_KillRqstIEs
{
   TknU16 noComp;
   SztProtIE_Field_KillRqstIEs *member;
}SztProtIE_Cont_KillRqstIEs;

typedef struct s1apKillRqst
{
   TknPres pres;
   SztProtIE_Cont_KillRqstIEs protocolIEs;
} SztKillRqst;

typedef struct s1ap_ValueKillRespIEsCls{
   union {
      SztMsgIdentifier sztMsgIdentifier;
      SztSerialNumber sztSerialNumber;
      SztBroadcastCancelledAreaLst sztBroadcastCancelledAreaLst;
      SztCriticalityDiag sztCriticalityDiag;
   } u;
} Szt_ValueKillRespIEsCls;
typedef struct s1apProtIE_Field_KillRespIEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueKillRespIEsCls value;
} SztProtIE_Field_KillRespIEs;

typedef struct s1apProtIE_Cont_KillRespIEs
{
   TknU16 noComp;
   SztProtIE_Field_KillRespIEs *member;
}SztProtIE_Cont_KillRespIEs;

typedef struct s1apKillResp
{
   TknPres pres;
   SztProtIE_Cont_KillRespIEs protocolIEs;
} SztKillResp;

typedef struct s1ap_ValueDlnkUEAssociatedLPPaTport_IEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztRouting_ID sztRouting_ID;
      SztLPPa_PDU sztLPPa_PDU;
   } u;
} Szt_ValueDlnkUEAssociatedLPPaTport_IEsCls;
typedef struct s1apProtIE_Field_DlnkUEAssociatedLPPaTport_IEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueDlnkUEAssociatedLPPaTport_IEsCls value;
} SztProtIE_Field_DlnkUEAssociatedLPPaTport_IEs;

typedef struct s1apProtIE_Cont_DlnkUEAssociatedLPPaTport_IEs
{
   TknU16 noComp;
   SztProtIE_Field_DlnkUEAssociatedLPPaTport_IEs *member;
}SztProtIE_Cont_DlnkUEAssociatedLPPaTport_IEs;

typedef struct s1apDlnkUEAssociatedLPPaTport
{
   TknPres pres;
   SztProtIE_Cont_DlnkUEAssociatedLPPaTport_IEs protocolIEs;
} SztDlnkUEAssociatedLPPaTport;

typedef struct s1ap_ValueUlnkUEAssociatedLPPaTport_IEsCls{
   union {
      SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
      SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
      SztRouting_ID sztRouting_ID;
      SztLPPa_PDU sztLPPa_PDU;
   } u;
} Szt_ValueUlnkUEAssociatedLPPaTport_IEsCls;
typedef struct s1apProtIE_Field_UlnkUEAssociatedLPPaTport_IEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueUlnkUEAssociatedLPPaTport_IEsCls value;
} SztProtIE_Field_UlnkUEAssociatedLPPaTport_IEs;

typedef struct s1apProtIE_Cont_UlnkUEAssociatedLPPaTport_IEs
{
   TknU16 noComp;
   SztProtIE_Field_UlnkUEAssociatedLPPaTport_IEs *member;
}SztProtIE_Cont_UlnkUEAssociatedLPPaTport_IEs;

typedef struct s1apUlnkUEAssociatedLPPaTport
{
   TknPres pres;
   SztProtIE_Cont_UlnkUEAssociatedLPPaTport_IEs protocolIEs;
} SztUlnkUEAssociatedLPPaTport;

typedef struct s1ap_ValueDlnkNonUEAssociatedLPPaTport_IEsCls{
   union {
      SztRouting_ID sztRouting_ID;
      SztLPPa_PDU sztLPPa_PDU;
   } u;
} Szt_ValueDlnkNonUEAssociatedLPPaTport_IEsCls;
typedef struct s1apProtIE_Field_DlnkNonUEAssociatedLPPaTport_IEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueDlnkNonUEAssociatedLPPaTport_IEsCls value;
} SztProtIE_Field_DlnkNonUEAssociatedLPPaTport_IEs;

typedef struct s1apProtIE_Cont_DlnkNonUEAssociatedLPPaTport_IEs
{
   TknU16 noComp;
   SztProtIE_Field_DlnkNonUEAssociatedLPPaTport_IEs *member;
}SztProtIE_Cont_DlnkNonUEAssociatedLPPaTport_IEs;

typedef struct s1apDlnkNonUEAssociatedLPPaTport
{
   TknPres pres;
   SztProtIE_Cont_DlnkNonUEAssociatedLPPaTport_IEs protocolIEs;
} SztDlnkNonUEAssociatedLPPaTport;

typedef struct s1ap_ValueUlnkNonUEAssociatedLPPaTport_IEsCls{
   union {
      SztRouting_ID sztRouting_ID;
      SztLPPa_PDU sztLPPa_PDU;
   } u;
} Szt_ValueUlnkNonUEAssociatedLPPaTport_IEsCls;
typedef struct s1apProtIE_Field_UlnkNonUEAssociatedLPPaTport_IEs
{
   TknPres pres;
   SztProtIE_ID id;
   SztCriticality criticality;
   Szt_ValueUlnkNonUEAssociatedLPPaTport_IEsCls value;
} SztProtIE_Field_UlnkNonUEAssociatedLPPaTport_IEs;

typedef struct s1apProtIE_Cont_UlnkNonUEAssociatedLPPaTport_IEs
{
   TknU16 noComp;
   SztProtIE_Field_UlnkNonUEAssociatedLPPaTport_IEs *member;
}SztProtIE_Cont_UlnkNonUEAssociatedLPPaTport_IEs;

typedef struct s1apUlnkNonUEAssociatedLPPaTport
{
   TknPres pres;
   SztProtIE_Cont_UlnkNonUEAssociatedLPPaTport_IEs protocolIEs;
} SztUlnkNonUEAssociatedLPPaTport;

typedef struct s1ap_InitiatingMsgCls{
   union {
      SztHovrReqd sztHovrReqd;
      SztHovrRqst sztHovrRqst;
      SztPathSwRqst sztPathSwRqst;
      SztE_RABSetupRqst sztE_RABSetupRqst;
      SztE_RABMdfyRqst sztE_RABMdfyRqst;
      SztE_RABRlsCmmd sztE_RABRlsCmmd;
      SztInitCntxtSetupRqst sztInitCntxtSetupRqst;
      SztHovrCancel sztHovrCancel;
      SztKillRqst sztKillRqst;
      SztReset sztReset;
      SztS1SetupRqst sztS1SetupRqst;
      SztUECntxtModificationRqst sztUECntxtModificationRqst;
      SztUECntxtRlsCmmd sztUECntxtRlsCmmd;
      SztENBConfigUpd sztENBConfigUpd;
      SztMMEConfigUpd sztMMEConfigUpd;
      SztWriteReplaceWarningRqst sztWriteReplaceWarningRqst;
      SztHovrNtfy sztHovrNtfy;
      SztE_RABRlsInd sztE_RABRlsInd;
      SztPag sztPag;
      SztDlnkNASTport sztDlnkNASTport;
      SztInitUEMsg sztInitUEMsg;
      SztUlnkNASTport sztUlnkNASTport;
      SztErrInd sztErrInd;
      SztNASNonDlvryInd sztNASNonDlvryInd;
      SztUECntxtRlsRqst sztUECntxtRlsRqst;
      SztDlnkS1cdma2000tunneling sztDlnkS1cdma2000tunneling;
      SztUlnkS1cdma2000tunneling sztUlnkS1cdma2000tunneling;
      SztUECapbltyInfoInd sztUECapbltyInfoInd;
      SztENBStatusTfr sztENBStatusTfr;
      SztMMEStatusTfr sztMMEStatusTfr;
      SztDeactvTrace sztDeactvTrace;
      SztTraceStart sztTraceStart;
      SztTraceFailInd sztTraceFailInd;
      SztCellTrafficTrace sztCellTrafficTrace;
      SztLocRprtngCntrl sztLocRprtngCntrl;
      SztLocRprtngFailInd sztLocRprtngFailInd;
      SztLocReport sztLocReport;
      SztOverloadStart sztOverloadStart;
      SztOverloadStop sztOverloadStop;
      SztENBDirectInformTfr sztENBDirectInformTfr;
      SztMMEDirectInformTfr sztMMEDirectInformTfr;
      SztENBConfigTfr sztENBConfigTfr;
      SztMMEConfigTfr sztMMEConfigTfr;
      SztPrivMsg sztPrivMsg;
      SztDlnkUEAssociatedLPPaTport sztDlnkUEAssociatedLPPaTport;
      SztUlnkUEAssociatedLPPaTport sztUlnkUEAssociatedLPPaTport;
      SztDlnkNonUEAssociatedLPPaTport sztDlnkNonUEAssociatedLPPaTport;
      SztUlnkNonUEAssociatedLPPaTport sztUlnkNonUEAssociatedLPPaTport;
   } u;
} Szt_InitiatingMsgCls;
typedef struct s1apInitiatingMsg
{
   TknPres pres;
   SztProcedureCode procedureCode;
   SztCriticality criticality;
   Szt_InitiatingMsgCls value;
} SztInitiatingMsg;

typedef struct s1ap_SuccessfulOutcomeCls{
   union {
      SztHovrCmmd sztHovrCmmd;
      SztHovrRqstAckg sztHovrRqstAckg;
      SztPathSwRqstAckg sztPathSwRqstAckg;
      SztE_RABSetupResp sztE_RABSetupResp;
      SztE_RABMdfyResp sztE_RABMdfyResp;
      SztE_RABRlsResp sztE_RABRlsResp;
      SztInitCntxtSetupResp sztInitCntxtSetupResp;
      SztHovrCancelAckg sztHovrCancelAckg;
      SztKillResp sztKillResp;
      SztResetAckg sztResetAckg;
      SztS1SetupResp sztS1SetupResp;
      SztUECntxtModificationResp sztUECntxtModificationResp;
      SztUECntxtRlsComplete sztUECntxtRlsComplete;
      SztENBConfigUpdAckg sztENBConfigUpdAckg;
      SztMMEConfigUpdAckg sztMMEConfigUpdAckg;
      SztWriteReplaceWarningResp sztWriteReplaceWarningResp;
   } u;
} Szt_SuccessfulOutcomeCls;
typedef struct s1apSuccessfulOutcome
{
   TknPres pres;
   SztProcedureCode procedureCode;
   SztCriticality criticality;
   Szt_SuccessfulOutcomeCls value;
} SztSuccessfulOutcome;

typedef struct s1ap_UnsuccessfulOutcomeCls{
   union {
      SztHovrPrepFail sztHovrPrepFail;
      SztHovrFail sztHovrFail;
      SztPathSwRqstFail sztPathSwRqstFail;
      SztInitCntxtSetupFail sztInitCntxtSetupFail;
      SztS1SetupFail sztS1SetupFail;
      SztUECntxtModificationFail sztUECntxtModificationFail;
      SztENBConfigUpdFail sztENBConfigUpdFail;
      SztMMEConfigUpdFail sztMMEConfigUpdFail;
   } u;
} Szt_UnsuccessfulOutcomeCls;
typedef struct s1apUnsuccessfulOutcome
{
   TknPres pres;
   SztProcedureCode procedureCode;
   SztCriticality criticality;
   Szt_UnsuccessfulOutcomeCls value;
} SztUnsuccessfulOutcome;

typedef struct s1apS1AP_PDU
{
   TknU8 choice;
   union {
      SztInitiatingMsg initiatingMsg;
      SztSuccessfulOutcome successfulOutcome;
      SztUnsuccessfulOutcome unsuccessfulOutcome;
   } val;
} SztS1AP_PDU;
# 148 "../..//enbapp/src/wr.h" 2

# 1 "../..//cm/szt_pk.x" 1
# 1342 "../..//cm/szt_pk.x"
#define __SZTPKX__ 

extern S16 cmPkSztPrivIE_ID (SztPrivIE_ID *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnAllocnAndRetentionPriority_ExtIEsCls (Szt_ExtnAllocnAndRetentionPriority_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_AllocnAndRetentionPriority_ExtIEs (SztProtExtnField_AllocnAndRetentionPriority_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_AllocnAndRetentionPriority_ExtIEs (SztProtExtnCont_AllocnAndRetentionPriority_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztAllocnAndRetentionPriority (SztAllocnAndRetentionPriority *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnCOUNTvalue_ExtIEsCls (Szt_ExtnCOUNTvalue_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_COUNTvalue_ExtIEs (SztProtExtnField_COUNTvalue_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_COUNTvalue_ExtIEs (SztProtExtnCont_COUNTvalue_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztCOUNTvalue (SztCOUNTvalue *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnBrs_SubjToStatusTfr_ItemExtIEsCls (Szt_ExtnBrs_SubjToStatusTfr_ItemExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_Brs_SubjToStatusTfr_ItemExtIEs (SztProtExtnField_Brs_SubjToStatusTfr_ItemExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_Brs_SubjToStatusTfr_ItemExtIEs (SztProtExtnCont_Brs_SubjToStatusTfr_ItemExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztBrs_SubjToStatusTfr_Item (SztBrs_SubjToStatusTfr_Item *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueBrs_SubjToStatusTfr_ItemIEsCls (Szt_ValueBrs_SubjToStatusTfr_ItemIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_Brs_SubjToStatusTfr_ItemIEs (SztProtIE_Field_Brs_SubjToStatusTfr_ItemIEs *param, Buffer *mBuf);
extern S16 cmPkSztBrs_SubjToStatusTfrLst (SztBrs_SubjToStatusTfrLst *param, Buffer *mBuf);
extern S16 cmPkSztBPLMNs (SztBPLMNs *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnEUTRAN_CGI_ExtIEsCls (Szt_ExtnEUTRAN_CGI_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_EUTRAN_CGI_ExtIEs (SztProtExtnField_EUTRAN_CGI_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_EUTRAN_CGI_ExtIEs (SztProtExtnCont_EUTRAN_CGI_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztEUTRAN_CGI (SztEUTRAN_CGI *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnCellID_Cancelled_Item_ExtIEsCls (Szt_ExtnCellID_Cancelled_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_CellID_Cancelled_Item_ExtIEs (SztProtExtnField_CellID_Cancelled_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_CellID_Cancelled_Item_ExtIEs (SztProtExtnCont_CellID_Cancelled_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztCellID_Cancelled_Item (SztCellID_Cancelled_Item *param, Buffer *mBuf);
extern S16 cmPkSztCellID_Cancelled (SztCellID_Cancelled *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnTAI_ExtIEsCls (Szt_ExtnTAI_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_TAI_ExtIEs (SztProtExtnField_TAI_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_TAI_ExtIEs (SztProtExtnCont_TAI_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztTAI (SztTAI *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnCancelledCellinTAI_Item_ExtIEsCls (Szt_ExtnCancelledCellinTAI_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_CancelledCellinTAI_Item_ExtIEs (SztProtExtnField_CancelledCellinTAI_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_CancelledCellinTAI_Item_ExtIEs (SztProtExtnCont_CancelledCellinTAI_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztCancelledCellinTAI_Item (SztCancelledCellinTAI_Item *param, Buffer *mBuf);
extern S16 cmPkSztCancelledCellinTAI (SztCancelledCellinTAI *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnTAI_Cancelled_Item_ExtIEsCls (Szt_ExtnTAI_Cancelled_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_TAI_Cancelled_Item_ExtIEs (SztProtExtnField_TAI_Cancelled_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_TAI_Cancelled_Item_ExtIEs (SztProtExtnCont_TAI_Cancelled_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztTAI_Cancelled_Item (SztTAI_Cancelled_Item *param, Buffer *mBuf);
extern S16 cmPkSztTAI_Cancelled (SztTAI_Cancelled *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnCancelledCellinEAI_Item_ExtIEsCls (Szt_ExtnCancelledCellinEAI_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_CancelledCellinEAI_Item_ExtIEs (SztProtExtnField_CancelledCellinEAI_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_CancelledCellinEAI_Item_ExtIEs (SztProtExtnCont_CancelledCellinEAI_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztCancelledCellinEAI_Item (SztCancelledCellinEAI_Item *param, Buffer *mBuf);
extern S16 cmPkSztCancelledCellinEAI (SztCancelledCellinEAI *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnEmergencyAreaID_Cancelled_Item_ExtIEsCls (Szt_ExtnEmergencyAreaID_Cancelled_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_EmergencyAreaID_Cancelled_Item_ExtIEs (SztProtExtnField_EmergencyAreaID_Cancelled_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_EmergencyAreaID_Cancelled_Item_ExtIEs (SztProtExtnCont_EmergencyAreaID_Cancelled_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztEmergencyAreaID_Cancelled_Item (SztEmergencyAreaID_Cancelled_Item *param, Buffer *mBuf);
extern S16 cmPkSztEmergencyAreaID_Cancelled (SztEmergencyAreaID_Cancelled *param, Buffer *mBuf);
extern S16 cmPkSztBroadcastCancelledAreaLst (SztBroadcastCancelledAreaLst *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnCellID_Broadcast_Item_ExtIEsCls (Szt_ExtnCellID_Broadcast_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_CellID_Broadcast_Item_ExtIEs (SztProtExtnField_CellID_Broadcast_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_CellID_Broadcast_Item_ExtIEs (SztProtExtnCont_CellID_Broadcast_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztCellID_Broadcast_Item (SztCellID_Broadcast_Item *param, Buffer *mBuf);
extern S16 cmPkSztCellID_Broadcast (SztCellID_Broadcast *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnCompletedCellinTAI_Item_ExtIEsCls (Szt_ExtnCompletedCellinTAI_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_CompletedCellinTAI_Item_ExtIEs (SztProtExtnField_CompletedCellinTAI_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_CompletedCellinTAI_Item_ExtIEs (SztProtExtnCont_CompletedCellinTAI_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztCompletedCellinTAI_Item (SztCompletedCellinTAI_Item *param, Buffer *mBuf);
extern S16 cmPkSztCompletedCellinTAI (SztCompletedCellinTAI *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnTAI_Broadcast_Item_ExtIEsCls (Szt_ExtnTAI_Broadcast_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_TAI_Broadcast_Item_ExtIEs (SztProtExtnField_TAI_Broadcast_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_TAI_Broadcast_Item_ExtIEs (SztProtExtnCont_TAI_Broadcast_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztTAI_Broadcast_Item (SztTAI_Broadcast_Item *param, Buffer *mBuf);
extern S16 cmPkSztTAI_Broadcast (SztTAI_Broadcast *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnCompletedCellinEAI_Item_ExtIEsCls (Szt_ExtnCompletedCellinEAI_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_CompletedCellinEAI_Item_ExtIEs (SztProtExtnField_CompletedCellinEAI_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_CompletedCellinEAI_Item_ExtIEs (SztProtExtnCont_CompletedCellinEAI_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztCompletedCellinEAI_Item (SztCompletedCellinEAI_Item *param, Buffer *mBuf);
extern S16 cmPkSztCompletedCellinEAI (SztCompletedCellinEAI *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnEmergencyAreaID_Broadcast_Item_ExtIEsCls (Szt_ExtnEmergencyAreaID_Broadcast_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_EmergencyAreaID_Broadcast_Item_ExtIEs (SztProtExtnField_EmergencyAreaID_Broadcast_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_EmergencyAreaID_Broadcast_Item_ExtIEs (SztProtExtnCont_EmergencyAreaID_Broadcast_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztEmergencyAreaID_Broadcast_Item (SztEmergencyAreaID_Broadcast_Item *param, Buffer *mBuf);
extern S16 cmPkSztEmergencyAreaID_Broadcast (SztEmergencyAreaID_Broadcast *param, Buffer *mBuf);
extern S16 cmPkSztBroadcastCompletedAreaLst (SztBroadcastCompletedAreaLst *param, Buffer *mBuf);
extern S16 cmPkSztCause (SztCause *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnCdma2000OneXSRVCCInfo_ExtIEsCls (Szt_ExtnCdma2000OneXSRVCCInfo_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_Cdma2000OneXSRVCCInfo_ExtIEs (SztProtExtnField_Cdma2000OneXSRVCCInfo_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_Cdma2000OneXSRVCCInfo_ExtIEs (SztProtExtnCont_Cdma2000OneXSRVCCInfo_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztCdma2000OneXSRVCCInfo (SztCdma2000OneXSRVCCInfo *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnCellTyp_ExtIEsCls (Szt_ExtnCellTyp_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_CellTyp_ExtIEs (SztProtExtnField_CellTyp_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_CellTyp_ExtIEs (SztProtExtnCont_CellTyp_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztCellTyp (SztCellTyp *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnCGI_ExtIEsCls (Szt_ExtnCGI_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_CGI_ExtIEs (SztProtExtnField_CGI_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_CGI_ExtIEs (SztProtExtnCont_CGI_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztCGI (SztCGI *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnCSG_IdLst_Item_ExtIEsCls (Szt_ExtnCSG_IdLst_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_CSG_IdLst_Item_ExtIEs (SztProtExtnField_CSG_IdLst_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_CSG_IdLst_Item_ExtIEs (SztProtExtnCont_CSG_IdLst_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztCSG_IdLst_Item (SztCSG_IdLst_Item *param, Buffer *mBuf);
extern S16 cmPkSztCSG_IdLst (SztCSG_IdLst *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnCriticalityDiag_IE_Item_ExtIEsCls (Szt_ExtnCriticalityDiag_IE_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_CriticalityDiag_IE_Item_ExtIEs (SztProtExtnField_CriticalityDiag_IE_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_CriticalityDiag_IE_Item_ExtIEs (SztProtExtnCont_CriticalityDiag_IE_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztCriticalityDiag_IE_Item (SztCriticalityDiag_IE_Item *param, Buffer *mBuf);
extern S16 cmPkSztCriticalityDiag_IE_Lst (SztCriticalityDiag_IE_Lst *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnCriticalityDiag_ExtIEsCls (Szt_ExtnCriticalityDiag_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_CriticalityDiag_ExtIEs (SztProtExtnField_CriticalityDiag_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_CriticalityDiag_ExtIEs (SztProtExtnCont_CriticalityDiag_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztCriticalityDiag (SztCriticalityDiag *param, Buffer *mBuf);
extern S16 cmPkSztECGILst (SztECGILst *param, Buffer *mBuf);
extern S16 cmPkSztEmergencyAreaIDLst (SztEmergencyAreaIDLst *param, Buffer *mBuf);
extern S16 cmPkSztENB_ID (SztENB_ID *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnLAI_ExtIEsCls (Szt_ExtnLAI_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_LAI_ExtIEs (SztProtExtnField_LAI_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_LAI_ExtIEs (SztProtExtnCont_LAI_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztLAI (SztLAI *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnGERAN_Cell_ID_ExtIEsCls (Szt_ExtnGERAN_Cell_ID_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_GERAN_Cell_ID_ExtIEs (SztProtExtnField_GERAN_Cell_ID_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_GERAN_Cell_ID_ExtIEs (SztProtExtnCont_GERAN_Cell_ID_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztGERAN_Cell_ID (SztGERAN_Cell_ID *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnGlobalENB_ID_ExtIEsCls (Szt_ExtnGlobalENB_ID_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_GlobalENB_ID_ExtIEs (SztProtExtnField_GlobalENB_ID_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_GlobalENB_ID_ExtIEs (SztProtExtnCont_GlobalENB_ID_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztGlobal_ENB_ID (SztGlobal_ENB_ID *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnENB_StatusTfr_TprntCont_ExtIEsCls (Szt_ExtnENB_StatusTfr_TprntCont_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_ENB_StatusTfr_TprntCont_ExtIEs (SztProtExtnField_ENB_StatusTfr_TprntCont_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_ENB_StatusTfr_TprntCont_ExtIEs (SztProtExtnCont_ENB_StatusTfr_TprntCont_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztENB_StatusTfr_TprntCont (SztENB_StatusTfr_TprntCont *param, Buffer *mBuf);
extern S16 cmPkSztENBX2TLAs (SztENBX2TLAs *param, Buffer *mBuf);
extern S16 cmPkSztEPLMNs (SztEPLMNs *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnE_RABInformLstItem_ExtIEsCls (Szt_ExtnE_RABInformLstItem_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_E_RABInformLstItem_ExtIEs (SztProtExtnField_E_RABInformLstItem_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_E_RABInformLstItem_ExtIEs (SztProtExtnCont_E_RABInformLstItem_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABInformLstItem (SztE_RABInformLstItem *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABInformLstIEsCls (Szt_ValueE_RABInformLstIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABInformLstIEs (SztProtIE_Field_E_RABInformLstIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABInformLst (SztE_RABInformLst *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnE_RABItem_ExtIEsCls (Szt_ExtnE_RABItem_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_E_RABItem_ExtIEs (SztProtExtnField_E_RABItem_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_E_RABItem_ExtIEs (SztProtExtnCont_E_RABItem_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABItem (SztE_RABItem *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABItemIEsCls (Szt_ValueE_RABItemIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABItemIEs (SztProtIE_Field_E_RABItemIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABLst (SztE_RABLst *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnGBR_QosInform_ExtIEsCls (Szt_ExtnGBR_QosInform_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_GBR_QosInform_ExtIEs (SztProtExtnField_GBR_QosInform_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_GBR_QosInform_ExtIEs (SztProtExtnCont_GBR_QosInform_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztGBR_QosInform (SztGBR_QosInform *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnE_RABQoSParams_ExtIEsCls (Szt_ExtnE_RABQoSParams_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_E_RABQoSParams_ExtIEs (SztProtExtnField_E_RABQoSParams_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_E_RABQoSParams_ExtIEs (SztProtExtnCont_E_RABQoSParams_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABLvlQoSParams (SztE_RABLvlQoSParams *param, Buffer *mBuf);
extern S16 cmPkSztForbiddenTACs (SztForbiddenTACs *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnForbiddenTAs_Item_ExtIEsCls (Szt_ExtnForbiddenTAs_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_ForbiddenTAs_Item_ExtIEs (SztProtExtnField_ForbiddenTAs_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_ForbiddenTAs_Item_ExtIEs (SztProtExtnCont_ForbiddenTAs_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztForbiddenTAs_Item (SztForbiddenTAs_Item *param, Buffer *mBuf);
extern S16 cmPkSztForbiddenTAs (SztForbiddenTAs *param, Buffer *mBuf);
extern S16 cmPkSztForbiddenLACs (SztForbiddenLACs *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnForbiddenLAs_Item_ExtIEsCls (Szt_ExtnForbiddenLAs_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_ForbiddenLAs_Item_ExtIEs (SztProtExtnField_ForbiddenLAs_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_ForbiddenLAs_Item_ExtIEs (SztProtExtnCont_ForbiddenLAs_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztForbiddenLAs_Item (SztForbiddenLAs_Item *param, Buffer *mBuf);
extern S16 cmPkSztForbiddenLAs (SztForbiddenLAs *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnGUMMEI_ExtIEsCls (Szt_ExtnGUMMEI_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_GUMMEI_ExtIEs (SztProtExtnField_GUMMEI_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_GUMMEI_ExtIEs (SztProtExtnCont_GUMMEI_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztGUMMEI (SztGUMMEI *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnHovrRestrnLst_ExtIEsCls (Szt_ExtnHovrRestrnLst_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_HovrRestrnLst_ExtIEs (SztProtExtnField_HovrRestrnLst_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_HovrRestrnLst_ExtIEs (SztProtExtnCont_HovrRestrnLst_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztHovrRestrnLst (SztHovrRestrnLst *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnLastVisitedEUTRANCellInform_ExtIEsCls (Szt_ExtnLastVisitedEUTRANCellInform_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_LastVisitedEUTRANCellInform_ExtIEs (SztProtExtnField_LastVisitedEUTRANCellInform_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_LastVisitedEUTRANCellInform_ExtIEs (SztProtExtnCont_LastVisitedEUTRANCellInform_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztLastVisitedEUTRANCellInform (SztLastVisitedEUTRANCellInform *param, Buffer *mBuf);
extern S16 cmPkSztLastVisitedGERANCellInform (SztLastVisitedGERANCellInform *param, Buffer *mBuf);
extern S16 cmPkSztLastVisitedCell_Item (SztLastVisitedCell_Item *param, Buffer *mBuf);
extern S16 cmPkSztOverloadResp (SztOverloadResp *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnRqstTyp_ExtIEsCls (Szt_ExtnRqstTyp_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_RqstTyp_ExtIEs (SztProtExtnField_RqstTyp_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_RqstTyp_ExtIEs (SztProtExtnCont_RqstTyp_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztRqstTyp (SztRqstTyp *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnTgetRNC_ID_ExtIEsCls (Szt_ExtnTgetRNC_ID_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_TgetRNC_ID_ExtIEs (SztProtExtnField_TgetRNC_ID_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_TgetRNC_ID_ExtIEs (SztProtExtnCont_TgetRNC_ID_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztTgetRNC_ID (SztTgetRNC_ID *param, Buffer *mBuf);
extern S16 cmPkSztRIMRoutingAddr (SztRIMRoutingAddr *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnRIMTfr_ExtIEsCls (Szt_ExtnRIMTfr_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_RIMTfr_ExtIEs (SztProtExtnField_RIMTfr_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_RIMTfr_ExtIEs (SztProtExtnCont_RIMTfr_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztRIMTfr (SztRIMTfr *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnSecurCntxt_ExtIEsCls (Szt_ExtnSecurCntxt_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_SecurCntxt_ExtIEs (SztProtExtnField_SecurCntxt_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_SecurCntxt_ExtIEs (SztProtExtnCont_SecurCntxt_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztSecurCntxt (SztSecurCntxt *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnX2TNLConfigInfo_ExtIEsCls (Szt_ExtnX2TNLConfigInfo_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_X2TNLConfigInfo_ExtIEs (SztProtExtnField_X2TNLConfigInfo_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_X2TNLConfigInfo_ExtIEs (SztProtExtnCont_X2TNLConfigInfo_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztX2TNLConfigInfo (SztX2TNLConfigInfo *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnTimeSynchronizationInfo_ExtIEsCls (Szt_ExtnTimeSynchronizationInfo_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_TimeSynchronizationInfo_ExtIEs (SztProtExtnField_TimeSynchronizationInfo_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_TimeSynchronizationInfo_ExtIEs (SztProtExtnCont_TimeSynchronizationInfo_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztTimeSynchronizationInfo (SztTimeSynchronizationInfo *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnSONInformReply_ExtIEsCls (Szt_ExtnSONInformReply_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_SONInformReply_ExtIEs (SztProtExtnField_SONInformReply_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_SONInformReply_ExtIEs (SztProtExtnCont_SONInformReply_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztSONInformReply (SztSONInformReply *param, Buffer *mBuf);
extern S16 cmPkSztSONInform (SztSONInform *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnTgeteNB_ID_ExtIEsCls (Szt_ExtnTgeteNB_ID_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_TgeteNB_ID_ExtIEs (SztProtExtnField_TgeteNB_ID_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_TgeteNB_ID_ExtIEs (SztProtExtnCont_TgeteNB_ID_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztTgeteNB_ID (SztTgeteNB_ID *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnSrceNB_ID_ExtIEsCls (Szt_ExtnSrceNB_ID_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_SrceNB_ID_ExtIEs (SztProtExtnField_SrceNB_ID_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_SrceNB_ID_ExtIEs (SztProtExtnCont_SrceNB_ID_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztSrceNB_ID (SztSrceNB_ID *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnSONConfigTfr_ExtIEsCls (Szt_ExtnSONConfigTfr_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_SONConfigTfr_ExtIEs (SztProtExtnField_SONConfigTfr_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_SONConfigTfr_ExtIEs (SztProtExtnCont_SONConfigTfr_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztSONConfigTfr (SztSONConfigTfr *param, Buffer *mBuf);
extern S16 cmPkSztUE_HistoryInform (SztUE_HistoryInform *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnSrceNB_ToTgeteNB_TprntCont_ExtIEsCls (Szt_ExtnSrceNB_ToTgeteNB_TprntCont_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_SrceNB_ToTgeteNB_TprntCont_ExtIEs (SztProtExtnField_SrceNB_ToTgeteNB_TprntCont_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_SrceNB_ToTgeteNB_TprntCont_ExtIEs (SztProtExtnCont_SrceNB_ToTgeteNB_TprntCont_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztSrceNB_ToTgeteNB_TprntCont (SztSrceNB_ToTgeteNB_TprntCont *param, Buffer *mBuf);
extern S16 cmPkSztSrvdPLMNs (SztSrvdPLMNs *param, Buffer *mBuf);
extern S16 cmPkSztSrvdGroupIDs (SztSrvdGroupIDs *param, Buffer *mBuf);
extern S16 cmPkSztSrvdMMECs (SztSrvdMMECs *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnSrvdGUMMEIsItem_ExtIEsCls (Szt_ExtnSrvdGUMMEIsItem_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_SrvdGUMMEIsItem_ExtIEs (SztProtExtnField_SrvdGUMMEIsItem_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_SrvdGUMMEIsItem_ExtIEs (SztProtExtnCont_SrvdGUMMEIsItem_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztSrvdGUMMEIsItem (SztSrvdGUMMEIsItem *param, Buffer *mBuf);
extern S16 cmPkSztSrvdGUMMEIs (SztSrvdGUMMEIs *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnSuppTAs_Item_ExtIEsCls (Szt_ExtnSuppTAs_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_SuppTAs_Item_ExtIEs (SztProtExtnField_SuppTAs_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_SuppTAs_Item_ExtIEs (SztProtExtnCont_SuppTAs_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztSuppTAs_Item (SztSuppTAs_Item *param, Buffer *mBuf);
extern S16 cmPkSztSuppTAs (SztSuppTAs *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnS_TMSI_ExtIEsCls (Szt_ExtnS_TMSI_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_S_TMSI_ExtIEs (SztProtExtnField_S_TMSI_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_S_TMSI_ExtIEs (SztProtExtnCont_S_TMSI_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztS_TMSI (SztS_TMSI *param, Buffer *mBuf);
extern S16 cmPkSztTAILstforWarning (SztTAILstforWarning *param, Buffer *mBuf);
extern S16 cmPkSztTgetID (SztTgetID *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnTgeteNB_ToSrceNB_TprntCont_ExtIEsCls (Szt_ExtnTgeteNB_ToSrceNB_TprntCont_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_TgeteNB_ToSrceNB_TprntCont_ExtIEs (SztProtExtnField_TgeteNB_ToSrceNB_TprntCont_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_TgeteNB_ToSrceNB_TprntCont_ExtIEs (SztProtExtnCont_TgeteNB_ToSrceNB_TprntCont_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztTgeteNB_ToSrceNB_TprntCont (SztTgeteNB_ToSrceNB_TprntCont *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnTraceActvn_ExtIEsCls (Szt_ExtnTraceActvn_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_TraceActvn_ExtIEs (SztProtExtnField_TraceActvn_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_TraceActvn_ExtIEs (SztProtExtnCont_TraceActvn_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztTraceActvn (SztTraceActvn *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnUEAgg_MaxBitrates_ExtIEsCls (Szt_ExtnUEAgg_MaxBitrates_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_UEAgg_MaxBitrates_ExtIEs (SztProtExtnField_UEAgg_MaxBitrates_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_UEAgg_MaxBitrates_ExtIEs (SztProtExtnCont_UEAgg_MaxBitrates_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztUEAggMaxBitrate (SztUEAggMaxBitrate *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnUE_S1AP_ID_pair_ExtIEsCls (Szt_ExtnUE_S1AP_ID_pair_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_UE_S1AP_ID_pair_ExtIEs (SztProtExtnField_UE_S1AP_ID_pair_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_UE_S1AP_ID_pair_ExtIEs (SztProtExtnCont_UE_S1AP_ID_pair_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztUE_S1AP_ID_pair (SztUE_S1AP_ID_pair *param, Buffer *mBuf);
extern S16 cmPkSztUE_S1AP_IDs (SztUE_S1AP_IDs *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnUE_assocLogS1_ConItemExtIEsCls (Szt_ExtnUE_assocLogS1_ConItemExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_UE_assocLogS1_ConItemExtIEs (SztProtExtnField_UE_assocLogS1_ConItemExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_UE_assocLogS1_ConItemExtIEs (SztProtExtnCont_UE_assocLogS1_ConItemExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztUE_assocLogS1_ConItem (SztUE_assocLogS1_ConItem *param, Buffer *mBuf);
extern S16 cmPkSztUEPagID (SztUEPagID *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnUESecurCapabilities_ExtIEsCls (Szt_ExtnUESecurCapabilities_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_UESecurCapabilities_ExtIEs (SztProtExtnField_UESecurCapabilities_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_UESecurCapabilities_ExtIEs (SztProtExtnCont_UESecurCapabilities_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztUESecurCapabilities (SztUESecurCapabilities *param, Buffer *mBuf);
extern S16 cmPkSztWarningAreaLst (SztWarningAreaLst *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueHovrReqdIEsCls (Szt_ValueHovrReqdIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_HovrReqdIEs (SztProtIE_Field_HovrReqdIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_HovrReqdIEs (SztProtIE_Cont_HovrReqdIEs *param, Buffer *mBuf);
extern S16 cmPkSztHovrReqd (SztHovrReqd *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnE_RABDataFwdingItem_ExtIEsCls (Szt_ExtnE_RABDataFwdingItem_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_E_RABDataFwdingItem_ExtIEs (SztProtExtnField_E_RABDataFwdingItem_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_E_RABDataFwdingItem_ExtIEs (SztProtExtnCont_E_RABDataFwdingItem_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABDataFwdingItem (SztE_RABDataFwdingItem *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABDataFwdingItemIEsCls (Szt_ValueE_RABDataFwdingItemIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABDataFwdingItemIEs (SztProtIE_Field_E_RABDataFwdingItemIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_ContLst_E_RABDataFwdingItemIEs (SztProtIE_ContLst_E_RABDataFwdingItemIEs *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueHovrCmmdIEsCls (Szt_ValueHovrCmmdIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_HovrCmmdIEs (SztProtIE_Field_HovrCmmdIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_HovrCmmdIEs (SztProtIE_Cont_HovrCmmdIEs *param, Buffer *mBuf);
extern S16 cmPkSztHovrCmmd (SztHovrCmmd *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueHovrPrepFailIEsCls (Szt_ValueHovrPrepFailIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_HovrPrepFailIEs (SztProtIE_Field_HovrPrepFailIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_HovrPrepFailIEs (SztProtIE_Cont_HovrPrepFailIEs *param, Buffer *mBuf);
extern S16 cmPkSztHovrPrepFail (SztHovrPrepFail *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnE_RABToBeSetupItemHOReq_ExtIEsCls (Szt_ExtnE_RABToBeSetupItemHOReq_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_E_RABToBeSetupItemHOReq_ExtIEs (SztProtExtnField_E_RABToBeSetupItemHOReq_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_E_RABToBeSetupItemHOReq_ExtIEs (SztProtExtnCont_E_RABToBeSetupItemHOReq_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABToBeSetupItemHOReq (SztE_RABToBeSetupItemHOReq *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABToBeSetupItemHOReqIEsCls (Szt_ValueE_RABToBeSetupItemHOReqIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABToBeSetupItemHOReqIEs (SztProtIE_Field_E_RABToBeSetupItemHOReqIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_ContLst_E_RABToBeSetupItemHOReqIEs (SztProtIE_ContLst_E_RABToBeSetupItemHOReqIEs *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueHovrRqstIEsCls (Szt_ValueHovrRqstIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_HovrRqstIEs (SztProtIE_Field_HovrRqstIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_HovrRqstIEs (SztProtIE_Cont_HovrRqstIEs *param, Buffer *mBuf);
extern S16 cmPkSztHovrRqst (SztHovrRqst *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnE_RABAdmtdItem_ExtIEsCls (Szt_ExtnE_RABAdmtdItem_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_E_RABAdmtdItem_ExtIEs (SztProtExtnField_E_RABAdmtdItem_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_E_RABAdmtdItem_ExtIEs (SztProtExtnCont_E_RABAdmtdItem_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABAdmtdItem (SztE_RABAdmtdItem *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABAdmtdItemIEsCls (Szt_ValueE_RABAdmtdItemIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABAdmtdItemIEs (SztProtIE_Field_E_RABAdmtdItemIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_ContLst_E_RABAdmtdItemIEs (SztProtIE_ContLst_E_RABAdmtdItemIEs *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnE_RABFailedToSetupItemHOReqAckExtIEsCls (Szt_ExtnE_RABFailedToSetupItemHOReqAckExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_E_RABFailedToSetupItemHOReqAckExtIEs (SztProtExtnField_E_RABFailedToSetupItemHOReqAckExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_E_RABFailedToSetupItemHOReqAckExtIEs (SztProtExtnCont_E_RABFailedToSetupItemHOReqAckExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABFailedToSetupItemHOReqAck (SztE_RABFailedToSetupItemHOReqAck *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABFailedtoSetupItemHOReqAckIEsCls (Szt_ValueE_RABFailedtoSetupItemHOReqAckIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABFailedtoSetupItemHOReqAckIEs (SztProtIE_Field_E_RABFailedtoSetupItemHOReqAckIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_ContLst_E_RABFailedtoSetupItemHOReqAckIEs (SztProtIE_ContLst_E_RABFailedtoSetupItemHOReqAckIEs *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueHovrRqstAckgIEsCls (Szt_ValueHovrRqstAckgIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_HovrRqstAckgIEs (SztProtIE_Field_HovrRqstAckgIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_HovrRqstAckgIEs (SztProtIE_Cont_HovrRqstAckgIEs *param, Buffer *mBuf);
extern S16 cmPkSztHovrRqstAckg (SztHovrRqstAckg *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueHovrFailIEsCls (Szt_ValueHovrFailIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_HovrFailIEs (SztProtIE_Field_HovrFailIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_HovrFailIEs (SztProtIE_Cont_HovrFailIEs *param, Buffer *mBuf);
extern S16 cmPkSztHovrFail (SztHovrFail *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueHovrNtfyIEsCls (Szt_ValueHovrNtfyIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_HovrNtfyIEs (SztProtIE_Field_HovrNtfyIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_HovrNtfyIEs (SztProtIE_Cont_HovrNtfyIEs *param, Buffer *mBuf);
extern S16 cmPkSztHovrNtfy (SztHovrNtfy *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnE_RABToBeSwedDLItem_ExtIEsCls (Szt_ExtnE_RABToBeSwedDLItem_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_E_RABToBeSwedDLItem_ExtIEs (SztProtExtnField_E_RABToBeSwedDLItem_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_E_RABToBeSwedDLItem_ExtIEs (SztProtExtnCont_E_RABToBeSwedDLItem_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABToBeSwedDLItem (SztE_RABToBeSwedDLItem *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABToBeSwedDLItemIEsCls (Szt_ValueE_RABToBeSwedDLItemIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABToBeSwedDLItemIEs (SztProtIE_Field_E_RABToBeSwedDLItemIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_ContLst_E_RABToBeSwedDLItemIEs (SztProtIE_ContLst_E_RABToBeSwedDLItemIEs *param, Buffer *mBuf);
extern S16 cmPkSzt_ValuePathSwRqstIEsCls (Szt_ValuePathSwRqstIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_PathSwRqstIEs (SztProtIE_Field_PathSwRqstIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_PathSwRqstIEs (SztProtIE_Cont_PathSwRqstIEs *param, Buffer *mBuf);
extern S16 cmPkSztPathSwRqst (SztPathSwRqst *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnE_RABToBeSwedULItem_ExtIEsCls (Szt_ExtnE_RABToBeSwedULItem_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_E_RABToBeSwedULItem_ExtIEs (SztProtExtnField_E_RABToBeSwedULItem_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_E_RABToBeSwedULItem_ExtIEs (SztProtExtnCont_E_RABToBeSwedULItem_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABToBeSwedULItem (SztE_RABToBeSwedULItem *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABToBeSwedULItemIEsCls (Szt_ValueE_RABToBeSwedULItemIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABToBeSwedULItemIEs (SztProtIE_Field_E_RABToBeSwedULItemIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_ContLst_E_RABToBeSwedULItemIEs (SztProtIE_ContLst_E_RABToBeSwedULItemIEs *param, Buffer *mBuf);
extern S16 cmPkSzt_ValuePathSwRqstAckgIEsCls (Szt_ValuePathSwRqstAckgIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_PathSwRqstAckgIEs (SztProtIE_Field_PathSwRqstAckgIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_PathSwRqstAckgIEs (SztProtIE_Cont_PathSwRqstAckgIEs *param, Buffer *mBuf);
extern S16 cmPkSztPathSwRqstAckg (SztPathSwRqstAckg *param, Buffer *mBuf);
extern S16 cmPkSzt_ValuePathSwRqstFailIEsCls (Szt_ValuePathSwRqstFailIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_PathSwRqstFailIEs (SztProtIE_Field_PathSwRqstFailIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_PathSwRqstFailIEs (SztProtIE_Cont_PathSwRqstFailIEs *param, Buffer *mBuf);
extern S16 cmPkSztPathSwRqstFail (SztPathSwRqstFail *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueHovrCancelIEsCls (Szt_ValueHovrCancelIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_HovrCancelIEs (SztProtIE_Field_HovrCancelIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_HovrCancelIEs (SztProtIE_Cont_HovrCancelIEs *param, Buffer *mBuf);
extern S16 cmPkSztHovrCancel (SztHovrCancel *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueHovrCancelAckgIEsCls (Szt_ValueHovrCancelAckgIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_HovrCancelAckgIEs (SztProtIE_Field_HovrCancelAckgIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_HovrCancelAckgIEs (SztProtIE_Cont_HovrCancelAckgIEs *param, Buffer *mBuf);
extern S16 cmPkSztHovrCancelAckg (SztHovrCancelAckg *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnE_RABToBeSetupItemBrSUReqExtIEsCls (Szt_ExtnE_RABToBeSetupItemBrSUReqExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_E_RABToBeSetupItemBrSUReqExtIEs (SztProtExtnField_E_RABToBeSetupItemBrSUReqExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_E_RABToBeSetupItemBrSUReqExtIEs (SztProtExtnCont_E_RABToBeSetupItemBrSUReqExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABToBeSetupItemBrSUReq (SztE_RABToBeSetupItemBrSUReq *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABToBeSetupItemBrSUReqIEsCls (Szt_ValueE_RABToBeSetupItemBrSUReqIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABToBeSetupItemBrSUReqIEs (SztProtIE_Field_E_RABToBeSetupItemBrSUReqIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABToBeSetupLstBrSUReq (SztE_RABToBeSetupLstBrSUReq *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABSetupRqstIEsCls (Szt_ValueE_RABSetupRqstIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABSetupRqstIEs (SztProtIE_Field_E_RABSetupRqstIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_E_RABSetupRqstIEs (SztProtIE_Cont_E_RABSetupRqstIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABSetupRqst (SztE_RABSetupRqst *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnE_RABSetupItemBrSUResExtIEsCls (Szt_ExtnE_RABSetupItemBrSUResExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_E_RABSetupItemBrSUResExtIEs (SztProtExtnField_E_RABSetupItemBrSUResExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_E_RABSetupItemBrSUResExtIEs (SztProtExtnCont_E_RABSetupItemBrSUResExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABSetupItemBrSURes (SztE_RABSetupItemBrSURes *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABSetupItemBrSUResIEsCls (Szt_ValueE_RABSetupItemBrSUResIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABSetupItemBrSUResIEs (SztProtIE_Field_E_RABSetupItemBrSUResIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABSetupLstBrSURes (SztE_RABSetupLstBrSURes *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABSetupRespIEsCls (Szt_ValueE_RABSetupRespIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABSetupRespIEs (SztProtIE_Field_E_RABSetupRespIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_E_RABSetupRespIEs (SztProtIE_Cont_E_RABSetupRespIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABSetupResp (SztE_RABSetupResp *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnE_RABToBeMdfyItemBrModReqExtIEsCls (Szt_ExtnE_RABToBeMdfyItemBrModReqExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_E_RABToBeMdfyItemBrModReqExtIEs (SztProtExtnField_E_RABToBeMdfyItemBrModReqExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_E_RABToBeMdfyItemBrModReqExtIEs (SztProtExtnCont_E_RABToBeMdfyItemBrModReqExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABToBeMdfdItemBrModReq (SztE_RABToBeMdfdItemBrModReq *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABToBeMdfdItemBrModReqIEsCls (Szt_ValueE_RABToBeMdfdItemBrModReqIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABToBeMdfdItemBrModReqIEs (SztProtIE_Field_E_RABToBeMdfdItemBrModReqIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABToBeMdfdLstBrModReq (SztE_RABToBeMdfdLstBrModReq *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABMdfyRqstIEsCls (Szt_ValueE_RABMdfyRqstIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABMdfyRqstIEs (SztProtIE_Field_E_RABMdfyRqstIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_E_RABMdfyRqstIEs (SztProtIE_Cont_E_RABMdfyRqstIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABMdfyRqst (SztE_RABMdfyRqst *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnE_RABMdfyItemBrModResExtIEsCls (Szt_ExtnE_RABMdfyItemBrModResExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_E_RABMdfyItemBrModResExtIEs (SztProtExtnField_E_RABMdfyItemBrModResExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_E_RABMdfyItemBrModResExtIEs (SztProtExtnCont_E_RABMdfyItemBrModResExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABMdfyItemBrModRes (SztE_RABMdfyItemBrModRes *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABMdfyItemBrModResIEsCls (Szt_ValueE_RABMdfyItemBrModResIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABMdfyItemBrModResIEs (SztProtIE_Field_E_RABMdfyItemBrModResIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABMdfyLstBrModRes (SztE_RABMdfyLstBrModRes *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABMdfyRespIEsCls (Szt_ValueE_RABMdfyRespIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABMdfyRespIEs (SztProtIE_Field_E_RABMdfyRespIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_E_RABMdfyRespIEs (SztProtIE_Cont_E_RABMdfyRespIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABMdfyResp (SztE_RABMdfyResp *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABRlsCmmdIEsCls (Szt_ValueE_RABRlsCmmdIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABRlsCmmdIEs (SztProtIE_Field_E_RABRlsCmmdIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_E_RABRlsCmmdIEs (SztProtIE_Cont_E_RABRlsCmmdIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABRlsCmmd (SztE_RABRlsCmmd *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnE_RABRlsItemBrRelCompExtIEsCls (Szt_ExtnE_RABRlsItemBrRelCompExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_E_RABRlsItemBrRelCompExtIEs (SztProtExtnField_E_RABRlsItemBrRelCompExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_E_RABRlsItemBrRelCompExtIEs (SztProtExtnCont_E_RABRlsItemBrRelCompExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABRlsItemBrRelComp (SztE_RABRlsItemBrRelComp *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABRlsItemBrRelCompIEsCls (Szt_ValueE_RABRlsItemBrRelCompIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABRlsItemBrRelCompIEs (SztProtIE_Field_E_RABRlsItemBrRelCompIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABRlsLstBrRelComp (SztE_RABRlsLstBrRelComp *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABRlsRespIEsCls (Szt_ValueE_RABRlsRespIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABRlsRespIEs (SztProtIE_Field_E_RABRlsRespIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_E_RABRlsRespIEs (SztProtIE_Cont_E_RABRlsRespIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABRlsResp (SztE_RABRlsResp *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABRlsIndIEsCls (Szt_ValueE_RABRlsIndIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABRlsIndIEs (SztProtIE_Field_E_RABRlsIndIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_E_RABRlsIndIEs (SztProtIE_Cont_E_RABRlsIndIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABRlsInd (SztE_RABRlsInd *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnE_RABToBeSetupItemCtxtSUReqExtIEsCls (Szt_ExtnE_RABToBeSetupItemCtxtSUReqExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_E_RABToBeSetupItemCtxtSUReqExtIEs (SztProtExtnField_E_RABToBeSetupItemCtxtSUReqExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_E_RABToBeSetupItemCtxtSUReqExtIEs (SztProtExtnCont_E_RABToBeSetupItemCtxtSUReqExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABToBeSetupItemCtxtSUReq (SztE_RABToBeSetupItemCtxtSUReq *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABToBeSetupItemCtxtSUReqIEsCls (Szt_ValueE_RABToBeSetupItemCtxtSUReqIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABToBeSetupItemCtxtSUReqIEs (SztProtIE_Field_E_RABToBeSetupItemCtxtSUReqIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABToBeSetupLstCtxtSUReq (SztE_RABToBeSetupLstCtxtSUReq *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueInitCntxtSetupRqstIEsCls (Szt_ValueInitCntxtSetupRqstIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_InitCntxtSetupRqstIEs (SztProtIE_Field_InitCntxtSetupRqstIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_InitCntxtSetupRqstIEs (SztProtIE_Cont_InitCntxtSetupRqstIEs *param, Buffer *mBuf);
extern S16 cmPkSztInitCntxtSetupRqst (SztInitCntxtSetupRqst *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnE_RABSetupItemCtxtSUResExtIEsCls (Szt_ExtnE_RABSetupItemCtxtSUResExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_E_RABSetupItemCtxtSUResExtIEs (SztProtExtnField_E_RABSetupItemCtxtSUResExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_E_RABSetupItemCtxtSUResExtIEs (SztProtExtnCont_E_RABSetupItemCtxtSUResExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABSetupItemCtxtSURes (SztE_RABSetupItemCtxtSURes *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABSetupItemCtxtSUResIEsCls (Szt_ValueE_RABSetupItemCtxtSUResIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABSetupItemCtxtSUResIEs (SztProtIE_Field_E_RABSetupItemCtxtSUResIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABSetupLstCtxtSURes (SztE_RABSetupLstCtxtSURes *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueInitCntxtSetupRespIEsCls (Szt_ValueInitCntxtSetupRespIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_InitCntxtSetupRespIEs (SztProtIE_Field_InitCntxtSetupRespIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_InitCntxtSetupRespIEs (SztProtIE_Cont_InitCntxtSetupRespIEs *param, Buffer *mBuf);
extern S16 cmPkSztInitCntxtSetupResp (SztInitCntxtSetupResp *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueInitCntxtSetupFailIEsCls (Szt_ValueInitCntxtSetupFailIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_InitCntxtSetupFailIEs (SztProtIE_Field_InitCntxtSetupFailIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_InitCntxtSetupFailIEs (SztProtIE_Cont_InitCntxtSetupFailIEs *param, Buffer *mBuf);
extern S16 cmPkSztInitCntxtSetupFail (SztInitCntxtSetupFail *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnTAIItemExtIEsCls (Szt_ExtnTAIItemExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_TAIItemExtIEs (SztProtExtnField_TAIItemExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_TAIItemExtIEs (SztProtExtnCont_TAIItemExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztTAIItem (SztTAIItem *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueTAIItemIEsCls (Szt_ValueTAIItemIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_TAIItemIEs (SztProtIE_Field_TAIItemIEs *param, Buffer *mBuf);
extern S16 cmPkSztTAILst (SztTAILst *param, Buffer *mBuf);
extern S16 cmPkSzt_ValuePagIEsCls (Szt_ValuePagIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_PagIEs (SztProtIE_Field_PagIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_PagIEs (SztProtIE_Cont_PagIEs *param, Buffer *mBuf);
extern S16 cmPkSztPag (SztPag *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueUECntxtRlsRqst_IEsCls (Szt_ValueUECntxtRlsRqst_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_UECntxtRlsRqst_IEs (SztProtIE_Field_UECntxtRlsRqst_IEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_UECntxtRlsRqst_IEs (SztProtIE_Cont_UECntxtRlsRqst_IEs *param, Buffer *mBuf);
extern S16 cmPkSztUECntxtRlsRqst (SztUECntxtRlsRqst *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueUECntxtRlsCmmd_IEsCls (Szt_ValueUECntxtRlsCmmd_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_UECntxtRlsCmmd_IEs (SztProtIE_Field_UECntxtRlsCmmd_IEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_UECntxtRlsCmmd_IEs (SztProtIE_Cont_UECntxtRlsCmmd_IEs *param, Buffer *mBuf);
extern S16 cmPkSztUECntxtRlsCmmd (SztUECntxtRlsCmmd *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueUECntxtRlsComplete_IEsCls (Szt_ValueUECntxtRlsComplete_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_UECntxtRlsComplete_IEs (SztProtIE_Field_UECntxtRlsComplete_IEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_UECntxtRlsComplete_IEs (SztProtIE_Cont_UECntxtRlsComplete_IEs *param, Buffer *mBuf);
extern S16 cmPkSztUECntxtRlsComplete (SztUECntxtRlsComplete *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueUECntxtModificationRqstIEsCls (Szt_ValueUECntxtModificationRqstIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_UECntxtModificationRqstIEs (SztProtIE_Field_UECntxtModificationRqstIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_UECntxtModificationRqstIEs (SztProtIE_Cont_UECntxtModificationRqstIEs *param, Buffer *mBuf);
extern S16 cmPkSztUECntxtModificationRqst (SztUECntxtModificationRqst *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueUECntxtModificationRespIEsCls (Szt_ValueUECntxtModificationRespIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_UECntxtModificationRespIEs (SztProtIE_Field_UECntxtModificationRespIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_UECntxtModificationRespIEs (SztProtIE_Cont_UECntxtModificationRespIEs *param, Buffer *mBuf);
extern S16 cmPkSztUECntxtModificationResp (SztUECntxtModificationResp *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueUECntxtModificationFailIEsCls (Szt_ValueUECntxtModificationFailIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_UECntxtModificationFailIEs (SztProtIE_Field_UECntxtModificationFailIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_UECntxtModificationFailIEs (SztProtIE_Cont_UECntxtModificationFailIEs *param, Buffer *mBuf);
extern S16 cmPkSztUECntxtModificationFail (SztUECntxtModificationFail *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueDlnkNASTport_IEsCls (Szt_ValueDlnkNASTport_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_DlnkNASTport_IEs (SztProtIE_Field_DlnkNASTport_IEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_DlnkNASTport_IEs (SztProtIE_Cont_DlnkNASTport_IEs *param, Buffer *mBuf);
extern S16 cmPkSztDlnkNASTport (SztDlnkNASTport *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueInitUEMsg_IEsCls (Szt_ValueInitUEMsg_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_InitUEMsg_IEs (SztProtIE_Field_InitUEMsg_IEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_InitUEMsg_IEs (SztProtIE_Cont_InitUEMsg_IEs *param, Buffer *mBuf);
extern S16 cmPkSztInitUEMsg (SztInitUEMsg *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueUlnkNASTport_IEsCls (Szt_ValueUlnkNASTport_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_UlnkNASTport_IEs (SztProtIE_Field_UlnkNASTport_IEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_UlnkNASTport_IEs (SztProtIE_Cont_UlnkNASTport_IEs *param, Buffer *mBuf);
extern S16 cmPkSztUlnkNASTport (SztUlnkNASTport *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueNASNonDlvryInd_IEsCls (Szt_ValueNASNonDlvryInd_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_NASNonDlvryInd_IEs (SztProtIE_Field_NASNonDlvryInd_IEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_NASNonDlvryInd_IEs (SztProtIE_Cont_NASNonDlvryInd_IEs *param, Buffer *mBuf);
extern S16 cmPkSztNASNonDlvryInd (SztNASNonDlvryInd *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueUE_assocLogS1_ConItemResCls (Szt_ValueUE_assocLogS1_ConItemResCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_UE_assocLogS1_ConItemRes (SztProtIE_Field_UE_assocLogS1_ConItemRes *param, Buffer *mBuf);
extern S16 cmPkSztUE_assocLogS1_ConLstRes (SztUE_assocLogS1_ConLstRes *param, Buffer *mBuf);
extern S16 cmPkSztResetTyp (SztResetTyp *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueResetIEsCls (Szt_ValueResetIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_ResetIEs (SztProtIE_Field_ResetIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_ResetIEs (SztProtIE_Cont_ResetIEs *param, Buffer *mBuf);
extern S16 cmPkSztReset (SztReset *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueUE_assocLogS1_ConItemResAckCls (Szt_ValueUE_assocLogS1_ConItemResAckCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_UE_assocLogS1_ConItemResAck (SztProtIE_Field_UE_assocLogS1_ConItemResAck *param, Buffer *mBuf);
extern S16 cmPkSztUE_assocLogS1_ConLstResAck (SztUE_assocLogS1_ConLstResAck *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueResetAckgIEsCls (Szt_ValueResetAckgIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_ResetAckgIEs (SztProtIE_Field_ResetAckgIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_ResetAckgIEs (SztProtIE_Cont_ResetAckgIEs *param, Buffer *mBuf);
extern S16 cmPkSztResetAckg (SztResetAckg *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueErrIndIEsCls (Szt_ValueErrIndIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_ErrIndIEs (SztProtIE_Field_ErrIndIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_ErrIndIEs (SztProtIE_Cont_ErrIndIEs *param, Buffer *mBuf);
extern S16 cmPkSztErrInd (SztErrInd *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueS1SetupRqstIEsCls (Szt_ValueS1SetupRqstIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_S1SetupRqstIEs (SztProtIE_Field_S1SetupRqstIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_S1SetupRqstIEs (SztProtIE_Cont_S1SetupRqstIEs *param, Buffer *mBuf);
extern S16 cmPkSztS1SetupRqst (SztS1SetupRqst *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueS1SetupRespIEsCls (Szt_ValueS1SetupRespIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_S1SetupRespIEs (SztProtIE_Field_S1SetupRespIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_S1SetupRespIEs (SztProtIE_Cont_S1SetupRespIEs *param, Buffer *mBuf);
extern S16 cmPkSztS1SetupResp (SztS1SetupResp *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueS1SetupFailIEsCls (Szt_ValueS1SetupFailIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_S1SetupFailIEs (SztProtIE_Field_S1SetupFailIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_S1SetupFailIEs (SztProtIE_Cont_S1SetupFailIEs *param, Buffer *mBuf);
extern S16 cmPkSztS1SetupFail (SztS1SetupFail *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueENBConfigUpdIEsCls (Szt_ValueENBConfigUpdIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_ENBConfigUpdIEs (SztProtIE_Field_ENBConfigUpdIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_ENBConfigUpdIEs (SztProtIE_Cont_ENBConfigUpdIEs *param, Buffer *mBuf);
extern S16 cmPkSztENBConfigUpd (SztENBConfigUpd *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueENBConfigUpdAckgIEsCls (Szt_ValueENBConfigUpdAckgIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_ENBConfigUpdAckgIEs (SztProtIE_Field_ENBConfigUpdAckgIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_ENBConfigUpdAckgIEs (SztProtIE_Cont_ENBConfigUpdAckgIEs *param, Buffer *mBuf);
extern S16 cmPkSztENBConfigUpdAckg (SztENBConfigUpdAckg *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueENBConfigUpdFailIEsCls (Szt_ValueENBConfigUpdFailIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_ENBConfigUpdFailIEs (SztProtIE_Field_ENBConfigUpdFailIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_ENBConfigUpdFailIEs (SztProtIE_Cont_ENBConfigUpdFailIEs *param, Buffer *mBuf);
extern S16 cmPkSztENBConfigUpdFail (SztENBConfigUpdFail *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueMMEConfigUpdIEsCls (Szt_ValueMMEConfigUpdIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_MMEConfigUpdIEs (SztProtIE_Field_MMEConfigUpdIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_MMEConfigUpdIEs (SztProtIE_Cont_MMEConfigUpdIEs *param, Buffer *mBuf);
extern S16 cmPkSztMMEConfigUpd (SztMMEConfigUpd *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueMMEConfigUpdAckgIEsCls (Szt_ValueMMEConfigUpdAckgIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_MMEConfigUpdAckgIEs (SztProtIE_Field_MMEConfigUpdAckgIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_MMEConfigUpdAckgIEs (SztProtIE_Cont_MMEConfigUpdAckgIEs *param, Buffer *mBuf);
extern S16 cmPkSztMMEConfigUpdAckg (SztMMEConfigUpdAckg *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueMMEConfigUpdFailIEsCls (Szt_ValueMMEConfigUpdFailIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_MMEConfigUpdFailIEs (SztProtIE_Field_MMEConfigUpdFailIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_MMEConfigUpdFailIEs (SztProtIE_Cont_MMEConfigUpdFailIEs *param, Buffer *mBuf);
extern S16 cmPkSztMMEConfigUpdFail (SztMMEConfigUpdFail *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueDlnkS1cdma2000tunnelingIEsCls (Szt_ValueDlnkS1cdma2000tunnelingIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_DlnkS1cdma2000tunnelingIEs (SztProtIE_Field_DlnkS1cdma2000tunnelingIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_DlnkS1cdma2000tunnelingIEs (SztProtIE_Cont_DlnkS1cdma2000tunnelingIEs *param, Buffer *mBuf);
extern S16 cmPkSztDlnkS1cdma2000tunneling (SztDlnkS1cdma2000tunneling *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueUlnkS1cdma2000tunnelingIEsCls (Szt_ValueUlnkS1cdma2000tunnelingIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_UlnkS1cdma2000tunnelingIEs (SztProtIE_Field_UlnkS1cdma2000tunnelingIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_UlnkS1cdma2000tunnelingIEs (SztProtIE_Cont_UlnkS1cdma2000tunnelingIEs *param, Buffer *mBuf);
extern S16 cmPkSztUlnkS1cdma2000tunneling (SztUlnkS1cdma2000tunneling *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueUECapbltyInfoIndIEsCls (Szt_ValueUECapbltyInfoIndIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_UECapbltyInfoIndIEs (SztProtIE_Field_UECapbltyInfoIndIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_UECapbltyInfoIndIEs (SztProtIE_Cont_UECapbltyInfoIndIEs *param, Buffer *mBuf);
extern S16 cmPkSztUECapbltyInfoInd (SztUECapbltyInfoInd *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueENBStatusTfrIEsCls (Szt_ValueENBStatusTfrIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_ENBStatusTfrIEs (SztProtIE_Field_ENBStatusTfrIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_ENBStatusTfrIEs (SztProtIE_Cont_ENBStatusTfrIEs *param, Buffer *mBuf);
extern S16 cmPkSztENBStatusTfr (SztENBStatusTfr *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueMMEStatusTfrIEsCls (Szt_ValueMMEStatusTfrIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_MMEStatusTfrIEs (SztProtIE_Field_MMEStatusTfrIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_MMEStatusTfrIEs (SztProtIE_Cont_MMEStatusTfrIEs *param, Buffer *mBuf);
extern S16 cmPkSztMMEStatusTfr (SztMMEStatusTfr *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueTraceStartIEsCls (Szt_ValueTraceStartIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_TraceStartIEs (SztProtIE_Field_TraceStartIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_TraceStartIEs (SztProtIE_Cont_TraceStartIEs *param, Buffer *mBuf);
extern S16 cmPkSztTraceStart (SztTraceStart *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueTraceFailIndIEsCls (Szt_ValueTraceFailIndIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_TraceFailIndIEs (SztProtIE_Field_TraceFailIndIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_TraceFailIndIEs (SztProtIE_Cont_TraceFailIndIEs *param, Buffer *mBuf);
extern S16 cmPkSztTraceFailInd (SztTraceFailInd *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueDeactvTraceIEsCls (Szt_ValueDeactvTraceIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_DeactvTraceIEs (SztProtIE_Field_DeactvTraceIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_DeactvTraceIEs (SztProtIE_Cont_DeactvTraceIEs *param, Buffer *mBuf);
extern S16 cmPkSztDeactvTrace (SztDeactvTrace *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueCellTrafficTraceIEsCls (Szt_ValueCellTrafficTraceIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_CellTrafficTraceIEs (SztProtIE_Field_CellTrafficTraceIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_CellTrafficTraceIEs (SztProtIE_Cont_CellTrafficTraceIEs *param, Buffer *mBuf);
extern S16 cmPkSztCellTrafficTrace (SztCellTrafficTrace *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueLocRprtngCntrlIEsCls (Szt_ValueLocRprtngCntrlIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_LocRprtngCntrlIEs (SztProtIE_Field_LocRprtngCntrlIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_LocRprtngCntrlIEs (SztProtIE_Cont_LocRprtngCntrlIEs *param, Buffer *mBuf);
extern S16 cmPkSztLocRprtngCntrl (SztLocRprtngCntrl *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueLocRprtngFailIndIEsCls (Szt_ValueLocRprtngFailIndIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_LocRprtngFailIndIEs (SztProtIE_Field_LocRprtngFailIndIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_LocRprtngFailIndIEs (SztProtIE_Cont_LocRprtngFailIndIEs *param, Buffer *mBuf);
extern S16 cmPkSztLocRprtngFailInd (SztLocRprtngFailInd *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueLocReportIEsCls (Szt_ValueLocReportIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_LocReportIEs (SztProtIE_Field_LocReportIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_LocReportIEs (SztProtIE_Cont_LocReportIEs *param, Buffer *mBuf);
extern S16 cmPkSztLocReport (SztLocReport *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueOverloadStartIEsCls (Szt_ValueOverloadStartIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_OverloadStartIEs (SztProtIE_Field_OverloadStartIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_OverloadStartIEs (SztProtIE_Cont_OverloadStartIEs *param, Buffer *mBuf);
extern S16 cmPkSztOverloadStart (SztOverloadStart *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueOverloadStopIEsCls (Szt_ValueOverloadStopIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_OverloadStopIEs (SztProtIE_Field_OverloadStopIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_OverloadStopIEs (SztProtIE_Cont_OverloadStopIEs *param, Buffer *mBuf);
extern S16 cmPkSztOverloadStop (SztOverloadStop *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueWriteReplaceWarningRqstIEsCls (Szt_ValueWriteReplaceWarningRqstIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_WriteReplaceWarningRqstIEs (SztProtIE_Field_WriteReplaceWarningRqstIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_WriteReplaceWarningRqstIEs (SztProtIE_Cont_WriteReplaceWarningRqstIEs *param, Buffer *mBuf);
extern S16 cmPkSztWriteReplaceWarningRqst (SztWriteReplaceWarningRqst *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueWriteReplaceWarningRespIEsCls (Szt_ValueWriteReplaceWarningRespIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_WriteReplaceWarningRespIEs (SztProtIE_Field_WriteReplaceWarningRespIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_WriteReplaceWarningRespIEs (SztProtIE_Cont_WriteReplaceWarningRespIEs *param, Buffer *mBuf);
extern S16 cmPkSztWriteReplaceWarningResp (SztWriteReplaceWarningResp *param, Buffer *mBuf);
extern S16 cmPkSztInter_SystemInformTfrTyp (SztInter_SystemInformTfrTyp *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueENBDirectInformTfrIEsCls (Szt_ValueENBDirectInformTfrIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_ENBDirectInformTfrIEs (SztProtIE_Field_ENBDirectInformTfrIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_ENBDirectInformTfrIEs (SztProtIE_Cont_ENBDirectInformTfrIEs *param, Buffer *mBuf);
extern S16 cmPkSztENBDirectInformTfr (SztENBDirectInformTfr *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueMMEDirectInformTfrIEsCls (Szt_ValueMMEDirectInformTfrIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_MMEDirectInformTfrIEs (SztProtIE_Field_MMEDirectInformTfrIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_MMEDirectInformTfrIEs (SztProtIE_Cont_MMEDirectInformTfrIEs *param, Buffer *mBuf);
extern S16 cmPkSztMMEDirectInformTfr (SztMMEDirectInformTfr *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueENBConfigTfrIEsCls (Szt_ValueENBConfigTfrIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_ENBConfigTfrIEs (SztProtIE_Field_ENBConfigTfrIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_ENBConfigTfrIEs (SztProtIE_Cont_ENBConfigTfrIEs *param, Buffer *mBuf);
extern S16 cmPkSztENBConfigTfr (SztENBConfigTfr *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueMMEConfigTfrIEsCls (Szt_ValueMMEConfigTfrIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_MMEConfigTfrIEs (SztProtIE_Field_MMEConfigTfrIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_MMEConfigTfrIEs (SztProtIE_Cont_MMEConfigTfrIEs *param, Buffer *mBuf);
extern S16 cmPkSztMMEConfigTfr (SztMMEConfigTfr *param, Buffer *mBuf);
extern S16 cmPkSzt_ValuePrivMsgIEsCls (Szt_ValuePrivMsgIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztPrivIE_Field_PrivMsgIEs (SztPrivIE_Field_PrivMsgIEs *param, Buffer *mBuf);
extern S16 cmPkSztPrivIE_Cont_PrivMsgIEs (SztPrivIE_Cont_PrivMsgIEs *param, Buffer *mBuf);
extern S16 cmPkSztPrivMsg (SztPrivMsg *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueKillRqstIEsCls (Szt_ValueKillRqstIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_KillRqstIEs (SztProtIE_Field_KillRqstIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_KillRqstIEs (SztProtIE_Cont_KillRqstIEs *param, Buffer *mBuf);
extern S16 cmPkSztKillRqst (SztKillRqst *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueKillRespIEsCls (Szt_ValueKillRespIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_KillRespIEs (SztProtIE_Field_KillRespIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_KillRespIEs (SztProtIE_Cont_KillRespIEs *param, Buffer *mBuf);
extern S16 cmPkSztKillResp (SztKillResp *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueDlnkUEAssociatedLPPaTport_IEsCls (Szt_ValueDlnkUEAssociatedLPPaTport_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_DlnkUEAssociatedLPPaTport_IEs (SztProtIE_Field_DlnkUEAssociatedLPPaTport_IEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_DlnkUEAssociatedLPPaTport_IEs (SztProtIE_Cont_DlnkUEAssociatedLPPaTport_IEs *param, Buffer *mBuf);
extern S16 cmPkSztDlnkUEAssociatedLPPaTport (SztDlnkUEAssociatedLPPaTport *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueUlnkUEAssociatedLPPaTport_IEsCls (Szt_ValueUlnkUEAssociatedLPPaTport_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_UlnkUEAssociatedLPPaTport_IEs (SztProtIE_Field_UlnkUEAssociatedLPPaTport_IEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_UlnkUEAssociatedLPPaTport_IEs (SztProtIE_Cont_UlnkUEAssociatedLPPaTport_IEs *param, Buffer *mBuf);
extern S16 cmPkSztUlnkUEAssociatedLPPaTport (SztUlnkUEAssociatedLPPaTport *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueDlnkNonUEAssociatedLPPaTport_IEsCls (Szt_ValueDlnkNonUEAssociatedLPPaTport_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_DlnkNonUEAssociatedLPPaTport_IEs (SztProtIE_Field_DlnkNonUEAssociatedLPPaTport_IEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_DlnkNonUEAssociatedLPPaTport_IEs (SztProtIE_Cont_DlnkNonUEAssociatedLPPaTport_IEs *param, Buffer *mBuf);
extern S16 cmPkSztDlnkNonUEAssociatedLPPaTport (SztDlnkNonUEAssociatedLPPaTport *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueUlnkNonUEAssociatedLPPaTport_IEsCls (Szt_ValueUlnkNonUEAssociatedLPPaTport_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_UlnkNonUEAssociatedLPPaTport_IEs (SztProtIE_Field_UlnkNonUEAssociatedLPPaTport_IEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_UlnkNonUEAssociatedLPPaTport_IEs (SztProtIE_Cont_UlnkNonUEAssociatedLPPaTport_IEs *param, Buffer *mBuf);
extern S16 cmPkSztUlnkNonUEAssociatedLPPaTport (SztUlnkNonUEAssociatedLPPaTport *param, Buffer *mBuf);
extern S16 cmPkSzt_InitiatingMsgCls (Szt_InitiatingMsgCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztInitiatingMsg (SztInitiatingMsg *param, Buffer *mBuf);
extern S16 cmPkSzt_SuccessfulOutcomeCls (Szt_SuccessfulOutcomeCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztSuccessfulOutcome (SztSuccessfulOutcome *param, Buffer *mBuf);
extern S16 cmPkSzt_UnsuccessfulOutcomeCls (Szt_UnsuccessfulOutcomeCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztUnsuccessfulOutcome (SztUnsuccessfulOutcome *param, Buffer *mBuf);
extern S16 cmPkSztS1AP_PDU (SztS1AP_PDU *param, Buffer *mBuf);
# 150 "../..//enbapp/src/wr.h" 2
# 1 "../..//cm/szt_unpk.x" 1
# 1340 "../..//cm/szt_unpk.x"
#define __SZTUNPKX__ 

extern S16 cmUnpkSztPrivIE_ID (SztPrivIE_ID *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnAllocnAndRetentionPriority_ExtIEsCls (Szt_ExtnAllocnAndRetentionPriority_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_AllocnAndRetentionPriority_ExtIEs (SztProtExtnField_AllocnAndRetentionPriority_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_AllocnAndRetentionPriority_ExtIEs (SztProtExtnCont_AllocnAndRetentionPriority_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztAllocnAndRetentionPriority (SztAllocnAndRetentionPriority *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnCOUNTvalue_ExtIEsCls (Szt_ExtnCOUNTvalue_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_COUNTvalue_ExtIEs (SztProtExtnField_COUNTvalue_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_COUNTvalue_ExtIEs (SztProtExtnCont_COUNTvalue_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCOUNTvalue (SztCOUNTvalue *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnBrs_SubjToStatusTfr_ItemExtIEsCls (Szt_ExtnBrs_SubjToStatusTfr_ItemExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_Brs_SubjToStatusTfr_ItemExtIEs (SztProtExtnField_Brs_SubjToStatusTfr_ItemExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_Brs_SubjToStatusTfr_ItemExtIEs (SztProtExtnCont_Brs_SubjToStatusTfr_ItemExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztBrs_SubjToStatusTfr_Item (SztBrs_SubjToStatusTfr_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueBrs_SubjToStatusTfr_ItemIEsCls (Szt_ValueBrs_SubjToStatusTfr_ItemIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_Brs_SubjToStatusTfr_ItemIEs (SztProtIE_Field_Brs_SubjToStatusTfr_ItemIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztBrs_SubjToStatusTfrLst (SztBrs_SubjToStatusTfrLst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztBPLMNs (SztBPLMNs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnEUTRAN_CGI_ExtIEsCls (Szt_ExtnEUTRAN_CGI_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_EUTRAN_CGI_ExtIEs (SztProtExtnField_EUTRAN_CGI_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_EUTRAN_CGI_ExtIEs (SztProtExtnCont_EUTRAN_CGI_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztEUTRAN_CGI (SztEUTRAN_CGI *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnCellID_Cancelled_Item_ExtIEsCls (Szt_ExtnCellID_Cancelled_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_CellID_Cancelled_Item_ExtIEs (SztProtExtnField_CellID_Cancelled_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_CellID_Cancelled_Item_ExtIEs (SztProtExtnCont_CellID_Cancelled_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCellID_Cancelled_Item (SztCellID_Cancelled_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCellID_Cancelled (SztCellID_Cancelled *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnTAI_ExtIEsCls (Szt_ExtnTAI_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_TAI_ExtIEs (SztProtExtnField_TAI_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_TAI_ExtIEs (SztProtExtnCont_TAI_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztTAI (SztTAI *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnCancelledCellinTAI_Item_ExtIEsCls (Szt_ExtnCancelledCellinTAI_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_CancelledCellinTAI_Item_ExtIEs (SztProtExtnField_CancelledCellinTAI_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_CancelledCellinTAI_Item_ExtIEs (SztProtExtnCont_CancelledCellinTAI_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCancelledCellinTAI_Item (SztCancelledCellinTAI_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCancelledCellinTAI (SztCancelledCellinTAI *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnTAI_Cancelled_Item_ExtIEsCls (Szt_ExtnTAI_Cancelled_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_TAI_Cancelled_Item_ExtIEs (SztProtExtnField_TAI_Cancelled_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_TAI_Cancelled_Item_ExtIEs (SztProtExtnCont_TAI_Cancelled_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztTAI_Cancelled_Item (SztTAI_Cancelled_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztTAI_Cancelled (SztTAI_Cancelled *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnCancelledCellinEAI_Item_ExtIEsCls (Szt_ExtnCancelledCellinEAI_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_CancelledCellinEAI_Item_ExtIEs (SztProtExtnField_CancelledCellinEAI_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_CancelledCellinEAI_Item_ExtIEs (SztProtExtnCont_CancelledCellinEAI_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCancelledCellinEAI_Item (SztCancelledCellinEAI_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCancelledCellinEAI (SztCancelledCellinEAI *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnEmergencyAreaID_Cancelled_Item_ExtIEsCls (Szt_ExtnEmergencyAreaID_Cancelled_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_EmergencyAreaID_Cancelled_Item_ExtIEs (SztProtExtnField_EmergencyAreaID_Cancelled_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_EmergencyAreaID_Cancelled_Item_ExtIEs (SztProtExtnCont_EmergencyAreaID_Cancelled_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztEmergencyAreaID_Cancelled_Item (SztEmergencyAreaID_Cancelled_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztEmergencyAreaID_Cancelled (SztEmergencyAreaID_Cancelled *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztBroadcastCancelledAreaLst (SztBroadcastCancelledAreaLst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnCellID_Broadcast_Item_ExtIEsCls (Szt_ExtnCellID_Broadcast_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_CellID_Broadcast_Item_ExtIEs (SztProtExtnField_CellID_Broadcast_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_CellID_Broadcast_Item_ExtIEs (SztProtExtnCont_CellID_Broadcast_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCellID_Broadcast_Item (SztCellID_Broadcast_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCellID_Broadcast (SztCellID_Broadcast *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnCompletedCellinTAI_Item_ExtIEsCls (Szt_ExtnCompletedCellinTAI_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_CompletedCellinTAI_Item_ExtIEs (SztProtExtnField_CompletedCellinTAI_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_CompletedCellinTAI_Item_ExtIEs (SztProtExtnCont_CompletedCellinTAI_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCompletedCellinTAI_Item (SztCompletedCellinTAI_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCompletedCellinTAI (SztCompletedCellinTAI *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnTAI_Broadcast_Item_ExtIEsCls (Szt_ExtnTAI_Broadcast_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_TAI_Broadcast_Item_ExtIEs (SztProtExtnField_TAI_Broadcast_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_TAI_Broadcast_Item_ExtIEs (SztProtExtnCont_TAI_Broadcast_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztTAI_Broadcast_Item (SztTAI_Broadcast_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztTAI_Broadcast (SztTAI_Broadcast *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnCompletedCellinEAI_Item_ExtIEsCls (Szt_ExtnCompletedCellinEAI_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_CompletedCellinEAI_Item_ExtIEs (SztProtExtnField_CompletedCellinEAI_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_CompletedCellinEAI_Item_ExtIEs (SztProtExtnCont_CompletedCellinEAI_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCompletedCellinEAI_Item (SztCompletedCellinEAI_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCompletedCellinEAI (SztCompletedCellinEAI *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnEmergencyAreaID_Broadcast_Item_ExtIEsCls (Szt_ExtnEmergencyAreaID_Broadcast_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_EmergencyAreaID_Broadcast_Item_ExtIEs (SztProtExtnField_EmergencyAreaID_Broadcast_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_EmergencyAreaID_Broadcast_Item_ExtIEs (SztProtExtnCont_EmergencyAreaID_Broadcast_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztEmergencyAreaID_Broadcast_Item (SztEmergencyAreaID_Broadcast_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztEmergencyAreaID_Broadcast (SztEmergencyAreaID_Broadcast *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztBroadcastCompletedAreaLst (SztBroadcastCompletedAreaLst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCause (SztCause *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnCdma2000OneXSRVCCInfo_ExtIEsCls (Szt_ExtnCdma2000OneXSRVCCInfo_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_Cdma2000OneXSRVCCInfo_ExtIEs (SztProtExtnField_Cdma2000OneXSRVCCInfo_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_Cdma2000OneXSRVCCInfo_ExtIEs (SztProtExtnCont_Cdma2000OneXSRVCCInfo_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCdma2000OneXSRVCCInfo (SztCdma2000OneXSRVCCInfo *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnCellTyp_ExtIEsCls (Szt_ExtnCellTyp_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_CellTyp_ExtIEs (SztProtExtnField_CellTyp_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_CellTyp_ExtIEs (SztProtExtnCont_CellTyp_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCellTyp (SztCellTyp *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnCGI_ExtIEsCls (Szt_ExtnCGI_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_CGI_ExtIEs (SztProtExtnField_CGI_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_CGI_ExtIEs (SztProtExtnCont_CGI_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCGI (SztCGI *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnCSG_IdLst_Item_ExtIEsCls (Szt_ExtnCSG_IdLst_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_CSG_IdLst_Item_ExtIEs (SztProtExtnField_CSG_IdLst_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_CSG_IdLst_Item_ExtIEs (SztProtExtnCont_CSG_IdLst_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCSG_IdLst_Item (SztCSG_IdLst_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCSG_IdLst (SztCSG_IdLst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnCriticalityDiag_IE_Item_ExtIEsCls (Szt_ExtnCriticalityDiag_IE_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_CriticalityDiag_IE_Item_ExtIEs (SztProtExtnField_CriticalityDiag_IE_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_CriticalityDiag_IE_Item_ExtIEs (SztProtExtnCont_CriticalityDiag_IE_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCriticalityDiag_IE_Item (SztCriticalityDiag_IE_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCriticalityDiag_IE_Lst (SztCriticalityDiag_IE_Lst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnCriticalityDiag_ExtIEsCls (Szt_ExtnCriticalityDiag_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_CriticalityDiag_ExtIEs (SztProtExtnField_CriticalityDiag_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_CriticalityDiag_ExtIEs (SztProtExtnCont_CriticalityDiag_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCriticalityDiag (SztCriticalityDiag *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztECGILst (SztECGILst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztEmergencyAreaIDLst (SztEmergencyAreaIDLst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztENB_ID (SztENB_ID *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnLAI_ExtIEsCls (Szt_ExtnLAI_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_LAI_ExtIEs (SztProtExtnField_LAI_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_LAI_ExtIEs (SztProtExtnCont_LAI_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztLAI (SztLAI *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnGERAN_Cell_ID_ExtIEsCls (Szt_ExtnGERAN_Cell_ID_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_GERAN_Cell_ID_ExtIEs (SztProtExtnField_GERAN_Cell_ID_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_GERAN_Cell_ID_ExtIEs (SztProtExtnCont_GERAN_Cell_ID_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztGERAN_Cell_ID (SztGERAN_Cell_ID *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnGlobalENB_ID_ExtIEsCls (Szt_ExtnGlobalENB_ID_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_GlobalENB_ID_ExtIEs (SztProtExtnField_GlobalENB_ID_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_GlobalENB_ID_ExtIEs (SztProtExtnCont_GlobalENB_ID_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztGlobal_ENB_ID (SztGlobal_ENB_ID *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnENB_StatusTfr_TprntCont_ExtIEsCls (Szt_ExtnENB_StatusTfr_TprntCont_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_ENB_StatusTfr_TprntCont_ExtIEs (SztProtExtnField_ENB_StatusTfr_TprntCont_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_ENB_StatusTfr_TprntCont_ExtIEs (SztProtExtnCont_ENB_StatusTfr_TprntCont_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztENB_StatusTfr_TprntCont (SztENB_StatusTfr_TprntCont *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztENBX2TLAs (SztENBX2TLAs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztEPLMNs (SztEPLMNs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnE_RABInformLstItem_ExtIEsCls (Szt_ExtnE_RABInformLstItem_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_E_RABInformLstItem_ExtIEs (SztProtExtnField_E_RABInformLstItem_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_E_RABInformLstItem_ExtIEs (SztProtExtnCont_E_RABInformLstItem_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABInformLstItem (SztE_RABInformLstItem *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABInformLstIEsCls (Szt_ValueE_RABInformLstIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABInformLstIEs (SztProtIE_Field_E_RABInformLstIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABInformLst (SztE_RABInformLst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnE_RABItem_ExtIEsCls (Szt_ExtnE_RABItem_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_E_RABItem_ExtIEs (SztProtExtnField_E_RABItem_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_E_RABItem_ExtIEs (SztProtExtnCont_E_RABItem_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABItem (SztE_RABItem *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABItemIEsCls (Szt_ValueE_RABItemIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABItemIEs (SztProtIE_Field_E_RABItemIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABLst (SztE_RABLst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnGBR_QosInform_ExtIEsCls (Szt_ExtnGBR_QosInform_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_GBR_QosInform_ExtIEs (SztProtExtnField_GBR_QosInform_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_GBR_QosInform_ExtIEs (SztProtExtnCont_GBR_QosInform_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztGBR_QosInform (SztGBR_QosInform *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnE_RABQoSParams_ExtIEsCls (Szt_ExtnE_RABQoSParams_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_E_RABQoSParams_ExtIEs (SztProtExtnField_E_RABQoSParams_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_E_RABQoSParams_ExtIEs (SztProtExtnCont_E_RABQoSParams_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABLvlQoSParams (SztE_RABLvlQoSParams *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztForbiddenTACs (SztForbiddenTACs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnForbiddenTAs_Item_ExtIEsCls (Szt_ExtnForbiddenTAs_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_ForbiddenTAs_Item_ExtIEs (SztProtExtnField_ForbiddenTAs_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_ForbiddenTAs_Item_ExtIEs (SztProtExtnCont_ForbiddenTAs_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztForbiddenTAs_Item (SztForbiddenTAs_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztForbiddenTAs (SztForbiddenTAs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztForbiddenLACs (SztForbiddenLACs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnForbiddenLAs_Item_ExtIEsCls (Szt_ExtnForbiddenLAs_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_ForbiddenLAs_Item_ExtIEs (SztProtExtnField_ForbiddenLAs_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_ForbiddenLAs_Item_ExtIEs (SztProtExtnCont_ForbiddenLAs_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztForbiddenLAs_Item (SztForbiddenLAs_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztForbiddenLAs (SztForbiddenLAs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnGUMMEI_ExtIEsCls (Szt_ExtnGUMMEI_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_GUMMEI_ExtIEs (SztProtExtnField_GUMMEI_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_GUMMEI_ExtIEs (SztProtExtnCont_GUMMEI_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztGUMMEI (SztGUMMEI *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnHovrRestrnLst_ExtIEsCls (Szt_ExtnHovrRestrnLst_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_HovrRestrnLst_ExtIEs (SztProtExtnField_HovrRestrnLst_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_HovrRestrnLst_ExtIEs (SztProtExtnCont_HovrRestrnLst_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztHovrRestrnLst (SztHovrRestrnLst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnLastVisitedEUTRANCellInform_ExtIEsCls (Szt_ExtnLastVisitedEUTRANCellInform_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_LastVisitedEUTRANCellInform_ExtIEs (SztProtExtnField_LastVisitedEUTRANCellInform_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_LastVisitedEUTRANCellInform_ExtIEs (SztProtExtnCont_LastVisitedEUTRANCellInform_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztLastVisitedEUTRANCellInform (SztLastVisitedEUTRANCellInform *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztLastVisitedGERANCellInform (SztLastVisitedGERANCellInform *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztLastVisitedCell_Item (SztLastVisitedCell_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztOverloadResp (SztOverloadResp *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnRqstTyp_ExtIEsCls (Szt_ExtnRqstTyp_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_RqstTyp_ExtIEs (SztProtExtnField_RqstTyp_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_RqstTyp_ExtIEs (SztProtExtnCont_RqstTyp_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztRqstTyp (SztRqstTyp *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnTgetRNC_ID_ExtIEsCls (Szt_ExtnTgetRNC_ID_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_TgetRNC_ID_ExtIEs (SztProtExtnField_TgetRNC_ID_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_TgetRNC_ID_ExtIEs (SztProtExtnCont_TgetRNC_ID_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztTgetRNC_ID (SztTgetRNC_ID *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztRIMRoutingAddr (SztRIMRoutingAddr *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnRIMTfr_ExtIEsCls (Szt_ExtnRIMTfr_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_RIMTfr_ExtIEs (SztProtExtnField_RIMTfr_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_RIMTfr_ExtIEs (SztProtExtnCont_RIMTfr_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztRIMTfr (SztRIMTfr *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnSecurCntxt_ExtIEsCls (Szt_ExtnSecurCntxt_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_SecurCntxt_ExtIEs (SztProtExtnField_SecurCntxt_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_SecurCntxt_ExtIEs (SztProtExtnCont_SecurCntxt_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztSecurCntxt (SztSecurCntxt *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnX2TNLConfigInfo_ExtIEsCls (Szt_ExtnX2TNLConfigInfo_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_X2TNLConfigInfo_ExtIEs (SztProtExtnField_X2TNLConfigInfo_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_X2TNLConfigInfo_ExtIEs (SztProtExtnCont_X2TNLConfigInfo_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztX2TNLConfigInfo (SztX2TNLConfigInfo *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnTimeSynchronizationInfo_ExtIEsCls (Szt_ExtnTimeSynchronizationInfo_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_TimeSynchronizationInfo_ExtIEs (SztProtExtnField_TimeSynchronizationInfo_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_TimeSynchronizationInfo_ExtIEs (SztProtExtnCont_TimeSynchronizationInfo_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztTimeSynchronizationInfo (SztTimeSynchronizationInfo *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnSONInformReply_ExtIEsCls (Szt_ExtnSONInformReply_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_SONInformReply_ExtIEs (SztProtExtnField_SONInformReply_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_SONInformReply_ExtIEs (SztProtExtnCont_SONInformReply_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztSONInformReply (SztSONInformReply *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztSONInform (SztSONInform *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnTgeteNB_ID_ExtIEsCls (Szt_ExtnTgeteNB_ID_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_TgeteNB_ID_ExtIEs (SztProtExtnField_TgeteNB_ID_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_TgeteNB_ID_ExtIEs (SztProtExtnCont_TgeteNB_ID_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztTgeteNB_ID (SztTgeteNB_ID *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnSrceNB_ID_ExtIEsCls (Szt_ExtnSrceNB_ID_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_SrceNB_ID_ExtIEs (SztProtExtnField_SrceNB_ID_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_SrceNB_ID_ExtIEs (SztProtExtnCont_SrceNB_ID_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztSrceNB_ID (SztSrceNB_ID *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnSONConfigTfr_ExtIEsCls (Szt_ExtnSONConfigTfr_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_SONConfigTfr_ExtIEs (SztProtExtnField_SONConfigTfr_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_SONConfigTfr_ExtIEs (SztProtExtnCont_SONConfigTfr_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztSONConfigTfr (SztSONConfigTfr *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUE_HistoryInform (SztUE_HistoryInform *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnSrceNB_ToTgeteNB_TprntCont_ExtIEsCls (Szt_ExtnSrceNB_ToTgeteNB_TprntCont_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_SrceNB_ToTgeteNB_TprntCont_ExtIEs (SztProtExtnField_SrceNB_ToTgeteNB_TprntCont_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_SrceNB_ToTgeteNB_TprntCont_ExtIEs (SztProtExtnCont_SrceNB_ToTgeteNB_TprntCont_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztSrceNB_ToTgeteNB_TprntCont (SztSrceNB_ToTgeteNB_TprntCont *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztSrvdPLMNs (SztSrvdPLMNs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztSrvdGroupIDs (SztSrvdGroupIDs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztSrvdMMECs (SztSrvdMMECs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnSrvdGUMMEIsItem_ExtIEsCls (Szt_ExtnSrvdGUMMEIsItem_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_SrvdGUMMEIsItem_ExtIEs (SztProtExtnField_SrvdGUMMEIsItem_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_SrvdGUMMEIsItem_ExtIEs (SztProtExtnCont_SrvdGUMMEIsItem_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztSrvdGUMMEIsItem (SztSrvdGUMMEIsItem *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztSrvdGUMMEIs (SztSrvdGUMMEIs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnSuppTAs_Item_ExtIEsCls (Szt_ExtnSuppTAs_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_SuppTAs_Item_ExtIEs (SztProtExtnField_SuppTAs_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_SuppTAs_Item_ExtIEs (SztProtExtnCont_SuppTAs_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztSuppTAs_Item (SztSuppTAs_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztSuppTAs (SztSuppTAs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnS_TMSI_ExtIEsCls (Szt_ExtnS_TMSI_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_S_TMSI_ExtIEs (SztProtExtnField_S_TMSI_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_S_TMSI_ExtIEs (SztProtExtnCont_S_TMSI_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztS_TMSI (SztS_TMSI *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztTAILstforWarning (SztTAILstforWarning *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztTgetID (SztTgetID *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnTgeteNB_ToSrceNB_TprntCont_ExtIEsCls (Szt_ExtnTgeteNB_ToSrceNB_TprntCont_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_TgeteNB_ToSrceNB_TprntCont_ExtIEs (SztProtExtnField_TgeteNB_ToSrceNB_TprntCont_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_TgeteNB_ToSrceNB_TprntCont_ExtIEs (SztProtExtnCont_TgeteNB_ToSrceNB_TprntCont_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztTgeteNB_ToSrceNB_TprntCont (SztTgeteNB_ToSrceNB_TprntCont *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnTraceActvn_ExtIEsCls (Szt_ExtnTraceActvn_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_TraceActvn_ExtIEs (SztProtExtnField_TraceActvn_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_TraceActvn_ExtIEs (SztProtExtnCont_TraceActvn_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztTraceActvn (SztTraceActvn *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnUEAgg_MaxBitrates_ExtIEsCls (Szt_ExtnUEAgg_MaxBitrates_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_UEAgg_MaxBitrates_ExtIEs (SztProtExtnField_UEAgg_MaxBitrates_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_UEAgg_MaxBitrates_ExtIEs (SztProtExtnCont_UEAgg_MaxBitrates_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUEAggMaxBitrate (SztUEAggMaxBitrate *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnUE_S1AP_ID_pair_ExtIEsCls (Szt_ExtnUE_S1AP_ID_pair_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_UE_S1AP_ID_pair_ExtIEs (SztProtExtnField_UE_S1AP_ID_pair_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_UE_S1AP_ID_pair_ExtIEs (SztProtExtnCont_UE_S1AP_ID_pair_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUE_S1AP_ID_pair (SztUE_S1AP_ID_pair *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUE_S1AP_IDs (SztUE_S1AP_IDs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnUE_assocLogS1_ConItemExtIEsCls (Szt_ExtnUE_assocLogS1_ConItemExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_UE_assocLogS1_ConItemExtIEs (SztProtExtnField_UE_assocLogS1_ConItemExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_UE_assocLogS1_ConItemExtIEs (SztProtExtnCont_UE_assocLogS1_ConItemExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUE_assocLogS1_ConItem (SztUE_assocLogS1_ConItem *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUEPagID (SztUEPagID *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnUESecurCapabilities_ExtIEsCls (Szt_ExtnUESecurCapabilities_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_UESecurCapabilities_ExtIEs (SztProtExtnField_UESecurCapabilities_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_UESecurCapabilities_ExtIEs (SztProtExtnCont_UESecurCapabilities_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUESecurCapabilities (SztUESecurCapabilities *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztWarningAreaLst (SztWarningAreaLst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueHovrReqdIEsCls (Szt_ValueHovrReqdIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_HovrReqdIEs (SztProtIE_Field_HovrReqdIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_HovrReqdIEs (SztProtIE_Cont_HovrReqdIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztHovrReqd (SztHovrReqd *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnE_RABDataFwdingItem_ExtIEsCls (Szt_ExtnE_RABDataFwdingItem_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_E_RABDataFwdingItem_ExtIEs (SztProtExtnField_E_RABDataFwdingItem_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_E_RABDataFwdingItem_ExtIEs (SztProtExtnCont_E_RABDataFwdingItem_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABDataFwdingItem (SztE_RABDataFwdingItem *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABDataFwdingItemIEsCls (Szt_ValueE_RABDataFwdingItemIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABDataFwdingItemIEs (SztProtIE_Field_E_RABDataFwdingItemIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_ContLst_E_RABDataFwdingItemIEs (SztProtIE_ContLst_E_RABDataFwdingItemIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueHovrCmmdIEsCls (Szt_ValueHovrCmmdIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_HovrCmmdIEs (SztProtIE_Field_HovrCmmdIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_HovrCmmdIEs (SztProtIE_Cont_HovrCmmdIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztHovrCmmd (SztHovrCmmd *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueHovrPrepFailIEsCls (Szt_ValueHovrPrepFailIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_HovrPrepFailIEs (SztProtIE_Field_HovrPrepFailIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_HovrPrepFailIEs (SztProtIE_Cont_HovrPrepFailIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztHovrPrepFail (SztHovrPrepFail *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnE_RABToBeSetupItemHOReq_ExtIEsCls (Szt_ExtnE_RABToBeSetupItemHOReq_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_E_RABToBeSetupItemHOReq_ExtIEs (SztProtExtnField_E_RABToBeSetupItemHOReq_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_E_RABToBeSetupItemHOReq_ExtIEs (SztProtExtnCont_E_RABToBeSetupItemHOReq_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABToBeSetupItemHOReq (SztE_RABToBeSetupItemHOReq *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABToBeSetupItemHOReqIEsCls (Szt_ValueE_RABToBeSetupItemHOReqIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABToBeSetupItemHOReqIEs (SztProtIE_Field_E_RABToBeSetupItemHOReqIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_ContLst_E_RABToBeSetupItemHOReqIEs (SztProtIE_ContLst_E_RABToBeSetupItemHOReqIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueHovrRqstIEsCls (Szt_ValueHovrRqstIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_HovrRqstIEs (SztProtIE_Field_HovrRqstIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_HovrRqstIEs (SztProtIE_Cont_HovrRqstIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztHovrRqst (SztHovrRqst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnE_RABAdmtdItem_ExtIEsCls (Szt_ExtnE_RABAdmtdItem_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_E_RABAdmtdItem_ExtIEs (SztProtExtnField_E_RABAdmtdItem_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_E_RABAdmtdItem_ExtIEs (SztProtExtnCont_E_RABAdmtdItem_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABAdmtdItem (SztE_RABAdmtdItem *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABAdmtdItemIEsCls (Szt_ValueE_RABAdmtdItemIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABAdmtdItemIEs (SztProtIE_Field_E_RABAdmtdItemIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_ContLst_E_RABAdmtdItemIEs (SztProtIE_ContLst_E_RABAdmtdItemIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnE_RABFailedToSetupItemHOReqAckExtIEsCls (Szt_ExtnE_RABFailedToSetupItemHOReqAckExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_E_RABFailedToSetupItemHOReqAckExtIEs (SztProtExtnField_E_RABFailedToSetupItemHOReqAckExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_E_RABFailedToSetupItemHOReqAckExtIEs (SztProtExtnCont_E_RABFailedToSetupItemHOReqAckExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABFailedToSetupItemHOReqAck (SztE_RABFailedToSetupItemHOReqAck *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABFailedtoSetupItemHOReqAckIEsCls (Szt_ValueE_RABFailedtoSetupItemHOReqAckIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABFailedtoSetupItemHOReqAckIEs (SztProtIE_Field_E_RABFailedtoSetupItemHOReqAckIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_ContLst_E_RABFailedtoSetupItemHOReqAckIEs (SztProtIE_ContLst_E_RABFailedtoSetupItemHOReqAckIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueHovrRqstAckgIEsCls (Szt_ValueHovrRqstAckgIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_HovrRqstAckgIEs (SztProtIE_Field_HovrRqstAckgIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_HovrRqstAckgIEs (SztProtIE_Cont_HovrRqstAckgIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztHovrRqstAckg (SztHovrRqstAckg *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueHovrFailIEsCls (Szt_ValueHovrFailIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_HovrFailIEs (SztProtIE_Field_HovrFailIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_HovrFailIEs (SztProtIE_Cont_HovrFailIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztHovrFail (SztHovrFail *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueHovrNtfyIEsCls (Szt_ValueHovrNtfyIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_HovrNtfyIEs (SztProtIE_Field_HovrNtfyIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_HovrNtfyIEs (SztProtIE_Cont_HovrNtfyIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztHovrNtfy (SztHovrNtfy *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnE_RABToBeSwedDLItem_ExtIEsCls (Szt_ExtnE_RABToBeSwedDLItem_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_E_RABToBeSwedDLItem_ExtIEs (SztProtExtnField_E_RABToBeSwedDLItem_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_E_RABToBeSwedDLItem_ExtIEs (SztProtExtnCont_E_RABToBeSwedDLItem_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABToBeSwedDLItem (SztE_RABToBeSwedDLItem *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABToBeSwedDLItemIEsCls (Szt_ValueE_RABToBeSwedDLItemIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABToBeSwedDLItemIEs (SztProtIE_Field_E_RABToBeSwedDLItemIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_ContLst_E_RABToBeSwedDLItemIEs (SztProtIE_ContLst_E_RABToBeSwedDLItemIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValuePathSwRqstIEsCls (Szt_ValuePathSwRqstIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_PathSwRqstIEs (SztProtIE_Field_PathSwRqstIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_PathSwRqstIEs (SztProtIE_Cont_PathSwRqstIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztPathSwRqst (SztPathSwRqst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnE_RABToBeSwedULItem_ExtIEsCls (Szt_ExtnE_RABToBeSwedULItem_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_E_RABToBeSwedULItem_ExtIEs (SztProtExtnField_E_RABToBeSwedULItem_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_E_RABToBeSwedULItem_ExtIEs (SztProtExtnCont_E_RABToBeSwedULItem_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABToBeSwedULItem (SztE_RABToBeSwedULItem *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABToBeSwedULItemIEsCls (Szt_ValueE_RABToBeSwedULItemIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABToBeSwedULItemIEs (SztProtIE_Field_E_RABToBeSwedULItemIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_ContLst_E_RABToBeSwedULItemIEs (SztProtIE_ContLst_E_RABToBeSwedULItemIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValuePathSwRqstAckgIEsCls (Szt_ValuePathSwRqstAckgIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_PathSwRqstAckgIEs (SztProtIE_Field_PathSwRqstAckgIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_PathSwRqstAckgIEs (SztProtIE_Cont_PathSwRqstAckgIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztPathSwRqstAckg (SztPathSwRqstAckg *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValuePathSwRqstFailIEsCls (Szt_ValuePathSwRqstFailIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_PathSwRqstFailIEs (SztProtIE_Field_PathSwRqstFailIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_PathSwRqstFailIEs (SztProtIE_Cont_PathSwRqstFailIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztPathSwRqstFail (SztPathSwRqstFail *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueHovrCancelIEsCls (Szt_ValueHovrCancelIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_HovrCancelIEs (SztProtIE_Field_HovrCancelIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_HovrCancelIEs (SztProtIE_Cont_HovrCancelIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztHovrCancel (SztHovrCancel *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueHovrCancelAckgIEsCls (Szt_ValueHovrCancelAckgIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_HovrCancelAckgIEs (SztProtIE_Field_HovrCancelAckgIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_HovrCancelAckgIEs (SztProtIE_Cont_HovrCancelAckgIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztHovrCancelAckg (SztHovrCancelAckg *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnE_RABToBeSetupItemBrSUReqExtIEsCls (Szt_ExtnE_RABToBeSetupItemBrSUReqExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_E_RABToBeSetupItemBrSUReqExtIEs (SztProtExtnField_E_RABToBeSetupItemBrSUReqExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_E_RABToBeSetupItemBrSUReqExtIEs (SztProtExtnCont_E_RABToBeSetupItemBrSUReqExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABToBeSetupItemBrSUReq (SztE_RABToBeSetupItemBrSUReq *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABToBeSetupItemBrSUReqIEsCls (Szt_ValueE_RABToBeSetupItemBrSUReqIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABToBeSetupItemBrSUReqIEs (SztProtIE_Field_E_RABToBeSetupItemBrSUReqIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABToBeSetupLstBrSUReq (SztE_RABToBeSetupLstBrSUReq *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABSetupRqstIEsCls (Szt_ValueE_RABSetupRqstIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABSetupRqstIEs (SztProtIE_Field_E_RABSetupRqstIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_E_RABSetupRqstIEs (SztProtIE_Cont_E_RABSetupRqstIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABSetupRqst (SztE_RABSetupRqst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnE_RABSetupItemBrSUResExtIEsCls (Szt_ExtnE_RABSetupItemBrSUResExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_E_RABSetupItemBrSUResExtIEs (SztProtExtnField_E_RABSetupItemBrSUResExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_E_RABSetupItemBrSUResExtIEs (SztProtExtnCont_E_RABSetupItemBrSUResExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABSetupItemBrSURes (SztE_RABSetupItemBrSURes *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABSetupItemBrSUResIEsCls (Szt_ValueE_RABSetupItemBrSUResIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABSetupItemBrSUResIEs (SztProtIE_Field_E_RABSetupItemBrSUResIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABSetupLstBrSURes (SztE_RABSetupLstBrSURes *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABSetupRespIEsCls (Szt_ValueE_RABSetupRespIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABSetupRespIEs (SztProtIE_Field_E_RABSetupRespIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_E_RABSetupRespIEs (SztProtIE_Cont_E_RABSetupRespIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABSetupResp (SztE_RABSetupResp *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnE_RABToBeMdfyItemBrModReqExtIEsCls (Szt_ExtnE_RABToBeMdfyItemBrModReqExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_E_RABToBeMdfyItemBrModReqExtIEs (SztProtExtnField_E_RABToBeMdfyItemBrModReqExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_E_RABToBeMdfyItemBrModReqExtIEs (SztProtExtnCont_E_RABToBeMdfyItemBrModReqExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABToBeMdfdItemBrModReq (SztE_RABToBeMdfdItemBrModReq *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABToBeMdfdItemBrModReqIEsCls (Szt_ValueE_RABToBeMdfdItemBrModReqIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABToBeMdfdItemBrModReqIEs (SztProtIE_Field_E_RABToBeMdfdItemBrModReqIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABToBeMdfdLstBrModReq (SztE_RABToBeMdfdLstBrModReq *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABMdfyRqstIEsCls (Szt_ValueE_RABMdfyRqstIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABMdfyRqstIEs (SztProtIE_Field_E_RABMdfyRqstIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_E_RABMdfyRqstIEs (SztProtIE_Cont_E_RABMdfyRqstIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABMdfyRqst (SztE_RABMdfyRqst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnE_RABMdfyItemBrModResExtIEsCls (Szt_ExtnE_RABMdfyItemBrModResExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_E_RABMdfyItemBrModResExtIEs (SztProtExtnField_E_RABMdfyItemBrModResExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_E_RABMdfyItemBrModResExtIEs (SztProtExtnCont_E_RABMdfyItemBrModResExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABMdfyItemBrModRes (SztE_RABMdfyItemBrModRes *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABMdfyItemBrModResIEsCls (Szt_ValueE_RABMdfyItemBrModResIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABMdfyItemBrModResIEs (SztProtIE_Field_E_RABMdfyItemBrModResIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABMdfyLstBrModRes (SztE_RABMdfyLstBrModRes *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABMdfyRespIEsCls (Szt_ValueE_RABMdfyRespIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABMdfyRespIEs (SztProtIE_Field_E_RABMdfyRespIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_E_RABMdfyRespIEs (SztProtIE_Cont_E_RABMdfyRespIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABMdfyResp (SztE_RABMdfyResp *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABRlsCmmdIEsCls (Szt_ValueE_RABRlsCmmdIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABRlsCmmdIEs (SztProtIE_Field_E_RABRlsCmmdIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_E_RABRlsCmmdIEs (SztProtIE_Cont_E_RABRlsCmmdIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABRlsCmmd (SztE_RABRlsCmmd *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnE_RABRlsItemBrRelCompExtIEsCls (Szt_ExtnE_RABRlsItemBrRelCompExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_E_RABRlsItemBrRelCompExtIEs (SztProtExtnField_E_RABRlsItemBrRelCompExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_E_RABRlsItemBrRelCompExtIEs (SztProtExtnCont_E_RABRlsItemBrRelCompExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABRlsItemBrRelComp (SztE_RABRlsItemBrRelComp *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABRlsItemBrRelCompIEsCls (Szt_ValueE_RABRlsItemBrRelCompIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABRlsItemBrRelCompIEs (SztProtIE_Field_E_RABRlsItemBrRelCompIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABRlsLstBrRelComp (SztE_RABRlsLstBrRelComp *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABRlsRespIEsCls (Szt_ValueE_RABRlsRespIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABRlsRespIEs (SztProtIE_Field_E_RABRlsRespIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_E_RABRlsRespIEs (SztProtIE_Cont_E_RABRlsRespIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABRlsResp (SztE_RABRlsResp *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABRlsIndIEsCls (Szt_ValueE_RABRlsIndIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABRlsIndIEs (SztProtIE_Field_E_RABRlsIndIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_E_RABRlsIndIEs (SztProtIE_Cont_E_RABRlsIndIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABRlsInd (SztE_RABRlsInd *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnE_RABToBeSetupItemCtxtSUReqExtIEsCls (Szt_ExtnE_RABToBeSetupItemCtxtSUReqExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_E_RABToBeSetupItemCtxtSUReqExtIEs (SztProtExtnField_E_RABToBeSetupItemCtxtSUReqExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_E_RABToBeSetupItemCtxtSUReqExtIEs (SztProtExtnCont_E_RABToBeSetupItemCtxtSUReqExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABToBeSetupItemCtxtSUReq (SztE_RABToBeSetupItemCtxtSUReq *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABToBeSetupItemCtxtSUReqIEsCls (Szt_ValueE_RABToBeSetupItemCtxtSUReqIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABToBeSetupItemCtxtSUReqIEs (SztProtIE_Field_E_RABToBeSetupItemCtxtSUReqIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABToBeSetupLstCtxtSUReq (SztE_RABToBeSetupLstCtxtSUReq *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueInitCntxtSetupRqstIEsCls (Szt_ValueInitCntxtSetupRqstIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_InitCntxtSetupRqstIEs (SztProtIE_Field_InitCntxtSetupRqstIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_InitCntxtSetupRqstIEs (SztProtIE_Cont_InitCntxtSetupRqstIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztInitCntxtSetupRqst (SztInitCntxtSetupRqst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnE_RABSetupItemCtxtSUResExtIEsCls (Szt_ExtnE_RABSetupItemCtxtSUResExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_E_RABSetupItemCtxtSUResExtIEs (SztProtExtnField_E_RABSetupItemCtxtSUResExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_E_RABSetupItemCtxtSUResExtIEs (SztProtExtnCont_E_RABSetupItemCtxtSUResExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABSetupItemCtxtSURes (SztE_RABSetupItemCtxtSURes *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABSetupItemCtxtSUResIEsCls (Szt_ValueE_RABSetupItemCtxtSUResIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABSetupItemCtxtSUResIEs (SztProtIE_Field_E_RABSetupItemCtxtSUResIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABSetupLstCtxtSURes (SztE_RABSetupLstCtxtSURes *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueInitCntxtSetupRespIEsCls (Szt_ValueInitCntxtSetupRespIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_InitCntxtSetupRespIEs (SztProtIE_Field_InitCntxtSetupRespIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_InitCntxtSetupRespIEs (SztProtIE_Cont_InitCntxtSetupRespIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztInitCntxtSetupResp (SztInitCntxtSetupResp *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueInitCntxtSetupFailIEsCls (Szt_ValueInitCntxtSetupFailIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_InitCntxtSetupFailIEs (SztProtIE_Field_InitCntxtSetupFailIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_InitCntxtSetupFailIEs (SztProtIE_Cont_InitCntxtSetupFailIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztInitCntxtSetupFail (SztInitCntxtSetupFail *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnTAIItemExtIEsCls (Szt_ExtnTAIItemExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_TAIItemExtIEs (SztProtExtnField_TAIItemExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_TAIItemExtIEs (SztProtExtnCont_TAIItemExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztTAIItem (SztTAIItem *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueTAIItemIEsCls (Szt_ValueTAIItemIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_TAIItemIEs (SztProtIE_Field_TAIItemIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztTAILst (SztTAILst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValuePagIEsCls (Szt_ValuePagIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_PagIEs (SztProtIE_Field_PagIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_PagIEs (SztProtIE_Cont_PagIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztPag (SztPag *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueUECntxtRlsRqst_IEsCls (Szt_ValueUECntxtRlsRqst_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_UECntxtRlsRqst_IEs (SztProtIE_Field_UECntxtRlsRqst_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_UECntxtRlsRqst_IEs (SztProtIE_Cont_UECntxtRlsRqst_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUECntxtRlsRqst (SztUECntxtRlsRqst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueUECntxtRlsCmmd_IEsCls (Szt_ValueUECntxtRlsCmmd_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_UECntxtRlsCmmd_IEs (SztProtIE_Field_UECntxtRlsCmmd_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_UECntxtRlsCmmd_IEs (SztProtIE_Cont_UECntxtRlsCmmd_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUECntxtRlsCmmd (SztUECntxtRlsCmmd *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueUECntxtRlsComplete_IEsCls (Szt_ValueUECntxtRlsComplete_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_UECntxtRlsComplete_IEs (SztProtIE_Field_UECntxtRlsComplete_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_UECntxtRlsComplete_IEs (SztProtIE_Cont_UECntxtRlsComplete_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUECntxtRlsComplete (SztUECntxtRlsComplete *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueUECntxtModificationRqstIEsCls (Szt_ValueUECntxtModificationRqstIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_UECntxtModificationRqstIEs (SztProtIE_Field_UECntxtModificationRqstIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_UECntxtModificationRqstIEs (SztProtIE_Cont_UECntxtModificationRqstIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUECntxtModificationRqst (SztUECntxtModificationRqst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueUECntxtModificationRespIEsCls (Szt_ValueUECntxtModificationRespIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_UECntxtModificationRespIEs (SztProtIE_Field_UECntxtModificationRespIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_UECntxtModificationRespIEs (SztProtIE_Cont_UECntxtModificationRespIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUECntxtModificationResp (SztUECntxtModificationResp *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueUECntxtModificationFailIEsCls (Szt_ValueUECntxtModificationFailIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_UECntxtModificationFailIEs (SztProtIE_Field_UECntxtModificationFailIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_UECntxtModificationFailIEs (SztProtIE_Cont_UECntxtModificationFailIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUECntxtModificationFail (SztUECntxtModificationFail *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueDlnkNASTport_IEsCls (Szt_ValueDlnkNASTport_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_DlnkNASTport_IEs (SztProtIE_Field_DlnkNASTport_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_DlnkNASTport_IEs (SztProtIE_Cont_DlnkNASTport_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztDlnkNASTport (SztDlnkNASTport *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueInitUEMsg_IEsCls (Szt_ValueInitUEMsg_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_InitUEMsg_IEs (SztProtIE_Field_InitUEMsg_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_InitUEMsg_IEs (SztProtIE_Cont_InitUEMsg_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztInitUEMsg (SztInitUEMsg *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueUlnkNASTport_IEsCls (Szt_ValueUlnkNASTport_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_UlnkNASTport_IEs (SztProtIE_Field_UlnkNASTport_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_UlnkNASTport_IEs (SztProtIE_Cont_UlnkNASTport_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUlnkNASTport (SztUlnkNASTport *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueNASNonDlvryInd_IEsCls (Szt_ValueNASNonDlvryInd_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_NASNonDlvryInd_IEs (SztProtIE_Field_NASNonDlvryInd_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_NASNonDlvryInd_IEs (SztProtIE_Cont_NASNonDlvryInd_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztNASNonDlvryInd (SztNASNonDlvryInd *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueUE_assocLogS1_ConItemResCls (Szt_ValueUE_assocLogS1_ConItemResCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_UE_assocLogS1_ConItemRes (SztProtIE_Field_UE_assocLogS1_ConItemRes *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUE_assocLogS1_ConLstRes (SztUE_assocLogS1_ConLstRes *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztResetTyp (SztResetTyp *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueResetIEsCls (Szt_ValueResetIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_ResetIEs (SztProtIE_Field_ResetIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_ResetIEs (SztProtIE_Cont_ResetIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztReset (SztReset *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueUE_assocLogS1_ConItemResAckCls (Szt_ValueUE_assocLogS1_ConItemResAckCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_UE_assocLogS1_ConItemResAck (SztProtIE_Field_UE_assocLogS1_ConItemResAck *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUE_assocLogS1_ConLstResAck (SztUE_assocLogS1_ConLstResAck *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueResetAckgIEsCls (Szt_ValueResetAckgIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_ResetAckgIEs (SztProtIE_Field_ResetAckgIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_ResetAckgIEs (SztProtIE_Cont_ResetAckgIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztResetAckg (SztResetAckg *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueErrIndIEsCls (Szt_ValueErrIndIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_ErrIndIEs (SztProtIE_Field_ErrIndIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_ErrIndIEs (SztProtIE_Cont_ErrIndIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztErrInd (SztErrInd *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueS1SetupRqstIEsCls (Szt_ValueS1SetupRqstIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_S1SetupRqstIEs (SztProtIE_Field_S1SetupRqstIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_S1SetupRqstIEs (SztProtIE_Cont_S1SetupRqstIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztS1SetupRqst (SztS1SetupRqst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueS1SetupRespIEsCls (Szt_ValueS1SetupRespIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_S1SetupRespIEs (SztProtIE_Field_S1SetupRespIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_S1SetupRespIEs (SztProtIE_Cont_S1SetupRespIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztS1SetupResp (SztS1SetupResp *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueS1SetupFailIEsCls (Szt_ValueS1SetupFailIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_S1SetupFailIEs (SztProtIE_Field_S1SetupFailIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_S1SetupFailIEs (SztProtIE_Cont_S1SetupFailIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztS1SetupFail (SztS1SetupFail *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueENBConfigUpdIEsCls (Szt_ValueENBConfigUpdIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_ENBConfigUpdIEs (SztProtIE_Field_ENBConfigUpdIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_ENBConfigUpdIEs (SztProtIE_Cont_ENBConfigUpdIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztENBConfigUpd (SztENBConfigUpd *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueENBConfigUpdAckgIEsCls (Szt_ValueENBConfigUpdAckgIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_ENBConfigUpdAckgIEs (SztProtIE_Field_ENBConfigUpdAckgIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_ENBConfigUpdAckgIEs (SztProtIE_Cont_ENBConfigUpdAckgIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztENBConfigUpdAckg (SztENBConfigUpdAckg *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueENBConfigUpdFailIEsCls (Szt_ValueENBConfigUpdFailIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_ENBConfigUpdFailIEs (SztProtIE_Field_ENBConfigUpdFailIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_ENBConfigUpdFailIEs (SztProtIE_Cont_ENBConfigUpdFailIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztENBConfigUpdFail (SztENBConfigUpdFail *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueMMEConfigUpdIEsCls (Szt_ValueMMEConfigUpdIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_MMEConfigUpdIEs (SztProtIE_Field_MMEConfigUpdIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_MMEConfigUpdIEs (SztProtIE_Cont_MMEConfigUpdIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztMMEConfigUpd (SztMMEConfigUpd *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueMMEConfigUpdAckgIEsCls (Szt_ValueMMEConfigUpdAckgIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_MMEConfigUpdAckgIEs (SztProtIE_Field_MMEConfigUpdAckgIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_MMEConfigUpdAckgIEs (SztProtIE_Cont_MMEConfigUpdAckgIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztMMEConfigUpdAckg (SztMMEConfigUpdAckg *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueMMEConfigUpdFailIEsCls (Szt_ValueMMEConfigUpdFailIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_MMEConfigUpdFailIEs (SztProtIE_Field_MMEConfigUpdFailIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_MMEConfigUpdFailIEs (SztProtIE_Cont_MMEConfigUpdFailIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztMMEConfigUpdFail (SztMMEConfigUpdFail *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueDlnkS1cdma2000tunnelingIEsCls (Szt_ValueDlnkS1cdma2000tunnelingIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_DlnkS1cdma2000tunnelingIEs (SztProtIE_Field_DlnkS1cdma2000tunnelingIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_DlnkS1cdma2000tunnelingIEs (SztProtIE_Cont_DlnkS1cdma2000tunnelingIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztDlnkS1cdma2000tunneling (SztDlnkS1cdma2000tunneling *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueUlnkS1cdma2000tunnelingIEsCls (Szt_ValueUlnkS1cdma2000tunnelingIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_UlnkS1cdma2000tunnelingIEs (SztProtIE_Field_UlnkS1cdma2000tunnelingIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_UlnkS1cdma2000tunnelingIEs (SztProtIE_Cont_UlnkS1cdma2000tunnelingIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUlnkS1cdma2000tunneling (SztUlnkS1cdma2000tunneling *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueUECapbltyInfoIndIEsCls (Szt_ValueUECapbltyInfoIndIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_UECapbltyInfoIndIEs (SztProtIE_Field_UECapbltyInfoIndIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_UECapbltyInfoIndIEs (SztProtIE_Cont_UECapbltyInfoIndIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUECapbltyInfoInd (SztUECapbltyInfoInd *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueENBStatusTfrIEsCls (Szt_ValueENBStatusTfrIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_ENBStatusTfrIEs (SztProtIE_Field_ENBStatusTfrIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_ENBStatusTfrIEs (SztProtIE_Cont_ENBStatusTfrIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztENBStatusTfr (SztENBStatusTfr *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueMMEStatusTfrIEsCls (Szt_ValueMMEStatusTfrIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_MMEStatusTfrIEs (SztProtIE_Field_MMEStatusTfrIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_MMEStatusTfrIEs (SztProtIE_Cont_MMEStatusTfrIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztMMEStatusTfr (SztMMEStatusTfr *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueTraceStartIEsCls (Szt_ValueTraceStartIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_TraceStartIEs (SztProtIE_Field_TraceStartIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_TraceStartIEs (SztProtIE_Cont_TraceStartIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztTraceStart (SztTraceStart *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueTraceFailIndIEsCls (Szt_ValueTraceFailIndIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_TraceFailIndIEs (SztProtIE_Field_TraceFailIndIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_TraceFailIndIEs (SztProtIE_Cont_TraceFailIndIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztTraceFailInd (SztTraceFailInd *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueDeactvTraceIEsCls (Szt_ValueDeactvTraceIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_DeactvTraceIEs (SztProtIE_Field_DeactvTraceIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_DeactvTraceIEs (SztProtIE_Cont_DeactvTraceIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztDeactvTrace (SztDeactvTrace *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueCellTrafficTraceIEsCls (Szt_ValueCellTrafficTraceIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_CellTrafficTraceIEs (SztProtIE_Field_CellTrafficTraceIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_CellTrafficTraceIEs (SztProtIE_Cont_CellTrafficTraceIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCellTrafficTrace (SztCellTrafficTrace *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueLocRprtngCntrlIEsCls (Szt_ValueLocRprtngCntrlIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_LocRprtngCntrlIEs (SztProtIE_Field_LocRprtngCntrlIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_LocRprtngCntrlIEs (SztProtIE_Cont_LocRprtngCntrlIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztLocRprtngCntrl (SztLocRprtngCntrl *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueLocRprtngFailIndIEsCls (Szt_ValueLocRprtngFailIndIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_LocRprtngFailIndIEs (SztProtIE_Field_LocRprtngFailIndIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_LocRprtngFailIndIEs (SztProtIE_Cont_LocRprtngFailIndIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztLocRprtngFailInd (SztLocRprtngFailInd *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueLocReportIEsCls (Szt_ValueLocReportIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_LocReportIEs (SztProtIE_Field_LocReportIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_LocReportIEs (SztProtIE_Cont_LocReportIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztLocReport (SztLocReport *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueOverloadStartIEsCls (Szt_ValueOverloadStartIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_OverloadStartIEs (SztProtIE_Field_OverloadStartIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_OverloadStartIEs (SztProtIE_Cont_OverloadStartIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztOverloadStart (SztOverloadStart *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueOverloadStopIEsCls (Szt_ValueOverloadStopIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_OverloadStopIEs (SztProtIE_Field_OverloadStopIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_OverloadStopIEs (SztProtIE_Cont_OverloadStopIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztOverloadStop (SztOverloadStop *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueWriteReplaceWarningRqstIEsCls (Szt_ValueWriteReplaceWarningRqstIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_WriteReplaceWarningRqstIEs (SztProtIE_Field_WriteReplaceWarningRqstIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_WriteReplaceWarningRqstIEs (SztProtIE_Cont_WriteReplaceWarningRqstIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztWriteReplaceWarningRqst (SztWriteReplaceWarningRqst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueWriteReplaceWarningRespIEsCls (Szt_ValueWriteReplaceWarningRespIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_WriteReplaceWarningRespIEs (SztProtIE_Field_WriteReplaceWarningRespIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_WriteReplaceWarningRespIEs (SztProtIE_Cont_WriteReplaceWarningRespIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztWriteReplaceWarningResp (SztWriteReplaceWarningResp *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztInter_SystemInformTfrTyp (SztInter_SystemInformTfrTyp *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueENBDirectInformTfrIEsCls (Szt_ValueENBDirectInformTfrIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_ENBDirectInformTfrIEs (SztProtIE_Field_ENBDirectInformTfrIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_ENBDirectInformTfrIEs (SztProtIE_Cont_ENBDirectInformTfrIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztENBDirectInformTfr (SztENBDirectInformTfr *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueMMEDirectInformTfrIEsCls (Szt_ValueMMEDirectInformTfrIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_MMEDirectInformTfrIEs (SztProtIE_Field_MMEDirectInformTfrIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_MMEDirectInformTfrIEs (SztProtIE_Cont_MMEDirectInformTfrIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztMMEDirectInformTfr (SztMMEDirectInformTfr *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueENBConfigTfrIEsCls (Szt_ValueENBConfigTfrIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_ENBConfigTfrIEs (SztProtIE_Field_ENBConfigTfrIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_ENBConfigTfrIEs (SztProtIE_Cont_ENBConfigTfrIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztENBConfigTfr (SztENBConfigTfr *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueMMEConfigTfrIEsCls (Szt_ValueMMEConfigTfrIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_MMEConfigTfrIEs (SztProtIE_Field_MMEConfigTfrIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_MMEConfigTfrIEs (SztProtIE_Cont_MMEConfigTfrIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztMMEConfigTfr (SztMMEConfigTfr *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValuePrivMsgIEsCls (Szt_ValuePrivMsgIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztPrivIE_Field_PrivMsgIEs (SztPrivIE_Field_PrivMsgIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztPrivIE_Cont_PrivMsgIEs (SztPrivIE_Cont_PrivMsgIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztPrivMsg (SztPrivMsg *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueKillRqstIEsCls (Szt_ValueKillRqstIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_KillRqstIEs (SztProtIE_Field_KillRqstIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_KillRqstIEs (SztProtIE_Cont_KillRqstIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztKillRqst (SztKillRqst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueKillRespIEsCls (Szt_ValueKillRespIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_KillRespIEs (SztProtIE_Field_KillRespIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_KillRespIEs (SztProtIE_Cont_KillRespIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztKillResp (SztKillResp *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueDlnkUEAssociatedLPPaTport_IEsCls (Szt_ValueDlnkUEAssociatedLPPaTport_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_DlnkUEAssociatedLPPaTport_IEs (SztProtIE_Field_DlnkUEAssociatedLPPaTport_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_DlnkUEAssociatedLPPaTport_IEs (SztProtIE_Cont_DlnkUEAssociatedLPPaTport_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztDlnkUEAssociatedLPPaTport (SztDlnkUEAssociatedLPPaTport *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueUlnkUEAssociatedLPPaTport_IEsCls (Szt_ValueUlnkUEAssociatedLPPaTport_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_UlnkUEAssociatedLPPaTport_IEs (SztProtIE_Field_UlnkUEAssociatedLPPaTport_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_UlnkUEAssociatedLPPaTport_IEs (SztProtIE_Cont_UlnkUEAssociatedLPPaTport_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUlnkUEAssociatedLPPaTport (SztUlnkUEAssociatedLPPaTport *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueDlnkNonUEAssociatedLPPaTport_IEsCls (Szt_ValueDlnkNonUEAssociatedLPPaTport_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_DlnkNonUEAssociatedLPPaTport_IEs (SztProtIE_Field_DlnkNonUEAssociatedLPPaTport_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_DlnkNonUEAssociatedLPPaTport_IEs (SztProtIE_Cont_DlnkNonUEAssociatedLPPaTport_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztDlnkNonUEAssociatedLPPaTport (SztDlnkNonUEAssociatedLPPaTport *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueUlnkNonUEAssociatedLPPaTport_IEsCls (Szt_ValueUlnkNonUEAssociatedLPPaTport_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_UlnkNonUEAssociatedLPPaTport_IEs (SztProtIE_Field_UlnkNonUEAssociatedLPPaTport_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_UlnkNonUEAssociatedLPPaTport_IEs (SztProtIE_Cont_UlnkNonUEAssociatedLPPaTport_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUlnkNonUEAssociatedLPPaTport (SztUlnkNonUEAssociatedLPPaTport *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_InitiatingMsgCls (Szt_InitiatingMsgCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztInitiatingMsg (SztInitiatingMsg *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_SuccessfulOutcomeCls (Szt_SuccessfulOutcomeCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztSuccessfulOutcome (SztSuccessfulOutcome *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_UnsuccessfulOutcomeCls (Szt_UnsuccessfulOutcomeCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUnsuccessfulOutcome (SztUnsuccessfulOutcome *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztS1AP_PDU (SztS1AP_PDU *param, Ptr ptr, Buffer *mBuf);
# 151 "../..//enbapp/src/wr.h" 2

# 1 "../..//cm/szt.x" 1
# 91 "../..//cm/szt.x"
#define __SZTX__ 







typedef U16 SztPort;
# 111 "../..//cm/szt.x"
typedef struct s1appdu
{
   CmMemListCp memCp;
   SztS1AP_PDU pdu;
}S1apPdu;


typedef struct sztConReq
{
   TknU32 peerId;
   union
   {
      UConnId spConnId;
      UConnId suConnId;
   }u;
   S1apPdu *pdu;
}SztConReq;

typedef SztConReq SztConInd;

typedef struct sztConRsp
{
   UConnId suConnId;
   UConnId spConnId;
   S1apPdu *pdu;
}SztConRsp;


typedef struct sztRelReq
{
   U8 connIdType;
   U8 relType;
   UConnId connId;
   S1apPdu *pdu;
}SztRelReq;

typedef struct sztRelInd
{
   TknU32 suConnId;
   UConnId spConnId;
   S1apPdu *pdu;
}SztRelInd;

typedef SztConRsp SztConCfm;

typedef struct sztRelCfm
{
   UConnId suConnId;
   UConnId spConnId;
   U8 relType;
   S1apPdu *pdu;
}SztRelCfm;

typedef SztConRsp SztRelRsp;

typedef struct sztDatReq
{
   UConnId spConnId;
   S1apPdu *pdu;
}SztDatEvntReq;

typedef struct sztDatInd
{
   UConnId suConnId;
   S1apPdu *pdu;
}SztDatEvntInd;


typedef struct sztUDatEvnt
{
   TknU32 transId;
   TknU32 peerId;
   S1apPdu *pdu;
}SztUDatEvnt;



typedef struct sztConnSt
{
   UConnId connId;
   State state;
}SztConnSt;
typedef struct sztAudConn
{
   U8 connIdType;
   U8 nmbConn;
   SztConnSt connSt[10];
}SztAudConn;

typedef struct sztAudPeer
{
   U32 peerId;
   State peerState;
}SztAudPeer;

typedef struct sztReqStatus
{
   U16 status;
   U16 cause;
}SztReqStatus;
# 323 "../..//cm/szt.x"
typedef struct sztAudEvnt
{
   U8 type;
   union
   {
      SztAudConn audConn;
      SztAudPeer audPeer;
   }u;
   SztReqStatus status;
}SztAudEvnt;

typedef struct sztStaInd
{
   TknU32 peerId;
   U8 type;
   U8 status;
   U8 reason;
}SztStaInd;

typedef struct sztLclErrInd
{
   TknU32 suConnId;
   TknU32 spConnId;
   TknU32 transId;
   U8 causeType;
   U8 causeValue;
}SztLclErrInd;



typedef struct szIePdu
{
   CmMemListCp memCp;
   union
   {
      SztSrceNB_ToTgeteNB_TprntCont srcToTget;
      SztTgeteNB_ToSrceNB_TprntCont tgetToSrc;
   }u;
}SzIePdu;


typedef struct sztEncDecEvnt
{
   U32 transId;
   TknU8 type;


   TknU8 ieType;

   union
   {
      S1apPdu *pdu;


      SzIePdu *iePdu;

      Buffer *mBuf;
   }u;
}SztEncDecEvnt;

typedef struct sztFlcInd
{
   TknU32 peerId;
   U8 status;
}SztFlcInd;
# 411 "../..//cm/szt.x"
typedef struct _sztAbortS1
{
   TknU32 peerId;
   CmStatus abortS1Cfm;
} SztAbortS1;




typedef S16 (*SztBndReq) ( Pst *pst, SuId suId, SpId spId );





typedef S16 (*SztUbndReq) ( Pst *pst, SpId spId, Reason reason );





typedef S16 (*SztBndCfm) ( Pst *pst, SuId suId, U8 status );





typedef S16 (*SztStatusInd) ( Pst *pst, SuId suId, SztStaInd *sztSta );





typedef S16 (*SztFlowControlInd) ( Pst *pst, SuId suId, SztFlcInd *flcInd );





typedef S16 (*SztErrorInd) ( Pst *pst, SuId suId, SztLclErrInd *sztLclErrInd );





typedef S16 (*SztUDatReq) ( Pst *pst, SpId spId, SztUDatEvnt *uDatEvnt );





typedef S16 (*SztUDatInd) ( Pst *pst, SuId suId, SztUDatEvnt *uDatEvnt );





typedef S16 (*SztConnReq) ( Pst *pst, SpId spId, SztConReq *conReq );





typedef S16 (*SztConnInd) ( Pst *pst, SuId suId, SztConInd *conInd );





typedef S16 (*SztConnRsp) ( Pst *pst, SpId spId, SztConRsp *conRsp );





typedef S16 (*SztConnCfm) ( Pst *pst, SuId suId, SztConCfm *conCfm );





typedef S16 (*SztRelsReq) ( Pst *pst, SpId spId, SztRelReq *relReq );





typedef S16 (*SztRelsInd) ( Pst *pst, SuId suId, SztRelInd *relInd );





typedef S16 (*SztRelsRsp) ( Pst *pst, SpId spId, SztRelRsp *relRsp );





typedef S16 (*SztRelsCfm) ( Pst *pst, SuId suId, SztRelCfm *relCfm );





typedef S16 (*SztDatReq) ( Pst *pst, SpId spId, SztDatEvntReq *datEvnt );





typedef S16 (*SztDatInd) ( Pst *pst, SuId suId, SztDatEvntInd *datEvnt );





typedef S16 (*SztEncDecReq) ( Pst *pst, SpId spId, SztEncDecEvnt *sztEncDecEvnt );





typedef S16 (*SztEncDecCfm) ( Pst *pst, SuId suId, SztEncDecEvnt *sztEncDecEvnt, SztReqStatus *status );






typedef S16 (*SztAudReq) ( Pst *pst, SpId spId, SztAudEvnt *audEvnt );





typedef S16 (*SztAudCfm) ( Pst *pst, SuId suId, SztAudEvnt *audEvnt );







typedef S16 (*SztAbortS1Req) ( Pst *pst, SpId spId, SztAbortS1 *abortS1 );





typedef S16 (*SztAbortS1Cfm) ( Pst *pst, SuId suId, SztAbortS1 *abortS1 );
# 587 "../..//cm/szt.x"
extern S16 cmPkS1apPdu (S1apPdu *param,Buffer *mBuf);


extern S16 cmPkS1apPduIe (SztEncDecEvnt *param,Buffer *mBuf);

extern S16 cmPkSztBndReq (Pst *pst, SuId suId, SpId spId);
extern S16 cmPkSztUbndReq (Pst *pst, SpId spId, Reason reason);
extern S16 cmPkSztBndCfm (Pst *pst, SuId suId, U8 status);
extern S16 cmPkSztStaInd (Pst *pst, SuId suId, SztStaInd *sztSta);
extern S16 cmPkSztFlcInd (Pst *pst, SuId suId, SztFlcInd *sztSta);
extern S16 cmPkSztLclErrInd (Pst *pst, SuId suId, SztLclErrInd *sztErrInd);

extern S16 cmPkSztUDatReq (Pst *pst, SpId spId, SztUDatEvnt *uDatEvnt);
extern S16 cmPkSztUDatInd (Pst *pst, SuId suId, SztUDatEvnt *uDatEvnt);
extern S16 cmPkSztConReq (Pst *pst, SpId spId, SztConReq *conReq);
extern S16 cmPkSztConInd (Pst *pst, SuId suId, SztConInd *conInd);
extern S16 cmPkSztConRsp (Pst *pst, SpId spId, SztConRsp *conRsp);
extern S16 cmPkSztConCfm (Pst *pst, SuId suId, SztConCfm *conCfm);
extern S16 cmPkSztRelReq (Pst *pst, SpId spId, SztRelReq *relReq);
extern S16 cmPkSztRelInd (Pst *pst, SuId suId, SztRelInd *relInd);
extern S16 cmPkSztRelRsp (Pst *pst, SpId spId, SztRelRsp *relRsp);
extern S16 cmPkSztRelCfm (Pst *pst, SuId suId, SztRelCfm *relCfm);
extern S16 cmPkSztDatReq (Pst *pst, SpId spId, SztDatEvntReq *datEvnt);
extern S16 cmPkSztDatInd (Pst *pst, SuId suId, SztDatEvntInd *datEvnt);
extern S16 cmPkSztEncDecReq (Pst *pst, SpId spId, SztEncDecEvnt *sztEncDecEvnt);

extern S16 cmPkSztEncDecCfm (Pst *pst, SuId suId, SztEncDecEvnt *sztEncDecEvnt, SztReqStatus *status);


extern S16 cmPkSztAudReq (Pst *pst, SpId spId, SztAudEvnt *audEvnt);
extern S16 cmPkSztAudCfm (Pst *pst, SuId suId, SztAudEvnt *audEvnt);
extern S16 cmPkSztAudEvnt ( SztAudEvnt *audEvnt, Buffer *mBuf);
extern S16 cmUnpkSztAudEvnt ( SztAudEvnt *audEvnt, Buffer *mBuf);



extern S16 cmPkSztAbortS1Req (Pst *pst, SpId spId, SztAbortS1 *abortS1);
extern S16 cmPkSztAbortS1Cfm (Pst *pst, SuId suId, SztAbortS1 *abortS1);
# 637 "../..//cm/szt.x"
extern S16 cmUnpkS1apPdu (S1apPdu *param,Mem *sMem,Buffer *mBuf);


extern S16 cmUnpkS1apPduIe (SztEncDecEvnt *param,Mem *sMem,Buffer *mBuf);

extern S16 cmUnpkSztBndReq (SztBndReq func, Pst *pst, Buffer *mBuf);
extern S16 cmUnpkSztUbndReq (SztUbndReq func, Pst *pst, Buffer *mBuf);
extern S16 cmUnpkSztBndCfm (SztBndCfm func, Pst *pst, Buffer *mBuf);
extern S16 cmUnpkSztStaInd (SztStatusInd func,Pst *pst,Buffer *mBuf);
extern S16 cmUnpkSztFlcInd (SztFlowControlInd func,Pst *pst,Buffer *mBuf);
extern S16 cmUnpkFlcStaInd (SztFlowControlInd func,Pst *pst,Buffer *mBuf);
extern S16 cmUnpkSztLclErrInd (SztErrorInd func, Pst *pst, Buffer *mBuf);
extern S16 cmUnpkSztUDatReq (SztUDatReq func, Pst *pst, Buffer *mBuf, Mem *sMem);



extern S16 cmUnpkSztUDatInd (SztUDatInd func, Pst *pst, Buffer *mBuf, Mem *sMem);



extern S16 cmUnpkSztConReq (SztConnReq func, Pst *pst, Buffer *mBuf, Mem *sMem);



extern S16 cmUnpkSztConInd (SztConnInd func, Pst *pst, Buffer *mBuf, Mem *sMem);



extern S16 cmUnpkSztConRsp (SztConnRsp func, Pst *pst, Buffer *mBuf, Mem *sMem);



extern S16 cmUnpkSztConCfm (SztConnCfm func, Pst *pst, Buffer *mBuf, Mem *sMem);



extern S16 cmUnpkSztRelReq (SztRelsReq func, Pst *pst, Buffer *mBuf, Mem *sMem);



extern S16 cmUnpkSztRelInd (SztRelsInd func, Pst *pst, Buffer *mBuf, Mem *sMem);



extern S16 cmUnpkSztRelRsp (SztRelsRsp func, Pst *pst, Buffer *mBuf, Mem *sMem);



extern S16 cmUnpkSztRelCfm (SztRelsCfm func, Pst *pst, Buffer *mBuf, Mem *sMem);



extern S16 cmUnpkSztDatReq (SztDatReq func, Pst *pst, Buffer *mBuf, Mem *sMem);



extern S16 cmUnpkSztDatInd (SztDatInd func, Pst *pst, Buffer *mBuf, Mem *sMem);



extern S16 cmUnpkSztEncDecReq (SztEncDecReq func, Pst *pst, Buffer *mBuf, Mem *sMem);



extern S16 cmUnpkSztEncDecCfm (SztEncDecCfm func, Pst *pst, Buffer *mBuf, Mem *sMem);



extern S16 cmUnpkSztAudReq (SztAudReq func, Pst *pst, Buffer *mBuf, Mem *sMem);



extern S16 cmUnpkSztAudCfm (SztAudCfm func, Pst *pst, Buffer *mBuf,Mem *sMem);
# 733 "../..//cm/szt.x"
extern S16 SzUiSztBndReq (Pst *pst, SuId suId, SpId spId);
extern S16 SzUiSztUbndReq (Pst *pst, SpId spId, Reason reason);
extern S16 SzUiSztBndCfm (Pst *pst, SuId suId, U8 status);
extern S16 SzUiSztStaInd (Pst *pst, SuId suId, SztStaInd *sztSta);

extern S16 SzUiSztFlcInd (Pst *pst, SuId suId, SztFlcInd *flcInd);
extern S16 SzUiSztErrInd (Pst *pst, SuId suId, SztLclErrInd *sztErrInd);

extern S16 SzUiSztUDatReq (Pst *pst, SpId spId, SztUDatEvnt *uDatEvnt);

extern S16 SzUiSztUDatInd (Pst *pst, SuId suId, SztUDatEvnt *uDatEvnt);

extern S16 SzUiSztConReq (Pst *pst, SpId spId, SztConReq *conReq);
extern S16 SzUiSztConInd (Pst *pst, SuId suId, SztConInd *conInd);
extern S16 SzUiSztConRsp (Pst *pst, SpId spId, SztConRsp *conRsp);
extern S16 SzUiSztConCfm (Pst *pst, SuId suId, SztConCfm *conCfm);
extern S16 SzUiSztRelReq (Pst *pst, SpId spId, SztRelReq *relReq);
extern S16 SzUiSztRelInd (Pst *pst, SuId suId, SztRelInd *relInd);
extern S16 SzUiSztRelRsp (Pst *pst, SpId spId, SztRelRsp *relRsp);
extern S16 SzUiSztRelCfm (Pst *pst, SuId suId, SztRelCfm *relCfm);
extern S16 SzUiSztDatReq (Pst *pst, SpId spId, SztDatEvntReq *datEvnt);

extern S16 SzUiSztDatInd (Pst *pst, SuId suId, SztDatEvntInd *datEvnt);

extern S16 SzUiSztEncDecReq (Pst *pst, SpId spId, SztEncDecEvnt *sztEncDecEvnt);

extern S16 SzUiSztEncDecCfm (Pst *pst, SuId suId, SztEncDecEvnt *encDecEvnt, SztReqStatus *status);


extern S16 SzUiSztAudReq (Pst *pst, SpId spId, SztAudEvnt *audEvnt);
extern S16 SzUiSztAudCfm (Pst *pst, SuId suId, SztAudEvnt *audEvnt);



extern S16 SzUiSztAbortS1Req (Pst *pst, SpId spId, SztAbortS1 *abortS1);
extern S16 SzUiSztAbortS1Cfm (Pst *pst, SuId suId, SztAbortS1 *abortS1);
# 794 "../..//cm/szt.x"
extern S16 UzLiSztBndReq (Pst *pst, SuId suId, SpId spId);
extern S16 UzLiSztUbndReq (Pst *pst, SpId spId, Reason reason);
extern S16 UzLiSztBndCfm (Pst *pst, SuId suId, U8 status);
extern S16 UzLiSztStaInd (Pst *pst, SuId suId, SztStaInd *sztSta);
extern S16 UzLiSztFlcInd (Pst *pst, SuId suId, SztFlcInd *flcInd);
extern S16 UzLiSztErrInd (Pst *pst, SuId suId, SztLclErrInd *lclErrInd);

extern S16 UzLiSztUDatReq (Pst *pst, SpId spId, SztUDatEvnt *uDatEvnt);

extern S16 UzLiSztUDatInd (Pst *pst, SuId suId, SztUDatEvnt *uDatEvnt);

extern S16 UzLiSztConReq (Pst *pst, SpId spId, SztConReq *conReq);
extern S16 UzLiSztConInd (Pst *pst, SuId suId, SztConInd *conInd);
extern S16 UzLiSztConRsp (Pst *pst, SpId spId, SztConRsp *conRsp);
extern S16 UzLiSztConCfm (Pst *pst, SuId suId, SztConCfm *conCfm);
extern S16 UzLiSztRelReq (Pst *pst, SpId spId, SztRelReq *relReq);
extern S16 UzLiSztRelInd (Pst *pst, SuId suId, SztRelInd *relInd);
extern S16 UzLiSztRelRsp (Pst *pst, SpId spId, SztRelRsp *relRsp);
extern S16 UzLiSztRelCfm (Pst *pst, SuId suId, SztRelCfm *relCfm);
extern S16 UzLiSztDatReq (Pst *pst, SpId spId, SztDatEvntReq *datEvnt);

extern S16 UzLiSztDatInd (Pst *pst, SuId suId, SztDatEvntInd *datEvnt);

extern S16 UzLiSztEncDecReq (Pst *pst, SpId spId, SztEncDecEvnt *encDecEvnt);

extern S16 UzLiSztEncDecCfm (Pst *pst, SuId suId, SztEncDecEvnt *encDecEvnt, SztReqStatus *status);


extern S16 UzLiSztAudReq (Pst *pst, SpId spId, SztAudEvnt *audEvnt);
extern S16 UzLiSztAudCfm (Pst *pst, SuId suId, SztAudEvnt *audEvnt);


extern S16 UzLiSztAbortS1Cfm (Pst *pst, SuId suId, SztAbortS1 *abortS1);
extern S16 UzLiSztAbortS1Req (Pst *pst, SpId spId, SztAbortS1 *abortS1);
# 153 "../..//enbapp/src/wr.h" 2
# 1 "../..//cm/nhu_asn.x" 1
# 154 "../..//enbapp/src/wr.h" 2

# 1 "../..//cm/czt.x" 1
# 100 "../..//cm/czt.x"
#define __CZTX__ 






# 1 "../..//cm/envopt.h" 1
# 108 "../..//cm/czt.x" 2
# 1 "../..//cm/envdep.h" 1
# 109 "../..//cm/czt.x" 2
# 1 "../..//cm/envind.h" 1
# 110 "../..//cm/czt.x" 2
# 1 "../..//cm/gen.h" 1
# 111 "../..//cm/czt.x" 2
# 1 "../..//cm/ssi.h" 1
# 112 "../..//cm/czt.x" 2
# 1 "../..//cm/cm_tkns.h" 1
# 113 "../..//cm/czt.x" 2
# 1 "../..//cm/cm_mblk.h" 1
# 114 "../..//cm/czt.x" 2
# 1 "../..//cm/czt.h" 1
# 115 "../..//cm/czt.x" 2
# 1 "../..//cm/czt_asn.h" 1
# 91 "../..//cm/czt_asn.h"
#define __CZTASNH__ 





#define CZUCHKUNPKPTR(func,val,ptr,mBuf) { S16 ret; if ((ret = func(val, mBuf, ptr)) != ROK) RETVALUE(ret);}




#define Cztid_Invalid 0xffffffff
#define CztmaxPrivIEs 65535
#define CztmaxProtExtns 65535
#define CztmaxProtIEs 65535

#define PRIVIE_ID_LOCAL 0
#define PRIVIE_ID_GLOBAL 1
#define Cztid_handoverPrep 0
#define Cztid_handoverCancel 1
#define Cztid_loadInd 2
#define Cztid_errorInd 3
#define Cztid_snStatusTfr 4
#define Cztid_uECntxtRls 5
#define Cztid_x2Setup 6
#define Cztid_reset 7
#define Cztid_eNBConfigUpd 8
#define Cztid_resourceStatusRprtngInitiation 9
#define Cztid_resourceStatusRprtng 10

#define Cztid_mobilitySettingsChange 11
#define Cztid_rLFInd 12
#define Cztid_handoverReport 13
#define Cztid_cellActvn 14
#define Cztid_privateMsg 15
#define CztmaxEARFCN 65535
#define CztmaxIntfs 16
#define CztmaxCellineNB 256
#define CztmaxnoofBrs 256
#define CztmaxNrOfErrs 256
#define CztmaxnoofPDCP_SN 16
#define CztmaxnoofEPLMNs 15
#define CztmaxnoofEPLMNsPlusOne 16
#define CztmaxnoofForbLACs 4096
#define CztmaxnoofForbTACs 4096
#define CztmaxnoofBPLMNs 6
#define CztmaxnoofNeighbours 512
#define CztmaxnoofPRBs 110
#define CztmaxPools 16
#define CztmaxnoofCells 16
#define CztmaxnoofMBSFN 8
#define Cztid_E_RABs_Admtd_Item 0
#define Cztid_E_RABs_Admtd_Lst 1
#define Cztid_E_RAB_Item 2
#define Cztid_E_RABs_NotAdmtd_Lst 3
#define Cztid_E_RABs_ToBeSetup_Item 4
#define Cztid_Cause 5
#define Cztid_CellInform 6
#define Cztid_CellInform_Item 7
#define Cztid_New_eNB_UE_X2AP_ID 9
#define Cztid_Old_eNB_UE_X2AP_ID 10
#define Cztid_TgetCell_ID 11
#define Cztid_TgeteNBtoSrc_eNBTprntCont 12
#define Cztid_TraceActvn 13
#define Cztid_UE_CntxtInform 14
#define Cztid_UE_HistoryInform 15
#define Cztid_UE_X2AP_ID 16
#define Cztid_CriticalityDiag 17
#define Cztid_E_RABs_SubjToStatusTfr_Lst 18
#define Cztid_E_RABs_SubjToStatusTfr_Item 19
#define Cztid_SrvdCells 20
#define Cztid_GlobalENB_ID 21
#define Cztid_TimeToWait 22
#define Cztid_GUMMEI_ID 23
#define Cztid_GUGroupIDLst 24
#define Cztid_SrvdCellsToAdd 25
#define Cztid_SrvdCellsToMdfy 26
#define Cztid_SrvdCellsToDelete 27
#define Cztid_Registration_Rqst 28
#define Cztid_CellToReport 29
#define Cztid_RprtngPeriodicity 30
#define Cztid_CellToReport_Item 31
#define Cztid_CellMeasurementResult 32
#define Cztid_CellMeasurementResult_Item 33
#define Cztid_GUGroupIDToAddLst 34
#define Cztid_GUGroupIDToDeleteLst 35
#define Cztid_SRVCCOperationPossible 36
#define Cztid_Measurement_ID 37
#define Cztid_ReportCharacteristics 38
#define Cztid_ENB1_Measurement_ID 39
#define Cztid_ENB2_Measurement_ID 40
#define Cztid_Number_of_Antennaports 41
#define Cztid_CompositeAvailableCapacityGroup 42
#define Cztid_ENB1_Cell_ID 43
#define Cztid_ENB2_Cell_ID 44
#define Cztid_ENB2_Proposed_Mobility_Params 45
#define Cztid_ENB1_Mobility_Params 46
#define Cztid_ENB2_Mobility_Params_Modification_Range 47
#define Cztid_FailCellPCI 48
#define Cztid_Re_establishmentCellECGI 49
#define Cztid_FailCellCRNTI 50
#define Cztid_ShortMAC_I 51
#define Cztid_SrcCellECGI 52
#define Cztid_FailCellECGI 53
#define Cztid_HovrReportTyp 54
#define Cztid_PRACH_Config 55
#define Cztid_MBSFN_Subframe_Info 56
#define Cztid_SrvdCellsToActivate 57
#define Cztid_ActivatedCellLst 58
#define Cztid_DeactivationInd 59
#define Cztid_UE_RLF_Report_Cont 60

#define CAUSE_RADIONW 0
#define CAUSE_TRANSPORT 1
#define CAUSE_PROTOCOL 2
#define CAUSE_MISC 3

#define EUTRA_MODE_INFO_FDD 0
#define EUTRA_MODE_INFO_TDD 1

#define ENB_ID_MACRO_ENB_ID 0
#define ENB_ID_HOME_ENB_ID 1

#define LASTVISITEDGERANCELLINFORM_UNDEFINED 0

#define LASTVISITEDCELL_ITEM_E_UTRAN_CELL 0
#define LASTVISITEDCELL_ITEM_UTRAN_CELL 1
#define LASTVISITEDCELL_ITEM_GERAN_CELL 2

#define SUBFRAMEALLOCN_ONEFRAME 0
#define SUBFRAMEALLOCN_FOURFRAMES 1

#define X2AP_PDU_INITIATINGMSG 0
#define X2AP_PDU_SUCCESSFULOUTCOME 1
#define X2AP_PDU_UNSUCCESSFULOUTCOME 2
# 116 "../..//cm/czt.x" 2


# 1 "../..//cm/gen.x" 1
# 119 "../..//cm/czt.x" 2
# 1 "../..//cm/ssi.x" 1
# 120 "../..//cm/czt.x" 2
# 1 "../..//cm/cm_tkns.x" 1
# 121 "../..//cm/czt.x" 2

# 1 "../..//cm/cm_lib.x" 1
# 123 "../..//cm/czt.x" 2
# 1 "../..//cm/czt_asn.x" 1
# 92 "../..//cm/czt_asn.x"
#define __CZTASNX__ 






typedef enum enumCztCriticality
{
        CztCriticalityrejectEnum,
        CztCriticalityignoreEnum,
        CztCriticalitynotifyEnum
} EnumCztCriticality;
typedef TknU32 CztCriticality;


typedef enum enumCztPresence
{
        CztPresenceoptionalEnum,
        CztPresenceconditionalEnum,
        CztPresencemandatoryEnum
} EnumCztPresence;
typedef TknU32 CztPresence;


typedef TknU32 CztPrivIE_IDlocal;
typedef TknU32 Cztglobal;

typedef struct x2apPrivIE_ID
{
        TknU8 choice;
        union {
                CztPrivIE_IDlocal local;
                Cztglobal global;
        } val;
} CztPrivIE_ID;


typedef TknU32 CztProcedureCode;


typedef TknU32 CztProtIE_ID;


typedef enum enumCztTrgMsg
{
        CztTrgMsginitiating_messageEnum,
        CztTrgMsgsuccessful_outcomeEnum,
        CztTrgMsgunsuccessful_outcomeEnum
} EnumCztTrgMsg;
typedef TknU32 CztTrgMsg;


typedef TknStrBSXL CztKey_eNodeB_Star;

typedef TknU32 CztNextHopChainingCount;

typedef struct x2ap_ExtnAS_SecurInform_ExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnAS_SecurInform_ExtIEsCls;
typedef struct x2apProtExtnField_AS_SecurInform_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnAS_SecurInform_ExtIEsCls extensionValue;
} CztProtExtnField_AS_SecurInform_ExtIEs;

typedef struct x2apProtExtnCont_AS_SecurInform_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_AS_SecurInform_ExtIEs *member;
}CztProtExtnCont_AS_SecurInform_ExtIEs;

typedef struct x2apAS_SecurInform
{
        TknPres pres;
        CztKey_eNodeB_Star key_eNodeB_star;
        CztNextHopChainingCount nextHopChainingCount;
        CztProtExtnCont_AS_SecurInform_ExtIEs iE_Extns;
} CztAS_SecurInform;


typedef TknU32 CztPriorityLvl;


typedef enum enumCztPre_emptionCapblty
{
        CztPre_emptionCapbltyshall_not_trigger_pre_emptionEnum,
        CztPre_emptionCapbltymay_trigger_pre_emptionEnum
} EnumCztPre_emptionCapblty;
typedef TknU32 CztPre_emptionCapblty;


typedef enum enumCztPre_emptionVulnerability
{
        CztPre_emptionVulnerabilitynot_pre_emptableEnum,
        CztPre_emptionVulnerabilitypre_emptableEnum
} EnumCztPre_emptionVulnerability;
typedef TknU32 CztPre_emptionVulnerability;

typedef struct x2ap_ExtnAllocnAndRetentionPriority_ExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnAllocnAndRetentionPriority_ExtIEsCls;
typedef struct x2apProtExtnField_AllocnAndRetentionPriority_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnAllocnAndRetentionPriority_ExtIEsCls extensionValue;
} CztProtExtnField_AllocnAndRetentionPriority_ExtIEs;

typedef struct x2apProtExtnCont_AllocnAndRetentionPriority_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_AllocnAndRetentionPriority_ExtIEs *member;
}CztProtExtnCont_AllocnAndRetentionPriority_ExtIEs;

typedef struct x2apAllocnAndRetentionPriority
{
        TknPres pres;
        CztPriorityLvl priorityLvl;
        CztPre_emptionCapblty pre_emptionCapblty;
        CztPre_emptionVulnerability pre_emptionVulnerability;
        CztProtExtnCont_AllocnAndRetentionPriority_ExtIEs iE_Extns;
} CztAllocnAndRetentionPriority;


typedef TknStrOSXL CztBitRate;


typedef TknStrOSXL CztPLMN_Identity;
typedef struct x2apBroadcastPLMNs_Item
{
        TknU16 noComp;
        CztPLMN_Identity *member;
}CztBroadcastPLMNs_Item;


typedef TknU32 CztCapacityValue;


typedef TknU32 CztCellCapacityClassValue;


typedef enum enumCztCauseRadioNw
{
        CztCauseRadioNwhandover_desirable_for_radio_reasonsEnum,
        CztCauseRadioNwtime_critical_handoverEnum,
        CztCauseRadioNwresource_optimisation_handoverEnum,
        CztCauseRadioNwreduce_load_in_serving_cellEnum,
        CztCauseRadioNwpartial_handoverEnum,
        CztCauseRadioNwunknown_new_eNB_UE_X2AP_IDEnum,
        CztCauseRadioNwunknown_old_eNB_UE_X2AP_IDEnum,
        CztCauseRadioNwunknown_pair_of_UE_X2AP_IDEnum,
        CztCauseRadioNwho_target_not_allowedEnum,
        CztCauseRadioNwtx2relocoverall_expiryEnum,
        CztCauseRadioNwtrelocprep_expiryEnum,
        CztCauseRadioNwcell_not_availableEnum,
        CztCauseRadioNwno_radio_resources_available_in_target_cellEnum,
        CztCauseRadioNwinvalid_MME_GroupIDEnum,
        CztCauseRadioNwunknown_MME_CodeEnum,
        CztCauseRadioNwencryption_and_or_integrity_protection_algorithms_not_supportedEnum,
        CztCauseRadioNwreportCharacteristicsEmptyEnum,
        CztCauseRadioNwnoReportPeriodicityEnum,
        CztCauseRadioNwexistingMeasurementIDEnum,
        CztCauseRadioNwunknown_eNB_Measurement_IDEnum,
        CztCauseRadioNwmeasurement_temporarily_not_availableEnum,
        CztCauseRadioNwunspecifiedEnum,
        CztCauseRadioNwload_balancingEnum,
        CztCauseRadioNwhandover_optimisationEnum,
        CztCauseRadioNwvalue_out_of_allowed_rangeEnum,
        CztCauseRadioNwmultiple_E_RAB_ID_instancesEnum,
        CztCauseRadioNwswitch_off_ongoingEnum,
        CztCauseRadioNwnot_supported_QCI_valueEnum
} EnumCztCauseRadioNw;
typedef TknU32 CztCauseRadioNw;


typedef enum enumCztCauseTport
{
        CztCauseTporttransport_resource_unavailableEnum,
        CztCauseTportunspecifiedEnum
} EnumCztCauseTport;
typedef TknU32 CztCauseTport;


typedef enum enumCztCauseProt
{
        CztCauseProttransfer_syntax_errorEnum,
        CztCauseProtabstract_syntax_error_rejectEnum,
        CztCauseProtabstract_syntax_error_ignore_and_notifyEnum,
        CztCauseProtmessage_not_compatible_with_receiver_stateEnum,
        CztCauseProtsemantic_errorEnum,
        CztCauseProtunspecifiedEnum,
        CztCauseProtabstract_syntax_error_falsely_constructed_messageEnum
} EnumCztCauseProt;
typedef TknU32 CztCauseProt;


typedef enum enumCztCauseMisc
{
        CztCauseMisccontrol_processing_overloadEnum,
        CztCauseMischardware_failureEnum,
        CztCauseMiscom_interventionEnum,
        CztCauseMiscnot_enough_user_plane_processing_resourcesEnum,
        CztCauseMiscunspecifiedEnum
} EnumCztCauseMisc;
typedef TknU32 CztCauseMisc;

typedef struct x2apCause
{
        TknU8 choice;
        union {
                CztCauseRadioNw radioNw;
                CztCauseTport transport;
                CztCauseProt protocol;
                CztCauseMisc misc;
        } val;
} CztCause;


typedef enum enumCztCell_Size
{
        CztCell_SizeverysmallEnum,
        CztCell_SizesmallEnum,
        CztCell_SizemediumEnum,
        CztCell_SizelargeEnum
} EnumCztCell_Size;
typedef TknU32 CztCell_Size;

typedef struct x2ap_ExtnCellTyp_ExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnCellTyp_ExtIEsCls;
typedef struct x2apProtExtnField_CellTyp_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnCellTyp_ExtIEsCls extensionValue;
} CztProtExtnField_CellTyp_ExtIEs;

typedef struct x2apProtExtnCont_CellTyp_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_CellTyp_ExtIEs *member;
}CztProtExtnCont_CellTyp_ExtIEs;

typedef struct x2apCellTyp
{
        TknPres pres;
        CztCell_Size cell_Size;
        CztProtExtnCont_CellTyp_ExtIEs iE_Extns;
} CztCellTyp;

typedef struct x2ap_ExtnCompositeAvailableCapacity_ExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnCompositeAvailableCapacity_ExtIEsCls;
typedef struct x2apProtExtnField_CompositeAvailableCapacity_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnCompositeAvailableCapacity_ExtIEsCls extensionValue;
} CztProtExtnField_CompositeAvailableCapacity_ExtIEs;

typedef struct x2apProtExtnCont_CompositeAvailableCapacity_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_CompositeAvailableCapacity_ExtIEs *member;
}CztProtExtnCont_CompositeAvailableCapacity_ExtIEs;

typedef struct x2apCompositeAvailableCapacity
{
        TknPres pres;
        CztCellCapacityClassValue cellCapacityClassValue;
        CztCapacityValue capacityValue;
        CztProtExtnCont_CompositeAvailableCapacity_ExtIEs iE_Extns;
} CztCompositeAvailableCapacity;

typedef struct x2ap_ExtnCompositeAvailableCapacityGroup_ExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnCompositeAvailableCapacityGroup_ExtIEsCls;
typedef struct x2apProtExtnField_CompositeAvailableCapacityGroup_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnCompositeAvailableCapacityGroup_ExtIEsCls extensionValue;
} CztProtExtnField_CompositeAvailableCapacityGroup_ExtIEs;

typedef struct x2apProtExtnCont_CompositeAvailableCapacityGroup_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_CompositeAvailableCapacityGroup_ExtIEs *member;
}CztProtExtnCont_CompositeAvailableCapacityGroup_ExtIEs;

typedef struct x2apCompositeAvailableCapacityGroup
{
        TknPres pres;
        CztCompositeAvailableCapacity dL_CompositeAvailableCapacity;
        CztCompositeAvailableCapacity uL_CompositeAvailableCapacity;
        CztProtExtnCont_CompositeAvailableCapacityGroup_ExtIEs iE_Extns;
} CztCompositeAvailableCapacityGroup;


typedef TknU32 CztPDCP_SN;


typedef TknU32 CztHFN;

typedef struct x2ap_ExtnCOUNTvalue_ExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnCOUNTvalue_ExtIEsCls;
typedef struct x2apProtExtnField_COUNTvalue_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnCOUNTvalue_ExtIEsCls extensionValue;
} CztProtExtnField_COUNTvalue_ExtIEs;

typedef struct x2apProtExtnCont_COUNTvalue_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_COUNTvalue_ExtIEs *member;
}CztProtExtnCont_COUNTvalue_ExtIEs;

typedef struct x2apCOUNTvalue
{
        TknPres pres;
        CztPDCP_SN pDCP_SN;
        CztHFN hFN;
        CztProtExtnCont_COUNTvalue_ExtIEs iE_Extns;
} CztCOUNTvalue;


typedef enum enumCztTypOfErr
{
        CztTypOfErrnot_understoodEnum,
        CztTypOfErrmissingEnum
} EnumCztTypOfErr;
typedef TknU32 CztTypOfErr;

typedef struct x2ap_ExtnCriticalityDiag_IE_Lst_ExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnCriticalityDiag_IE_Lst_ExtIEsCls;
typedef struct x2apProtExtnField_CriticalityDiag_IE_Lst_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnCriticalityDiag_IE_Lst_ExtIEsCls extensionValue;
} CztProtExtnField_CriticalityDiag_IE_Lst_ExtIEs;

typedef struct x2apProtExtnCont_CriticalityDiag_IE_Lst_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_CriticalityDiag_IE_Lst_ExtIEs *member;
}CztProtExtnCont_CriticalityDiag_IE_Lst_ExtIEs;

typedef struct x2apCriticalityDiag_IE_LstMember
{
        TknPres pres;
        CztCriticality iECriticality;
        CztProtIE_ID iE_ID;
        CztTypOfErr typeOfErr;
        CztProtExtnCont_CriticalityDiag_IE_Lst_ExtIEs iE_Extns;
} CztCriticalityDiag_IE_LstMember;

typedef struct x2apCriticalityDiag_IE_Lst
{
        TknU16 noComp;
        CztCriticalityDiag_IE_LstMember *member;
}CztCriticalityDiag_IE_Lst;

typedef struct x2ap_ExtnCriticalityDiag_ExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnCriticalityDiag_ExtIEsCls;
typedef struct x2apProtExtnField_CriticalityDiag_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnCriticalityDiag_ExtIEsCls extensionValue;
} CztProtExtnField_CriticalityDiag_ExtIEs;

typedef struct x2apProtExtnCont_CriticalityDiag_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_CriticalityDiag_ExtIEs *member;
}CztProtExtnCont_CriticalityDiag_ExtIEs;

typedef struct x2apCriticalityDiag
{
        TknPres pres;
        CztProcedureCode procedureCode;
        CztTrgMsg triggeringMsg;
        CztCriticality procedureCriticality;
        CztCriticalityDiag_IE_Lst iEsCriticalityDiag;
        CztProtExtnCont_CriticalityDiag_ExtIEs iE_Extns;
} CztCriticalityDiag;


typedef TknBStr32 CztCRNTI;

typedef enum enumCztCyclicPrefixDL
{
        CztCyclicPrefixDLnormalEnum,
        CztCyclicPrefixDLextendedEnum
} EnumCztCyclicPrefixDL;
typedef TknU32 CztCyclicPrefixDL;


typedef enum enumCztCyclicPrefixUL
{
        CztCyclicPrefixULnormalEnum,
        CztCyclicPrefixULextendedEnum
} EnumCztCyclicPrefixUL;
typedef TknU32 CztCyclicPrefixUL;


typedef enum enumCztDeactivationInd
{
        CztDeactivationInddeactivatedEnum
} EnumCztDeactivationInd;
typedef TknU32 CztDeactivationInd;


typedef enum enumCztDL_Fwding
{
        CztDL_FwdingdL_forwardingProposedEnum
} EnumCztDL_Fwding;
typedef TknU32 CztDL_Fwding;


typedef TknU32 CztEARFCN;


typedef enum enumCztTransmission_Bandwidth
{
        CztTransmission_Bandwidthbw6Enum,
        CztTransmission_Bandwidthbw15Enum,
        CztTransmission_Bandwidthbw25Enum,
        CztTransmission_Bandwidthbw50Enum,
        CztTransmission_Bandwidthbw75Enum,
        CztTransmission_Bandwidthbw100Enum
} EnumCztTransmission_Bandwidth;
typedef TknU32 CztTransmission_Bandwidth;

typedef struct x2ap_ExtnFDD_Info_ExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnFDD_Info_ExtIEsCls;
typedef struct x2apProtExtnField_FDD_Info_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnFDD_Info_ExtIEsCls extensionValue;
} CztProtExtnField_FDD_Info_ExtIEs;

typedef struct x2apProtExtnCont_FDD_Info_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_FDD_Info_ExtIEs *member;
}CztProtExtnCont_FDD_Info_ExtIEs;

typedef struct x2apFDD_Info
{
        TknPres pres;
        CztEARFCN uL_EARFCN;
        CztEARFCN dL_EARFCN;
        CztTransmission_Bandwidth uL_Transmission_Bandwidth;
        CztTransmission_Bandwidth dL_Transmission_Bandwidth;
        CztProtExtnCont_FDD_Info_ExtIEs iE_Extns;
} CztFDD_Info;


typedef enum enumCztSubframeAssignment
{
        CztSubframeAssignmentsa0Enum,
        CztSubframeAssignmentsa1Enum,
        CztSubframeAssignmentsa2Enum,
        CztSubframeAssignmentsa3Enum,
        CztSubframeAssignmentsa4Enum,
        CztSubframeAssignmentsa5Enum,
        CztSubframeAssignmentsa6Enum
} EnumCztSubframeAssignment;
typedef TknU32 CztSubframeAssignment;


typedef enum enumCztSpecialSubframePatterns
{
        CztSpecialSubframePatternsssp0Enum,
        CztSpecialSubframePatternsssp1Enum,
        CztSpecialSubframePatternsssp2Enum,
        CztSpecialSubframePatternsssp3Enum,
        CztSpecialSubframePatternsssp4Enum,
        CztSpecialSubframePatternsssp5Enum,
        CztSpecialSubframePatternsssp6Enum,
        CztSpecialSubframePatternsssp7Enum,
        CztSpecialSubframePatternsssp8Enum
} EnumCztSpecialSubframePatterns;
typedef TknU32 CztSpecialSubframePatterns;

typedef struct x2ap_ExtnSpecialSubframe_Info_ExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnSpecialSubframe_Info_ExtIEsCls;
typedef struct x2apProtExtnField_SpecialSubframe_Info_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnSpecialSubframe_Info_ExtIEsCls extensionValue;
} CztProtExtnField_SpecialSubframe_Info_ExtIEs;

typedef struct x2apProtExtnCont_SpecialSubframe_Info_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_SpecialSubframe_Info_ExtIEs *member;
}CztProtExtnCont_SpecialSubframe_Info_ExtIEs;

typedef struct x2apSpecialSubframe_Info
{
        TknPres pres;
        CztSpecialSubframePatterns specialSubframePatterns;
        CztCyclicPrefixDL cyclicPrefixDL;
        CztCyclicPrefixUL cyclicPrefixUL;
        CztProtExtnCont_SpecialSubframe_Info_ExtIEs iE_Extns;
} CztSpecialSubframe_Info;

typedef struct x2ap_ExtnTDD_Info_ExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnTDD_Info_ExtIEsCls;
typedef struct x2apProtExtnField_TDD_Info_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnTDD_Info_ExtIEsCls extensionValue;
} CztProtExtnField_TDD_Info_ExtIEs;

typedef struct x2apProtExtnCont_TDD_Info_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_TDD_Info_ExtIEs *member;
}CztProtExtnCont_TDD_Info_ExtIEs;

typedef struct x2apTDD_Info
{
        TknPres pres;
        CztEARFCN eARFCN;
        CztTransmission_Bandwidth transmission_Bandwidth;
        CztSubframeAssignment subframeAssignment;
        CztSpecialSubframe_Info specialSubframe_Info;
        CztProtExtnCont_TDD_Info_ExtIEs iE_Extns;
} CztTDD_Info;

typedef struct x2apEUTRA_Mode_Info
{
        TknU8 choice;
        union {
                CztFDD_Info fDD;
                CztTDD_Info tDD;
        } val;
} CztEUTRA_Mode_Info;


typedef TknBStr32 CztEUTRANCellIdentifier;
typedef struct x2ap_ExtnECGI_ExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnECGI_ExtIEsCls;
typedef struct x2apProtExtnField_ECGI_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnECGI_ExtIEsCls extensionValue;
} CztProtExtnField_ECGI_ExtIEs;

typedef struct x2apProtExtnCont_ECGI_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_ECGI_ExtIEs *member;
}CztProtExtnCont_ECGI_ExtIEs;

typedef struct x2apECGI
{
        TknPres pres;
        CztPLMN_Identity pLMN_Identity;
        CztEUTRANCellIdentifier eUTRANcellIdentifier;
        CztProtExtnCont_ECGI_ExtIEs iE_Extns;
} CztECGI;


typedef TknBStr32 CztENB_IDmacro_eNB_ID;

typedef TknBStr32 CztENB_IDhome_eNB_ID;
typedef struct x2apENB_ID
{
        TknU8 choice;
        union {
                CztENB_IDmacro_eNB_ID macro_eNB_ID;
                CztENB_IDhome_eNB_ID home_eNB_ID;
        } val;
} CztENB_ID;


typedef TknBStr32 CztEncryptionAlgorithms;
typedef struct x2apEPLMNs
{
        TknU16 noComp;
        CztPLMN_Identity *member;
}CztEPLMNs;


typedef TknU32 CztE_RAB_ID;


typedef TknU32 CztQCI;

typedef struct x2ap_ExtnGBR_QosInform_ExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnGBR_QosInform_ExtIEsCls;
typedef struct x2apProtExtnField_GBR_QosInform_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnGBR_QosInform_ExtIEsCls extensionValue;
} CztProtExtnField_GBR_QosInform_ExtIEs;

typedef struct x2apProtExtnCont_GBR_QosInform_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_GBR_QosInform_ExtIEs *member;
}CztProtExtnCont_GBR_QosInform_ExtIEs;

typedef struct x2apGBR_QosInform
{
        TknPres pres;
        CztBitRate e_RAB_MaxBitrateDL;
        CztBitRate e_RAB_MaxBitrateUL;
        CztBitRate e_RAB_GuaranteedBitrateDL;
        CztBitRate e_RAB_GuaranteedBitrateUL;
        CztProtExtnCont_GBR_QosInform_ExtIEs iE_Extns;
} CztGBR_QosInform;

typedef struct x2ap_ExtnE_RAB_Lvl_QoS_Params_ExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnE_RAB_Lvl_QoS_Params_ExtIEsCls;
typedef struct x2apProtExtnField_E_RAB_Lvl_QoS_Params_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnE_RAB_Lvl_QoS_Params_ExtIEsCls extensionValue;
} CztProtExtnField_E_RAB_Lvl_QoS_Params_ExtIEs;

typedef struct x2apProtExtnCont_E_RAB_Lvl_QoS_Params_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_E_RAB_Lvl_QoS_Params_ExtIEs *member;
}CztProtExtnCont_E_RAB_Lvl_QoS_Params_ExtIEs;

typedef struct x2apE_RAB_Lvl_QoS_Params
{
        TknPres pres;
        CztQCI qCI;
        CztAllocnAndRetentionPriority allocationAndRetentionPriority;
        CztGBR_QosInform gbrQosInform;
        CztProtExtnCont_E_RAB_Lvl_QoS_Params_ExtIEs iE_Extns;
} CztE_RAB_Lvl_QoS_Params;

typedef struct x2ap_ExtnE_RAB_Item_ExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnE_RAB_Item_ExtIEsCls;
typedef struct x2apProtExtnField_E_RAB_Item_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnE_RAB_Item_ExtIEsCls extensionValue;
} CztProtExtnField_E_RAB_Item_ExtIEs;

typedef struct x2apProtExtnCont_E_RAB_Item_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_E_RAB_Item_ExtIEs *member;
}CztProtExtnCont_E_RAB_Item_ExtIEs;

typedef struct x2apE_RAB_Item
{
        TknPres pres;
        CztE_RAB_ID e_RAB_ID;
        CztCause cause;
        CztProtExtnCont_E_RAB_Item_ExtIEs iE_Extns;
} CztE_RAB_Item;

typedef struct x2ap_ValueE_RAB_ItemIEsCls{
        union {
                CztE_RAB_Item cztE_RAB_Item;
        } u;
} Czt_ValueE_RAB_ItemIEsCls;
typedef struct x2apProtIE_Field_E_RAB_ItemIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ValueE_RAB_ItemIEsCls value;
} CztProtIE_Field_E_RAB_ItemIEs;


typedef CztProtIE_Field_E_RAB_ItemIEs CztProtIE_Single_Cont_E_RAB_ItemIEs;
typedef struct x2apE_RAB_Lst
{
        TknU16 noComp;
        CztProtIE_Single_Cont_E_RAB_ItemIEs *member;
}CztE_RAB_Lst;


typedef TknStrOSXL CztEUTRANTraceID;

typedef enum enumCztEventTyp
{
        CztEventTypchange_of_serving_cellEnum
} EnumCztEventTyp;
typedef TknU32 CztEventTyp;


typedef enum enumCztForbiddenInterRATs
{
        CztForbiddenInterRATsallEnum,
        CztForbiddenInterRATsgeranEnum,
        CztForbiddenInterRATsutranEnum,
        CztForbiddenInterRATscdma2000Enum,
        CztForbiddenInterRATsgeranandutranEnum,
        CztForbiddenInterRATscdma2000andutranEnum
} EnumCztForbiddenInterRATs;
typedef TknU32 CztForbiddenInterRATs;


typedef TknStr4 CztTAC;
typedef struct x2apForbiddenTACs
{
        TknU16 noComp;
        CztTAC *member;
}CztForbiddenTACs;

typedef struct x2ap_ExtnForbiddenTAs_Item_ExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnForbiddenTAs_Item_ExtIEsCls;
typedef struct x2apProtExtnField_ForbiddenTAs_Item_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnForbiddenTAs_Item_ExtIEsCls extensionValue;
} CztProtExtnField_ForbiddenTAs_Item_ExtIEs;

typedef struct x2apProtExtnCont_ForbiddenTAs_Item_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_ForbiddenTAs_Item_ExtIEs *member;
}CztProtExtnCont_ForbiddenTAs_Item_ExtIEs;

typedef struct x2apForbiddenTAs_Item
{
        TknPres pres;
        CztPLMN_Identity pLMN_Identity;
        CztForbiddenTACs forbiddenTACs;
        CztProtExtnCont_ForbiddenTAs_Item_ExtIEs iE_Extns;
} CztForbiddenTAs_Item;

typedef struct x2apForbiddenTAs
{
        TknU16 noComp;
        CztForbiddenTAs_Item *member;
}CztForbiddenTAs;


typedef TknStr4 CztLAC;
typedef struct x2apForbiddenLACs
{
        TknU16 noComp;
        CztLAC *member;
}CztForbiddenLACs;

typedef struct x2ap_ExtnForbiddenLAs_Item_ExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnForbiddenLAs_Item_ExtIEsCls;
typedef struct x2apProtExtnField_ForbiddenLAs_Item_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnForbiddenLAs_Item_ExtIEsCls extensionValue;
} CztProtExtnField_ForbiddenLAs_Item_ExtIEs;

typedef struct x2apProtExtnCont_ForbiddenLAs_Item_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_ForbiddenLAs_Item_ExtIEs *member;
}CztProtExtnCont_ForbiddenLAs_Item_ExtIEs;

typedef struct x2apForbiddenLAs_Item
{
        TknPres pres;
        CztPLMN_Identity pLMN_Identity;
        CztForbiddenLACs forbiddenLACs;
        CztProtExtnCont_ForbiddenLAs_Item_ExtIEs iE_Extns;
} CztForbiddenLAs_Item;

typedef struct x2apForbiddenLAs
{
        TknU16 noComp;
        CztForbiddenLAs_Item *member;
}CztForbiddenLAs;


typedef TknBStr32 CztFourframes;
typedef struct x2ap_ExtnGlobalENB_ID_ExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnGlobalENB_ID_ExtIEsCls;
typedef struct x2apProtExtnField_GlobalENB_ID_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnGlobalENB_ID_ExtIEsCls extensionValue;
} CztProtExtnField_GlobalENB_ID_ExtIEs;

typedef struct x2apProtExtnCont_GlobalENB_ID_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_GlobalENB_ID_ExtIEs *member;
}CztProtExtnCont_GlobalENB_ID_ExtIEs;

typedef struct x2apGlobalENB_ID
{
        TknPres pres;
        CztPLMN_Identity pLMN_Identity;
        CztENB_ID eNB_ID;
        CztProtExtnCont_GlobalENB_ID_ExtIEs iE_Extns;
} CztGlobalENB_ID;


typedef TknStrBSXL CztTportLyrAddr;

typedef TknStrOSXL CztGTP_TEI;
typedef struct x2ap_ExtnGTPtunnelEndpoint_ExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnGTPtunnelEndpoint_ExtIEsCls;
typedef struct x2apProtExtnField_GTPtunnelEndpoint_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnGTPtunnelEndpoint_ExtIEsCls extensionValue;
} CztProtExtnField_GTPtunnelEndpoint_ExtIEs;

typedef struct x2apProtExtnCont_GTPtunnelEndpoint_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_GTPtunnelEndpoint_ExtIEs *member;
}CztProtExtnCont_GTPtunnelEndpoint_ExtIEs;

typedef struct x2apGTPtunnelEndpoint
{
        TknPres pres;
        CztTportLyrAddr transportLyrAddr;
        CztGTP_TEI gTP_TEID;
        CztProtExtnCont_GTPtunnelEndpoint_ExtIEs iE_Extns;
} CztGTPtunnelEndpoint;


typedef TknStr4 CztMME_Group_ID;
typedef struct x2ap_ExtnGU_Group_ID_ExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnGU_Group_ID_ExtIEsCls;
typedef struct x2apProtExtnField_GU_Group_ID_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnGU_Group_ID_ExtIEsCls extensionValue;
} CztProtExtnField_GU_Group_ID_ExtIEs;

typedef struct x2apProtExtnCont_GU_Group_ID_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_GU_Group_ID_ExtIEs *member;
}CztProtExtnCont_GU_Group_ID_ExtIEs;

typedef struct x2apGU_Group_ID
{
        TknPres pres;
        CztPLMN_Identity pLMN_Identity;
        CztMME_Group_ID mME_Group_ID;
        CztProtExtnCont_GU_Group_ID_ExtIEs iE_Extns;
} CztGU_Group_ID;

typedef struct x2apGUGroupIDLst
{
        TknU16 noComp;
        CztGU_Group_ID *member;
}CztGUGroupIDLst;


typedef TknStr4 CztMME_Code;
typedef struct x2ap_ExtnGUMMEI_ExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnGUMMEI_ExtIEsCls;
typedef struct x2apProtExtnField_GUMMEI_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnGUMMEI_ExtIEsCls extensionValue;
} CztProtExtnField_GUMMEI_ExtIEs;

typedef struct x2apProtExtnCont_GUMMEI_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_GUMMEI_ExtIEs *member;
}CztProtExtnCont_GUMMEI_ExtIEs;

typedef struct x2apGUMMEI
{
        TknPres pres;
        CztGU_Group_ID gU_Group_ID;
        CztMME_Code mMME_Code;
        CztProtExtnCont_GUMMEI_ExtIEs iE_Extns;
} CztGUMMEI;


typedef enum enumCztHovrReportTyp
{
        CztHovrReportTyphoTooEarlyEnum,
        CztHovrReportTyphoToWrongCellEnum
} EnumCztHovrReportTyp;
typedef TknU32 CztHovrReportTyp;

typedef struct x2ap_ExtnHovrRestrnLst_ExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnHovrRestrnLst_ExtIEsCls;
typedef struct x2apProtExtnField_HovrRestrnLst_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnHovrRestrnLst_ExtIEsCls extensionValue;
} CztProtExtnField_HovrRestrnLst_ExtIEs;

typedef struct x2apProtExtnCont_HovrRestrnLst_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_HovrRestrnLst_ExtIEs *member;
}CztProtExtnCont_HovrRestrnLst_ExtIEs;

typedef struct x2apHovrRestrnLst
{
        TknPres pres;
        CztPLMN_Identity servingPLMN;
        CztEPLMNs equivalentPLMNs;
        CztForbiddenTAs forbiddenTAs;
        CztForbiddenLAs forbiddenLAs;
        CztForbiddenInterRATs forbiddenInterRATs;
        CztProtExtnCont_HovrRestrnLst_ExtIEs iE_Extns;
} CztHovrRestrnLst;


typedef enum enumCztLoadIndicator
{
        CztLoadIndicatorlowLoadEnum,
        CztLoadIndicatormediumLoadEnum,
        CztLoadIndicatorhighLoadEnum,
        CztLoadIndicatoroverLoadEnum
} EnumCztLoadIndicator;
typedef TknU32 CztLoadIndicator;

typedef struct x2ap_ExtnHWLoadIndicator_ExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnHWLoadIndicator_ExtIEsCls;
typedef struct x2apProtExtnField_HWLoadIndicator_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnHWLoadIndicator_ExtIEsCls extensionValue;
} CztProtExtnField_HWLoadIndicator_ExtIEs;

typedef struct x2apProtExtnCont_HWLoadIndicator_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_HWLoadIndicator_ExtIEs *member;
}CztProtExtnCont_HWLoadIndicator_ExtIEs;

typedef struct x2apHWLoadIndicator
{
        TknPres pres;
        CztLoadIndicator dLHWLoadIndicator;
        CztLoadIndicator uLHWLoadIndicator;
        CztProtExtnCont_HWLoadIndicator_ExtIEs iE_Extns;
} CztHWLoadIndicator;


typedef TknBStr32 CztIntegrityProtectionAlgorithms;

typedef TknBStr32 CztIntfsToTrace;

typedef TknU32 CztTime_UE_StayedInCell;

typedef struct x2ap_ExtnLastVisitedEUTRANCellInform_ExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnLastVisitedEUTRANCellInform_ExtIEsCls;
typedef struct x2apProtExtnField_LastVisitedEUTRANCellInform_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnLastVisitedEUTRANCellInform_ExtIEsCls extensionValue;
} CztProtExtnField_LastVisitedEUTRANCellInform_ExtIEs;

typedef struct x2apProtExtnCont_LastVisitedEUTRANCellInform_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_LastVisitedEUTRANCellInform_ExtIEs *member;
}CztProtExtnCont_LastVisitedEUTRANCellInform_ExtIEs;

typedef struct x2apLastVisitedEUTRANCellInform
{
        TknPres pres;
        CztECGI global_Cell_ID;
        CztCellTyp cellTyp;
        CztTime_UE_StayedInCell time_UE_StayedInCell;
        CztProtExtnCont_LastVisitedEUTRANCellInform_ExtIEs iE_Extns;
} CztLastVisitedEUTRANCellInform;


typedef TknStrOSXL CztLastVisitedUTRANCellInform;
typedef struct x2apLastVisitedGERANCellInform
{
        TknU8 choice;

} CztLastVisitedGERANCellInform;

typedef struct x2apLastVisitedCell_Item
{
        TknU8 choice;
        union {
                CztLastVisitedEUTRANCellInform e_UTRAN_Cell;
                CztLastVisitedUTRANCellInform uTRAN_Cell;
                CztLastVisitedGERANCellInform gERAN_Cell;
        } val;
} CztLastVisitedCell_Item;


typedef enum enumCztReportArea
{
        CztReportAreaecgiEnum
} EnumCztReportArea;
typedef TknU32 CztReportArea;

typedef struct x2ap_ExtnLocRprtngInform_ExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnLocRprtngInform_ExtIEsCls;
typedef struct x2apProtExtnField_LocRprtngInform_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnLocRprtngInform_ExtIEsCls extensionValue;
} CztProtExtnField_LocRprtngInform_ExtIEs;

typedef struct x2apProtExtnCont_LocRprtngInform_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_LocRprtngInform_ExtIEs *member;
}CztProtExtnCont_LocRprtngInform_ExtIEs;

typedef struct x2apLocRprtngInform
{
        TknPres pres;
        CztEventTyp eventTyp;
        CztReportArea reportArea;
        CztProtExtnCont_LocRprtngInform_ExtIEs iE_Extns;
} CztLocRprtngInform;


typedef TknU32 CztMeasurement_ID;


typedef enum enumCztRadioframeAllocnPeriod
{
        CztRadioframeAllocnPeriodn1Enum,
        CztRadioframeAllocnPeriodn2Enum,
        CztRadioframeAllocnPeriodn4Enum,
        CztRadioframeAllocnPeriodn8Enum,
        CztRadioframeAllocnPeriodn16Enum,
        CztRadioframeAllocnPeriodn32Enum
} EnumCztRadioframeAllocnPeriod;
typedef TknU32 CztRadioframeAllocnPeriod;


typedef TknU32 CztRadioframeAllocnOffset;


typedef TknBStr32 CztOneframe;
typedef struct x2apSubframeAllocn
{
        TknU8 choice;
        union {
                CztOneframe oneframe;
                CztFourframes fourframes;
        } val;
} CztSubframeAllocn;

typedef struct x2ap_ExtnMBSFN_Subframe_Info_ExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnMBSFN_Subframe_Info_ExtIEsCls;
typedef struct x2apProtExtnField_MBSFN_Subframe_Info_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnMBSFN_Subframe_Info_ExtIEsCls extensionValue;
} CztProtExtnField_MBSFN_Subframe_Info_ExtIEs;

typedef struct x2apProtExtnCont_MBSFN_Subframe_Info_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_MBSFN_Subframe_Info_ExtIEs *member;
}CztProtExtnCont_MBSFN_Subframe_Info_ExtIEs;

typedef struct x2apMBSFN_Subframe_Info
{
        TknPres pres;
        CztRadioframeAllocnPeriod radioframeAllocnPeriod;
        CztRadioframeAllocnOffset radioframeAllocnOffset;
        CztSubframeAllocn subframeAllocn;
        CztProtExtnCont_MBSFN_Subframe_Info_ExtIEs iE_Extns;
} CztMBSFN_Subframe_Info;

typedef struct x2apMBSFN_Subframe_Infolist
{
        TknU16 noComp;
        CztMBSFN_Subframe_Info *member;
}CztMBSFN_Subframe_Infolist;


typedef TknS32 CztMobilityParamsModificationRangehandoverTriggerChangeLowerLimit;


typedef TknS32 CztMobilityParamsModificationRangehandoverTriggerChangeUpperLimit;

typedef struct x2apMobilityParamsModificationRange
{
        TknPres pres;
        CztMobilityParamsModificationRangehandoverTriggerChangeLowerLimit handoverTriggerChangeLowerLimit;
        CztMobilityParamsModificationRangehandoverTriggerChangeUpperLimit handoverTriggerChangeUpperLimit;
} CztMobilityParamsModificationRange;


typedef TknU32 CztMobilityParamsInformhandoverTriggerChange;

typedef struct x2apMobilityParamsInform
{
        TknPres pres;
        CztMobilityParamsInformhandoverTriggerChange handoverTriggerChange;
} CztMobilityParamsInform;


typedef TknU32 CztPCI;

typedef struct x2ap_ExtnNeighbour_Inform_ExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnNeighbour_Inform_ExtIEsCls;
typedef struct x2apProtExtnField_Neighbour_Inform_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnNeighbour_Inform_ExtIEsCls extensionValue;
} CztProtExtnField_Neighbour_Inform_ExtIEs;

typedef struct x2apProtExtnCont_Neighbour_Inform_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_Neighbour_Inform_ExtIEs *member;
}CztProtExtnCont_Neighbour_Inform_ExtIEs;

typedef struct x2apNeighbour_InformMember
{
        TknPres pres;
        CztECGI eCGI;
        CztPCI pCI;
        CztEARFCN eARFCN;
        CztProtExtnCont_Neighbour_Inform_ExtIEs iE_Extns;
} CztNeighbour_InformMember;

typedef struct x2apNeighbour_Inform
{
        TknU16 noComp;
        CztNeighbour_InformMember *member;
}CztNeighbour_Inform;


typedef enum enumCztNumber_of_Antennaports
{
        CztNumber_of_Antennaportsan1Enum,
        CztNumber_of_Antennaportsan2Enum,
        CztNumber_of_Antennaportsan4Enum
} EnumCztNumber_of_Antennaports;
typedef TknU32 CztNumber_of_Antennaports;


typedef TknU32 CztPRACH_ConfigrootSequenceIdx;


typedef TknU32 CztPRACH_ConfigzeroCorrelationIdx;


typedef TknU8 CztPRACH_ConfighighSpeedFlag;


typedef TknU32 CztPRACH_Configprach_FreqOffset;


typedef TknU32 CztPRACH_Configprach_ConfigIdx;

typedef struct x2ap_ExtnPRACH_Config_ExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnPRACH_Config_ExtIEsCls;
typedef struct x2apProtExtnField_PRACH_Config_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnPRACH_Config_ExtIEsCls extensionValue;
} CztProtExtnField_PRACH_Config_ExtIEs;

typedef struct x2apProtExtnCont_PRACH_Config_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_PRACH_Config_ExtIEs *member;
}CztProtExtnCont_PRACH_Config_ExtIEs;

typedef struct x2apPRACH_Config
{
        TknPres pres;
        CztPRACH_ConfigrootSequenceIdx rootSequenceIdx;
        CztPRACH_ConfigzeroCorrelationIdx zeroCorrelationIdx;
        CztPRACH_ConfighighSpeedFlag highSpeedFlag;
        CztPRACH_Configprach_FreqOffset prach_FreqOffset;
        CztPRACH_Configprach_ConfigIdx prach_ConfigIdx;
        CztProtExtnCont_PRACH_Config_ExtIEs iE_Extns;
} CztPRACH_Config;


typedef TknStrBSXL CztReceiveStatusofULPDCPSDUs;

typedef enum enumCztRegistration_Rqst
{
        CztRegistration_RqststartEnum,
        CztRegistration_RqststopEnum
} EnumCztRegistration_Rqst;
typedef TknU32 CztRegistration_Rqst;


typedef enum enumCztRNTP_Threshold
{
        CztRNTP_ThresholdminusInfinityEnum,
        CztRNTP_ThresholdminusElevenEnum,
        CztRNTP_ThresholdminusTenEnum,
        CztRNTP_ThresholdminusNineEnum,
        CztRNTP_ThresholdminusEightEnum,
        CztRNTP_ThresholdminusSevenEnum,
        CztRNTP_ThresholdminusSixEnum,
        CztRNTP_ThresholdminusFiveEnum,
        CztRNTP_ThresholdminusFourEnum,
        CztRNTP_ThresholdminusThreeEnum,
        CztRNTP_ThresholdminusTwoEnum,
        CztRNTP_ThresholdminusOneEnum,
        CztRNTP_ThresholdzeroEnum,
        CztRNTP_ThresholdoneEnum,
        CztRNTP_ThresholdtwoEnum,
        CztRNTP_ThresholdthreeEnum
} EnumCztRNTP_Threshold;
typedef TknU32 CztRNTP_Threshold;


typedef TknStrBSXL CztRelativeNarrowbandTxPowerrNTP_PerPRB;

typedef enum enumCztRelativeNarrowbandTxPowernumberOfCellSpecificAntennaPorts
{
        CztRelativeNarrowbandTxPowernumberOfCellSpecificAntennaPortsoneEnum,
        CztRelativeNarrowbandTxPowernumberOfCellSpecificAntennaPortstwoEnum,
        CztRelativeNarrowbandTxPowernumberOfCellSpecificAntennaPortsfourEnum
} EnumCztRelativeNarrowbandTxPowernumberOfCellSpecificAntennaPorts;
typedef TknU32 CztRelativeNarrowbandTxPowernumberOfCellSpecificAntennaPorts;


typedef TknU32 CztRelativeNarrowbandTxPowerp_B;


typedef TknU32 CztRelativeNarrowbandTxPowerpDCCH_InterferenceImpact;

typedef struct x2ap_ExtnRelativeNarrowbandTxPower_ExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnRelativeNarrowbandTxPower_ExtIEsCls;
typedef struct x2apProtExtnField_RelativeNarrowbandTxPower_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnRelativeNarrowbandTxPower_ExtIEsCls extensionValue;
} CztProtExtnField_RelativeNarrowbandTxPower_ExtIEs;

typedef struct x2apProtExtnCont_RelativeNarrowbandTxPower_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_RelativeNarrowbandTxPower_ExtIEs *member;
}CztProtExtnCont_RelativeNarrowbandTxPower_ExtIEs;

typedef struct x2apRelativeNarrowbandTxPower
{
        TknPres pres;
        CztRelativeNarrowbandTxPowerrNTP_PerPRB rNTP_PerPRB;
        CztRNTP_Threshold rNTP_Threshold;
        CztRelativeNarrowbandTxPowernumberOfCellSpecificAntennaPorts numberOfCellSpecificAntennaPorts;
        CztRelativeNarrowbandTxPowerp_B p_B;
        CztRelativeNarrowbandTxPowerpDCCH_InterferenceImpact pDCCH_InterferenceImpact;
        CztProtExtnCont_RelativeNarrowbandTxPower_ExtIEs iE_Extns;
} CztRelativeNarrowbandTxPower;


typedef TknBStr32 CztReportCharacteristics;

typedef TknStrOSXL CztRRC_Cntxt;

typedef TknU32 CztDL_GBR_PRB_usage;


typedef TknU32 CztUL_GBR_PRB_usage;


typedef TknU32 CztDL_non_GBR_PRB_usage;


typedef TknU32 CztUL_non_GBR_PRB_usage;


typedef TknU32 CztDL_Total_PRB_usage;


typedef TknU32 CztUL_Total_PRB_usage;

typedef struct x2ap_ExtnRadioResStatus_ExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnRadioResStatus_ExtIEsCls;
typedef struct x2apProtExtnField_RadioResStatus_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnRadioResStatus_ExtIEsCls extensionValue;
} CztProtExtnField_RadioResStatus_ExtIEs;

typedef struct x2apProtExtnCont_RadioResStatus_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_RadioResStatus_ExtIEs *member;
}CztProtExtnCont_RadioResStatus_ExtIEs;

typedef struct x2apRadioResStatus
{
        TknPres pres;
        CztDL_GBR_PRB_usage dL_GBR_PRB_usage;
        CztUL_GBR_PRB_usage uL_GBR_PRB_usage;
        CztDL_non_GBR_PRB_usage dL_non_GBR_PRB_usage;
        CztUL_non_GBR_PRB_usage uL_non_GBR_PRB_usage;
        CztDL_Total_PRB_usage dL_Total_PRB_usage;
        CztUL_Total_PRB_usage uL_Total_PRB_usage;
        CztProtExtnCont_RadioResStatus_ExtIEs iE_Extns;
} CztRadioResStatus;

typedef struct x2ap_ExtnS1TNLLoadIndicator_ExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnS1TNLLoadIndicator_ExtIEsCls;
typedef struct x2apProtExtnField_S1TNLLoadIndicator_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnS1TNLLoadIndicator_ExtIEsCls extensionValue;
} CztProtExtnField_S1TNLLoadIndicator_ExtIEs;

typedef struct x2apProtExtnCont_S1TNLLoadIndicator_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_S1TNLLoadIndicator_ExtIEs *member;
}CztProtExtnCont_S1TNLLoadIndicator_ExtIEs;

typedef struct x2apS1TNLLoadIndicator
{
        TknPres pres;
        CztLoadIndicator dLS1TNLLoadIndicator;
        CztLoadIndicator uLS1TNLLoadIndicator;
        CztProtExtnCont_S1TNLLoadIndicator_ExtIEs iE_Extns;
} CztS1TNLLoadIndicator;

typedef struct x2ap_ExtnSrvdCell_Inform_ExtIEsCls{
        union {
                CztNumber_of_Antennaports cztNumber_of_Antennaports;
                CztPRACH_Config cztPRACH_Config;
                CztMBSFN_Subframe_Infolist cztMBSFN_Subframe_Infolist;
        } u;
} Czt_ExtnSrvdCell_Inform_ExtIEsCls;
typedef struct x2apProtExtnField_SrvdCell_Inform_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnSrvdCell_Inform_ExtIEsCls extensionValue;
} CztProtExtnField_SrvdCell_Inform_ExtIEs;

typedef struct x2apProtExtnCont_SrvdCell_Inform_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_SrvdCell_Inform_ExtIEs *member;
}CztProtExtnCont_SrvdCell_Inform_ExtIEs;

typedef struct x2apSrvdCell_Inform
{
        TknPres pres;
        CztPCI pCI;
        CztECGI cellId;
        CztTAC tAC;
        CztBroadcastPLMNs_Item broadcastPLMNs;
        CztEUTRA_Mode_Info eUTRA_Mode_Info;
        CztProtExtnCont_SrvdCell_Inform_ExtIEs iE_Extns;
} CztSrvdCell_Inform;

typedef struct x2ap_ExtnSrvdCell_ExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnSrvdCell_ExtIEsCls;
typedef struct x2apProtExtnField_SrvdCell_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnSrvdCell_ExtIEsCls extensionValue;
} CztProtExtnField_SrvdCell_ExtIEs;

typedef struct x2apProtExtnCont_SrvdCell_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_SrvdCell_ExtIEs *member;
}CztProtExtnCont_SrvdCell_ExtIEs;

typedef struct x2apSrvdCellsMember
{
        TknPres pres;
        CztSrvdCell_Inform servedCellInfo;
        CztNeighbour_Inform neighbour_Info;
        CztProtExtnCont_SrvdCell_ExtIEs iE_Extns;
} CztSrvdCellsMember;

typedef struct x2apSrvdCells
{
        TknU16 noComp;
        CztSrvdCellsMember *member;
}CztSrvdCells;


typedef TknBStr32 CztShortMAC_I;

typedef enum enumCztSRVCCOperationPossible
{
        CztSRVCCOperationPossiblepossibleEnum
} EnumCztSRVCCOperationPossible;
typedef TknU32 CztSRVCCOperationPossible;


typedef TknU32 CztSubscriberProfileIDforRFP;


typedef TknStrOSXL CztTgeteNBtoSrc_eNBTprntCont;

typedef enum enumCztTimeToWait
{
        CztTimeToWaitv1sEnum,
        CztTimeToWaitv2sEnum,
        CztTimeToWaitv5sEnum,
        CztTimeToWaitv10sEnum,
        CztTimeToWaitv20sEnum,
        CztTimeToWaitv60sEnum
} EnumCztTimeToWait;
typedef TknU32 CztTimeToWait;


typedef enum enumCztTraceDepth
{
        CztTraceDepthminimumEnum,
        CztTraceDepthmediumEnum,
        CztTraceDepthmaximumEnum,
        CztTraceDepthminimumWithoutVendorSpecificExtnEnum,
        CztTraceDepthmediumWithoutVendorSpecificExtnEnum,
        CztTraceDepthmaximumWithoutVendorSpecificExtnEnum
} EnumCztTraceDepth;
typedef TknU32 CztTraceDepth;


typedef TknStrBSXL CztTraceCollectionEntityIPAddr;
typedef struct x2ap_ExtnTraceActvn_ExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnTraceActvn_ExtIEsCls;
typedef struct x2apProtExtnField_TraceActvn_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnTraceActvn_ExtIEsCls extensionValue;
} CztProtExtnField_TraceActvn_ExtIEs;

typedef struct x2apProtExtnCont_TraceActvn_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_TraceActvn_ExtIEs *member;
}CztProtExtnCont_TraceActvn_ExtIEs;

typedef struct x2apTraceActvn
{
        TknPres pres;
        CztEUTRANTraceID eUTRANTraceID;
        CztIntfsToTrace interfacesToTrace;
        CztTraceDepth traceDepth;
        CztTraceCollectionEntityIPAddr traceCollectionEntityIPAddr;
        CztProtExtnCont_TraceActvn_ExtIEs iE_Extns;
} CztTraceActvn;

typedef struct x2apUE_HistoryInform
{
        TknU16 noComp;
        CztLastVisitedCell_Item *member;
}CztUE_HistoryInform;


typedef TknU32 CztUE_S1AP_ID;


typedef TknU32 CztUE_X2AP_ID;

typedef struct x2ap_ExtnUEAgg_MaxBitrate_ExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnUEAgg_MaxBitrate_ExtIEsCls;
typedef struct x2apProtExtnField_UEAgg_MaxBitrate_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnUEAgg_MaxBitrate_ExtIEsCls extensionValue;
} CztProtExtnField_UEAgg_MaxBitrate_ExtIEs;

typedef struct x2apProtExtnCont_UEAgg_MaxBitrate_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_UEAgg_MaxBitrate_ExtIEs *member;
}CztProtExtnCont_UEAgg_MaxBitrate_ExtIEs;

typedef struct x2apUEAggMaxBitRate
{
        TknPres pres;
        CztBitRate uEaggregateMaxBitRateDlnk;
        CztBitRate uEaggregateMaxBitRateUlnk;
        CztProtExtnCont_UEAgg_MaxBitrate_ExtIEs iE_Extns;
} CztUEAggMaxBitRate;

typedef struct x2ap_ExtnUESecurCapabilities_ExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnUESecurCapabilities_ExtIEsCls;
typedef struct x2apProtExtnField_UESecurCapabilities_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnUESecurCapabilities_ExtIEsCls extensionValue;
} CztProtExtnField_UESecurCapabilities_ExtIEs;

typedef struct x2apProtExtnCont_UESecurCapabilities_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_UESecurCapabilities_ExtIEs *member;
}CztProtExtnCont_UESecurCapabilities_ExtIEs;

typedef struct x2apUESecurCapabilities
{
        TknPres pres;
        CztEncryptionAlgorithms encryptionAlgorithms;
        CztIntegrityProtectionAlgorithms integrityProtectionAlgorithms;
        CztProtExtnCont_UESecurCapabilities_ExtIEs iE_Extns;
} CztUESecurCapabilities;


typedef enum enumCztUL_InterferenceOverloadInd_Item
{
        CztUL_InterferenceOverloadInd_Itemhigh_interferenceEnum,
        CztUL_InterferenceOverloadInd_Itemmedium_interferenceEnum,
        CztUL_InterferenceOverloadInd_Itemlow_interferenceEnum
} EnumCztUL_InterferenceOverloadInd_Item;
typedef TknU32 CztUL_InterferenceOverloadInd_Item;

typedef struct x2apUL_InterferenceOverloadInd
{
        TknU16 noComp;
        CztUL_InterferenceOverloadInd_Item *member;
}CztUL_InterferenceOverloadInd;


typedef TknStrBSXL CztUL_HighInterferenceInd;
typedef struct x2ap_ExtnUL_HighInterferenceIndInfo_Item_ExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnUL_HighInterferenceIndInfo_Item_ExtIEsCls;
typedef struct x2apProtExtnField_UL_HighInterferenceIndInfo_Item_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnUL_HighInterferenceIndInfo_Item_ExtIEsCls extensionValue;
} CztProtExtnField_UL_HighInterferenceIndInfo_Item_ExtIEs;

typedef struct x2apProtExtnCont_UL_HighInterferenceIndInfo_Item_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_UL_HighInterferenceIndInfo_Item_ExtIEs *member;
}CztProtExtnCont_UL_HighInterferenceIndInfo_Item_ExtIEs;

typedef struct x2apUL_HighInterferenceIndInfo_Item
{
        TknPres pres;
        CztECGI target_Cell_ID;
        CztUL_HighInterferenceInd ul_interferenceindication;
        CztProtExtnCont_UL_HighInterferenceIndInfo_Item_ExtIEs iE_Extns;
} CztUL_HighInterferenceIndInfo_Item;

typedef struct x2apUL_HighInterferenceIndInfo
{
        TknU16 noComp;
        CztUL_HighInterferenceIndInfo_Item *member;
}CztUL_HighInterferenceIndInfo;


typedef TknStrOSXL CztUE_RLF_Report_Cont;
typedef struct x2ap_ExtnE_RABs_ToBeSetup_ItemExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnE_RABs_ToBeSetup_ItemExtIEsCls;
typedef struct x2apProtExtnField_E_RABs_ToBeSetup_ItemExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnE_RABs_ToBeSetup_ItemExtIEsCls extensionValue;
} CztProtExtnField_E_RABs_ToBeSetup_ItemExtIEs;

typedef struct x2apProtExtnCont_E_RABs_ToBeSetup_ItemExtIEs
{
        TknU16 noComp;
        CztProtExtnField_E_RABs_ToBeSetup_ItemExtIEs *member;
}CztProtExtnCont_E_RABs_ToBeSetup_ItemExtIEs;

typedef struct x2apE_RABs_ToBeSetup_Item
{
        TknPres pres;
        CztE_RAB_ID e_RAB_ID;
        CztE_RAB_Lvl_QoS_Params e_RAB_Lvl_QoS_Params;
        CztDL_Fwding dL_Fwding;
        CztGTPtunnelEndpoint uL_GTPtunnelEndpoint;
        CztProtExtnCont_E_RABs_ToBeSetup_ItemExtIEs iE_Extns;
} CztE_RABs_ToBeSetup_Item;

typedef struct x2ap_ValueE_RABs_ToBeSetup_ItemIEsCls{
        union {
                CztE_RABs_ToBeSetup_Item cztE_RABs_ToBeSetup_Item;
        } u;
} Czt_ValueE_RABs_ToBeSetup_ItemIEsCls;
typedef struct x2apProtIE_Field_E_RABs_ToBeSetup_ItemIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ValueE_RABs_ToBeSetup_ItemIEsCls value;
} CztProtIE_Field_E_RABs_ToBeSetup_ItemIEs;


typedef CztProtIE_Field_E_RABs_ToBeSetup_ItemIEs CztProtIE_Single_Cont_E_RABs_ToBeSetup_ItemIEs;
typedef struct x2apE_RABs_ToBeSetup_Lst
{
        TknU16 noComp;
        CztProtIE_Single_Cont_E_RABs_ToBeSetup_ItemIEs *member;
}CztE_RABs_ToBeSetup_Lst;

typedef struct x2ap_ExtnUE_CntxtInform_ExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnUE_CntxtInform_ExtIEsCls;
typedef struct x2apProtExtnField_UE_CntxtInform_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnUE_CntxtInform_ExtIEsCls extensionValue;
} CztProtExtnField_UE_CntxtInform_ExtIEs;

typedef struct x2apProtExtnCont_UE_CntxtInform_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_UE_CntxtInform_ExtIEs *member;
}CztProtExtnCont_UE_CntxtInform_ExtIEs;

typedef struct x2apUE_CntxtInform
{
        TknPres pres;
        CztUE_S1AP_ID mME_UE_S1AP_ID;
        CztUESecurCapabilities uESecurCapabilities;
        CztAS_SecurInform aS_SecurInform;
        CztUEAggMaxBitRate uEaggregateMaxBitRate;
        CztSubscriberProfileIDforRFP subscriberProfileIDforRFP;
        CztE_RABs_ToBeSetup_Lst e_RABs_ToBeSetup_Lst;
        CztRRC_Cntxt rRC_Cntxt;
        CztHovrRestrnLst handoverRestrnLst;
        CztLocRprtngInform locationRprtngInform;
        CztProtExtnCont_UE_CntxtInform_ExtIEs iE_Extns;
} CztUE_CntxtInform;

typedef struct x2ap_ValueHovrRqst_IEsCls{
        union {
                CztUE_X2AP_ID cztUE_X2AP_ID;
                CztCause cztCause;
                CztECGI cztECGI;
                CztGUMMEI cztGUMMEI;
                CztUE_CntxtInform cztUE_CntxtInform;
                CztUE_HistoryInform cztUE_HistoryInform;
                CztTraceActvn cztTraceActvn;
                CztSRVCCOperationPossible cztSRVCCOperationPossible;
        } u;
} Czt_ValueHovrRqst_IEsCls;
typedef struct x2apProtIE_Field_HovrRqst_IEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ValueHovrRqst_IEsCls value;
} CztProtIE_Field_HovrRqst_IEs;

typedef struct x2apProtIE_Cont_HovrRqst_IEs
{
        TknU16 noComp;
        CztProtIE_Field_HovrRqst_IEs *member;
}CztProtIE_Cont_HovrRqst_IEs;

typedef struct x2apHovrRqst
{
        TknPres pres;
        CztProtIE_Cont_HovrRqst_IEs protocolIEs;
} CztHovrRqst;

typedef struct x2ap_ExtnE_RABs_Admtd_Item_ExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnE_RABs_Admtd_Item_ExtIEsCls;
typedef struct x2apProtExtnField_E_RABs_Admtd_Item_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnE_RABs_Admtd_Item_ExtIEsCls extensionValue;
} CztProtExtnField_E_RABs_Admtd_Item_ExtIEs;

typedef struct x2apProtExtnCont_E_RABs_Admtd_Item_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_E_RABs_Admtd_Item_ExtIEs *member;
}CztProtExtnCont_E_RABs_Admtd_Item_ExtIEs;

typedef struct x2apE_RABs_Admtd_Item
{
        TknPres pres;
        CztE_RAB_ID e_RAB_ID;
        CztGTPtunnelEndpoint uL_GTP_TunnelEndpoint;
        CztGTPtunnelEndpoint dL_GTP_TunnelEndpoint;
        CztProtExtnCont_E_RABs_Admtd_Item_ExtIEs iE_Extns;
} CztE_RABs_Admtd_Item;

typedef struct x2ap_ValueE_RABs_Admtd_ItemIEsCls{
        union {
                CztE_RABs_Admtd_Item cztE_RABs_Admtd_Item;
        } u;
} Czt_ValueE_RABs_Admtd_ItemIEsCls;
typedef struct x2apProtIE_Field_E_RABs_Admtd_ItemIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ValueE_RABs_Admtd_ItemIEsCls value;
} CztProtIE_Field_E_RABs_Admtd_ItemIEs;


typedef CztProtIE_Field_E_RABs_Admtd_ItemIEs CztProtIE_Single_Cont_E_RABs_Admtd_ItemIEs;
typedef struct x2apE_RABs_Admtd_Lst
{
        TknU16 noComp;
        CztProtIE_Single_Cont_E_RABs_Admtd_ItemIEs *member;
}CztE_RABs_Admtd_Lst;

typedef struct x2ap_ValueHovrRqstAckg_IEsCls{
        union {
                CztUE_X2AP_ID cztUE_X2AP_ID_Old;

                CztUE_X2AP_ID cztUE_X2AP_ID_New;
                CztE_RABs_Admtd_Lst cztE_RABs_Admtd_Lst;
                CztE_RAB_Lst cztE_RAB_Lst;
                CztTgeteNBtoSrc_eNBTprntCont cztTgeteNBtoSrc_eNBTprntCont;
                CztCriticalityDiag cztCriticalityDiag;
        } u;
} Czt_ValueHovrRqstAckg_IEsCls;
typedef struct x2apProtIE_Field_HovrRqstAckg_IEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ValueHovrRqstAckg_IEsCls value;
} CztProtIE_Field_HovrRqstAckg_IEs;

typedef struct x2apProtIE_Cont_HovrRqstAckg_IEs
{
        TknU16 noComp;
        CztProtIE_Field_HovrRqstAckg_IEs *member;
}CztProtIE_Cont_HovrRqstAckg_IEs;

typedef struct x2apHovrRqstAckg
{
        TknPres pres;
        CztProtIE_Cont_HovrRqstAckg_IEs protocolIEs;
} CztHovrRqstAckg;

typedef struct x2ap_ValueHovrPrepFail_IEsCls{
        union {
                CztUE_X2AP_ID cztUE_X2AP_ID;
                CztCause cztCause;
                CztCriticalityDiag cztCriticalityDiag;
        } u;
} Czt_ValueHovrPrepFail_IEsCls;
typedef struct x2apProtIE_Field_HovrPrepFail_IEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ValueHovrPrepFail_IEsCls value;
} CztProtIE_Field_HovrPrepFail_IEs;

typedef struct x2apProtIE_Cont_HovrPrepFail_IEs
{
        TknU16 noComp;
        CztProtIE_Field_HovrPrepFail_IEs *member;
}CztProtIE_Cont_HovrPrepFail_IEs;

typedef struct x2apHovrPrepFail
{
        TknPres pres;
        CztProtIE_Cont_HovrPrepFail_IEs protocolIEs;
} CztHovrPrepFail;

typedef struct x2ap_ValueHovrReport_IEsCls{
        union {
                CztHovrReportTyp cztHovrReportTyp;
                CztCause cztCause;
                CztECGI cztSrcCellECGI;
                CztECGI cztFailCellECGI;
                CztECGI cztreEstCellECGI;
        } u;
} Czt_ValueHovrReport_IEsCls;
typedef struct x2apProtIE_Field_HovrReport_IEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ValueHovrReport_IEsCls value;
} CztProtIE_Field_HovrReport_IEs;

typedef struct x2apProtIE_Cont_HovrReport_IEs
{
        TknU16 noComp;
        CztProtIE_Field_HovrReport_IEs *member;
}CztProtIE_Cont_HovrReport_IEs;

typedef struct x2apHovrReport
{
        TknPres pres;
        CztProtIE_Cont_HovrReport_IEs protocolIEs;
} CztHovrReport;

typedef struct x2ap_ExtnE_RABs_SubjToStatusTfr_ItemExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnE_RABs_SubjToStatusTfr_ItemExtIEsCls;
typedef struct x2apProtExtnField_E_RABs_SubjToStatusTfr_ItemExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnE_RABs_SubjToStatusTfr_ItemExtIEsCls extensionValue;
} CztProtExtnField_E_RABs_SubjToStatusTfr_ItemExtIEs;

typedef struct x2apProtExtnCont_E_RABs_SubjToStatusTfr_ItemExtIEs
{
        TknU16 noComp;
        CztProtExtnField_E_RABs_SubjToStatusTfr_ItemExtIEs *member;
}CztProtExtnCont_E_RABs_SubjToStatusTfr_ItemExtIEs;

typedef struct x2apE_RABs_SubjToStatusTfr_Item
{
        TknPres pres;
        CztE_RAB_ID e_RAB_ID;
        CztReceiveStatusofULPDCPSDUs receiveStatusofULPDCPSDUs;
        CztCOUNTvalue uL_COUNTvalue;
        CztCOUNTvalue dL_COUNTvalue;
        CztProtExtnCont_E_RABs_SubjToStatusTfr_ItemExtIEs iE_Extns;
} CztE_RABs_SubjToStatusTfr_Item;

typedef struct x2ap_ValueE_RABs_SubjToStatusTfr_ItemIEsCls{
        union {
                CztE_RABs_SubjToStatusTfr_Item cztE_RABs_SubjToStatusTfr_Item;
        } u;
} Czt_ValueE_RABs_SubjToStatusTfr_ItemIEsCls;
typedef struct x2apProtIE_Field_E_RABs_SubjToStatusTfr_ItemIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ValueE_RABs_SubjToStatusTfr_ItemIEsCls value;
} CztProtIE_Field_E_RABs_SubjToStatusTfr_ItemIEs;


typedef CztProtIE_Field_E_RABs_SubjToStatusTfr_ItemIEs CztProtIE_Single_Cont_E_RABs_SubjToStatusTfr_ItemIEs;
typedef struct x2apE_RABs_SubjToStatusTfr_Lst
{
        TknU16 noComp;
        CztProtIE_Single_Cont_E_RABs_SubjToStatusTfr_ItemIEs *member;
}CztE_RABs_SubjToStatusTfr_Lst;

typedef struct x2ap_ValueSNStatusTfr_IEsCls{
        union {
                CztUE_X2AP_ID cztUE_X2AP_ID_Old;

                CztUE_X2AP_ID cztUE_X2AP_ID_New;
                CztE_RABs_SubjToStatusTfr_Lst cztE_RABs_SubjToStatusTfr_Lst;
        } u;
} Czt_ValueSNStatusTfr_IEsCls;
typedef struct x2apProtIE_Field_SNStatusTfr_IEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ValueSNStatusTfr_IEsCls value;
} CztProtIE_Field_SNStatusTfr_IEs;

typedef struct x2apProtIE_Cont_SNStatusTfr_IEs
{
        TknU16 noComp;
        CztProtIE_Field_SNStatusTfr_IEs *member;
}CztProtIE_Cont_SNStatusTfr_IEs;

typedef struct x2apSNStatusTfr
{
        TknPres pres;
        CztProtIE_Cont_SNStatusTfr_IEs protocolIEs;
} CztSNStatusTfr;

typedef struct x2ap_ValueUECntxtRls_IEsCls{
        union {
                CztUE_X2AP_ID cztUE_X2AP_ID_Old;

                CztUE_X2AP_ID cztUE_X2AP_ID_New;
        } u;
} Czt_ValueUECntxtRls_IEsCls;
typedef struct x2apProtIE_Field_UECntxtRls_IEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ValueUECntxtRls_IEsCls value;
} CztProtIE_Field_UECntxtRls_IEs;

typedef struct x2apProtIE_Cont_UECntxtRls_IEs
{
        TknU16 noComp;
        CztProtIE_Field_UECntxtRls_IEs *member;
}CztProtIE_Cont_UECntxtRls_IEs;

typedef struct x2apUECntxtRls
{
        TknPres pres;
        CztProtIE_Cont_UECntxtRls_IEs protocolIEs;
} CztUECntxtRls;

typedef struct x2ap_ValueHovrCancel_IEsCls{
        union {
                CztUE_X2AP_ID cztUE_X2AP_ID_Old;

                CztUE_X2AP_ID cztUE_X2AP_ID_New;
                CztCause cztCause;
        } u;
} Czt_ValueHovrCancel_IEsCls;
typedef struct x2apProtIE_Field_HovrCancel_IEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ValueHovrCancel_IEsCls value;
} CztProtIE_Field_HovrCancel_IEs;

typedef struct x2apProtIE_Cont_HovrCancel_IEs
{
        TknU16 noComp;
        CztProtIE_Field_HovrCancel_IEs *member;
}CztProtIE_Cont_HovrCancel_IEs;

typedef struct x2apHovrCancel
{
        TknPres pres;
        CztProtIE_Cont_HovrCancel_IEs protocolIEs;
} CztHovrCancel;

typedef struct x2ap_ValueErrInd_IEsCls{
        union {
                CztUE_X2AP_ID cztUE_X2AP_ID_Old;

                CztUE_X2AP_ID cztUE_X2AP_ID_New;
                CztCause cztCause;
                CztCriticalityDiag cztCriticalityDiag;
        } u;
} Czt_ValueErrInd_IEsCls;
typedef struct x2apProtIE_Field_ErrInd_IEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ValueErrInd_IEsCls value;
} CztProtIE_Field_ErrInd_IEs;

typedef struct x2apProtIE_Cont_ErrInd_IEs
{
        TknU16 noComp;
        CztProtIE_Field_ErrInd_IEs *member;
}CztProtIE_Cont_ErrInd_IEs;

typedef struct x2apErrInd
{
        TknPres pres;
        CztProtIE_Cont_ErrInd_IEs protocolIEs;
} CztErrInd;

typedef struct x2ap_ValueResetRqst_IEsCls{
        union {
                CztCause cztCause;
        } u;
} Czt_ValueResetRqst_IEsCls;
typedef struct x2apProtIE_Field_ResetRqst_IEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ValueResetRqst_IEsCls value;
} CztProtIE_Field_ResetRqst_IEs;

typedef struct x2apProtIE_Cont_ResetRqst_IEs
{
        TknU16 noComp;
        CztProtIE_Field_ResetRqst_IEs *member;
}CztProtIE_Cont_ResetRqst_IEs;

typedef struct x2apResetRqst
{
        TknPres pres;
        CztProtIE_Cont_ResetRqst_IEs protocolIEs;
} CztResetRqst;

typedef struct x2ap_ValueResetResp_IEsCls{
        union {
                CztCriticalityDiag cztCriticalityDiag;
        } u;
} Czt_ValueResetResp_IEsCls;
typedef struct x2apProtIE_Field_ResetResp_IEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ValueResetResp_IEsCls value;
} CztProtIE_Field_ResetResp_IEs;

typedef struct x2apProtIE_Cont_ResetResp_IEs
{
        TknU16 noComp;
        CztProtIE_Field_ResetResp_IEs *member;
}CztProtIE_Cont_ResetResp_IEs;

typedef struct x2apResetResp
{
        TknPres pres;
        CztProtIE_Cont_ResetResp_IEs protocolIEs;
} CztResetResp;

typedef struct x2ap_ValueX2SetupRqst_IEsCls{
        union {
                CztGlobalENB_ID cztGlobalENB_ID;
                CztSrvdCells cztSrvdCells;
                CztGUGroupIDLst cztGUGroupIDLst;
        } u;
} Czt_ValueX2SetupRqst_IEsCls;
typedef struct x2apProtIE_Field_X2SetupRqst_IEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ValueX2SetupRqst_IEsCls value;
} CztProtIE_Field_X2SetupRqst_IEs;

typedef struct x2apProtIE_Cont_X2SetupRqst_IEs
{
        TknU16 noComp;
        CztProtIE_Field_X2SetupRqst_IEs *member;
}CztProtIE_Cont_X2SetupRqst_IEs;

typedef struct x2apX2SetupRqst
{
        TknPres pres;
        CztProtIE_Cont_X2SetupRqst_IEs protocolIEs;
} CztX2SetupRqst;

typedef struct x2ap_ValueX2SetupResp_IEsCls{
        union {
                CztGlobalENB_ID cztGlobalENB_ID;
                CztSrvdCells cztSrvdCells;
                CztGUGroupIDLst cztGUGroupIDLst;
                CztCriticalityDiag cztCriticalityDiag;
        } u;
} Czt_ValueX2SetupResp_IEsCls;
typedef struct x2apProtIE_Field_X2SetupResp_IEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ValueX2SetupResp_IEsCls value;
} CztProtIE_Field_X2SetupResp_IEs;

typedef struct x2apProtIE_Cont_X2SetupResp_IEs
{
        TknU16 noComp;
        CztProtIE_Field_X2SetupResp_IEs *member;
}CztProtIE_Cont_X2SetupResp_IEs;

typedef struct x2apX2SetupResp
{
        TknPres pres;
        CztProtIE_Cont_X2SetupResp_IEs protocolIEs;
} CztX2SetupResp;

typedef struct x2ap_ValueX2SetupFail_IEsCls{
        union {
                CztCause cztCause;
                CztTimeToWait cztTimeToWait;
                CztCriticalityDiag cztCriticalityDiag;
        } u;
} Czt_ValueX2SetupFail_IEsCls;
typedef struct x2apProtIE_Field_X2SetupFail_IEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ValueX2SetupFail_IEsCls value;
} CztProtIE_Field_X2SetupFail_IEs;

typedef struct x2apProtIE_Cont_X2SetupFail_IEs
{
        TknU16 noComp;
        CztProtIE_Field_X2SetupFail_IEs *member;
}CztProtIE_Cont_X2SetupFail_IEs;

typedef struct x2apX2SetupFail
{
        TknPres pres;
        CztProtIE_Cont_X2SetupFail_IEs protocolIEs;
} CztX2SetupFail;

typedef struct x2ap_ExtnCellInform_Item_ExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnCellInform_Item_ExtIEsCls;
typedef struct x2apProtExtnField_CellInform_Item_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnCellInform_Item_ExtIEsCls extensionValue;
} CztProtExtnField_CellInform_Item_ExtIEs;

typedef struct x2apProtExtnCont_CellInform_Item_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_CellInform_Item_ExtIEs *member;
}CztProtExtnCont_CellInform_Item_ExtIEs;

typedef struct x2apCellInform_Item
{
        TknPres pres;
        CztECGI cell_ID;
        CztUL_InterferenceOverloadInd ul_InterferenceOverloadInd;
        CztUL_HighInterferenceIndInfo ul_HighInterferenceIndInfo;
        CztRelativeNarrowbandTxPower relativeNarrowbandTxPower;
        CztProtExtnCont_CellInform_Item_ExtIEs iE_Extns;
} CztCellInform_Item;

typedef struct x2ap_ValueCellInform_ItemIEsCls{
        union {
                CztCellInform_Item cztCellInform_Item;
        } u;
} Czt_ValueCellInform_ItemIEsCls;
typedef struct x2apProtIE_Field_CellInform_ItemIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ValueCellInform_ItemIEsCls value;
} CztProtIE_Field_CellInform_ItemIEs;


typedef CztProtIE_Field_CellInform_ItemIEs CztProtIE_Single_Cont_CellInform_ItemIEs;
typedef struct x2apCellInform_Lst
{
        TknU16 noComp;
        CztProtIE_Single_Cont_CellInform_ItemIEs *member;
}CztCellInform_Lst;

typedef struct x2ap_ValueLoadInform_IEsCls{
        union {
                CztCellInform_Lst cztCellInform_Lst;
        } u;
} Czt_ValueLoadInform_IEsCls;
typedef struct x2apProtIE_Field_LoadInform_IEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ValueLoadInform_IEsCls value;
} CztProtIE_Field_LoadInform_IEs;

typedef struct x2apProtIE_Cont_LoadInform_IEs
{
        TknU16 noComp;
        CztProtIE_Field_LoadInform_IEs *member;
}CztProtIE_Cont_LoadInform_IEs;

typedef struct x2apLoadInform
{
        TknPres pres;
        CztProtIE_Cont_LoadInform_IEs protocolIEs;
} CztLoadInform;

typedef struct x2ap_ExtnSrvdCellsToMdfy_Item_ExtIEsCls{
        union {
                CztDeactivationInd cztDeactivationInd;
        } u;
} Czt_ExtnSrvdCellsToMdfy_Item_ExtIEsCls;
typedef struct x2apProtExtnField_SrvdCellsToMdfy_Item_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnSrvdCellsToMdfy_Item_ExtIEsCls extensionValue;
} CztProtExtnField_SrvdCellsToMdfy_Item_ExtIEs;

typedef struct x2apProtExtnCont_SrvdCellsToMdfy_Item_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_SrvdCellsToMdfy_Item_ExtIEs *member;
}CztProtExtnCont_SrvdCellsToMdfy_Item_ExtIEs;

typedef struct x2apSrvdCellsToMdfy_Item
{
        TknPres pres;
        CztECGI old_ecgi;
        CztSrvdCell_Inform servedCellInfo;
        CztNeighbour_Inform neighbour_Info;
        CztProtExtnCont_SrvdCellsToMdfy_Item_ExtIEs iE_Extns;
} CztSrvdCellsToMdfy_Item;

typedef struct x2apSrvdCellsToMdfy
{
        TknU16 noComp;
        CztSrvdCellsToMdfy_Item *member;
}CztSrvdCellsToMdfy;

typedef struct x2apOld_ECGIs
{
        TknU16 noComp;
        CztECGI *member;
}CztOld_ECGIs;

typedef struct x2ap_ValueENBConfigUpd_IEsCls{
        union {
                CztSrvdCells cztSrvdCells;
                CztSrvdCellsToMdfy cztSrvdCellsToMdfy;
                CztOld_ECGIs cztOld_ECGIs;
                CztGUGroupIDLst cztGUGroupIDLst;
                CztGUGroupIDLst cztGUGroupIDLst2;
        } u;
} Czt_ValueENBConfigUpd_IEsCls;
typedef struct x2apProtIE_Field_ENBConfigUpd_IEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ValueENBConfigUpd_IEsCls value;
} CztProtIE_Field_ENBConfigUpd_IEs;

typedef struct x2apProtIE_Cont_ENBConfigUpd_IEs
{
        TknU16 noComp;
        CztProtIE_Field_ENBConfigUpd_IEs *member;
}CztProtIE_Cont_ENBConfigUpd_IEs;

typedef struct x2apENBConfigUpd
{
        TknPres pres;
        CztProtIE_Cont_ENBConfigUpd_IEs protocolIEs;
} CztENBConfigUpd;

typedef struct x2ap_ValueENBConfigUpdAckg_IEsCls{
        union {
                CztCriticalityDiag cztCriticalityDiag;
        } u;
} Czt_ValueENBConfigUpdAckg_IEsCls;
typedef struct x2apProtIE_Field_ENBConfigUpdAckg_IEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ValueENBConfigUpdAckg_IEsCls value;
} CztProtIE_Field_ENBConfigUpdAckg_IEs;

typedef struct x2apProtIE_Cont_ENBConfigUpdAckg_IEs
{
        TknU16 noComp;
        CztProtIE_Field_ENBConfigUpdAckg_IEs *member;
}CztProtIE_Cont_ENBConfigUpdAckg_IEs;

typedef struct x2apENBConfigUpdAckg
{
        TknPres pres;
        CztProtIE_Cont_ENBConfigUpdAckg_IEs protocolIEs;
} CztENBConfigUpdAckg;

typedef struct x2ap_ValueENBConfigUpdFail_IEsCls{
        union {
                CztCause cztCause;
                CztTimeToWait cztTimeToWait;
                CztCriticalityDiag cztCriticalityDiag;
        } u;
} Czt_ValueENBConfigUpdFail_IEsCls;
typedef struct x2apProtIE_Field_ENBConfigUpdFail_IEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ValueENBConfigUpdFail_IEsCls value;
} CztProtIE_Field_ENBConfigUpdFail_IEs;

typedef struct x2apProtIE_Cont_ENBConfigUpdFail_IEs
{
        TknU16 noComp;
        CztProtIE_Field_ENBConfigUpdFail_IEs *member;
}CztProtIE_Cont_ENBConfigUpdFail_IEs;

typedef struct x2apENBConfigUpdFail
{
        TknPres pres;
        CztProtIE_Cont_ENBConfigUpdFail_IEs protocolIEs;
} CztENBConfigUpdFail;

typedef struct x2ap_ExtnCellToReport_Item_ExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnCellToReport_Item_ExtIEsCls;
typedef struct x2apProtExtnField_CellToReport_Item_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnCellToReport_Item_ExtIEsCls extensionValue;
} CztProtExtnField_CellToReport_Item_ExtIEs;

typedef struct x2apProtExtnCont_CellToReport_Item_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_CellToReport_Item_ExtIEs *member;
}CztProtExtnCont_CellToReport_Item_ExtIEs;

typedef struct x2apCellToReport_Item
{
        TknPres pres;
        CztECGI cell_ID;
        CztProtExtnCont_CellToReport_Item_ExtIEs iE_Extns;
} CztCellToReport_Item;

typedef struct x2ap_ValueCellToReport_ItemIEsCls{
        union {
                CztCellToReport_Item cztCellToReport_Item;
        } u;
} Czt_ValueCellToReport_ItemIEsCls;
typedef struct x2apProtIE_Field_CellToReport_ItemIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ValueCellToReport_ItemIEsCls value;
} CztProtIE_Field_CellToReport_ItemIEs;


typedef CztProtIE_Field_CellToReport_ItemIEs CztProtIE_Single_Cont_CellToReport_ItemIEs;
typedef struct x2apCellToReport_Lst
{
        TknU16 noComp;
        CztProtIE_Single_Cont_CellToReport_ItemIEs *member;
}CztCellToReport_Lst;


typedef enum enumCztRprtngPeriodicity
{
        CztRprtngPeriodicityone_thousand_msEnum,
        CztRprtngPeriodicitytwo_thousand_msEnum,
        CztRprtngPeriodicityfive_thousand_msEnum,
        CztRprtngPeriodicityten_thousand_msEnum
} EnumCztRprtngPeriodicity;
typedef TknU32 CztRprtngPeriodicity;

typedef struct x2ap_ValueResStatusRqst_IEsCls{
        union {
                CztMeasurement_ID cztMeasurement_ID;
                CztMeasurement_ID cztMeasurement_ID2;
                CztRegistration_Rqst cztRegistration_Rqst;
                CztReportCharacteristics cztReportCharacteristics;
                CztCellToReport_Lst cztCellToReport_Lst;
                CztRprtngPeriodicity cztRprtngPeriodicity;
        } u;
} Czt_ValueResStatusRqst_IEsCls;
typedef struct x2apProtIE_Field_ResStatusRqst_IEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ValueResStatusRqst_IEsCls value;
} CztProtIE_Field_ResStatusRqst_IEs;

typedef struct x2apProtIE_Cont_ResStatusRqst_IEs
{
        TknU16 noComp;
        CztProtIE_Field_ResStatusRqst_IEs *member;
}CztProtIE_Cont_ResStatusRqst_IEs;

typedef struct x2apResStatusRqst
{
        TknPres pres;
        CztProtIE_Cont_ResStatusRqst_IEs protocolIEs;
} CztResStatusRqst;

typedef struct x2ap_ValueResStatusResp_IEsCls{
        union {
                CztMeasurement_ID cztMeasurement_ID;
                CztMeasurement_ID cztMeasurement_ID2;
                CztCriticalityDiag cztCriticalityDiag;
        } u;
} Czt_ValueResStatusResp_IEsCls;
typedef struct x2apProtIE_Field_ResStatusResp_IEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ValueResStatusResp_IEsCls value;
} CztProtIE_Field_ResStatusResp_IEs;

typedef struct x2apProtIE_Cont_ResStatusResp_IEs
{
        TknU16 noComp;
        CztProtIE_Field_ResStatusResp_IEs *member;
}CztProtIE_Cont_ResStatusResp_IEs;

typedef struct x2apResStatusResp
{
        TknPres pres;
        CztProtIE_Cont_ResStatusResp_IEs protocolIEs;
} CztResStatusResp;

typedef struct x2ap_ValueResStatusFail_IEsCls{
        union {
                CztMeasurement_ID cztMeasurement_ID;
                CztMeasurement_ID cztMeasurement_ID2;
                CztCause cztCause;
                CztCriticalityDiag cztCriticalityDiag;
        } u;
} Czt_ValueResStatusFail_IEsCls;
typedef struct x2apProtIE_Field_ResStatusFail_IEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ValueResStatusFail_IEsCls value;
} CztProtIE_Field_ResStatusFail_IEs;

typedef struct x2apProtIE_Cont_ResStatusFail_IEs
{
        TknU16 noComp;
        CztProtIE_Field_ResStatusFail_IEs *member;
}CztProtIE_Cont_ResStatusFail_IEs;

typedef struct x2apResStatusFail
{
        TknPres pres;
        CztProtIE_Cont_ResStatusFail_IEs protocolIEs;
} CztResStatusFail;

typedef struct x2ap_ExtnCellMeasurementResult_Item_ExtIEsCls{
        union {
                CztCompositeAvailableCapacityGroup cztCompositeAvailableCapacityGroup;
        } u;
} Czt_ExtnCellMeasurementResult_Item_ExtIEsCls;
typedef struct x2apProtExtnField_CellMeasurementResult_Item_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnCellMeasurementResult_Item_ExtIEsCls extensionValue;
} CztProtExtnField_CellMeasurementResult_Item_ExtIEs;

typedef struct x2apProtExtnCont_CellMeasurementResult_Item_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_CellMeasurementResult_Item_ExtIEs *member;
}CztProtExtnCont_CellMeasurementResult_Item_ExtIEs;

typedef struct x2apCellMeasurementResult_Item
{
        TknPres pres;
        CztECGI cell_ID;
        CztHWLoadIndicator hWOverLoadIndicator;
        CztS1TNLLoadIndicator s1TNLOverLoadIndicator;
        CztRadioResStatus radioResStatus;
        CztProtExtnCont_CellMeasurementResult_Item_ExtIEs iE_Extns;
} CztCellMeasurementResult_Item;

typedef struct x2ap_ValueCellMeasurementResult_ItemIEsCls{
        union {
                CztCellMeasurementResult_Item cztCellMeasurementResult_Item;
        } u;
} Czt_ValueCellMeasurementResult_ItemIEsCls;
typedef struct x2apProtIE_Field_CellMeasurementResult_ItemIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ValueCellMeasurementResult_ItemIEsCls value;
} CztProtIE_Field_CellMeasurementResult_ItemIEs;


typedef CztProtIE_Field_CellMeasurementResult_ItemIEs CztProtIE_Single_Cont_CellMeasurementResult_ItemIEs;
typedef struct x2apCellMeasurementResult_Lst
{
        TknU16 noComp;
        CztProtIE_Single_Cont_CellMeasurementResult_ItemIEs *member;
}CztCellMeasurementResult_Lst;

typedef struct x2ap_ValueResStatusUpd_IEsCls{
        union {
                CztMeasurement_ID cztMeasurement_ID;
                CztMeasurement_ID cztMeasurement_ID2;
                CztCellMeasurementResult_Lst cztCellMeasurementResult_Lst;
        } u;
} Czt_ValueResStatusUpd_IEsCls;
typedef struct x2apProtIE_Field_ResStatusUpd_IEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ValueResStatusUpd_IEsCls value;
} CztProtIE_Field_ResStatusUpd_IEs;

typedef struct x2apProtIE_Cont_ResStatusUpd_IEs
{
        TknU16 noComp;
        CztProtIE_Field_ResStatusUpd_IEs *member;
}CztProtIE_Cont_ResStatusUpd_IEs;

typedef struct x2apResStatusUpd
{
        TknPres pres;
        CztProtIE_Cont_ResStatusUpd_IEs protocolIEs;
} CztResStatusUpd;

typedef struct x2ap_ValuePrivMsg_IEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ValuePrivMsg_IEsCls;
typedef struct x2apPrivIE_Field_PrivMsg_IEs
{
        TknPres pres;
        CztPrivIE_ID id;
        CztCriticality criticality;
        Czt_ValuePrivMsg_IEsCls value;
} CztPrivIE_Field_PrivMsg_IEs;

typedef struct x2apPrivIE_Cont_PrivMsg_IEs
{
        TknU16 noComp;
        CztPrivIE_Field_PrivMsg_IEs *member;
}CztPrivIE_Cont_PrivMsg_IEs;

typedef struct x2apPrivMsg
{
        TknPres pres;
        CztPrivIE_Cont_PrivMsg_IEs privateIEs;
} CztPrivMsg;

typedef struct x2ap_ValueMobilityChangeRqst_IEsCls{
        union {
                CztECGI czteNB1ECGI;
                CztECGI czteNB2ECGI;
                CztMobilityParamsInform czteNB1MobilityParamsInform;
                CztMobilityParamsInform czteNB2MobilityParamsInform;
                CztCause cztCause;
        } u;
} Czt_ValueMobilityChangeRqst_IEsCls;
typedef struct x2apProtIE_Field_MobilityChangeRqst_IEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ValueMobilityChangeRqst_IEsCls value;
} CztProtIE_Field_MobilityChangeRqst_IEs;

typedef struct x2apProtIE_Cont_MobilityChangeRqst_IEs
{
        TknU16 noComp;
        CztProtIE_Field_MobilityChangeRqst_IEs *member;
}CztProtIE_Cont_MobilityChangeRqst_IEs;

typedef struct x2apMobilityChangeRqst
{
        TknPres pres;
        CztProtIE_Cont_MobilityChangeRqst_IEs protocolIEs;
} CztMobilityChangeRqst;

typedef struct x2ap_ValueMobilityChangeAckg_IEsCls{
        union {
                CztECGI czteNB1ECGI;
                CztECGI czteNB2ECGI;
                CztCriticalityDiag cztCriticalityDiag;
        } u;
} Czt_ValueMobilityChangeAckg_IEsCls;
typedef struct x2apProtIE_Field_MobilityChangeAckg_IEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ValueMobilityChangeAckg_IEsCls value;
} CztProtIE_Field_MobilityChangeAckg_IEs;

typedef struct x2apProtIE_Cont_MobilityChangeAckg_IEs
{
        TknU16 noComp;
        CztProtIE_Field_MobilityChangeAckg_IEs *member;
}CztProtIE_Cont_MobilityChangeAckg_IEs;

typedef struct x2apMobilityChangeAckg
{
        TknPres pres;
        CztProtIE_Cont_MobilityChangeAckg_IEs protocolIEs;
} CztMobilityChangeAckg;

typedef struct x2ap_ValueMobilityChangeFail_IEsCls{
        union {
                CztECGI czteNB1ECGI;
                CztECGI czteNB2ECGI;
                CztCause cztCause;
                CztMobilityParamsModificationRange cztMobilityParamsModificationRange;
                CztCriticalityDiag cztCriticalityDiag;
        } u;
} Czt_ValueMobilityChangeFail_IEsCls;
typedef struct x2apProtIE_Field_MobilityChangeFail_IEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ValueMobilityChangeFail_IEsCls value;
} CztProtIE_Field_MobilityChangeFail_IEs;

typedef struct x2apProtIE_Cont_MobilityChangeFail_IEs
{
        TknU16 noComp;
        CztProtIE_Field_MobilityChangeFail_IEs *member;
}CztProtIE_Cont_MobilityChangeFail_IEs;

typedef struct x2apMobilityChangeFail
{
        TknPres pres;
        CztProtIE_Cont_MobilityChangeFail_IEs protocolIEs;
} CztMobilityChangeFail;

typedef struct x2ap_ValueRLFInd_IEsCls{
        union {
                CztPCI cztPCI;
                CztECGI cztECGI;
                CztCRNTI cztCRNTI;
                CztShortMAC_I cztShortMAC_I;
                CztUE_RLF_Report_Cont cztUE_RLF_Report_Cont;
        } u;
} Czt_ValueRLFInd_IEsCls;
typedef struct x2apProtIE_Field_RLFInd_IEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ValueRLFInd_IEsCls value;
} CztProtIE_Field_RLFInd_IEs;

typedef struct x2apProtIE_Cont_RLFInd_IEs
{
        TknU16 noComp;
        CztProtIE_Field_RLFInd_IEs *member;
}CztProtIE_Cont_RLFInd_IEs;

typedef struct x2apRLFInd
{
        TknPres pres;
        CztProtIE_Cont_RLFInd_IEs protocolIEs;
} CztRLFInd;

typedef struct x2ap_ExtnSrvdCellsToActivate_Item_ExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnSrvdCellsToActivate_Item_ExtIEsCls;
typedef struct x2apProtExtnField_SrvdCellsToActivate_Item_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnSrvdCellsToActivate_Item_ExtIEsCls extensionValue;
} CztProtExtnField_SrvdCellsToActivate_Item_ExtIEs;

typedef struct x2apProtExtnCont_SrvdCellsToActivate_Item_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_SrvdCellsToActivate_Item_ExtIEs *member;
}CztProtExtnCont_SrvdCellsToActivate_Item_ExtIEs;

typedef struct x2apSrvdCellsToActivate_Item
{
        TknPres pres;
        CztECGI ecgi;
        CztProtExtnCont_SrvdCellsToActivate_Item_ExtIEs iE_Extns;
} CztSrvdCellsToActivate_Item;

typedef struct x2apSrvdCellsToActivate
{
        TknU16 noComp;
        CztSrvdCellsToActivate_Item *member;
}CztSrvdCellsToActivate;

typedef struct x2ap_ValueCellActvnRqst_IEsCls{
        union {
                CztSrvdCellsToActivate cztSrvdCellsToActivate;
        } u;
} Czt_ValueCellActvnRqst_IEsCls;
typedef struct x2apProtIE_Field_CellActvnRqst_IEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ValueCellActvnRqst_IEsCls value;
} CztProtIE_Field_CellActvnRqst_IEs;

typedef struct x2apProtIE_Cont_CellActvnRqst_IEs
{
        TknU16 noComp;
        CztProtIE_Field_CellActvnRqst_IEs *member;
}CztProtIE_Cont_CellActvnRqst_IEs;

typedef struct x2apCellActvnRqst
{
        TknPres pres;
        CztProtIE_Cont_CellActvnRqst_IEs protocolIEs;
} CztCellActvnRqst;

typedef struct x2ap_ExtnActivatedCellLst_Item_ExtIEsCls{
        union {
                TknU8 unused;
        } u;
} Czt_ExtnActivatedCellLst_Item_ExtIEsCls;
typedef struct x2apProtExtnField_ActivatedCellLst_Item_ExtIEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ExtnActivatedCellLst_Item_ExtIEsCls extensionValue;
} CztProtExtnField_ActivatedCellLst_Item_ExtIEs;

typedef struct x2apProtExtnCont_ActivatedCellLst_Item_ExtIEs
{
        TknU16 noComp;
        CztProtExtnField_ActivatedCellLst_Item_ExtIEs *member;
}CztProtExtnCont_ActivatedCellLst_Item_ExtIEs;

typedef struct x2apActivatedCellLst_Item
{
        TknPres pres;
        CztECGI ecgi;
        CztProtExtnCont_ActivatedCellLst_Item_ExtIEs iE_Extns;
} CztActivatedCellLst_Item;

typedef struct x2apActivatedCellLst
{
        TknU16 noComp;
        CztActivatedCellLst_Item *member;
}CztActivatedCellLst;

typedef struct x2ap_ValueCellActvnResp_IEsCls{
        union {
                CztActivatedCellLst cztActivatedCellLst;
                CztCriticalityDiag cztCriticalityDiag;
        } u;
} Czt_ValueCellActvnResp_IEsCls;
typedef struct x2apProtIE_Field_CellActvnResp_IEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ValueCellActvnResp_IEsCls value;
} CztProtIE_Field_CellActvnResp_IEs;

typedef struct x2apProtIE_Cont_CellActvnResp_IEs
{
        TknU16 noComp;
        CztProtIE_Field_CellActvnResp_IEs *member;
}CztProtIE_Cont_CellActvnResp_IEs;

typedef struct x2apCellActvnResp
{
        TknPres pres;
        CztProtIE_Cont_CellActvnResp_IEs protocolIEs;
} CztCellActvnResp;

typedef struct x2ap_ValueCellActvnFail_IEsCls{
        union {
                CztCause cztCause;
                CztCriticalityDiag cztCriticalityDiag;
        } u;
} Czt_ValueCellActvnFail_IEsCls;
typedef struct x2apProtIE_Field_CellActvnFail_IEs
{
        TknPres pres;
        CztProtIE_ID id;
        CztCriticality criticality;
        Czt_ValueCellActvnFail_IEsCls value;
} CztProtIE_Field_CellActvnFail_IEs;

typedef struct x2apProtIE_Cont_CellActvnFail_IEs
{
        TknU16 noComp;
        CztProtIE_Field_CellActvnFail_IEs *member;
}CztProtIE_Cont_CellActvnFail_IEs;

typedef struct x2apCellActvnFail
{
        TknPres pres;
        CztProtIE_Cont_CellActvnFail_IEs protocolIEs;
} CztCellActvnFail;

typedef struct x2ap_InitiatingMsgCls{
        union {
                CztHovrRqst cztHovrRqst;
                CztResetRqst cztResetRqst;
                CztX2SetupRqst cztX2SetupRqst;
                CztResStatusRqst cztResStatusRqst;
                CztENBConfigUpd cztENBConfigUpd;
                CztMobilityChangeRqst cztMobilityChangeRqst;
                CztCellActvnRqst cztCellActvnRqst;
                CztSNStatusTfr cztSNStatusTfr;
                CztUECntxtRls cztUECntxtRls;
                CztHovrCancel cztHovrCancel;
                CztErrInd cztErrInd;
                CztResStatusUpd cztResStatusUpd;
                CztLoadInform cztLoadInform;
                CztPrivMsg cztPrivMsg;
                CztRLFInd cztRLFInd;
                CztHovrReport cztHovrReport;
        } u;
} Czt_InitiatingMsgCls;
typedef struct x2apInitiatingMsg
{
        TknPres pres;
        CztProcedureCode procedureCode;
        CztCriticality criticality;
        Czt_InitiatingMsgCls value;
} CztInitiatingMsg;

typedef struct x2ap_SuccessfulOutcomeCls{
        union {
                CztHovrRqstAckg cztHovrRqstAckg;
                CztResetResp cztResetResp;
                CztX2SetupResp cztX2SetupResp;
                CztResStatusResp cztResStatusResp;
                CztENBConfigUpdAckg cztENBConfigUpdAckg;
                CztMobilityChangeAckg cztMobilityChangeAckg;
                CztCellActvnResp cztCellActvnResp;
        } u;
} Czt_SuccessfulOutcomeCls;
typedef struct x2apSuccessfulOutcome
{
        TknPres pres;
        CztProcedureCode procedureCode;
        CztCriticality criticality;
        Czt_SuccessfulOutcomeCls value;
} CztSuccessfulOutcome;

typedef struct x2ap_UnsuccessfulOutcomeCls{
        union {
                CztHovrPrepFail cztHovrPrepFail;
                CztX2SetupFail cztX2SetupFail;
                CztResStatusFail cztResStatusFail;
                CztENBConfigUpdFail cztENBConfigUpdFail;
                CztMobilityChangeFail cztMobilityChangeFail;
                CztCellActvnFail cztCellActvnFail;
        } u;
} Czt_UnsuccessfulOutcomeCls;
typedef struct x2apUnsuccessfulOutcome
{
        TknPres pres;
        CztProcedureCode procedureCode;
        CztCriticality criticality;
        Czt_UnsuccessfulOutcomeCls value;
} CztUnsuccessfulOutcome;

typedef struct x2apX2AP_PDU
{
        TknU8 choice;
        union {
                CztInitiatingMsg initiatingMsg;
                CztSuccessfulOutcome successfulOutcome;
                CztUnsuccessfulOutcome unsuccessfulOutcome;
        } val;
} CztX2AP_PDU;
# 124 "../..//cm/czt.x" 2
# 1 "../..//cm/czt_pk.x" 1
# 91 "../..//cm/czt_pk.x"
#define __CZTPKX__ 





extern S16 cmPkCztPrivIE_ID ( CztPrivIE_ID *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnAS_SecurInform_ExtIEsCls ( Czt_ExtnAS_SecurInform_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_AS_SecurInform_ExtIEs ( CztProtExtnField_AS_SecurInform_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_AS_SecurInform_ExtIEs ( CztProtExtnCont_AS_SecurInform_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztAS_SecurInform ( CztAS_SecurInform *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnAllocnAndRetentionPriority_ExtIEsCls ( Czt_ExtnAllocnAndRetentionPriority_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_AllocnAndRetentionPriority_ExtIEs ( CztProtExtnField_AllocnAndRetentionPriority_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_AllocnAndRetentionPriority_ExtIEs ( CztProtExtnCont_AllocnAndRetentionPriority_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztAllocnAndRetentionPriority ( CztAllocnAndRetentionPriority *param, Buffer *mBuf );




extern S16 cmPkCztBroadcastPLMNs_Item ( CztBroadcastPLMNs_Item *param, Buffer *mBuf );




extern S16 cmPkCztCause ( CztCause *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnCellTyp_ExtIEsCls ( Czt_ExtnCellTyp_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_CellTyp_ExtIEs ( CztProtExtnField_CellTyp_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_CellTyp_ExtIEs ( CztProtExtnCont_CellTyp_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztCellTyp ( CztCellTyp *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnCompositeAvailableCapacity_ExtIEsCls ( Czt_ExtnCompositeAvailableCapacity_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_CompositeAvailableCapacity_ExtIEs ( CztProtExtnField_CompositeAvailableCapacity_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_CompositeAvailableCapacity_ExtIEs ( CztProtExtnCont_CompositeAvailableCapacity_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztCompositeAvailableCapacity ( CztCompositeAvailableCapacity *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnCompositeAvailableCapacityGroup_ExtIEsCls ( Czt_ExtnCompositeAvailableCapacityGroup_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_CompositeAvailableCapacityGroup_ExtIEs ( CztProtExtnField_CompositeAvailableCapacityGroup_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_CompositeAvailableCapacityGroup_ExtIEs ( CztProtExtnCont_CompositeAvailableCapacityGroup_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztCompositeAvailableCapacityGroup ( CztCompositeAvailableCapacityGroup *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnCOUNTvalue_ExtIEsCls ( Czt_ExtnCOUNTvalue_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_COUNTvalue_ExtIEs ( CztProtExtnField_COUNTvalue_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_COUNTvalue_ExtIEs ( CztProtExtnCont_COUNTvalue_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztCOUNTvalue ( CztCOUNTvalue *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnCriticalityDiag_IE_Lst_ExtIEsCls ( Czt_ExtnCriticalityDiag_IE_Lst_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_CriticalityDiag_IE_Lst_ExtIEs ( CztProtExtnField_CriticalityDiag_IE_Lst_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_CriticalityDiag_IE_Lst_ExtIEs ( CztProtExtnCont_CriticalityDiag_IE_Lst_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztCriticalityDiag_IE_LstMember ( CztCriticalityDiag_IE_LstMember *param, Buffer *mBuf );




extern S16 cmPkCztCriticalityDiag_IE_Lst ( CztCriticalityDiag_IE_Lst *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnCriticalityDiag_ExtIEsCls ( Czt_ExtnCriticalityDiag_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_CriticalityDiag_ExtIEs ( CztProtExtnField_CriticalityDiag_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_CriticalityDiag_ExtIEs ( CztProtExtnCont_CriticalityDiag_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztCriticalityDiag ( CztCriticalityDiag *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnFDD_Info_ExtIEsCls ( Czt_ExtnFDD_Info_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_FDD_Info_ExtIEs ( CztProtExtnField_FDD_Info_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_FDD_Info_ExtIEs ( CztProtExtnCont_FDD_Info_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztFDD_Info ( CztFDD_Info *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnSpecialSubframe_Info_ExtIEsCls ( Czt_ExtnSpecialSubframe_Info_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_SpecialSubframe_Info_ExtIEs ( CztProtExtnField_SpecialSubframe_Info_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_SpecialSubframe_Info_ExtIEs ( CztProtExtnCont_SpecialSubframe_Info_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztSpecialSubframe_Info ( CztSpecialSubframe_Info *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnTDD_Info_ExtIEsCls ( Czt_ExtnTDD_Info_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_TDD_Info_ExtIEs ( CztProtExtnField_TDD_Info_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_TDD_Info_ExtIEs ( CztProtExtnCont_TDD_Info_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztTDD_Info ( CztTDD_Info *param, Buffer *mBuf );




extern S16 cmPkCztEUTRA_Mode_Info ( CztEUTRA_Mode_Info *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnECGI_ExtIEsCls ( Czt_ExtnECGI_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_ECGI_ExtIEs ( CztProtExtnField_ECGI_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_ECGI_ExtIEs ( CztProtExtnCont_ECGI_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztECGI ( CztECGI *param, Buffer *mBuf );




extern S16 cmPkCztENB_ID ( CztENB_ID *param, Buffer *mBuf );




extern S16 cmPkCztEPLMNs ( CztEPLMNs *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnGBR_QosInform_ExtIEsCls ( Czt_ExtnGBR_QosInform_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_GBR_QosInform_ExtIEs ( CztProtExtnField_GBR_QosInform_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_GBR_QosInform_ExtIEs ( CztProtExtnCont_GBR_QosInform_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztGBR_QosInform ( CztGBR_QosInform *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnE_RAB_Lvl_QoS_Params_ExtIEsCls ( Czt_ExtnE_RAB_Lvl_QoS_Params_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_E_RAB_Lvl_QoS_Params_ExtIEs ( CztProtExtnField_E_RAB_Lvl_QoS_Params_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_E_RAB_Lvl_QoS_Params_ExtIEs ( CztProtExtnCont_E_RAB_Lvl_QoS_Params_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztE_RAB_Lvl_QoS_Params ( CztE_RAB_Lvl_QoS_Params *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnE_RAB_Item_ExtIEsCls ( Czt_ExtnE_RAB_Item_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_E_RAB_Item_ExtIEs ( CztProtExtnField_E_RAB_Item_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_E_RAB_Item_ExtIEs ( CztProtExtnCont_E_RAB_Item_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztE_RAB_Item ( CztE_RAB_Item *param, Buffer *mBuf );




extern S16 cmPkCzt_ValueE_RAB_ItemIEsCls ( Czt_ValueE_RAB_ItemIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtIE_Field_E_RAB_ItemIEs ( CztProtIE_Field_E_RAB_ItemIEs *param, Buffer *mBuf );




extern S16 cmPkCztE_RAB_Lst ( CztE_RAB_Lst *param, Buffer *mBuf );




extern S16 cmPkCztForbiddenTACs ( CztForbiddenTACs *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnForbiddenTAs_Item_ExtIEsCls ( Czt_ExtnForbiddenTAs_Item_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_ForbiddenTAs_Item_ExtIEs ( CztProtExtnField_ForbiddenTAs_Item_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_ForbiddenTAs_Item_ExtIEs ( CztProtExtnCont_ForbiddenTAs_Item_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztForbiddenTAs_Item ( CztForbiddenTAs_Item *param, Buffer *mBuf );




extern S16 cmPkCztForbiddenTAs ( CztForbiddenTAs *param, Buffer *mBuf );




extern S16 cmPkCztForbiddenLACs ( CztForbiddenLACs *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnForbiddenLAs_Item_ExtIEsCls ( Czt_ExtnForbiddenLAs_Item_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_ForbiddenLAs_Item_ExtIEs ( CztProtExtnField_ForbiddenLAs_Item_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_ForbiddenLAs_Item_ExtIEs ( CztProtExtnCont_ForbiddenLAs_Item_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztForbiddenLAs_Item ( CztForbiddenLAs_Item *param, Buffer *mBuf );




extern S16 cmPkCztForbiddenLAs ( CztForbiddenLAs *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnGlobalENB_ID_ExtIEsCls ( Czt_ExtnGlobalENB_ID_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_GlobalENB_ID_ExtIEs ( CztProtExtnField_GlobalENB_ID_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_GlobalENB_ID_ExtIEs ( CztProtExtnCont_GlobalENB_ID_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztGlobalENB_ID ( CztGlobalENB_ID *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnGTPtunnelEndpoint_ExtIEsCls ( Czt_ExtnGTPtunnelEndpoint_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_GTPtunnelEndpoint_ExtIEs ( CztProtExtnField_GTPtunnelEndpoint_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_GTPtunnelEndpoint_ExtIEs ( CztProtExtnCont_GTPtunnelEndpoint_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztGTPtunnelEndpoint ( CztGTPtunnelEndpoint *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnGU_Group_ID_ExtIEsCls ( Czt_ExtnGU_Group_ID_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_GU_Group_ID_ExtIEs ( CztProtExtnField_GU_Group_ID_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_GU_Group_ID_ExtIEs ( CztProtExtnCont_GU_Group_ID_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztGU_Group_ID ( CztGU_Group_ID *param, Buffer *mBuf );




extern S16 cmPkCztGUGroupIDLst ( CztGUGroupIDLst *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnGUMMEI_ExtIEsCls ( Czt_ExtnGUMMEI_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_GUMMEI_ExtIEs ( CztProtExtnField_GUMMEI_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_GUMMEI_ExtIEs ( CztProtExtnCont_GUMMEI_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztGUMMEI ( CztGUMMEI *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnHovrRestrnLst_ExtIEsCls ( Czt_ExtnHovrRestrnLst_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_HovrRestrnLst_ExtIEs ( CztProtExtnField_HovrRestrnLst_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_HovrRestrnLst_ExtIEs ( CztProtExtnCont_HovrRestrnLst_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztHovrRestrnLst ( CztHovrRestrnLst *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnHWLoadIndicator_ExtIEsCls ( Czt_ExtnHWLoadIndicator_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_HWLoadIndicator_ExtIEs ( CztProtExtnField_HWLoadIndicator_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_HWLoadIndicator_ExtIEs ( CztProtExtnCont_HWLoadIndicator_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztHWLoadIndicator ( CztHWLoadIndicator *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnLastVisitedEUTRANCellInform_ExtIEsCls ( Czt_ExtnLastVisitedEUTRANCellInform_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_LastVisitedEUTRANCellInform_ExtIEs ( CztProtExtnField_LastVisitedEUTRANCellInform_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_LastVisitedEUTRANCellInform_ExtIEs ( CztProtExtnCont_LastVisitedEUTRANCellInform_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztLastVisitedEUTRANCellInform ( CztLastVisitedEUTRANCellInform *param, Buffer *mBuf );




extern S16 cmPkCztLastVisitedGERANCellInform ( CztLastVisitedGERANCellInform *param, Buffer *mBuf );




extern S16 cmPkCztLastVisitedCell_Item ( CztLastVisitedCell_Item *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnLocRprtngInform_ExtIEsCls ( Czt_ExtnLocRprtngInform_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_LocRprtngInform_ExtIEs ( CztProtExtnField_LocRprtngInform_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_LocRprtngInform_ExtIEs ( CztProtExtnCont_LocRprtngInform_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztLocRprtngInform ( CztLocRprtngInform *param, Buffer *mBuf );




extern S16 cmPkCztSubframeAllocn ( CztSubframeAllocn *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnMBSFN_Subframe_Info_ExtIEsCls ( Czt_ExtnMBSFN_Subframe_Info_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_MBSFN_Subframe_Info_ExtIEs ( CztProtExtnField_MBSFN_Subframe_Info_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_MBSFN_Subframe_Info_ExtIEs ( CztProtExtnCont_MBSFN_Subframe_Info_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztMBSFN_Subframe_Info ( CztMBSFN_Subframe_Info *param, Buffer *mBuf );




extern S16 cmPkCztMBSFN_Subframe_Infolist ( CztMBSFN_Subframe_Infolist *param, Buffer *mBuf );




extern S16 cmPkCztMobilityParamsModificationRange ( CztMobilityParamsModificationRange *param, Buffer *mBuf );




extern S16 cmPkCztMobilityParamsInform ( CztMobilityParamsInform *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnNeighbour_Inform_ExtIEsCls ( Czt_ExtnNeighbour_Inform_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_Neighbour_Inform_ExtIEs ( CztProtExtnField_Neighbour_Inform_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_Neighbour_Inform_ExtIEs ( CztProtExtnCont_Neighbour_Inform_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztNeighbour_InformMember ( CztNeighbour_InformMember *param, Buffer *mBuf );




extern S16 cmPkCztNeighbour_Inform ( CztNeighbour_Inform *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnPRACH_Config_ExtIEsCls ( Czt_ExtnPRACH_Config_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_PRACH_Config_ExtIEs ( CztProtExtnField_PRACH_Config_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_PRACH_Config_ExtIEs ( CztProtExtnCont_PRACH_Config_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztPRACH_Config ( CztPRACH_Config *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnRelativeNarrowbandTxPower_ExtIEsCls ( Czt_ExtnRelativeNarrowbandTxPower_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_RelativeNarrowbandTxPower_ExtIEs ( CztProtExtnField_RelativeNarrowbandTxPower_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_RelativeNarrowbandTxPower_ExtIEs ( CztProtExtnCont_RelativeNarrowbandTxPower_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztRelativeNarrowbandTxPower ( CztRelativeNarrowbandTxPower *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnRadioResStatus_ExtIEsCls ( Czt_ExtnRadioResStatus_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_RadioResStatus_ExtIEs ( CztProtExtnField_RadioResStatus_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_RadioResStatus_ExtIEs ( CztProtExtnCont_RadioResStatus_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztRadioResStatus ( CztRadioResStatus *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnS1TNLLoadIndicator_ExtIEsCls ( Czt_ExtnS1TNLLoadIndicator_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_S1TNLLoadIndicator_ExtIEs ( CztProtExtnField_S1TNLLoadIndicator_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_S1TNLLoadIndicator_ExtIEs ( CztProtExtnCont_S1TNLLoadIndicator_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztS1TNLLoadIndicator ( CztS1TNLLoadIndicator *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnSrvdCell_Inform_ExtIEsCls ( Czt_ExtnSrvdCell_Inform_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_SrvdCell_Inform_ExtIEs ( CztProtExtnField_SrvdCell_Inform_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_SrvdCell_Inform_ExtIEs ( CztProtExtnCont_SrvdCell_Inform_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztSrvdCell_Inform ( CztSrvdCell_Inform *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnSrvdCell_ExtIEsCls ( Czt_ExtnSrvdCell_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_SrvdCell_ExtIEs ( CztProtExtnField_SrvdCell_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_SrvdCell_ExtIEs ( CztProtExtnCont_SrvdCell_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztSrvdCellsMember ( CztSrvdCellsMember *param, Buffer *mBuf );




extern S16 cmPkCztSrvdCells ( CztSrvdCells *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnTraceActvn_ExtIEsCls ( Czt_ExtnTraceActvn_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_TraceActvn_ExtIEs ( CztProtExtnField_TraceActvn_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_TraceActvn_ExtIEs ( CztProtExtnCont_TraceActvn_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztTraceActvn ( CztTraceActvn *param, Buffer *mBuf );




extern S16 cmPkCztUE_HistoryInform ( CztUE_HistoryInform *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnUEAgg_MaxBitrate_ExtIEsCls ( Czt_ExtnUEAgg_MaxBitrate_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_UEAgg_MaxBitrate_ExtIEs ( CztProtExtnField_UEAgg_MaxBitrate_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_UEAgg_MaxBitrate_ExtIEs ( CztProtExtnCont_UEAgg_MaxBitrate_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztUEAggMaxBitRate ( CztUEAggMaxBitRate *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnUESecurCapabilities_ExtIEsCls ( Czt_ExtnUESecurCapabilities_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_UESecurCapabilities_ExtIEs ( CztProtExtnField_UESecurCapabilities_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_UESecurCapabilities_ExtIEs ( CztProtExtnCont_UESecurCapabilities_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztUESecurCapabilities ( CztUESecurCapabilities *param, Buffer *mBuf );




extern S16 cmPkCztUL_InterferenceOverloadInd ( CztUL_InterferenceOverloadInd *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnUL_HighInterferenceIndInfo_Item_ExtIEsCls ( Czt_ExtnUL_HighInterferenceIndInfo_Item_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_UL_HighInterferenceIndInfo_Item_ExtIEs ( CztProtExtnField_UL_HighInterferenceIndInfo_Item_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_UL_HighInterferenceIndInfo_Item_ExtIEs ( CztProtExtnCont_UL_HighInterferenceIndInfo_Item_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztUL_HighInterferenceIndInfo_Item ( CztUL_HighInterferenceIndInfo_Item *param, Buffer *mBuf );




extern S16 cmPkCztUL_HighInterferenceIndInfo ( CztUL_HighInterferenceIndInfo *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnE_RABs_ToBeSetup_ItemExtIEsCls ( Czt_ExtnE_RABs_ToBeSetup_ItemExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_E_RABs_ToBeSetup_ItemExtIEs ( CztProtExtnField_E_RABs_ToBeSetup_ItemExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_E_RABs_ToBeSetup_ItemExtIEs ( CztProtExtnCont_E_RABs_ToBeSetup_ItemExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztE_RABs_ToBeSetup_Item ( CztE_RABs_ToBeSetup_Item *param, Buffer *mBuf );




extern S16 cmPkCzt_ValueE_RABs_ToBeSetup_ItemIEsCls ( Czt_ValueE_RABs_ToBeSetup_ItemIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtIE_Field_E_RABs_ToBeSetup_ItemIEs ( CztProtIE_Field_E_RABs_ToBeSetup_ItemIEs *param, Buffer *mBuf );




extern S16 cmPkCztE_RABs_ToBeSetup_Lst ( CztE_RABs_ToBeSetup_Lst *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnUE_CntxtInform_ExtIEsCls ( Czt_ExtnUE_CntxtInform_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_UE_CntxtInform_ExtIEs ( CztProtExtnField_UE_CntxtInform_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_UE_CntxtInform_ExtIEs ( CztProtExtnCont_UE_CntxtInform_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztUE_CntxtInform ( CztUE_CntxtInform *param, Buffer *mBuf );




extern S16 cmPkCzt_ValueHovrRqst_IEsCls ( Czt_ValueHovrRqst_IEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtIE_Field_HovrRqst_IEs ( CztProtIE_Field_HovrRqst_IEs *param, Buffer *mBuf );




extern S16 cmPkCztProtIE_Cont_HovrRqst_IEs ( CztProtIE_Cont_HovrRqst_IEs *param, Buffer *mBuf );




extern S16 cmPkCztHovrRqst ( CztHovrRqst *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnE_RABs_Admtd_Item_ExtIEsCls ( Czt_ExtnE_RABs_Admtd_Item_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_E_RABs_Admtd_Item_ExtIEs ( CztProtExtnField_E_RABs_Admtd_Item_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_E_RABs_Admtd_Item_ExtIEs ( CztProtExtnCont_E_RABs_Admtd_Item_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztE_RABs_Admtd_Item ( CztE_RABs_Admtd_Item *param, Buffer *mBuf );




extern S16 cmPkCzt_ValueE_RABs_Admtd_ItemIEsCls ( Czt_ValueE_RABs_Admtd_ItemIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtIE_Field_E_RABs_Admtd_ItemIEs ( CztProtIE_Field_E_RABs_Admtd_ItemIEs *param, Buffer *mBuf );




extern S16 cmPkCztE_RABs_Admtd_Lst ( CztE_RABs_Admtd_Lst *param, Buffer *mBuf );




extern S16 cmPkCzt_ValueHovrRqstAckg_IEsCls ( Czt_ValueHovrRqstAckg_IEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtIE_Field_HovrRqstAckg_IEs ( CztProtIE_Field_HovrRqstAckg_IEs *param, Buffer *mBuf );




extern S16 cmPkCztProtIE_Cont_HovrRqstAckg_IEs ( CztProtIE_Cont_HovrRqstAckg_IEs *param, Buffer *mBuf );




extern S16 cmPkCztHovrRqstAckg ( CztHovrRqstAckg *param, Buffer *mBuf );




extern S16 cmPkCzt_ValueHovrPrepFail_IEsCls ( Czt_ValueHovrPrepFail_IEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtIE_Field_HovrPrepFail_IEs ( CztProtIE_Field_HovrPrepFail_IEs *param, Buffer *mBuf );




extern S16 cmPkCztProtIE_Cont_HovrPrepFail_IEs ( CztProtIE_Cont_HovrPrepFail_IEs *param, Buffer *mBuf );




extern S16 cmPkCztHovrPrepFail ( CztHovrPrepFail *param, Buffer *mBuf );




extern S16 cmPkCzt_ValueHovrReport_IEsCls ( Czt_ValueHovrReport_IEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtIE_Field_HovrReport_IEs ( CztProtIE_Field_HovrReport_IEs *param, Buffer *mBuf );




extern S16 cmPkCztProtIE_Cont_HovrReport_IEs ( CztProtIE_Cont_HovrReport_IEs *param, Buffer *mBuf );




extern S16 cmPkCztHovrReport ( CztHovrReport *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnE_RABs_SubjToStatusTfr_ItemExtIEsCls ( Czt_ExtnE_RABs_SubjToStatusTfr_ItemExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_E_RABs_SubjToStatusTfr_ItemExtIEs ( CztProtExtnField_E_RABs_SubjToStatusTfr_ItemExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_E_RABs_SubjToStatusTfr_ItemExtIEs ( CztProtExtnCont_E_RABs_SubjToStatusTfr_ItemExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztE_RABs_SubjToStatusTfr_Item ( CztE_RABs_SubjToStatusTfr_Item *param, Buffer *mBuf );




extern S16 cmPkCzt_ValueE_RABs_SubjToStatusTfr_ItemIEsCls ( Czt_ValueE_RABs_SubjToStatusTfr_ItemIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtIE_Field_E_RABs_SubjToStatusTfr_ItemIEs ( CztProtIE_Field_E_RABs_SubjToStatusTfr_ItemIEs *param, Buffer *mBuf );




extern S16 cmPkCztE_RABs_SubjToStatusTfr_Lst ( CztE_RABs_SubjToStatusTfr_Lst *param, Buffer *mBuf );




extern S16 cmPkCzt_ValueSNStatusTfr_IEsCls ( Czt_ValueSNStatusTfr_IEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtIE_Field_SNStatusTfr_IEs ( CztProtIE_Field_SNStatusTfr_IEs *param, Buffer *mBuf );




extern S16 cmPkCztProtIE_Cont_SNStatusTfr_IEs ( CztProtIE_Cont_SNStatusTfr_IEs *param, Buffer *mBuf );




extern S16 cmPkCztSNStatusTfr ( CztSNStatusTfr *param, Buffer *mBuf );




extern S16 cmPkCzt_ValueUECntxtRls_IEsCls ( Czt_ValueUECntxtRls_IEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtIE_Field_UECntxtRls_IEs ( CztProtIE_Field_UECntxtRls_IEs *param, Buffer *mBuf );




extern S16 cmPkCztProtIE_Cont_UECntxtRls_IEs ( CztProtIE_Cont_UECntxtRls_IEs *param, Buffer *mBuf );




extern S16 cmPkCztUECntxtRls ( CztUECntxtRls *param, Buffer *mBuf );




extern S16 cmPkCzt_ValueHovrCancel_IEsCls ( Czt_ValueHovrCancel_IEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtIE_Field_HovrCancel_IEs ( CztProtIE_Field_HovrCancel_IEs *param, Buffer *mBuf );




extern S16 cmPkCztProtIE_Cont_HovrCancel_IEs ( CztProtIE_Cont_HovrCancel_IEs *param, Buffer *mBuf );




extern S16 cmPkCztHovrCancel ( CztHovrCancel *param, Buffer *mBuf );




extern S16 cmPkCzt_ValueErrInd_IEsCls ( Czt_ValueErrInd_IEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtIE_Field_ErrInd_IEs ( CztProtIE_Field_ErrInd_IEs *param, Buffer *mBuf );




extern S16 cmPkCztProtIE_Cont_ErrInd_IEs ( CztProtIE_Cont_ErrInd_IEs *param, Buffer *mBuf );




extern S16 cmPkCztErrInd ( CztErrInd *param, Buffer *mBuf );




extern S16 cmPkCzt_ValueResetRqst_IEsCls ( Czt_ValueResetRqst_IEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtIE_Field_ResetRqst_IEs ( CztProtIE_Field_ResetRqst_IEs *param, Buffer *mBuf );




extern S16 cmPkCztProtIE_Cont_ResetRqst_IEs ( CztProtIE_Cont_ResetRqst_IEs *param, Buffer *mBuf );




extern S16 cmPkCztResetRqst ( CztResetRqst *param, Buffer *mBuf );




extern S16 cmPkCzt_ValueResetResp_IEsCls ( Czt_ValueResetResp_IEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtIE_Field_ResetResp_IEs ( CztProtIE_Field_ResetResp_IEs *param, Buffer *mBuf );




extern S16 cmPkCztProtIE_Cont_ResetResp_IEs ( CztProtIE_Cont_ResetResp_IEs *param, Buffer *mBuf );




extern S16 cmPkCztResetResp ( CztResetResp *param, Buffer *mBuf );




extern S16 cmPkCzt_ValueX2SetupRqst_IEsCls ( Czt_ValueX2SetupRqst_IEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtIE_Field_X2SetupRqst_IEs ( CztProtIE_Field_X2SetupRqst_IEs *param, Buffer *mBuf );




extern S16 cmPkCztProtIE_Cont_X2SetupRqst_IEs ( CztProtIE_Cont_X2SetupRqst_IEs *param, Buffer *mBuf );




extern S16 cmPkCztX2SetupRqst ( CztX2SetupRqst *param, Buffer *mBuf );




extern S16 cmPkCzt_ValueX2SetupResp_IEsCls ( Czt_ValueX2SetupResp_IEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtIE_Field_X2SetupResp_IEs ( CztProtIE_Field_X2SetupResp_IEs *param, Buffer *mBuf );




extern S16 cmPkCztProtIE_Cont_X2SetupResp_IEs ( CztProtIE_Cont_X2SetupResp_IEs *param, Buffer *mBuf );




extern S16 cmPkCztX2SetupResp ( CztX2SetupResp *param, Buffer *mBuf );




extern S16 cmPkCzt_ValueX2SetupFail_IEsCls ( Czt_ValueX2SetupFail_IEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtIE_Field_X2SetupFail_IEs ( CztProtIE_Field_X2SetupFail_IEs *param, Buffer *mBuf );




extern S16 cmPkCztProtIE_Cont_X2SetupFail_IEs ( CztProtIE_Cont_X2SetupFail_IEs *param, Buffer *mBuf );




extern S16 cmPkCztX2SetupFail ( CztX2SetupFail *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnCellInform_Item_ExtIEsCls ( Czt_ExtnCellInform_Item_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_CellInform_Item_ExtIEs ( CztProtExtnField_CellInform_Item_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_CellInform_Item_ExtIEs ( CztProtExtnCont_CellInform_Item_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztCellInform_Item ( CztCellInform_Item *param, Buffer *mBuf );




extern S16 cmPkCzt_ValueCellInform_ItemIEsCls ( Czt_ValueCellInform_ItemIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtIE_Field_CellInform_ItemIEs ( CztProtIE_Field_CellInform_ItemIEs *param, Buffer *mBuf );




extern S16 cmPkCztCellInform_Lst ( CztCellInform_Lst *param, Buffer *mBuf );




extern S16 cmPkCzt_ValueLoadInform_IEsCls ( Czt_ValueLoadInform_IEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtIE_Field_LoadInform_IEs ( CztProtIE_Field_LoadInform_IEs *param, Buffer *mBuf );




extern S16 cmPkCztProtIE_Cont_LoadInform_IEs ( CztProtIE_Cont_LoadInform_IEs *param, Buffer *mBuf );




extern S16 cmPkCztLoadInform ( CztLoadInform *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnSrvdCellsToMdfy_Item_ExtIEsCls ( Czt_ExtnSrvdCellsToMdfy_Item_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_SrvdCellsToMdfy_Item_ExtIEs ( CztProtExtnField_SrvdCellsToMdfy_Item_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_SrvdCellsToMdfy_Item_ExtIEs ( CztProtExtnCont_SrvdCellsToMdfy_Item_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztSrvdCellsToMdfy_Item ( CztSrvdCellsToMdfy_Item *param, Buffer *mBuf );




extern S16 cmPkCztSrvdCellsToMdfy ( CztSrvdCellsToMdfy *param, Buffer *mBuf );




extern S16 cmPkCztOld_ECGIs ( CztOld_ECGIs *param, Buffer *mBuf );




extern S16 cmPkCzt_ValueENBConfigUpd_IEsCls ( Czt_ValueENBConfigUpd_IEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtIE_Field_ENBConfigUpd_IEs ( CztProtIE_Field_ENBConfigUpd_IEs *param, Buffer *mBuf );




extern S16 cmPkCztProtIE_Cont_ENBConfigUpd_IEs ( CztProtIE_Cont_ENBConfigUpd_IEs *param, Buffer *mBuf );




extern S16 cmPkCztENBConfigUpd ( CztENBConfigUpd *param, Buffer *mBuf );




extern S16 cmPkCzt_ValueENBConfigUpdAckg_IEsCls ( Czt_ValueENBConfigUpdAckg_IEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtIE_Field_ENBConfigUpdAckg_IEs ( CztProtIE_Field_ENBConfigUpdAckg_IEs *param, Buffer *mBuf );




extern S16 cmPkCztProtIE_Cont_ENBConfigUpdAckg_IEs ( CztProtIE_Cont_ENBConfigUpdAckg_IEs *param, Buffer *mBuf );




extern S16 cmPkCztENBConfigUpdAckg ( CztENBConfigUpdAckg *param, Buffer *mBuf );




extern S16 cmPkCzt_ValueENBConfigUpdFail_IEsCls ( Czt_ValueENBConfigUpdFail_IEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtIE_Field_ENBConfigUpdFail_IEs ( CztProtIE_Field_ENBConfigUpdFail_IEs *param, Buffer *mBuf );




extern S16 cmPkCztProtIE_Cont_ENBConfigUpdFail_IEs ( CztProtIE_Cont_ENBConfigUpdFail_IEs *param, Buffer *mBuf );




extern S16 cmPkCztENBConfigUpdFail ( CztENBConfigUpdFail *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnCellToReport_Item_ExtIEsCls ( Czt_ExtnCellToReport_Item_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_CellToReport_Item_ExtIEs ( CztProtExtnField_CellToReport_Item_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_CellToReport_Item_ExtIEs ( CztProtExtnCont_CellToReport_Item_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztCellToReport_Item ( CztCellToReport_Item *param, Buffer *mBuf );




extern S16 cmPkCzt_ValueCellToReport_ItemIEsCls ( Czt_ValueCellToReport_ItemIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtIE_Field_CellToReport_ItemIEs ( CztProtIE_Field_CellToReport_ItemIEs *param, Buffer *mBuf );




extern S16 cmPkCztCellToReport_Lst ( CztCellToReport_Lst *param, Buffer *mBuf );




extern S16 cmPkCzt_ValueResStatusRqst_IEsCls ( Czt_ValueResStatusRqst_IEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtIE_Field_ResStatusRqst_IEs ( CztProtIE_Field_ResStatusRqst_IEs *param, Buffer *mBuf );




extern S16 cmPkCztProtIE_Cont_ResStatusRqst_IEs ( CztProtIE_Cont_ResStatusRqst_IEs *param, Buffer *mBuf );




extern S16 cmPkCztResStatusRqst ( CztResStatusRqst *param, Buffer *mBuf );




extern S16 cmPkCzt_ValueResStatusResp_IEsCls ( Czt_ValueResStatusResp_IEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtIE_Field_ResStatusResp_IEs ( CztProtIE_Field_ResStatusResp_IEs *param, Buffer *mBuf );




extern S16 cmPkCztProtIE_Cont_ResStatusResp_IEs ( CztProtIE_Cont_ResStatusResp_IEs *param, Buffer *mBuf );




extern S16 cmPkCztResStatusResp ( CztResStatusResp *param, Buffer *mBuf );




extern S16 cmPkCzt_ValueResStatusFail_IEsCls ( Czt_ValueResStatusFail_IEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtIE_Field_ResStatusFail_IEs ( CztProtIE_Field_ResStatusFail_IEs *param, Buffer *mBuf );




extern S16 cmPkCztProtIE_Cont_ResStatusFail_IEs ( CztProtIE_Cont_ResStatusFail_IEs *param, Buffer *mBuf );




extern S16 cmPkCztResStatusFail ( CztResStatusFail *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnCellMeasurementResult_Item_ExtIEsCls ( Czt_ExtnCellMeasurementResult_Item_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_CellMeasurementResult_Item_ExtIEs ( CztProtExtnField_CellMeasurementResult_Item_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_CellMeasurementResult_Item_ExtIEs ( CztProtExtnCont_CellMeasurementResult_Item_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztCellMeasurementResult_Item ( CztCellMeasurementResult_Item *param, Buffer *mBuf );




extern S16 cmPkCzt_ValueCellMeasurementResult_ItemIEsCls ( Czt_ValueCellMeasurementResult_ItemIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtIE_Field_CellMeasurementResult_ItemIEs ( CztProtIE_Field_CellMeasurementResult_ItemIEs *param, Buffer *mBuf );




extern S16 cmPkCztCellMeasurementResult_Lst ( CztCellMeasurementResult_Lst *param, Buffer *mBuf );




extern S16 cmPkCzt_ValueResStatusUpd_IEsCls ( Czt_ValueResStatusUpd_IEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtIE_Field_ResStatusUpd_IEs ( CztProtIE_Field_ResStatusUpd_IEs *param, Buffer *mBuf );




extern S16 cmPkCztProtIE_Cont_ResStatusUpd_IEs ( CztProtIE_Cont_ResStatusUpd_IEs *param, Buffer *mBuf );




extern S16 cmPkCztResStatusUpd ( CztResStatusUpd *param, Buffer *mBuf );




extern S16 cmPkCzt_ValuePrivMsg_IEsCls ( Czt_ValuePrivMsg_IEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztPrivIE_Field_PrivMsg_IEs ( CztPrivIE_Field_PrivMsg_IEs *param, Buffer *mBuf );




extern S16 cmPkCztPrivIE_Cont_PrivMsg_IEs ( CztPrivIE_Cont_PrivMsg_IEs *param, Buffer *mBuf );




extern S16 cmPkCztPrivMsg ( CztPrivMsg *param, Buffer *mBuf );




extern S16 cmPkCzt_ValueMobilityChangeRqst_IEsCls ( Czt_ValueMobilityChangeRqst_IEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtIE_Field_MobilityChangeRqst_IEs ( CztProtIE_Field_MobilityChangeRqst_IEs *param, Buffer *mBuf );




extern S16 cmPkCztProtIE_Cont_MobilityChangeRqst_IEs ( CztProtIE_Cont_MobilityChangeRqst_IEs *param, Buffer *mBuf );




extern S16 cmPkCztMobilityChangeRqst ( CztMobilityChangeRqst *param, Buffer *mBuf );




extern S16 cmPkCzt_ValueMobilityChangeAckg_IEsCls ( Czt_ValueMobilityChangeAckg_IEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtIE_Field_MobilityChangeAckg_IEs ( CztProtIE_Field_MobilityChangeAckg_IEs *param, Buffer *mBuf );




extern S16 cmPkCztProtIE_Cont_MobilityChangeAckg_IEs ( CztProtIE_Cont_MobilityChangeAckg_IEs *param, Buffer *mBuf );




extern S16 cmPkCztMobilityChangeAckg ( CztMobilityChangeAckg *param, Buffer *mBuf );




extern S16 cmPkCzt_ValueMobilityChangeFail_IEsCls ( Czt_ValueMobilityChangeFail_IEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtIE_Field_MobilityChangeFail_IEs ( CztProtIE_Field_MobilityChangeFail_IEs *param, Buffer *mBuf );




extern S16 cmPkCztProtIE_Cont_MobilityChangeFail_IEs ( CztProtIE_Cont_MobilityChangeFail_IEs *param, Buffer *mBuf );




extern S16 cmPkCztMobilityChangeFail ( CztMobilityChangeFail *param, Buffer *mBuf );




extern S16 cmPkCzt_ValueRLFInd_IEsCls ( Czt_ValueRLFInd_IEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtIE_Field_RLFInd_IEs ( CztProtIE_Field_RLFInd_IEs *param, Buffer *mBuf );




extern S16 cmPkCztProtIE_Cont_RLFInd_IEs ( CztProtIE_Cont_RLFInd_IEs *param, Buffer *mBuf );




extern S16 cmPkCztRLFInd ( CztRLFInd *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnSrvdCellsToActivate_Item_ExtIEsCls ( Czt_ExtnSrvdCellsToActivate_Item_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_SrvdCellsToActivate_Item_ExtIEs ( CztProtExtnField_SrvdCellsToActivate_Item_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_SrvdCellsToActivate_Item_ExtIEs ( CztProtExtnCont_SrvdCellsToActivate_Item_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztSrvdCellsToActivate_Item ( CztSrvdCellsToActivate_Item *param, Buffer *mBuf );




extern S16 cmPkCztSrvdCellsToActivate ( CztSrvdCellsToActivate *param, Buffer *mBuf );




extern S16 cmPkCzt_ValueCellActvnRqst_IEsCls ( Czt_ValueCellActvnRqst_IEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtIE_Field_CellActvnRqst_IEs ( CztProtIE_Field_CellActvnRqst_IEs *param, Buffer *mBuf );




extern S16 cmPkCztProtIE_Cont_CellActvnRqst_IEs ( CztProtIE_Cont_CellActvnRqst_IEs *param, Buffer *mBuf );




extern S16 cmPkCztCellActvnRqst ( CztCellActvnRqst *param, Buffer *mBuf );




extern S16 cmPkCzt_ExtnActivatedCellLst_Item_ExtIEsCls ( Czt_ExtnActivatedCellLst_Item_ExtIEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtExtnField_ActivatedCellLst_Item_ExtIEs ( CztProtExtnField_ActivatedCellLst_Item_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztProtExtnCont_ActivatedCellLst_Item_ExtIEs ( CztProtExtnCont_ActivatedCellLst_Item_ExtIEs *param, Buffer *mBuf );




extern S16 cmPkCztActivatedCellLst_Item ( CztActivatedCellLst_Item *param, Buffer *mBuf );




extern S16 cmPkCztActivatedCellLst ( CztActivatedCellLst *param, Buffer *mBuf );




extern S16 cmPkCzt_ValueCellActvnResp_IEsCls ( Czt_ValueCellActvnResp_IEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtIE_Field_CellActvnResp_IEs ( CztProtIE_Field_CellActvnResp_IEs *param, Buffer *mBuf );




extern S16 cmPkCztProtIE_Cont_CellActvnResp_IEs ( CztProtIE_Cont_CellActvnResp_IEs *param, Buffer *mBuf );




extern S16 cmPkCztCellActvnResp ( CztCellActvnResp *param, Buffer *mBuf );




extern S16 cmPkCzt_ValueCellActvnFail_IEsCls ( Czt_ValueCellActvnFail_IEsCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztProtIE_Field_CellActvnFail_IEs ( CztProtIE_Field_CellActvnFail_IEs *param, Buffer *mBuf );




extern S16 cmPkCztProtIE_Cont_CellActvnFail_IEs ( CztProtIE_Cont_CellActvnFail_IEs *param, Buffer *mBuf );




extern S16 cmPkCztCellActvnFail ( CztCellActvnFail *param, Buffer *mBuf );




extern S16 cmPkCzt_InitiatingMsgCls ( Czt_InitiatingMsgCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztInitiatingMsg ( CztInitiatingMsg *param, Buffer *mBuf );




extern S16 cmPkCzt_SuccessfulOutcomeCls ( Czt_SuccessfulOutcomeCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztSuccessfulOutcome ( CztSuccessfulOutcome *param, Buffer *mBuf );




extern S16 cmPkCzt_UnsuccessfulOutcomeCls ( Czt_UnsuccessfulOutcomeCls *param, U32 val, Buffer *mBuf );





extern S16 cmPkCztUnsuccessfulOutcome ( CztUnsuccessfulOutcome *param, Buffer *mBuf );




extern S16 cmPkCztX2AP_PDU ( CztX2AP_PDU *param, Buffer *mBuf );
# 125 "../..//cm/czt.x" 2
# 1 "../..//cm/czt_unpk.x" 1
# 91 "../..//cm/czt_unpk.x"
#define __CZTUNPKX__ 





extern S16 cmUnpkCztPrivIE_ID ( CztPrivIE_ID *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnAS_SecurInform_ExtIEsCls ( Czt_ExtnAS_SecurInform_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_AS_SecurInform_ExtIEs ( CztProtExtnField_AS_SecurInform_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_AS_SecurInform_ExtIEs ( CztProtExtnCont_AS_SecurInform_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztAS_SecurInform ( CztAS_SecurInform *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnAllocnAndRetentionPriority_ExtIEsCls ( Czt_ExtnAllocnAndRetentionPriority_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_AllocnAndRetentionPriority_ExtIEs ( CztProtExtnField_AllocnAndRetentionPriority_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_AllocnAndRetentionPriority_ExtIEs ( CztProtExtnCont_AllocnAndRetentionPriority_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztAllocnAndRetentionPriority ( CztAllocnAndRetentionPriority *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztBroadcastPLMNs_Item ( CztBroadcastPLMNs_Item *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztCause ( CztCause *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnCellTyp_ExtIEsCls ( Czt_ExtnCellTyp_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_CellTyp_ExtIEs ( CztProtExtnField_CellTyp_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_CellTyp_ExtIEs ( CztProtExtnCont_CellTyp_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztCellTyp ( CztCellTyp *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnCompositeAvailableCapacity_ExtIEsCls ( Czt_ExtnCompositeAvailableCapacity_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_CompositeAvailableCapacity_ExtIEs ( CztProtExtnField_CompositeAvailableCapacity_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_CompositeAvailableCapacity_ExtIEs ( CztProtExtnCont_CompositeAvailableCapacity_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztCompositeAvailableCapacity ( CztCompositeAvailableCapacity *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnCompositeAvailableCapacityGroup_ExtIEsCls ( Czt_ExtnCompositeAvailableCapacityGroup_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_CompositeAvailableCapacityGroup_ExtIEs
       ( CztProtExtnField_CompositeAvailableCapacityGroup_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_CompositeAvailableCapacityGroup_ExtIEs
       ( CztProtExtnCont_CompositeAvailableCapacityGroup_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztCompositeAvailableCapacityGroup ( CztCompositeAvailableCapacityGroup *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnCOUNTvalue_ExtIEsCls ( Czt_ExtnCOUNTvalue_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_COUNTvalue_ExtIEs ( CztProtExtnField_COUNTvalue_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_COUNTvalue_ExtIEs ( CztProtExtnCont_COUNTvalue_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztCOUNTvalue ( CztCOUNTvalue *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnCriticalityDiag_IE_Lst_ExtIEsCls ( Czt_ExtnCriticalityDiag_IE_Lst_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_CriticalityDiag_IE_Lst_ExtIEs ( CztProtExtnField_CriticalityDiag_IE_Lst_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_CriticalityDiag_IE_Lst_ExtIEs ( CztProtExtnCont_CriticalityDiag_IE_Lst_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztCriticalityDiag_IE_LstMember ( CztCriticalityDiag_IE_LstMember *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztCriticalityDiag_IE_Lst ( CztCriticalityDiag_IE_Lst *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnCriticalityDiag_ExtIEsCls ( Czt_ExtnCriticalityDiag_ExtIEsCls *param, U32 val,Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnField_CriticalityDiag_ExtIEs ( CztProtExtnField_CriticalityDiag_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_CriticalityDiag_ExtIEs ( CztProtExtnCont_CriticalityDiag_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztCriticalityDiag ( CztCriticalityDiag *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnFDD_Info_ExtIEsCls ( Czt_ExtnFDD_Info_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_FDD_Info_ExtIEs ( CztProtExtnField_FDD_Info_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_FDD_Info_ExtIEs ( CztProtExtnCont_FDD_Info_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztFDD_Info ( CztFDD_Info *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnSpecialSubframe_Info_ExtIEsCls ( Czt_ExtnSpecialSubframe_Info_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_SpecialSubframe_Info_ExtIEs ( CztProtExtnField_SpecialSubframe_Info_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_SpecialSubframe_Info_ExtIEs ( CztProtExtnCont_SpecialSubframe_Info_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztSpecialSubframe_Info ( CztSpecialSubframe_Info *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnTDD_Info_ExtIEsCls ( Czt_ExtnTDD_Info_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_TDD_Info_ExtIEs ( CztProtExtnField_TDD_Info_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_TDD_Info_ExtIEs ( CztProtExtnCont_TDD_Info_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztTDD_Info ( CztTDD_Info *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztEUTRA_Mode_Info ( CztEUTRA_Mode_Info *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnECGI_ExtIEsCls ( Czt_ExtnECGI_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_ECGI_ExtIEs ( CztProtExtnField_ECGI_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_ECGI_ExtIEs ( CztProtExtnCont_ECGI_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztECGI ( CztECGI *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztENB_ID ( CztENB_ID *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztEPLMNs ( CztEPLMNs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnGBR_QosInform_ExtIEsCls ( Czt_ExtnGBR_QosInform_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_GBR_QosInform_ExtIEs ( CztProtExtnField_GBR_QosInform_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_GBR_QosInform_ExtIEs ( CztProtExtnCont_GBR_QosInform_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztGBR_QosInform ( CztGBR_QosInform *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnE_RAB_Lvl_QoS_Params_ExtIEsCls ( Czt_ExtnE_RAB_Lvl_QoS_Params_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_E_RAB_Lvl_QoS_Params_ExtIEs ( CztProtExtnField_E_RAB_Lvl_QoS_Params_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_E_RAB_Lvl_QoS_Params_ExtIEs ( CztProtExtnCont_E_RAB_Lvl_QoS_Params_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztE_RAB_Lvl_QoS_Params ( CztE_RAB_Lvl_QoS_Params *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnE_RAB_Item_ExtIEsCls ( Czt_ExtnE_RAB_Item_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_E_RAB_Item_ExtIEs ( CztProtExtnField_E_RAB_Item_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_E_RAB_Item_ExtIEs ( CztProtExtnCont_E_RAB_Item_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztE_RAB_Item ( CztE_RAB_Item *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ValueE_RAB_ItemIEsCls ( Czt_ValueE_RAB_ItemIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtIE_Field_E_RAB_ItemIEs ( CztProtIE_Field_E_RAB_ItemIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztE_RAB_Lst ( CztE_RAB_Lst *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztForbiddenTACs ( CztForbiddenTACs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnForbiddenTAs_Item_ExtIEsCls ( Czt_ExtnForbiddenTAs_Item_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_ForbiddenTAs_Item_ExtIEs ( CztProtExtnField_ForbiddenTAs_Item_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_ForbiddenTAs_Item_ExtIEs ( CztProtExtnCont_ForbiddenTAs_Item_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztForbiddenTAs_Item ( CztForbiddenTAs_Item *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztForbiddenTAs ( CztForbiddenTAs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztForbiddenLACs ( CztForbiddenLACs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnForbiddenLAs_Item_ExtIEsCls ( Czt_ExtnForbiddenLAs_Item_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_ForbiddenLAs_Item_ExtIEs ( CztProtExtnField_ForbiddenLAs_Item_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_ForbiddenLAs_Item_ExtIEs ( CztProtExtnCont_ForbiddenLAs_Item_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztForbiddenLAs_Item ( CztForbiddenLAs_Item *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztForbiddenLAs ( CztForbiddenLAs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnGlobalENB_ID_ExtIEsCls ( Czt_ExtnGlobalENB_ID_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_GlobalENB_ID_ExtIEs ( CztProtExtnField_GlobalENB_ID_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_GlobalENB_ID_ExtIEs ( CztProtExtnCont_GlobalENB_ID_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztGlobalENB_ID ( CztGlobalENB_ID *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnGTPtunnelEndpoint_ExtIEsCls ( Czt_ExtnGTPtunnelEndpoint_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_GTPtunnelEndpoint_ExtIEs ( CztProtExtnField_GTPtunnelEndpoint_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_GTPtunnelEndpoint_ExtIEs ( CztProtExtnCont_GTPtunnelEndpoint_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztGTPtunnelEndpoint ( CztGTPtunnelEndpoint *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnGU_Group_ID_ExtIEsCls ( Czt_ExtnGU_Group_ID_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_GU_Group_ID_ExtIEs ( CztProtExtnField_GU_Group_ID_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_GU_Group_ID_ExtIEs ( CztProtExtnCont_GU_Group_ID_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztGU_Group_ID ( CztGU_Group_ID *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztGUGroupIDLst ( CztGUGroupIDLst *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnGUMMEI_ExtIEsCls ( Czt_ExtnGUMMEI_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_GUMMEI_ExtIEs ( CztProtExtnField_GUMMEI_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_GUMMEI_ExtIEs ( CztProtExtnCont_GUMMEI_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztGUMMEI ( CztGUMMEI *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnHovrRestrnLst_ExtIEsCls ( Czt_ExtnHovrRestrnLst_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_HovrRestrnLst_ExtIEs ( CztProtExtnField_HovrRestrnLst_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_HovrRestrnLst_ExtIEs ( CztProtExtnCont_HovrRestrnLst_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztHovrRestrnLst ( CztHovrRestrnLst *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnHWLoadIndicator_ExtIEsCls ( Czt_ExtnHWLoadIndicator_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_HWLoadIndicator_ExtIEs ( CztProtExtnField_HWLoadIndicator_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_HWLoadIndicator_ExtIEs ( CztProtExtnCont_HWLoadIndicator_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztHWLoadIndicator ( CztHWLoadIndicator *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnLastVisitedEUTRANCellInform_ExtIEsCls ( Czt_ExtnLastVisitedEUTRANCellInform_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_LastVisitedEUTRANCellInform_ExtIEs ( CztProtExtnField_LastVisitedEUTRANCellInform_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_LastVisitedEUTRANCellInform_ExtIEs ( CztProtExtnCont_LastVisitedEUTRANCellInform_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztLastVisitedEUTRANCellInform ( CztLastVisitedEUTRANCellInform *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztLastVisitedGERANCellInform ( CztLastVisitedGERANCellInform *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztLastVisitedCell_Item ( CztLastVisitedCell_Item *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnLocRprtngInform_ExtIEsCls ( Czt_ExtnLocRprtngInform_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_LocRprtngInform_ExtIEs ( CztProtExtnField_LocRprtngInform_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_LocRprtngInform_ExtIEs ( CztProtExtnCont_LocRprtngInform_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztLocRprtngInform ( CztLocRprtngInform *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztSubframeAllocn ( CztSubframeAllocn *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnMBSFN_Subframe_Info_ExtIEsCls ( Czt_ExtnMBSFN_Subframe_Info_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_MBSFN_Subframe_Info_ExtIEs ( CztProtExtnField_MBSFN_Subframe_Info_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_MBSFN_Subframe_Info_ExtIEs ( CztProtExtnCont_MBSFN_Subframe_Info_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztMBSFN_Subframe_Info ( CztMBSFN_Subframe_Info *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztMBSFN_Subframe_Infolist ( CztMBSFN_Subframe_Infolist *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztMobilityParamsModificationRange ( CztMobilityParamsModificationRange *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztMobilityParamsInform ( CztMobilityParamsInform *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnNeighbour_Inform_ExtIEsCls ( Czt_ExtnNeighbour_Inform_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_Neighbour_Inform_ExtIEs ( CztProtExtnField_Neighbour_Inform_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_Neighbour_Inform_ExtIEs ( CztProtExtnCont_Neighbour_Inform_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztNeighbour_InformMember ( CztNeighbour_InformMember *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztNeighbour_Inform ( CztNeighbour_Inform *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnPRACH_Config_ExtIEsCls ( Czt_ExtnPRACH_Config_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_PRACH_Config_ExtIEs ( CztProtExtnField_PRACH_Config_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_PRACH_Config_ExtIEs ( CztProtExtnCont_PRACH_Config_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztPRACH_Config ( CztPRACH_Config *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnRelativeNarrowbandTxPower_ExtIEsCls ( Czt_ExtnRelativeNarrowbandTxPower_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_RelativeNarrowbandTxPower_ExtIEs ( CztProtExtnField_RelativeNarrowbandTxPower_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_RelativeNarrowbandTxPower_ExtIEs ( CztProtExtnCont_RelativeNarrowbandTxPower_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztRelativeNarrowbandTxPower ( CztRelativeNarrowbandTxPower *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnRadioResStatus_ExtIEsCls ( Czt_ExtnRadioResStatus_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_RadioResStatus_ExtIEs ( CztProtExtnField_RadioResStatus_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_RadioResStatus_ExtIEs ( CztProtExtnCont_RadioResStatus_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztRadioResStatus ( CztRadioResStatus *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnS1TNLLoadIndicator_ExtIEsCls ( Czt_ExtnS1TNLLoadIndicator_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_S1TNLLoadIndicator_ExtIEs ( CztProtExtnField_S1TNLLoadIndicator_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_S1TNLLoadIndicator_ExtIEs ( CztProtExtnCont_S1TNLLoadIndicator_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztS1TNLLoadIndicator ( CztS1TNLLoadIndicator *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnSrvdCell_Inform_ExtIEsCls ( Czt_ExtnSrvdCell_Inform_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_SrvdCell_Inform_ExtIEs ( CztProtExtnField_SrvdCell_Inform_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_SrvdCell_Inform_ExtIEs ( CztProtExtnCont_SrvdCell_Inform_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztSrvdCell_Inform ( CztSrvdCell_Inform *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnSrvdCell_ExtIEsCls ( Czt_ExtnSrvdCell_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_SrvdCell_ExtIEs ( CztProtExtnField_SrvdCell_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_SrvdCell_ExtIEs ( CztProtExtnCont_SrvdCell_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztSrvdCellsMember ( CztSrvdCellsMember *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztSrvdCells ( CztSrvdCells *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnTraceActvn_ExtIEsCls ( Czt_ExtnTraceActvn_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_TraceActvn_ExtIEs ( CztProtExtnField_TraceActvn_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_TraceActvn_ExtIEs ( CztProtExtnCont_TraceActvn_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztTraceActvn ( CztTraceActvn *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztUE_HistoryInform ( CztUE_HistoryInform *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnUEAgg_MaxBitrate_ExtIEsCls ( Czt_ExtnUEAgg_MaxBitrate_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_UEAgg_MaxBitrate_ExtIEs ( CztProtExtnField_UEAgg_MaxBitrate_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_UEAgg_MaxBitrate_ExtIEs ( CztProtExtnCont_UEAgg_MaxBitrate_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztUEAggMaxBitRate ( CztUEAggMaxBitRate *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnUESecurCapabilities_ExtIEsCls ( Czt_ExtnUESecurCapabilities_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_UESecurCapabilities_ExtIEs ( CztProtExtnField_UESecurCapabilities_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_UESecurCapabilities_ExtIEs ( CztProtExtnCont_UESecurCapabilities_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztUESecurCapabilities ( CztUESecurCapabilities *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztUL_InterferenceOverloadInd ( CztUL_InterferenceOverloadInd *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnUL_HighInterferenceIndInfo_Item_ExtIEsCls ( Czt_ExtnUL_HighInterferenceIndInfo_Item_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_UL_HighInterferenceIndInfo_Item_ExtIEs
       ( CztProtExtnField_UL_HighInterferenceIndInfo_Item_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_UL_HighInterferenceIndInfo_Item_ExtIEs
       ( CztProtExtnCont_UL_HighInterferenceIndInfo_Item_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztUL_HighInterferenceIndInfo_Item ( CztUL_HighInterferenceIndInfo_Item *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztUL_HighInterferenceIndInfo ( CztUL_HighInterferenceIndInfo *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnE_RABs_ToBeSetup_ItemExtIEsCls ( Czt_ExtnE_RABs_ToBeSetup_ItemExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_E_RABs_ToBeSetup_ItemExtIEs ( CztProtExtnField_E_RABs_ToBeSetup_ItemExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_E_RABs_ToBeSetup_ItemExtIEs ( CztProtExtnCont_E_RABs_ToBeSetup_ItemExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztE_RABs_ToBeSetup_Item ( CztE_RABs_ToBeSetup_Item *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ValueE_RABs_ToBeSetup_ItemIEsCls ( Czt_ValueE_RABs_ToBeSetup_ItemIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtIE_Field_E_RABs_ToBeSetup_ItemIEs ( CztProtIE_Field_E_RABs_ToBeSetup_ItemIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztE_RABs_ToBeSetup_Lst ( CztE_RABs_ToBeSetup_Lst *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnUE_CntxtInform_ExtIEsCls ( Czt_ExtnUE_CntxtInform_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_UE_CntxtInform_ExtIEs ( CztProtExtnField_UE_CntxtInform_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_UE_CntxtInform_ExtIEs ( CztProtExtnCont_UE_CntxtInform_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztUE_CntxtInform ( CztUE_CntxtInform *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ValueHovrRqst_IEsCls ( Czt_ValueHovrRqst_IEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtIE_Field_HovrRqst_IEs ( CztProtIE_Field_HovrRqst_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtIE_Cont_HovrRqst_IEs ( CztProtIE_Cont_HovrRqst_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztHovrRqst ( CztHovrRqst *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnE_RABs_Admtd_Item_ExtIEsCls ( Czt_ExtnE_RABs_Admtd_Item_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_E_RABs_Admtd_Item_ExtIEs ( CztProtExtnField_E_RABs_Admtd_Item_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_E_RABs_Admtd_Item_ExtIEs ( CztProtExtnCont_E_RABs_Admtd_Item_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztE_RABs_Admtd_Item ( CztE_RABs_Admtd_Item *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ValueE_RABs_Admtd_ItemIEsCls ( Czt_ValueE_RABs_Admtd_ItemIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtIE_Field_E_RABs_Admtd_ItemIEs ( CztProtIE_Field_E_RABs_Admtd_ItemIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztE_RABs_Admtd_Lst ( CztE_RABs_Admtd_Lst *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ValueHovrRqstAckg_IEsCls ( Czt_ValueHovrRqstAckg_IEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtIE_Field_HovrRqstAckg_IEs ( CztProtIE_Field_HovrRqstAckg_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtIE_Cont_HovrRqstAckg_IEs ( CztProtIE_Cont_HovrRqstAckg_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztHovrRqstAckg ( CztHovrRqstAckg *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ValueHovrPrepFail_IEsCls ( Czt_ValueHovrPrepFail_IEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtIE_Field_HovrPrepFail_IEs ( CztProtIE_Field_HovrPrepFail_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtIE_Cont_HovrPrepFail_IEs ( CztProtIE_Cont_HovrPrepFail_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztHovrPrepFail ( CztHovrPrepFail *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ValueHovrReport_IEsCls ( Czt_ValueHovrReport_IEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtIE_Field_HovrReport_IEs ( CztProtIE_Field_HovrReport_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtIE_Cont_HovrReport_IEs ( CztProtIE_Cont_HovrReport_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztHovrReport ( CztHovrReport *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnE_RABs_SubjToStatusTfr_ItemExtIEsCls ( Czt_ExtnE_RABs_SubjToStatusTfr_ItemExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_E_RABs_SubjToStatusTfr_ItemExtIEs ( CztProtExtnField_E_RABs_SubjToStatusTfr_ItemExtIEs *param, Ptr pntr, Buffer *mBuf );



extern S16 cmUnpkCztProtExtnCont_E_RABs_SubjToStatusTfr_ItemExtIEs ( CztProtExtnCont_E_RABs_SubjToStatusTfr_ItemExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztE_RABs_SubjToStatusTfr_Item ( CztE_RABs_SubjToStatusTfr_Item *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ValueE_RABs_SubjToStatusTfr_ItemIEsCls ( Czt_ValueE_RABs_SubjToStatusTfr_ItemIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtIE_Field_E_RABs_SubjToStatusTfr_ItemIEs ( CztProtIE_Field_E_RABs_SubjToStatusTfr_ItemIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztE_RABs_SubjToStatusTfr_Lst ( CztE_RABs_SubjToStatusTfr_Lst *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ValueSNStatusTfr_IEsCls ( Czt_ValueSNStatusTfr_IEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtIE_Field_SNStatusTfr_IEs ( CztProtIE_Field_SNStatusTfr_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtIE_Cont_SNStatusTfr_IEs ( CztProtIE_Cont_SNStatusTfr_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztSNStatusTfr ( CztSNStatusTfr *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ValueUECntxtRls_IEsCls ( Czt_ValueUECntxtRls_IEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtIE_Field_UECntxtRls_IEs ( CztProtIE_Field_UECntxtRls_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtIE_Cont_UECntxtRls_IEs ( CztProtIE_Cont_UECntxtRls_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztUECntxtRls ( CztUECntxtRls *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ValueHovrCancel_IEsCls ( Czt_ValueHovrCancel_IEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtIE_Field_HovrCancel_IEs ( CztProtIE_Field_HovrCancel_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtIE_Cont_HovrCancel_IEs ( CztProtIE_Cont_HovrCancel_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztHovrCancel ( CztHovrCancel *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ValueErrInd_IEsCls ( Czt_ValueErrInd_IEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtIE_Field_ErrInd_IEs ( CztProtIE_Field_ErrInd_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtIE_Cont_ErrInd_IEs ( CztProtIE_Cont_ErrInd_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztErrInd ( CztErrInd *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ValueResetRqst_IEsCls ( Czt_ValueResetRqst_IEsCls *param, U32 val, Ptr pntr, Buffer *mBuf);





extern S16 cmUnpkCztProtIE_Field_ResetRqst_IEs ( CztProtIE_Field_ResetRqst_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtIE_Cont_ResetRqst_IEs ( CztProtIE_Cont_ResetRqst_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztResetRqst ( CztResetRqst *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ValueResetResp_IEsCls ( Czt_ValueResetResp_IEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtIE_Field_ResetResp_IEs ( CztProtIE_Field_ResetResp_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtIE_Cont_ResetResp_IEs ( CztProtIE_Cont_ResetResp_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztResetResp ( CztResetResp *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ValueX2SetupRqst_IEsCls ( Czt_ValueX2SetupRqst_IEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtIE_Field_X2SetupRqst_IEs ( CztProtIE_Field_X2SetupRqst_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtIE_Cont_X2SetupRqst_IEs ( CztProtIE_Cont_X2SetupRqst_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztX2SetupRqst ( CztX2SetupRqst *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ValueX2SetupResp_IEsCls ( Czt_ValueX2SetupResp_IEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtIE_Field_X2SetupResp_IEs ( CztProtIE_Field_X2SetupResp_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtIE_Cont_X2SetupResp_IEs ( CztProtIE_Cont_X2SetupResp_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztX2SetupResp ( CztX2SetupResp *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ValueX2SetupFail_IEsCls ( Czt_ValueX2SetupFail_IEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtIE_Field_X2SetupFail_IEs ( CztProtIE_Field_X2SetupFail_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtIE_Cont_X2SetupFail_IEs ( CztProtIE_Cont_X2SetupFail_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztX2SetupFail ( CztX2SetupFail *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnCellInform_Item_ExtIEsCls ( Czt_ExtnCellInform_Item_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_CellInform_Item_ExtIEs ( CztProtExtnField_CellInform_Item_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_CellInform_Item_ExtIEs ( CztProtExtnCont_CellInform_Item_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztCellInform_Item ( CztCellInform_Item *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ValueCellInform_ItemIEsCls ( Czt_ValueCellInform_ItemIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtIE_Field_CellInform_ItemIEs ( CztProtIE_Field_CellInform_ItemIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztCellInform_Lst ( CztCellInform_Lst *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ValueLoadInform_IEsCls ( Czt_ValueLoadInform_IEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtIE_Field_LoadInform_IEs ( CztProtIE_Field_LoadInform_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtIE_Cont_LoadInform_IEs ( CztProtIE_Cont_LoadInform_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztLoadInform ( CztLoadInform *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnSrvdCellsToMdfy_Item_ExtIEsCls ( Czt_ExtnSrvdCellsToMdfy_Item_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_SrvdCellsToMdfy_Item_ExtIEs ( CztProtExtnField_SrvdCellsToMdfy_Item_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_SrvdCellsToMdfy_Item_ExtIEs ( CztProtExtnCont_SrvdCellsToMdfy_Item_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztSrvdCellsToMdfy_Item ( CztSrvdCellsToMdfy_Item *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztSrvdCellsToMdfy ( CztSrvdCellsToMdfy *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztOld_ECGIs ( CztOld_ECGIs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ValueENBConfigUpd_IEsCls ( Czt_ValueENBConfigUpd_IEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtIE_Field_ENBConfigUpd_IEs ( CztProtIE_Field_ENBConfigUpd_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtIE_Cont_ENBConfigUpd_IEs ( CztProtIE_Cont_ENBConfigUpd_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztENBConfigUpd ( CztENBConfigUpd *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ValueENBConfigUpdAckg_IEsCls ( Czt_ValueENBConfigUpdAckg_IEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtIE_Field_ENBConfigUpdAckg_IEs ( CztProtIE_Field_ENBConfigUpdAckg_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtIE_Cont_ENBConfigUpdAckg_IEs ( CztProtIE_Cont_ENBConfigUpdAckg_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztENBConfigUpdAckg ( CztENBConfigUpdAckg *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ValueENBConfigUpdFail_IEsCls ( Czt_ValueENBConfigUpdFail_IEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtIE_Field_ENBConfigUpdFail_IEs ( CztProtIE_Field_ENBConfigUpdFail_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtIE_Cont_ENBConfigUpdFail_IEs ( CztProtIE_Cont_ENBConfigUpdFail_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztENBConfigUpdFail ( CztENBConfigUpdFail *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnCellToReport_Item_ExtIEsCls ( Czt_ExtnCellToReport_Item_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_CellToReport_Item_ExtIEs ( CztProtExtnField_CellToReport_Item_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_CellToReport_Item_ExtIEs ( CztProtExtnCont_CellToReport_Item_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztCellToReport_Item ( CztCellToReport_Item *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ValueCellToReport_ItemIEsCls ( Czt_ValueCellToReport_ItemIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtIE_Field_CellToReport_ItemIEs ( CztProtIE_Field_CellToReport_ItemIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztCellToReport_Lst ( CztCellToReport_Lst *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ValueResStatusRqst_IEsCls ( Czt_ValueResStatusRqst_IEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtIE_Field_ResStatusRqst_IEs ( CztProtIE_Field_ResStatusRqst_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtIE_Cont_ResStatusRqst_IEs ( CztProtIE_Cont_ResStatusRqst_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztResStatusRqst ( CztResStatusRqst *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ValueResStatusResp_IEsCls ( Czt_ValueResStatusResp_IEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtIE_Field_ResStatusResp_IEs ( CztProtIE_Field_ResStatusResp_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtIE_Cont_ResStatusResp_IEs ( CztProtIE_Cont_ResStatusResp_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztResStatusResp ( CztResStatusResp *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ValueResStatusFail_IEsCls ( Czt_ValueResStatusFail_IEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtIE_Field_ResStatusFail_IEs ( CztProtIE_Field_ResStatusFail_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtIE_Cont_ResStatusFail_IEs ( CztProtIE_Cont_ResStatusFail_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztResStatusFail ( CztResStatusFail *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnCellMeasurementResult_Item_ExtIEsCls ( Czt_ExtnCellMeasurementResult_Item_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_CellMeasurementResult_Item_ExtIEs ( CztProtExtnField_CellMeasurementResult_Item_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_CellMeasurementResult_Item_ExtIEs ( CztProtExtnCont_CellMeasurementResult_Item_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztCellMeasurementResult_Item ( CztCellMeasurementResult_Item *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ValueCellMeasurementResult_ItemIEsCls ( Czt_ValueCellMeasurementResult_ItemIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtIE_Field_CellMeasurementResult_ItemIEs ( CztProtIE_Field_CellMeasurementResult_ItemIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztCellMeasurementResult_Lst ( CztCellMeasurementResult_Lst *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ValueResStatusUpd_IEsCls ( Czt_ValueResStatusUpd_IEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtIE_Field_ResStatusUpd_IEs ( CztProtIE_Field_ResStatusUpd_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtIE_Cont_ResStatusUpd_IEs ( CztProtIE_Cont_ResStatusUpd_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztResStatusUpd ( CztResStatusUpd *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ValuePrivMsg_IEsCls ( Czt_ValuePrivMsg_IEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztPrivIE_Field_PrivMsg_IEs ( CztPrivIE_Field_PrivMsg_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztPrivIE_Cont_PrivMsg_IEs ( CztPrivIE_Cont_PrivMsg_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztPrivMsg ( CztPrivMsg *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ValueMobilityChangeRqst_IEsCls ( Czt_ValueMobilityChangeRqst_IEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtIE_Field_MobilityChangeRqst_IEs ( CztProtIE_Field_MobilityChangeRqst_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtIE_Cont_MobilityChangeRqst_IEs ( CztProtIE_Cont_MobilityChangeRqst_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztMobilityChangeRqst ( CztMobilityChangeRqst *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ValueMobilityChangeAckg_IEsCls ( Czt_ValueMobilityChangeAckg_IEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtIE_Field_MobilityChangeAckg_IEs ( CztProtIE_Field_MobilityChangeAckg_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtIE_Cont_MobilityChangeAckg_IEs ( CztProtIE_Cont_MobilityChangeAckg_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztMobilityChangeAckg ( CztMobilityChangeAckg *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ValueMobilityChangeFail_IEsCls ( Czt_ValueMobilityChangeFail_IEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtIE_Field_MobilityChangeFail_IEs ( CztProtIE_Field_MobilityChangeFail_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtIE_Cont_MobilityChangeFail_IEs ( CztProtIE_Cont_MobilityChangeFail_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztMobilityChangeFail ( CztMobilityChangeFail *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ValueRLFInd_IEsCls ( Czt_ValueRLFInd_IEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtIE_Field_RLFInd_IEs ( CztProtIE_Field_RLFInd_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtIE_Cont_RLFInd_IEs ( CztProtIE_Cont_RLFInd_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztRLFInd ( CztRLFInd *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnSrvdCellsToActivate_Item_ExtIEsCls ( Czt_ExtnSrvdCellsToActivate_Item_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_SrvdCellsToActivate_Item_ExtIEs ( CztProtExtnField_SrvdCellsToActivate_Item_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_SrvdCellsToActivate_Item_ExtIEs ( CztProtExtnCont_SrvdCellsToActivate_Item_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztSrvdCellsToActivate_Item ( CztSrvdCellsToActivate_Item *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztSrvdCellsToActivate ( CztSrvdCellsToActivate *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ValueCellActvnRqst_IEsCls ( Czt_ValueCellActvnRqst_IEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtIE_Field_CellActvnRqst_IEs ( CztProtIE_Field_CellActvnRqst_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtIE_Cont_CellActvnRqst_IEs ( CztProtIE_Cont_CellActvnRqst_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztCellActvnRqst ( CztCellActvnRqst *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ExtnActivatedCellLst_Item_ExtIEsCls ( Czt_ExtnActivatedCellLst_Item_ExtIEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtExtnField_ActivatedCellLst_Item_ExtIEs ( CztProtExtnField_ActivatedCellLst_Item_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtExtnCont_ActivatedCellLst_Item_ExtIEs ( CztProtExtnCont_ActivatedCellLst_Item_ExtIEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztActivatedCellLst_Item ( CztActivatedCellLst_Item *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztActivatedCellLst ( CztActivatedCellLst *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ValueCellActvnResp_IEsCls ( Czt_ValueCellActvnResp_IEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtIE_Field_CellActvnResp_IEs ( CztProtIE_Field_CellActvnResp_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtIE_Cont_CellActvnResp_IEs ( CztProtIE_Cont_CellActvnResp_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztCellActvnResp ( CztCellActvnResp *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_ValueCellActvnFail_IEsCls ( Czt_ValueCellActvnFail_IEsCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztProtIE_Field_CellActvnFail_IEs ( CztProtIE_Field_CellActvnFail_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztProtIE_Cont_CellActvnFail_IEs ( CztProtIE_Cont_CellActvnFail_IEs *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztCellActvnFail ( CztCellActvnFail *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_InitiatingMsgCls ( Czt_InitiatingMsgCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztInitiatingMsg ( CztInitiatingMsg *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_SuccessfulOutcomeCls ( Czt_SuccessfulOutcomeCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztSuccessfulOutcome ( CztSuccessfulOutcome *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCzt_UnsuccessfulOutcomeCls ( Czt_UnsuccessfulOutcomeCls *param, U32 val, Ptr pntr, Buffer *mBuf );





extern S16 cmUnpkCztUnsuccessfulOutcome ( CztUnsuccessfulOutcome *param, Ptr pntr, Buffer *mBuf );




extern S16 cmUnpkCztX2AP_PDU ( CztX2AP_PDU *param, Ptr pntr, Buffer *mBuf );
# 126 "../..//cm/czt.x" 2




typedef U16 CztStrmId;
typedef U16 CztPort;






typedef struct cztNetAddrLst
{
   U8 nmb;
   CmNetAddr nAddr[5];
}CztNetAddrLst;





typedef struct cztReqStatus
{
   U8 status;



   U8 cause;
}CztReqStatus;





typedef struct cztEvnt
{
   CmMemListCp memCp;
   U32 peerId;
   CztX2AP_PDU pdu;
}CztEvnt;
# 177 "../..//cm/czt.x"
typedef struct cztStaInd
{
   U32 peerId;
   U8 type;
   U8 status;
   U8 reason;
   U16 oldUEX2APId;
}CztStaInd;
# 199 "../..//cm/czt.x"
typedef CztStaInd CztRlsCfm;




typedef struct cztUeInfo
{
   U16 oldUEX2APId;
   U16 newUEX2APId;
}CztUeInfo;





typedef struct cztRsrcProcInfo
{
   U16 eNb1MeasId;
   U16 eNb2MeasId;
}CztRsrcProcInfo;
# 230 "../..//cm/czt.x"
typedef struct cztLclErrInd
{
   U32 peerId;

   U8 causeType;
   U8 causeValue;
   U8 msgType;

   union
   {
      CztUeInfo ueInfo;
      CztRsrcProcInfo rsrcInfo;

   }u;
   Bool evntPres;



   CztEvnt *event;





   Buffer *rcvBuf;



}CztLclErrInd;
# 276 "../..//cm/czt.x"
typedef struct cztReTxInfo
{
   U32 peerId;

   U8 msgType;
   union
   {
      U16 eNb1MeasId;

   }u;
}CztReTxInfo;
# 302 "../..//cm/czt.x"
typedef struct cztRlsReq
{
   U32 peerId;

   U8 idType;



   U8 rlsType;
   union
   {
      U16 eNb1MeasId;

      U16 oldUEX2APId;
   }u;
}CztRlsReq;
# 326 "../..//cm/czt.x"
typedef struct cztPeerAssocInd
{
   CztNetAddrLst dstAddrLst;
   CztPort dstPort;
} CztPeerAssocInd;
# 340 "../..//cm/czt.x"
typedef struct cztPeerAssocRsp
{
   U32 peerId;
   CztNetAddrLst dstAddrLst;
   CztPort dstPort;
   CmNetAddr priDstAddr;
   CztStrmId globalStreamId;
   CztStrmId locOutStrms;
   CztReqStatus status;



} CztPeerAssocRsp;






typedef struct cztAudPeer
{
   U32 peerId;
   State peerState;
}CztAudPeer;
# 375 "../..//cm/czt.x"
typedef struct cztAudEvnt
{
   U8 type;
   union
   {
      CztAudPeer audPeer;
   }u;
   CztReqStatus status;
}CztAudEvnt;


typedef S16 (*CztBndReq) ( Pst * pst, SuId suId, SpId spId);




typedef S16 (*CztUbndReq) ( Pst * pst, SpId spId, Reason reason);




typedef S16 (*CztBndCfm) ( Pst * pst, SuId suId, U8 status);




typedef S16 (*CztGpReq) ( Pst * pst, SpId spId, CztEvnt * gpReq);




typedef S16 (*CztGpInd) ( Pst * pst, SuId suId, CztEvnt * gpInd);




typedef S16 (*CztGpRsp) ( Pst * pst, SpId spId, CztEvnt * gpRsp);




typedef S16 (*CztGpCfm) ( Pst * pst, SuId suId, CztEvnt * gpCfm);




typedef S16 (*CztGpRetxReq) ( Pst * pst, SpId spId, CztReTxInfo *reTxInfo);




typedef S16 (*CztBmpReq) ( Pst * pst, SpId spId, CztEvnt * bmpEvnt);




typedef S16 (*CztBmpInd) ( Pst * pst, SuId suId, CztEvnt * bmpEvnt);




typedef S16 (*CztBmpRsp) ( Pst * pst, SpId spId, CztEvnt * bmpRsp);




typedef S16 (*CztBmpCfm) ( Pst * pst, SuId suId, CztEvnt * bmpCfm);




typedef S16 (*CztGpErrReq) ( Pst * pst, SpId spId, CztEvnt * gpErrReq);




typedef S16 (*CztGpErrInd) ( Pst * pst, SuId suId, CztEvnt * gpErrInd);




typedef S16 (*CztLclErrorInd) ( Pst * pst, SuId suId, CztLclErrInd * cztLclErrInd);




typedef S16 (*CztRelReq) ( Pst * pst, SpId spId, CztRlsReq *rlsReq);




typedef S16 (*CztRelCfm) ( Pst * pst, SuId suId, CztRlsCfm * rlsCfm);




typedef S16 (*CztStatusInd) ( Pst * pst, SuId suId, CztStaInd * cztSta);




typedef S16 (*CztDynamPeerAssocInd) ( Pst * pst, SuId suId, CztPeerAssocInd * peerAssocInd);




typedef S16 (*CztDynamPeerAssocRsp) ( Pst * pst, SuId suId, CztPeerAssocRsp * peerAssocRsp);




typedef S16 (*CztAudReq) ( Pst *pst, SpId spId, CztAudEvnt *audEvnt );





typedef S16 (*CztAudCfm) ( Pst *pst, SuId suId, CztAudEvnt *audEvnt );
# 533 "../..//cm/czt.x"
extern S16 CzUiCztBndReq ( Pst *pst, SuId suId, SpId spId );
# 560 "../..//cm/czt.x"
extern S16 CzUiCztBndCfm ( Pst *pst, SuId suId, U8 status );
# 583 "../..//cm/czt.x"
extern S16 CzUiCztUbndReq ( Pst *pst, SpId spId, Reason reason );
# 614 "../..//cm/czt.x"
extern S16 CzUiCztGpReq ( Pst *pst, SpId spId, CztEvnt *gpReq );
# 648 "../..//cm/czt.x"
extern S16 CzUiCztGpInd ( Pst *pst, SuId suId, CztEvnt *gpInd );
# 682 "../..//cm/czt.x"
extern S16 CzUiCztGpRsp ( Pst *pst, SpId spId, CztEvnt *gpRsp );
# 715 "../..//cm/czt.x"
extern S16 CzUiCztGpCfm ( Pst *pst, SuId suId, CztEvnt *gpCfm );
# 734 "../..//cm/czt.x"
extern S16 CzUiCztGpRetxReq ( Pst *pst, SpId spId, CztReTxInfo *reTxInfo);
# 761 "../..//cm/czt.x"
extern S16 CzUiCztBmpReq ( Pst *pst, SpId spId, CztEvnt *bmpEvnt );
# 789 "../..//cm/czt.x"
extern S16 CzUiCztBmpInd ( Pst *pst, SuId suId, CztEvnt *bmpEvnt );
# 813 "../..//cm/czt.x"
extern S16 CzUiCztBmpRsp ( Pst *pst, SpId spId, CztEvnt *bmpRsp );
# 836 "../..//cm/czt.x"
extern S16 CzUiCztBmpCfm ( Pst *pst, SuId suId, CztEvnt *bmpCfm );
# 857 "../..//cm/czt.x"
extern S16 CzUiCztGpErrReq ( Pst *pst, SpId spId, CztEvnt *gpErrReq );
# 877 "../..//cm/czt.x"
extern S16 CzUiCztGpErrInd ( Pst *pst, SuId suId, CztEvnt *gpErrInd );
# 900 "../..//cm/czt.x"
extern S16 CzUiCztLclErrorInd ( Pst *pst, SuId suId, CztLclErrInd *cztLclErrInd );
# 921 "../..//cm/czt.x"
extern S16 CzUiCztRelReq ( Pst *pst, SpId spId, CztRlsReq *rlsReq );
# 944 "../..//cm/czt.x"
extern S16 CzUiCztRelCfm ( Pst *pst, SuId suId, CztRlsCfm *rlsCfm );
# 975 "../..//cm/czt.x"
extern S16 CzUiCztStaInd ( Pst *pst, SuId suId, CztStaInd *cztSta );
# 995 "../..//cm/czt.x"
extern S16 CzUiCztDynamPeerAssocInd ( Pst *pst, SuId suId, CztPeerAssocInd *peerAssocInd );
# 1018 "../..//cm/czt.x"
extern S16 CzUiCztDynamPeerAssocRsp ( Pst *pst, SuId suId, CztPeerAssocRsp *peerAssocRsp );
# 1040 "../..//cm/czt.x"
extern S16 CzUiCztAudReq (Pst *pst, SpId spId, CztAudEvnt *audEvnt);
# 1059 "../..//cm/czt.x"
extern S16 CzUiCztAudCfm (Pst *pst, SuId suId, CztAudEvnt *audEvnt);
# 1068 "../..//cm/czt.x"
extern S16 RsLiCztBndReq ( Pst * pst, SuId suId, SpId spId );





extern S16 RsLiCztUbndReq ( Pst * pst, SpId spId, Reason reason );





extern S16 RsLiCztBndCfm ( Pst * pst, SuId suId, U8 status );





extern S16 RsLiCztGpReq ( Pst * pst, SpId spId, CztEvnt * gpReq );





extern S16 RsLiCztGpInd ( Pst * pst, SuId suId, CztEvnt * gpInd );





extern S16 RsLiCztGpRsp ( Pst * pst, SpId spId, CztEvnt * gpRsp );





extern S16 RsLiCztGpCfm ( Pst * pst, SuId suId, CztEvnt * gpCfm );





extern S16 RsLiCztGpRetxReq ( Pst * pst, SpId spId, CztReTxInfo *retxInfo );





extern S16 RsLiCztBmpReq ( Pst * pst, SpId spId, CztEvnt * bmpEvnt );





extern S16 RsLiCztBmpInd ( Pst * pst, SuId suId, CztEvnt * bmpEvnt );





extern S16 RsLiCztBmpRsp ( Pst * pst, SpId spId, CztEvnt * bmpRsp );





extern S16 RsLiCztBmpCfm ( Pst * pst, SuId suId, CztEvnt * bmpCfm );





extern S16 RsLiCztGpErrReq ( Pst * pst, SpId spId, CztEvnt * gpErrReq );





extern S16 RsLiCztGpErrInd ( Pst * pst, SuId suId, CztEvnt * gpErrInd );





extern S16 RsLiCztLclErrorInd ( Pst * pst, SuId suId, CztLclErrInd * cztLclErrInd );





extern S16 RsLiCztRelReq ( Pst * pst, SpId spId, CztRlsReq *rlsReq );





extern S16 RsLiCztRelCfm ( Pst * pst, SuId suId, CztRlsCfm * rlsCfm );





extern S16 RsLiCztStatusInd ( Pst * pst, SuId suId, CztStaInd * cztSta );






extern S16 RsLiCztDynamPeerAssocInd ( Pst * pst, SuId suId, CztPeerAssocInd * peerAssocInd );





extern S16 RsLiCztDynamPeerAssocRsp ( Pst * pst, SuId suId, CztPeerAssocRsp * peerAssocRsp );





extern S16 RsLiCztAudReq ( Pst * pst, SpId spId, CztAudEvnt *audEvnt );





extern S16 RsLiCztAudCfm ( Pst * pst, SuId suId, CztAudEvnt *audEvnt );
# 1206 "../..//cm/czt.x"
extern S16 cmPkCztBndReq ( Pst * pst, SuId suId, SpId spId );





extern S16 cmUnpkCztBndReq ( CztBndReq func, Pst * pst, Buffer *mBuf );





extern S16 cmPkCztUbndReq ( Pst * pst, SpId spId, Reason reason );





extern S16 cmUnpkCztUbndReq ( CztUbndReq func, Pst * pst, Buffer *mBuf );





extern S16 cmPkCztBndCfm ( Pst * pst, SuId suId, U8 status );





extern S16 cmUnpkCztBndCfm ( CztBndCfm func, Pst * pst, Buffer *mBuf );





extern S16 cmPkCztGpReq ( Pst * pst, SpId spId, CztEvnt * gpReq );





extern S16 cmUnpkCztGpReq ( CztGpReq func, Pst * pst, Buffer *mBuf );





extern S16 cmPkCztGpInd ( Pst * pst, SuId suId, CztEvnt * gpInd );





extern S16 cmUnpkCztGpInd ( CztGpInd func, Pst * pst, Buffer *mBuf );





extern S16 cmPkCztGpRsp ( Pst * pst, SpId spId, CztEvnt * gpRsp );





extern S16 cmUnpkCztGpRsp ( CztGpRsp func, Pst * pst, Buffer *mBuf );





extern S16 cmPkCztGpCfm ( Pst * pst, SuId suId, CztEvnt * gpCfm );





extern S16 cmUnpkCztGpCfm ( CztGpCfm func, Pst * pst, Buffer *mBuf );





extern S16 cmPkCztGpRetxReq ( Pst * pst, SpId spId, CztReTxInfo *retxInfo );





extern S16 cmUnpkCztGpRetxReq ( CztGpRetxReq func, Pst * pst, Buffer *mBuf );





extern S16 cmPkCztBmpReq ( Pst * pst, SpId spId, CztEvnt * bmpEvnt );





extern S16 cmUnpkCztBmpReq ( CztBmpReq func, Pst * pst, Buffer *mBuf );





extern S16 cmPkCztBmpInd ( Pst * pst, SuId suId, CztEvnt * bmpEvnt );





extern S16 cmUnpkCztBmpInd ( CztBmpInd func, Pst * pst, Buffer *mBuf );





extern S16 cmPkCztBmpRsp ( Pst * pst, SpId spId, CztEvnt * bmpRsp );





extern S16 cmUnpkCztBmpRsp ( CztBmpRsp func, Pst * pst, Buffer *mBuf );





extern S16 cmPkCztBmpCfm ( Pst * pst, SuId suId, CztEvnt * bmpCfm );





extern S16 cmUnpkCztBmpCfm ( CztBmpCfm func, Pst * pst, Buffer *mBuf );





extern S16 cmPkCztGpErrReq ( Pst * pst, SpId spId, CztEvnt * gpErrReq );





extern S16 cmUnpkCztGpErrReq ( CztGpErrReq func, Pst * pst, Buffer *mBuf );





extern S16 cmPkCztGpErrInd ( Pst * pst, SuId suId, CztEvnt * gpErrInd );





extern S16 cmUnpkCztGpErrInd ( CztGpErrInd func, Pst * pst, Buffer *mBuf );





extern S16 cmPkCztLclErrorInd ( Pst * pst, SuId suId, CztLclErrInd * cztLclErrInd );





extern S16 cmUnpkCztLclErrorInd ( CztLclErrorInd func, Pst * pst, Buffer *mBuf );





extern S16 cmPkCztRelReq ( Pst * pst, SpId spId, CztRlsReq *rlsReq );





extern S16 cmUnpkCztRelReq ( CztRelReq func, Pst * pst, Buffer *mBuf );





extern S16 cmPkCztRlsReq
( CztRlsReq *param, Buffer *mBuf );



extern S16 cmUnpkCztRlsReq
( CztRlsReq *param, Buffer *mBuf );




extern S16 cmPkCztRelCfm ( Pst * pst, SuId suId, CztRlsCfm * rlsCfm );





extern S16 cmUnpkCztRelCfm ( CztRelCfm func, Pst * pst, Buffer *mBuf );





extern S16 cmPkCztStatusInd ( Pst * pst, SuId suId, CztStaInd * cztSta );





extern S16 cmUnpkCztStatusInd ( CztStatusInd func, Pst * pst, Buffer *mBuf );





extern S16 cmPkCztDynamPeerAssocInd ( Pst * pst, SuId suId, CztPeerAssocInd * peerAssocInd );





extern S16 cmUnpkCztDynamPeerAssocInd ( CztDynamPeerAssocInd func, Pst * pst, Buffer *mBuf );





extern S16 cmPkCztDynamPeerAssocRsp ( Pst * pst, SuId suId, CztPeerAssocRsp * peerAssocRsp );





extern S16 cmUnpkCztDynamPeerAssocRsp ( CztDynamPeerAssocRsp func, Pst * pst, Buffer *mBuf );






extern S16 cmPkCztNetAddrLst ( CztNetAddrLst *param, Buffer *mBuf );



extern S16 cmUnpkCztNetAddrLst ( CztNetAddrLst *param, Buffer *mBuf );





extern S16 cmPkCztReqStatus ( CztReqStatus *param, Buffer *mBuf );



extern S16 cmUnpkCztReqStatus ( CztReqStatus *param, Buffer *mBuf );



extern S16 cmPkCztEvnt ( CztEvnt *param, Buffer *mBuf );



extern S16 cmUnpkCztEvnt ( CztEvnt *param, Buffer *mBuf );



extern S16 cmPkCztStaInd ( CztStaInd *param, Buffer *mBuf );



extern S16 cmUnpkCztStaInd ( CztStaInd *param, Buffer *mBuf );



extern S16 cmPkCztUeInfo ( CztUeInfo *param, Buffer *mBuf );



extern S16 cmUnpkCztUeInfo ( CztUeInfo *param, Buffer *mBuf );



extern S16 cmPkRsrcProcInfo ( CztRsrcProcInfo *param, Buffer *mBuf );



extern S16 cmUnpkRsrcProcInfo ( CztRsrcProcInfo *param, Buffer *mBuf );



extern S16 cmPkCztLclErrInd ( CztLclErrInd *param, Buffer *mBuf );




extern S16 cmPkCztReTxInfo
( CztReTxInfo *param, Buffer *mBuf );



extern S16 cmUnpkCztReTxInfo
( CztReTxInfo *param, Buffer *mBuf );




extern S16 cmUnpkCztLclErrInd ( CztLclErrInd *param, Buffer *mBuf );





extern S16 cmPkCztPeerAssocInd ( CztPeerAssocInd *param, Buffer *mBuf );



extern S16 cmUnpkCztPeerAssocInd ( CztPeerAssocInd *param, Buffer *mBuf );



extern S16 cmPkCztPeerAssocRsp ( CztPeerAssocRsp *param, Buffer *mBuf );



extern S16 cmUnpkCztPeerAssocRsp ( CztPeerAssocRsp *param, Buffer *mBuf );




extern S16 cmPkCztAudReq (Pst *pst, SpId spId, CztAudEvnt *audEvnt);
extern S16 cmPkCztAudCfm (Pst *pst, SuId suId, CztAudEvnt *audEvnt);
extern S16 cmPkCztAudEvnt ( CztAudEvnt *audEvnt, Buffer *mBuf);
extern S16 cmUnpkCztAudEvnt ( CztAudEvnt *audEvnt, Buffer *mBuf);
extern S16 cmUnpkCztAudReq (CztAudReq func, Pst *pst, Buffer *mBuf );



extern S16 cmUnpkCztAudCfm (CztAudCfm func, Pst *pst, Buffer *mBuf);
# 156 "../..//enbapp/src/wr.h" 2
# 1 "../..//cm/sct.x" 1
# 91 "../..//cm/sct.x"
#define __SCTX__ 
# 117 "../..//cm/sct.x"
typedef U16 SctStrmId;
typedef U16 SctPort;
typedef U32 SctTSN;
typedef U16 SctRTT;
typedef U16 SctStatus;
typedef U16 SctResult;
typedef U16 SctCause;
typedef S32 SctWinSize;
typedef TknStr64 SctVSInfo;





typedef struct _sctNetAddrLst
{
   U8 nmb;
   CmNetAddr nAddr[5];
} SctNetAddrLst;


typedef struct _sctRtrvInfo
{
   U32 nmbUnsentDgms;
   U32 nmbUnackDgms;
   U32 nmbUndelDgms;
   SctTSN lastAckTsn;
   SctTSN lastSentTsn;
} SctRtrvInfo;


typedef struct _sctDatIndType
{
   U8 type;
   SctTSN tsn;
   U16 seqNum;
   Bool last;
} SctDatIndType;


typedef struct _SctInitParams
{
   U32 iTag;
   U32 a_rwnd;
   SctStrmId outStrms;
   SctStrmId inStrms;
   SctTSN iTsn;
   U32 cookieLife;
   SctPort peerPort;
   SctPort localPort;
   SctNetAddrLst peerAddrLst;
   SctNetAddrLst localAddrLst;
   U16 supAddress;
   U8 hstNameLen;
   U8 hstName[255];
# 183 "../..//cm/sct.x"
} SctInitParams;


typedef struct _SctCookieParams
{
   UConnId spAssocId;
   UConnId suAssocId;
   SctPort peerPort;
   SctNetAddrLst peerAddrLst;





} SctCookieParams;


typedef struct _SctAssocIndParams
{
   U8 type;
   union
   {
      SctInitParams initParams;
      SctCookieParams cookieParams;
   } t;




} SctAssocIndParams;


typedef struct _sctAssocInfo
{
   SctWinSize rwnd;
   U8 connSta;
   CmNetAddr priDstAddr;
   SctPort dstPort;
   SctNetAddrLst dstAddrLst;
} SctAssocInfo;


typedef struct _sctAddrInfo
{
   U16 rtt;
   U32 cwnd;
   U32 rto;
   Bool active;
} SctAddrInfo;


typedef struct _sctStaInfo
{
   U8 staType;
   union
   {
      SctAssocInfo assocInfo;
      SctAddrInfo addrInfo;
      SctRtrvInfo rtrvInfo;
   } u;
} SctStaInfo;
# 255 "../..//cm/sct.x"
typedef S16 (*SctBndReq) (Pst *pst, SuId suId, SpId spId);



typedef S16 (*SctBndCfm) (Pst *pst, SuId suId, SctResult result);
# 270 "../..//cm/sct.x"
typedef S16 (*SctEndpOpenReq) (Pst *pst, SpId spId, UConnId suEndpId, SctPort port, CmNetAddr *intfNAddr);






typedef S16 (*SctEndpOpenCfm) (Pst *pst, SuId suId, UConnId suEndpId, UConnId spEndpId, SctResult result, SctCause cause);






typedef S16 (*SctEndpCloseReq) (Pst *pst, SpId spId, UConnId endpId, U8 endpIdType);




typedef S16 (*SctEndpCloseCfm) (Pst *pst, SuId suId, UConnId suEndpId, SctResult result, SctCause cause);
# 308 "../..//cm/sct.x"
typedef S16 (*SctAssocReq) (Pst *pst, SpId spId, UConnId spEndpId, UConnId suAssocId, CmNetAddr *priDstNAddr, SctPort dstPort, SctStrmId outStrms, SctNetAddrLst *dstNAddrLst, SctNetAddrLst *srcNAddrLst, Buffer *vsInfo);
# 320 "../..//cm/sct.x"
typedef S16 (*SctAssocInd) (Pst *pst, SuId suId, UConnId suEndpId, SctAssocIndParams *assocParams, Buffer *vsInfo);
# 335 "../..//cm/sct.x"
typedef S16 (*SctAssocRsp) (Pst *pst, SpId spId, UConnId spEndpId, SctAssocIndParams *assocParams, SctResult result, Buffer *vsInfo);
# 354 "../..//cm/sct.x"
typedef S16 (*SctAssocCfm) (Pst *pst, SuId suId, UConnId suAssocId, UConnId spAssocId, SctNetAddrLst *dstNAddrLst, SctPort dstPort, SctStrmId outStrms, Buffer *vsInfo);
# 364 "../..//cm/sct.x"
typedef S16 (*SctTermReq) (Pst *pst, SpId spId, UConnId assocId, U8 assocIdType, Bool abrtFlg);





typedef S16 (*SctTermInd) (Pst *pst, SuId suId, UConnId assocId, U8 assocIdType, SctStatus status, SctCause cause, SctRtrvInfo *rtrvInfo);







typedef S16 (*SctTermCfm) (Pst *pst, SuId suId, UConnId suAssocId, SctResult result, SctCause cause);





typedef S16 (*SctSetPriReq) (Pst *pst, SpId spId, UConnId spAssocId, CmNetAddr *dstNAddr);




typedef S16 (*SctSetPriCfm) (Pst *pst, SuId suId, UConnId suAssocId, SctResult result, SctCause cause);





typedef S16 (*SctHBeatReq) (Pst *pst, SpId spId, UConnId spAssocId, CmNetAddr *dstNAddr, U16 intervalTime, SctStatus status);






typedef S16 (*SctHBeatCfm) (Pst *pst, SuId suId, UConnId suAssocId, CmNetAddr *dstNAddr, SctStatus status, SctResult result, SctCause cause);







typedef S16 (*SctDatReq) (Pst *pst, SpId spId, UConnId spAssocId, CmNetAddr *dstNAddr, SctStrmId strmId, Bool unorderFlg, Bool nobundleFlg, U16 lifeTime, U32 protId, Buffer *mBuf);
# 421 "../..//cm/sct.x"
typedef S16 (*SctDatInd) (Pst *pst, SuId suId, UConnId suAssocId, SctStrmId strmId, SctDatIndType *indType, U32 protId, Buffer *mBuf);







typedef S16 (*SctStaReq) (Pst *pst, SpId spId, UConnId spAssocId, CmNetAddr *dstNAddr, U8 staType);





typedef S16 (*SctStaCfm) (Pst *pst, SuId suId, UConnId suAssocId, CmNetAddr *dstNAddr, SctResult result, SctCause cause, SctStaInfo *staInfo);
# 454 "../..//cm/sct.x"
typedef S16 (*SctStaInd) (Pst *pst, SuId suId, UConnId suAssocId, UConnId spAssocId, CmNetAddr *dstNAddr, SctStatus status, SctCause cause, Buffer *mBuf);
# 464 "../..//cm/sct.x"
typedef S16 (*SctFlcInd) (Pst *pst, SuId suId, UConnId suAssocId, Reason reason);
# 3973 "../..//cm/sct.x"
extern S16 SzLiSctBndReq (Pst *pst, SuId suId, SpId spId);



extern S16 SzLiSctBndCfm (Pst *pst, SuId suId, SctResult result);
# 3988 "../..//cm/sct.x"
extern S16 SzLiSctEndpOpenReq (Pst *pst, SpId spId, UConnId suEndpId, SctPort port, CmNetAddr *intfNAddr);






extern S16 SzLiSctEndpOpenCfm (Pst *pst, SuId suId, UConnId suEndpId, UConnId spEndpId, SctResult result, SctCause cause);






extern S16 SzLiSctEndpCloseReq (Pst *pst, SpId spId, UConnId endpId, U8 endpIdType);




extern S16 SzLiSctEndpCloseCfm (Pst *pst, SuId suId, UConnId suEndpId, SctResult result, SctCause cause);
# 4025 "../..//cm/sct.x"
extern S16 SzLiSctAssocReq (Pst *pst, SpId spId, UConnId spEndpId, UConnId suAssocId, CmNetAddr *priDstNAddr, SctPort dstPort, SctStrmId outStrms, SctNetAddrLst *dstNAddrLst, SctNetAddrLst *srcNAddrLst, Buffer *vsInfo);
# 4039 "../..//cm/sct.x"
extern S16 SzLiSctAssocInd (Pst *pst, SuId suId, UConnId suEndpId, SctAssocIndParams *assocParams, Buffer *vsInfo);
# 4053 "../..//cm/sct.x"
extern S16 SzLiSctAssocRsp (Pst *pst, SpId spId, UConnId spEndpId, SctAssocIndParams *assocIndParams, SctResult result, Buffer *vsInfo);
# 4072 "../..//cm/sct.x"
extern S16 SzLiSctAssocCfm (Pst *pst, SuId suId, UConnId suAssocId, UConnId spAssocId, SctNetAddrLst *dstNAddrLst, SctPort dstPort, SctStrmId outStrms, Buffer *vsInfo);
# 4082 "../..//cm/sct.x"
extern S16 SzLiSctTermReq (Pst *pst, SpId spId, UConnId assocId, U8 assocIdType, Bool abrtFlg);





extern S16 SzLiSctTermInd (Pst *pst, SuId suId, UConnId assocId, U8 assocIdType, SctStatus status, SctCause cause, SctRtrvInfo *rtrvInfo);







extern S16 SzLiSctTermCfm (Pst *pst, SuId suId, UConnId suAssocId, SctResult result, SctCause cause);
# 4129 "../..//cm/sct.x"
extern S16 SzLiSctStaReq (Pst *pst, SpId spId, UConnId spAssocId, CmNetAddr *dstNAddr, U8 staType );





extern S16 SzLiSctDatReq (Pst *pst, SpId spId, UConnId spAssocId, CmNetAddr *dstNAddr, SctStrmId strmId, Bool unorderFlg, Bool nobundleFlg, U16 lifeTime, U32 protId, Buffer *mBuf);
# 4146 "../..//cm/sct.x"
extern S16 SzLiSctDatInd (Pst *pst, SuId suId, UConnId suAssocId, SctStrmId strmId, SctDatIndType *indType, U32 protId, Buffer *mBuf);
# 4177 "../..//cm/sct.x"
extern S16 SzLiSctStaInd (Pst *pst, SuId suId, UConnId suAssocId, UConnId spAssocId, CmNetAddr *dstNAddr, SctStatus status, SctCause cause, Buffer *mBuf);
# 4187 "../..//cm/sct.x"
extern S16 SzLiSctFlcInd (Pst *pst, SuId suId, UConnId suAssocId, Reason reason);







extern S16 CzLiSctBndReq (Pst *pst, SuId suId, SpId spId);



extern S16 CzLiSctBndCfm (Pst *pst, SuId suId, SctResult result);
# 4210 "../..//cm/sct.x"
extern S16 CzLiSctEndpOpenReq (Pst *pst, SpId spId, UConnId suEndpId, SctPort port, CmNetAddr *intfNAddr);






extern S16 CzLiSctEndpOpenCfm (Pst *pst, SuId suId, UConnId suEndpId, UConnId spEndpId, SctResult result, SctCause cause);






extern S16 CzLiSctEndpCloseReq (Pst *pst, SpId spId, UConnId endpId, U8 endpIdType);




extern S16 CzLiSctEndpCloseCfm (Pst *pst, SuId suId, UConnId suEndpId, SctResult result, SctCause cause);
# 4247 "../..//cm/sct.x"
extern S16 CzLiSctAssocReq (Pst *pst, SpId spId, UConnId spEndpId, UConnId suAssocId, CmNetAddr *priDstNAddr, SctPort dstPort, SctStrmId outStrms, SctNetAddrLst *dstNAddrLst, SctNetAddrLst *srcNAddrLst, Buffer *vsInfo);
# 4261 "../..//cm/sct.x"
extern S16 CzLiSctAssocInd (Pst *pst, SuId suId, UConnId suEndpId, SctAssocIndParams *assocParams, Buffer *vsInfo);
# 4275 "../..//cm/sct.x"
extern S16 CzLiSctAssocRsp (Pst *pst, SpId spId, UConnId spEndpId, SctAssocIndParams *assocIndParams, SctResult result, Buffer *vsInfo);
# 4294 "../..//cm/sct.x"
extern S16 CzLiSctAssocCfm (Pst *pst, SuId suId, UConnId suAssocId, UConnId spAssocId, SctNetAddrLst *dstNAddrLst, SctPort dstPort, SctStrmId outStrms, Buffer *vsInfo);
# 4304 "../..//cm/sct.x"
extern S16 CzLiSctTermReq (Pst *pst, SpId spId, UConnId assocId, U8 assocIdType, Bool abrtFlg);





extern S16 CzLiSctTermInd (Pst *pst, SuId suId, UConnId assocId, U8 assocIdType, SctStatus status, SctCause cause, SctRtrvInfo *rtrvInfo);







extern S16 CzLiSctTermCfm (Pst *pst, SuId suId, UConnId suAssocId, SctResult result, SctCause cause);




extern S16 CzLiSctSetPriReq (Pst *pst, SpId spId, UConnId spAssocId, CmNetAddr *dstNAddr);




extern S16 CzLiSctSetPriCfm (Pst *pst, SuId suId, UConnId suAssocId, SctResult result, SctCause cause);





extern S16 CzLiSctHBeatReq (Pst *pst, SpId spId, UConnId spAssocId, CmNetAddr *dstNAddr, U16 intervalTime, SctStatus status);






extern S16 CzLiSctHBeatCfm (Pst *pst, SuId suId, UConnId suAssocId, CmNetAddr *dstNAddr, SctStatus status, SctResult result, SctCause cause);






extern S16 CzLiSctStaCfm (Pst *pst, SuId suId, UConnId suAssocId, CmNetAddr *dstNAddr, SctResult result, SctCause cause, SctStaInfo *staInfo);






extern S16 CzLiSctStaReq (Pst *pst, SpId spId, UConnId spAssocId, CmNetAddr *dstNAddr, U8 staType );





extern S16 CzLiSctDatReq (Pst *pst, SpId spId, UConnId spAssocId, CmNetAddr *dstNAddr, SctStrmId strmId, Bool unorderFlg, Bool nobundleFlg, U16 lifeTime, U32 protId, Buffer *mBuf);
# 4372 "../..//cm/sct.x"
extern S16 CzLiSctDatInd (Pst *pst, SuId suId, UConnId suAssocId, SctStrmId strmId, SctDatIndType *indType, U32 protId, Buffer *mBuf);
# 4392 "../..//cm/sct.x"
extern S16 CzLiSctStaInd (Pst *pst, SuId suId, UConnId suAssocId, UConnId spAssocId, CmNetAddr *dstNAddr, SctStatus status, SctCause cause, Buffer *mBuf);
# 4401 "../..//cm/sct.x"
extern S16 CzLiSctFlcInd (Pst *pst, SuId suId, UConnId suAssocId, Reason reason);
# 157 "../..//enbapp/src/wr.h" 2
# 1 "../..//cm/lrg.x" 1
# 108 "../..//cm/lrg.x"
#define __LRGX__ 
# 118 "../..//cm/lrg.x"
typedef struct rgGenCfg
{
   Pst lmPst;
   MemoryId mem;
   U8 tmrRes;
}RgGenCfg;




typedef struct rgUpSapCfg
{
   Selector selector;
   MemoryId mem;
   Priority prior;
   ProcId procId;
   Ent ent;
   Inst inst;
   Route route;
   SpId spId;
   SuId suId;
}RgUpSapCfg;




typedef struct rgLowSapCfg
{
   Selector selector;
   MemoryId mem;
   Priority prior;
   ProcId procId;
   Ent ent;
   Inst inst;
   Route route;
   SpId spId;
   SuId suId;
   TmrCfg bndTmr;
}RgLowSapCfg;



typedef struct rgAckNack
{
   U8 mcs;
   U16 numOfNacks;
   U16 numOfAcks;
} RgAckNack;

typedef struct rgSchNackAckStats
{
   RgAckNack dlCqiStat[15];
   RgAckNack ulCqiStat[15];
} RgSchNackAckStats;

typedef struct rgSchHqNumRetx
{
   U8 mcs;
   U16 numOfHQ_1;
   U16 numOfHQ_2;
   U16 numOfHQ_3;
   U16 numOfHQ_4;
   U32 totalTx;
} RgSchHqNumRetx;

typedef struct rgSchHqRetxStats
{
   RgSchHqNumRetx dlCqiStat[15];
   RgSchHqNumRetx ulCqiStat[15];
} RgSchHqRetxStats;

extern RgSchNackAckStats hqFailStats;
extern RgSchHqRetxStats hqRetxStats;





typedef struct rgGenSts
{
   U32 numHarqFail;
   U32 numUeCfg;
   U16 numCellCfg;

   RgSchNackAckStats nackAckStats;
   RgSchHqRetxStats hqRetxStats;

}RgGenSts;




typedef struct rgSapSts
{
   U32 numPduRcvd;

   U32 numPduTxmit;

   U32 numPduDrop;

}RgSapSts;

typedef struct rgSchInstCfg
{
   U8 instId;
   RgGenCfg genCfg;
   U8 numSaps;
   RgUpSapCfg rgrSap[2];
   RgLowSapCfg tfuSap[2];
} RgSchInstCfg;




typedef struct rgCfg
{
   union
   {
      RgGenCfg genCfg;

      RgUpSapCfg rguSap;
      RgUpSapCfg crgSap;
      RgLowSapCfg tfuSap;
      RgSchInstCfg schInstCfg;
   }s;
}RgCfg;




typedef struct rgSapSta
{
   U8 sapState;
}RgSapSta;




typedef struct rgSts
{
   DateTime dt;
   U8 sapInst;
   Action action;

   union
   {
      RgGenSts genSts;
      RgSapSts rguSts;
      RgSapSts crgSts;
      RgSapSts rgrSts;
      RgSapSts tfuSts;
   }s;
}RgSts;




typedef struct rgSsta
{
   DateTime dt;
   U8 sapInst;
   union
   {
      SystemId sysId;
      RgSapSta rguSapSta;
      RgSapSta crgSapSta;
      RgSapSta rgrSapSta;
      RgSapSta tfuSapSta;
   }s;
}RgSsta;




typedef struct rgUstaDgn
{
   U8 type;
   union
   {

      MemoryId mem;



   }u;
} RgUstaDgn;




typedef struct rgUsta
{
   CmAlarm cmAlarm;
   RgUstaDgn dgn;
}RgUsta;




typedef struct rgTrc
{
   DateTime dt;

   U8 evnt;



}RgTrc;




typedef struct rgDbgCntrl
{
   U32 dbgMask;





}RgDbgCntrl;




typedef struct rgSapCntrl
{
   SuId suId;
   SpId spId;
}RgSapCntrl;


typedef struct rgSchUlAllocCntrl
{
   U8 mcs;
   U16 numOfRb;
   U16 rbStart;
   Bool testStart;
   Bool enaLog;
   U16 logTime;
}RgSchUlAllocCntrl;





typedef struct rgCntrl
{
   DateTime dt;
   U8 action;
   U8 subAction;
   U8 instId;
   union
   {
      RgDbgCntrl rgDbgCntrl;

      S16 trcLen;




      RgSapCntrl rgSapCntrl;
      U32 logMask;

      RgSchUlAllocCntrl rgSchUlAllocCntrl;

   }s;
}RgCntrl;




typedef struct rgMngmt
{
   Header hdr;
   CmStatus cfm;
   union
   {
      RgCfg cfg;
      RgSts sts;
      RgSsta ssta;
      RgUsta usta;
      RgTrc trc;
      RgCntrl cntrl;
   }t;
}RgMngmt;
# 539 "../..//cm/lrg.x"
typedef S16 (*LrgCfgReq) ( Pst *pst, RgMngmt *cfg );




typedef S16 (*LrgSchCfgReq) ( Pst *pst, RgMngmt *cfg );




typedef S16 (*LrgCfgCfm) ( Pst *pst, RgMngmt *cfg );




typedef S16 (*LrgSchCfgCfm) ( Pst *pst, RgMngmt *cfg );




typedef S16 (*LrgCntrlReq) ( Pst *pst, RgMngmt *cntrl );




typedef S16 (*LrgSchCntrlReq) ( Pst *pst, RgMngmt *cntrl );




typedef S16 (*LrgCntrlCfm) ( Pst *pst, RgMngmt *cntrl );




typedef S16 (*LrgSchCntrlCfm) ( Pst *pst, RgMngmt *cntrl );
# 586 "../..//cm/lrg.x"
typedef S16 (*LrgStaReq) ( Pst *pst, RgMngmt *sta );




typedef S16 (*LrgStaCfm) ( Pst *pst, RgMngmt *sta );




typedef S16 (*LrgStaInd) ( Pst *pst, RgMngmt *sta );




typedef S16 (*LrgSchStaInd) ( Pst *pst, RgMngmt *sta );




typedef S16 (*LrgStsReq) ( Pst *pst, RgMngmt *sts );




typedef S16 (*LrgStsCfm) ( Pst *pst, RgMngmt *sts );




typedef S16 (*LrgTrcInd) ( Pst *pst, RgMngmt *trc, Buffer *mBuf );
# 647 "../..//cm/lrg.x"
extern S16 RgMiLrgCfgReq (Pst *pst, RgMngmt *cfg);
# 657 "../..//cm/lrg.x"
extern S16 RgMiLrgCfgCfm (Pst *pst, RgMngmt *cfm);
# 671 "../..//cm/lrg.x"
extern S16 RgMiLrgSchCfgReq (Pst *pst, RgMngmt *cfg);
# 681 "../..//cm/lrg.x"
extern S16 RgMiLrgSchCfgCfm (Pst *pst, RgMngmt *cfm);
# 695 "../..//cm/lrg.x"
extern S16 RgMiLrgStsReq (Pst *pst, RgMngmt *sts);
# 705 "../..//cm/lrg.x"
extern S16 RgMiLrgStsCfm (Pst *pst, RgMngmt *cfm);
# 715 "../..//cm/lrg.x"
extern S16 RgMiLrgStaReq (Pst *pst, RgMngmt *sta);
# 725 "../..//cm/lrg.x"
extern S16 RgMiLrgStaCfm (Pst *pst, RgMngmt *cfm);
# 735 "../..//cm/lrg.x"
extern S16 RgMiLrgStaInd (Pst *pst, RgMngmt *usta);
# 744 "../..//cm/lrg.x"
extern S16 RgMiLrgSchStaInd (Pst *pst, RgMngmt *usta);
# 757 "../..//cm/lrg.x"
extern S16 RgMiLrgCntrlReq (Pst *pst, RgMngmt *cntrl);
# 766 "../..//cm/lrg.x"
extern S16 RgMiLrgCntrlCfm ( Pst *pst, RgMngmt *cfm);
# 778 "../..//cm/lrg.x"
extern S16 RgMiLrgSchCntrlReq (Pst *pst, RgMngmt *cntrl);
# 787 "../..//cm/lrg.x"
extern S16 RgMiLrgSchCntrlCfm ( Pst *pst, RgMngmt *cfm);
# 797 "../..//cm/lrg.x"
extern S16 RgMiLrgTrcInd (Pst *pst, RgMngmt *trc, Buffer *mBuf);
# 823 "../..//cm/lrg.x"
extern S16 smRgActvInit (Ent ent,Inst inst, Region region,Reason reason);
extern S16 smRgActvTsk (Pst *pst, Buffer *mBuf);
extern S16 SmMiLrgCfgReq (Pst *pst, RgMngmt *cfg);
extern S16 SmMiLrgCfgCfm (Pst *pst, RgMngmt *cfm);
extern S16 SmMiLrgSchCfgReq (Pst *pst, RgMngmt *cfg);
extern S16 SmMiLrgSchCfgCfm (Pst *pst, RgMngmt *cfm);
extern S16 SmMiLrgStsReq (Pst *pst, RgMngmt *sts);
extern S16 SmMiLrgStsCfm (Pst *pst, RgMngmt *cfm);
extern S16 SmMiLrgStaReq (Pst *pst, RgMngmt *sta);
extern S16 SmMiLrgStaCfm (Pst *pst, RgMngmt *cfm);
extern S16 SmMiLrgStaInd (Pst *pst, RgMngmt *usta);
extern S16 SmMiLrgCntrlReq (Pst *pst, RgMngmt *cntrl);
extern S16 SmMiLrgSchStaInd (Pst *pst, RgMngmt *usta);
extern S16 SmMiLrgCntrlCfm ( Pst *pst, RgMngmt *cfm);
extern S16 SmMiLrgSchCntrlReq (Pst *pst, RgMngmt *cntrl);
extern S16 SmMiLrgSchCntrlCfm ( Pst *pst, RgMngmt *cfm);
extern S16 SmMiLrgTrcInd (Pst *pst, RgMngmt *trc, Buffer *mBuf);
# 158 "../..//enbapp/src/wr.h" 2
# 1 "../..//cm/egt.x" 1
# 90 "../..//cm/egt.x"
#define __EGTX__ 
# 105 "../..//cm/egt.x"
# 1 "../..//cm/egt.h" 1
# 106 "../..//cm/egt.x" 2
# 127 "../..//cm/egt.x"
typedef enum egtMsgType
{
   EGT_GTP_MSG_INVALID = 0,
# 208 "../..//cm/egt.x"
   EGT_GTPU_MSG_ECHO_REQ = 1,
   EGT_GTPU_MSG_ECHO_RSP = 2,
   EGT_GTPU_MSG_ERROR_IND = 26,
   EGT_GTPU_MSG_SUPP_EXT_HDR_NTF = 31,
   EGT_GTPU_MSG_END_MARKER = 254,
   EGT_GTPU_MSG_GPDU,

   EGT_GTP_MSG_MAX
}EgtMsgType;
# 253 "../..//cm/egt.x"
typedef enum _egtIntfEnt
{
   EGT_INT_S1_U_ENB_GTP_U = 0,
   EGT_INT_S1_U_SGW_GTP_U,
   EGT_INT_S12_RNC_GTP_U,
   EGT_INT_S12_SGW_GTP_U,
   EGT_INT_S5_S8_SGW_GTP_U,
   EGT_INT_S5_S8_PGW_GTP_U = 5,
   EGT_INT_S5_S8_SGW_GTP_C,
   EGT_INT_S5_S8_PGW_GTP_C,
   EGT_INT_S5_S8_SGW_PMIPv6,
   EGT_INT_S5_S8_PGW_PMIPv6,
   EGT_INT_S11_MME_GTP_C = 10,
   EGT_INT_S11_S4_SGW_GTP_C,
   EGT_INT_S10_MME_GTP_C,
   EGT_INT_S3_MME_GTP_C,
   EGT_INT_S3_SGSN_GTP_C,
   EGT_INT_S4_SGSN_GTP_U = 15,
   EGT_INT_S4_SGW_GTP_U,
   EGT_INT_S4_SGSN_GTP_C,
   EGT_INT_S16_SGSN_GTP_C,
   EGT_INT_X2_DL_ENB_GTP_U,
   EGT_INT_X2_UL_ENB_GTP_U = 20,
   EGT_INT_RNC_GTP_U,
   EGT_INT_SGSN_GTP_U,
   EGT_INT_SGW_GTP_U,
# 299 "../..//cm/egt.x"
   EGT_INT_ENTINVALID
}EgtIntfEnt;
# 324 "../..//cm/egt.x"
typedef enum _egtErrType
{
   EGT_ERR_NO_ERR,
   EGT_ERR_REQ_FAIL,
   EGT_ERR_TEID_EXHAUSTED,
   EGT_ERR_UNKNOWN_TEID_MSG,
   EGT_ERR_INV_INTF_TYPE,
   EGT_ERR_INV_TUNN_NET_EVNT,
   EGT_ERR_INV_TUNN_USR_EVNT,
   EGT_ERR_MSG_INV_INT,
   EGT_ERR_MSG_NO_MATCH,
   EGT_ERR_MSG_UNABLE_TO_COMPLY,
   EGT_ERR_MSG_MISS_MAND_IE,
   EGT_ERR_MSG_INV_LEN,
   EGT_ERR_MSG_INV_VERSION,
   EGT_ERR_MSG_INV_HDR,
   EGT_ERR_MSG_INV_TYPE,
   EGT_ERR_IE_UNKNOWN,
   EGT_ERR_IE_INV_LEN,
   EGT_ERR_INV_IE_TYPE,
   EGT_ERR_INV_IE_VAL,
   EGT_ERR_MEM_ALLOC_FAILED,
   EGT_ERR_INV_TEID,
   EGT_ERR_DFTL_SRV_NOT_PRSNT,
   EGT_ERR_TIMER_FAILED,
   EGT_ERR_MSG_SNDING_FAIL,
   EGT_ERR_INV_SAP,
   EGT_ERR_INV_IE_DATA_TYPE,
   EGT_ERR_UNKNOWN_TV,
   EGT_ERR_IE_NOT_ASCD_ORDER,
   EGT_ERR_UNSUPP_EXT_HDR,
   EGT_ERR_WRONG_EXT_HDR,
   EGT_ERR_MSG_INV_PTTYPE,
   EGT_ERR_MAN_IE_INV_LEN,
   EGT_ERR_NO_SEQ,
   EGT_ERR_MAX_TDPU_SIZE_EXCED,
   EGT_ERR_INV_DATA_TYPE,
   EGT_ERR_INV_PARAM,
   EGT_ERR_INV_DST_IP,
   EGT_ERR_MSG_NOT_ALLWD,
   EGT_ERR_DST_MULT_IP,
   EGT_ERR_INV_SRC_IP,
   EGT_ERR_INV_SRC_PORT,
   EGT_ERR_CAUSE_MEM_FAIL,
   EGT_ERR_INV_TEID_RCVD,
   EGT_ERR_PENDING_CNTRL_OP,
   EGT_ERR_END_MARKER_RCVD,
   EGT_ERR_MSG_INVOVR_LEN_PBMSG,



   EGT_ERR_MAX_RETRY_EXHAUSTED,
   EGT_ERR_INV_SEQ_NUM,

   EGT_ERR_MAX_ERR
}EgtErrType;
# 481 "../..//cm/egt.x"
typedef struct _egDatStr132
{
   U16 length;
   U8 val[132];
   U16 spare1;



} EgDatStr132;
# 1313 "../..//cm/egt.x"
typedef struct _egPvtExt
{
   U16 entId;
   EgDatStr132 propVal;
} EgPvtExt;
# 1582 "../..//cm/egt.x"
typedef struct _egErrEvnt
{
   U32 localTeid;
   U32 transId;
   U32 remTeid;
   CmTptAddr remAddr;
   U8 intfType;


   U32 seqNo;
   EgtErrType errCause;
   U8 failedIeInst;
   U8 failedIeType;
   U8 failedMsgType;
} EgErrEvnt;





typedef struct _egUExtHdr
{
   TknU16 udpPort;
   TknU16 pdcpNmb;
} EgUExtHdr;





typedef struct _egUMsgHdr
{
   TknU8 nPduNmb;
   TknU32 seqNumber;
   EgUExtHdr extHdr;
   U32 teId;
   U8 msgType;
}EgUMsgHdr;

typedef struct _egUMsg EgUMsg;




struct _egUMsg
{






   CmMemListCp memCp;

   EgUMsgHdr msgHdr;
   CmTptAddr srcAddr;
   CmTptAddr remAddr;
   U32 lclTeid;
# 1649 "../..//cm/egt.x"
   union
   {
      CmLListCp egIeList;
      Buffer *mBuf;
   }u;
# 1663 "../..//cm/egt.x"
   EgUMsg *next;
};




typedef struct _egUIpAddr
{
   U8 addrType;
   union
   {
      CmIpAddr ipv4;



   } u;
} EgUIpAddr;



typedef struct _egUExtHdrTypeLst
{
   U8 noOfExtHdrs;
   U8 extType[2];
} EgUExtHdrTypeLst;



typedef struct _egUIe
{
# 1701 "../..//cm/egt.x"
  CmLList node;
  U8 ieType;
  U8 dataType;
  union
  {
     U8 valUnSgnd8;
     U32 valUnSgnd32;
     EgPvtExt pvtExt;
     EgUIpAddr ipAddr;
     EgUExtHdrTypeLst extHdrTypeLst;
  }t;
} EgUIe;



typedef struct _egUStatus
{
   CmTptAddr srcAddr;
   CmTptAddr dstAddr;
   CmStatus cfmStatus;
} EgUStatus;



typedef struct _egUErrEvnt
{
   U32 localTeid;
   U32 remTeid;
   EgtErrType errCause;
   CmTptAddr srcAddr;
   CmTptAddr dstAddr;
   U32 diagInfo;
   U8 failedIeType;
   U8 failedMsgType;
} EgUErrEvnt;



typedef struct _egUTnlMgmt
{
   U8 action;
   U8 intfType;

   Bool reOrderPres;


   U8 tunnelType;


   U32 teId;
   U8 reordAlgo;

   U16 expSeqNmb;
   CmTptAddr srcAddr;
   CmTptAddr dstIpAddr;
   CmTptAddr frmDstIpAddr;
   U16 maxTPduSize;
   CmStatus cfmStatus;
} EgUTnlMgmt;



typedef struct _egtUEvnt
{
   U8 event;
   union
   {
      EgUTnlMgmt tnlMgmt;
      EgUMsg *egMsg;
      EgUStatus status;
      EgUStatus uStaInd;
      EgUErrEvnt errInd;
   } u;
} EgtUEvnt;
# 1789 "../..//cm/egt.x"
typedef S16 (*EgtBndReq) ( Pst *pst, SuId suId, SpId spId);




typedef S16 (*EgtBndCfm) ( Pst *pst, SuId suId, U8 status);




typedef S16 (*EgtUbndReq) ( Pst *pst, SpId spId, Reason reason);
# 1898 "../..//cm/egt.x"
typedef S16 (*EgtEguDatReq) ( Pst *pst, SpId spId, EgtUEvnt *datReq);





typedef S16 (*EgtEguDatInd) ( Pst *pst, SuId suId, EgtUEvnt *datInd);





typedef S16 (*EgtEguLclTnlMgmtReq) ( Pst *pst, SpId spId, EgtUEvnt *mgmtReq);





typedef S16 (*EgtEguLclTnlMgmtCfm) ( Pst *pst, SuId suId, EgtUEvnt *mgmtCfm);





typedef S16 (*EgtEguStaReq) ( Pst *pst, SpId spId, EgtUEvnt *staReq);





typedef S16 (*EgtEguStaCfm) ( Pst *pst, SuId suId, EgtUEvnt *staCfm);





typedef S16 (*EgtEguUStaInd) ( Pst *pst, SuId suId, EgtUEvnt *uStaInd);





typedef S16 (*EgtEguErrInd) ( Pst *pst, SuId suId, EgtUEvnt *errInd);
# 1978 "../..//cm/egt.x"
extern S16 EgUiEgtBndReq ( Pst *pst, SuId suId, SpId spId);
# 2007 "../..//cm/egt.x"
extern S16 EgUiEgtBndCfm ( Pst *pst, SuId suId, U8 status);
# 2030 "../..//cm/egt.x"
extern S16 EgUiEgtUbndReq ( Pst *pst, SpId spId, Reason reason);
# 2464 "../..//cm/egt.x"
extern S16 EgUiEgtEguDatReq (Pst *pst, SpId spId, EgtUEvnt *egtUEvnt);
# 2483 "../..//cm/egt.x"
extern S16 EgUiEgtEguDatInd (Pst *pst, SuId suId, EgtUEvnt *egtUEvnt);
# 2502 "../..//cm/egt.x"
extern S16 EgUiEgtEguLclTnlMgmtReq (Pst *pst, SpId spId, EgtUEvnt *egtUEvnt);
# 2528 "../..//cm/egt.x"
extern S16 EgUiEgtEguLclTnlMgmtCfm (Pst *pst, SuId suId, EgtUEvnt *egtUEvnt);
# 2547 "../..//cm/egt.x"
extern S16 EgUiEgtEguStaReq (Pst *pst, SpId spId, EgtUEvnt *egtUEvnt);
# 2574 "../..//cm/egt.x"
extern S16 EgUiEgtEguStaCfm (Pst *pst, SuId suId, EgtUEvnt *egtUEvnt);
# 2593 "../..//cm/egt.x"
extern S16 EgUiEgtEguUStaInd (Pst *pst, SuId suId, EgtUEvnt *egtUEvnt);
# 2612 "../..//cm/egt.x"
extern S16 EgUiEgtEguErrInd (Pst *pst, SuId suId, EgtUEvnt *egtUEvnt);







extern S16 EuLiEgtBndReq ( Pst *pst, SuId suId, SpId spId);

extern S16 EuLiEgtBndCfm ( Pst *pst, SuId suId, U8 status);

extern S16 EuLiEgtUbndReq ( Pst *pst, SpId spId, Reason reason);
# 2670 "../..//cm/egt.x"
extern S16 EuLiEgtEguDatReq (Pst *pst, SuId suId, EgtUEvnt *egtUEvnt);
extern S16 EuLiEgtEguDatInd (Pst *pst, SuId suId, EgtUEvnt *egtUEvnt);

extern S16 EuLiEgtEguLclTnlMgmtReq (Pst *pst, SpId spId, EgtUEvnt *egtUEvnt);
extern S16 EuLiEgtEguLclTnlMgmtCfm (Pst *pst, SuId suId, EgtUEvnt *egtUEvnt);

extern S16 EuLiEgtEguStaReq (Pst *pst, SuId suId, EgtUEvnt *egtUEvnt);
extern S16 EuLiEgtEguStaCfm (Pst *pst, SuId suId, EgtUEvnt *egtUEvnt);

extern S16 EuLiEgtEguUStaInd (Pst *pst, SuId suId, EgtUEvnt *egtUEvnt);

extern S16 EuLiEgtEguErrInd (Pst *pst, SpId spId, EgtUEvnt *egtUEvnt);







extern S16 cmPkEgtBndReq
( Pst* pst, SuId suId, SpId spId );





extern S16 cmUnpkEgtBndReq
( EgtBndReq func, Pst *pst, Buffer *mBuf );





extern S16 cmPkEgtBndCfm
( Pst * pst, SuId suId, U8 status );





extern S16 cmUnpkEgtBndCfm
( EgtBndCfm func, Pst *pst, Buffer *mBuf );





extern S16 cmPkEgtUbndReq
( Pst * pst, SpId spId, Reason reason );





extern S16 cmUnpkEgtUbndReq
( EgtUbndReq func, Pst *pst, Buffer *mBuf );
# 3021 "../..//cm/egt.x"
extern S16 cmPkEgDatStr132
( EgDatStr132 *param, Buffer *mBuf );




extern S16 cmUnpkEgDatStr132
( EgDatStr132 *param, Buffer *mBuf );
# 3667 "../..//cm/egt.x"
extern S16 cmPkEgPvtExt
( EgPvtExt *param, Buffer *mBuf );




extern S16 cmUnpkEgPvtExt
( EgPvtExt *param, Buffer *mBuf );





extern S16 cmPkEgtEguDatReq ( Pst *pst, SpId spId, EgtUEvnt *egtUEvnt );






extern S16 cmUnpkEgtEguDatReq ( EgtEguDatReq func, Pst *pst, Buffer *mBuf, Mem *memInfo );







extern S16 cmPkEgtEguDatInd ( Pst *pst, SuId suId, EgtUEvnt *egtUEvnt );






extern S16 cmUnpkEgtEguDatInd ( EgtEguDatInd func, Pst *pst, Buffer *mBuf );






extern S16 cmPkEgtEguLclTnlMgmtReq ( Pst *pst, SpId spId, EgtUEvnt *egtUEvnt );






extern S16 cmUnpkEgtEguLclTnlMgmtReq ( EgtEguLclTnlMgmtReq func, Pst *pst, Buffer *mBuf, Mem *memInfo );







extern S16 cmPkEgtEguLclTnlMgmtCfm ( Pst *pst, SuId suId, EgtUEvnt *egtUEvnt );






extern S16 cmUnpkEgtEguLclTnlMgmtCfm ( EgtEguLclTnlMgmtCfm func, Pst *pst, Buffer *mBuf );






extern S16 cmPkEgtEguStaReq ( Pst *pst, SpId spId, EgtUEvnt *egtUEvnt );






extern S16 cmUnpkEgtEguStaReq ( EgtEguStaReq func, Pst *pst, Buffer *mBuf, Mem *memInfo );







extern S16 cmPkEgtEguStaCfm ( Pst *pst, SuId suId, EgtUEvnt *egtUEvnt );






extern S16 cmUnpkEgtEguStaCfm ( EgtEguStaCfm func, Pst *pst, Buffer *mBuf );






extern S16 cmPkEgtEguUStaInd ( Pst *pst, SuId suId, EgtUEvnt *egtUEvnt );






extern S16 cmUnpkEgtEguUStaInd ( EgtEguUStaInd func, Pst *pst, Buffer *mBuf );






extern S16 cmPkEgtEguErrInd ( Pst *pst, SuId suId, EgtUEvnt *egtUEvnt );






extern S16 cmUnpkEgtEguErrInd ( EgtEguErrInd func, Pst *pst, Buffer *mBuf );






extern S16 cmPkEgUExtHdr ( EgUExtHdr *pkStruct, Buffer *mBuf );





extern S16 cmUnpkEgUExtHdr ( EgUExtHdr *unpkStruct, Buffer *mBuf );





extern S16 cmPkEgUMsgHdr ( EgUMsgHdr *pkStruct, Buffer *mBuf );





extern S16 cmUnpkEgUMsgHdr ( EgUMsgHdr *unpkStruct, Buffer *mBuf );





extern S16 cmPkEgUMsg ( EgUMsg *pkStruct, Buffer *mBuf );





extern S16 cmUnpkEgUMsg ( EgUMsg *unpkStruct, Buffer *mBuf, Mem memInfo );






extern S16 cmPkEgUIpAddr ( EgUIpAddr *pkStruct, Buffer *mBuf );





extern S16 cmUnpkEgUIpAddr ( EgUIpAddr *unpkStruct, Buffer *mBuf );





extern S16 cmPkEgUExtHdrTypeLst ( EgUExtHdrTypeLst *pkStruct, Buffer *mBuf );





extern S16 cmUnpkEgUExtHdrTypeLst ( EgUExtHdrTypeLst *unpkStruct, Buffer *mBuf );





extern S16 cmPkEgUIeList ( CmLListCp *pkList, Buffer *mBuf, CmMemListCp *memCp );






extern S16 cmUnpkEgUIeList ( CmLListCp *unpkList, Buffer *mBuf, CmMemListCp *memCp );






extern S16 cmPkEgUIe ( EgUIe *pkStruct, Buffer *mBuf );





extern S16 cmUnpkEgUIe ( EgUIe *unpkStruct, Buffer *mBuf );





extern S16 cmPkEgUStatus ( EgUStatus *pkStruct, Buffer *mBuf );





extern S16 cmUnpkEgUStatus ( EgUStatus *unpkStruct, Buffer *mBuf );





extern S16 cmPkEgUErrEvnt ( EgUErrEvnt *pkStruct, Buffer *mBuf );





extern S16 cmUnpkEgUErrEvnt ( EgUErrEvnt *unpkStruct, Buffer *mBuf );





extern S16 cmPkEgUTnlMgmt ( EgUTnlMgmt *pkStruct, Buffer *mBuf );





extern S16 cmUnpkEgUTnlMgmt ( EgUTnlMgmt *unpkStruct, Buffer *mBuf );





extern S16 cmPkEgtUEvnt ( EgtUEvnt *pkStruct, Buffer *mBuf );





extern S16 cmUnpkEgtUEvnt ( EgtUEvnt *unpkStruct, Buffer *mBuf, Pst *pst );
# 159 "../..//enbapp/src/wr.h" 2
# 1 "../..//enbapp/src/wr_lwr.h" 1

#define __WR_LWR_H__ 





#define LWR_NEIGH_ADD_CFG 1
#define LWR_NEIGH_MOD_CFG 2
#define LWR_NEIGH_DEL 3

#define MAX_NUM_NEIGH_CELLS 100


#define LWR_CELL_MEAS_CFG_A1EVT_RPT 1
#define LWR_CELL_MEAS_CFG_A2EVT_RPT 2
#define LWR_CELL_MEAS_CFG_A4EVT_RPT 4
#define LWR_CELL_MEAS_CFG_EVT_A3 8
#define LWR_CELL_MEAS_CFG_EVT_A5 16
#define LWR_CELL_MEAS_CFG_EUTRA_PERD_RPT 32
#define LWR_CELL_MEAS_CFG_1XCDMA_EVT_B1_RPT 64
#define LWR_CELL_MEAS_CFG_CDMA_HRPD_EVT_B1_RPT 128
#define LWR_CELL_MEAS_CFG_1XCDMA_EVT_B2_RPT 256
#define LWR_CELL_MEAS_CFG_CDMA_HRPD_EVT_B2_RPT 512
#define LWR_CELL_MEAS_CFG_1XCDMA_PERIOD_RPT 1024
#define LWR_CELL_MEAS_CFG_CDMA_HRPD_PERIOD_RPT 2048
#define LWR_CELL_MEAS_CFG_SPD_SCL_FACT 4096
#define LWR_CELL_MEAS_CFG_MOB_STAT_PARAMS 8192
#define LWR_CELL_MEAS_CFG_QTY_CFG 16384
#define LWR_CELL_MEAS_CFG_MEAS_GAP 32768
#define LWR_CELL_MEAS_CFG_PRE_REG_HRPD 65536


#define LWR_ENB_NUM_OF_UE 1
#define LWR_ENB_NUM_OF_GRPS 2
#define LWR_ENB_GRP_CFG_LST 4
#define LWR_ENB_PROTOCFG 8
#define LWR_ENB_SON_ENB_CNTRL 16
#define LWR_ENB_ANR_ALGO_INFO 32
#define LWR_ENB_NUM_MME_PRI_GRPS 64
#define LWR_ENB_MME_LDBAL_PRI_GRPS_LST 128


#define LWR_MME_INDEX 1
#define LWR_PLMN_ID 2
#define LWR_MME_GROUP_ID 4
#define LWR_MME_CODES 8
#define LWR_MME_IPADDR 16
#define LWR_MME_SECIP_ADDR 32
#define LWR_MME_STATE 64
#define LWR_ADMIN_STATE 128


#define LWR_CELL_CFG_PHY_CELL_ID 1
#define LWR_CELL_CFG_DUP_MODE 2
#define LWR_CELL_CFG_DL_CARR_FREQ 4
#define LWR_CELL_CFG_GRP 8


#define LWR_CELL_MIB_CFG_DLBW 1
#define LWR_CELL_MIB_CFG_PHICH_CFG 2


#define LWR_CELL_SIB1_CFG_CELL_ACCESS_INFO 1
#define LWR_CELL_SIB1_CFG_CELL_SELECT_INFO 2
#define LWR_CELL_SIB1_CFG_PMAX 4
#define LWR_CELL_SIB1_CFG_FREQ_BAND_IND 8
#define LWR_CELL_SIB1_CFG_TDD_CFG 16
#define LWR_CELL_SIB1_CFG_SIWIN_SIZE 32


#define LWR_CELL_SIB2_CFG_BARRING_INFO 1
#define LWR_CELL_SIB2_CFG_RADIO_RSRC_CMN 2
#define LWR_CELL_SIB2_CFG_UE_TMR_CONS 4
#define LWR_CELL_SIB2_CFG_UE_FREQ_INFO 8
#define LWR_CELL_SIB2_CFG_TIME_ALIGN 16
#define LWR_CELL_SIB2_CFG_BARRING_VOICE 32
#define LWR_CELL_SIB2_CFG_BARRING_VIDEO 64


#define LWR_CELL_SIB2_RRSRCMN_RACH_CFG_CMN 1
#define LWR_CELL_SIB2_RRSRCMN_BCCH_CFG_CMN 2
#define LWR_CELL_SIB2_RRSRCMN_PCCH_CFG_CMN 4
#define LWR_CELL_SIB2_RRSRCMN_PRACH_CFG_CMN 8
#define LWR_CELL_SIB2_RRSRCMN_PDSCH_CFG_CMN 16
#define LWR_CELL_SIB2_RRSRCMN_PUSCH_CFG_CMN 32
#define LWR_CELL_SIB2_RRSRCMN_PUCCH_CFG_CMN 64
#define LWR_CELL_SIB2_RRSRCMN_SRS_CFG_CMN 128
#define LWR_CELL_SIB2_RRSRCMN_UL_PWR_CNRL_CFG_CMN 256
#define LWR_CELL_SIB2_RRSRCMN_UL_CYCPREFIX_CFG_CMN 512
#define LWR_CELL_SIB2_RRSRCMN_DL_CYCPREFIX_CFG_CMN 1024



#define LWR_CELL_SIB3_CFG_QHYST 1
#define LWR_CELL_SIB3_CFG_SPD_ST_RESEL 2
#define LWR_CELL_SIB3_CFG_MOB_ST_PAR 4
#define LWR_CELL_SIB3_CFG_SF_MEDIUM 8
#define LWR_CELL_SIB3_CFG_SF_HIG 16
#define LWR_CELL_SIB3_CFG_SERV_FREQ_INFO 32
#define LWR_CELL_SIB3_CFG_INTRA_RREQ 64


#define LWR_CELL_SIB3_CFG_CSG_INFO 1


#define LWR_CELL_ANR_CFG_CTRL_INFO 1
#define LWR_CELL_ANR_CFG_SON_ANR_SCH 2
#define LWR_CELL_ANR_CFG_BL_CELL_INFO 4
#define LWR_CELL_ANR_CFG_EUTRAN_BL_NR_INFO 8
#define LWR_CELL_ANR_CFG_CDMA_1XRTT_INFO 16
#define LWR_CELL_ANR_CFG_CDMA_HRPD_INFO 32


#define LWR_CELL_MEAS_CFG_A1EVT_RPT 1
#define LWR_CELL_MEAS_CFG_A2EVT_RPT 2
#define LWR_CELL_MEAS_CFG_A4EVT_RPT 4
#define LWR_CELL_MEAS_CFG_EVT_A3 8
#define LWR_CELL_MEAS_CFG_EVT_A5 16
#define LWR_CELL_MEAS_CFG_EUTRA_PERD_RPT 32
#define LWR_CELL_MEAS_CFG_1XCDMA_EVT_B1_RPT 64
#define LWR_CELL_MEAS_CFG_CDMA_HRPD_EVT_B1_RPT 128
#define LWR_CELL_MEAS_CFG_1XCDMA_EVT_B2_RPT 256
#define LWR_CELL_MEAS_CFG_CDMA_HRPD_EVT_B2_RPT 512
#define LWR_CELL_MEAS_CFG_1XCDMA_PERIOD_RPT 1024
#define LWR_CELL_MEAS_CFG_CDMA_HRPD_PERIOD_RPT 2048
#define LWR_CELL_MEAS_CFG_SPD_SCL_FACT 4096
#define LWR_CELL_MEAS_CFG_MOB_STAT_PARAMS 8192
#define LWR_CELL_MEAS_CFG_QTY_CFG 16384
#define LWR_CELL_MEAS_CFG_MEAS_GAP 32768
#define LWR_CELL_MEAS_CFG_PRE_REG_HRPD 65536


#define LWR_CELL_EAID_CFG_EAID 1


#define LWR_CELL_SIBSCH_SIB2_PERIOD 1
#define LWR_CELL_SIBSCH_SIB3_PERIOD 2
#define LWR_CELL_SIBSCH_SIB4_PERIOD 4
#define LWR_CELL_SIBSCH_SIB5_PERIOD 8
#define LWR_CELL_SIBSCH_SIB6_PERIOD 16
#define LWR_CELL_SIBSCH_SIB7_PERIOD 32
#define LWR_CELL_SIBSCH_SIB8_PERIOD 64
#define LWR_CELL_SIBSCH_SIB9_PERIOD 128
#define LWR_CELL_SIBSCH_SIB10_PERIOD 256
#define LWR_CELL_SIBSCH_SIB11_PERIOD 512
#define LWR_CELL_SIBSCH_SIB12_PERIOD 1024
#define LWR_CELL_SIBSCH_SWIN_PERIOD 2048
#define LWR_CELL_SIBSCH_SIB10_MANUAL_PRD 4096
#define LWR_CELL_SIBSCH_SIB10_REPEAT_PRD 8192
#define LWR_CELL_SIBSCH_SIB10_NUM_BRDCST 16384
#define LWR_CELL_SIBSCH_SIB11_WARN_SEG 32768


#define LWR_CELL_DRB_QCI 1
#define LWR_CELL_DRB_QCI_INFO 2
#define LWR_CELL_DRB_LCH_INFO 4
#define LWR_CELL_DRB_RLC_INFO 8
#define LWR_CELL_DRB_PDCP_INFO 16
#define LWR_CELL_DRB_DSCP_INFO 32


#define LWR_CELL_RAB_SRB_POLICY 1
#define LWR_CELL_RAB_RAB_POLICY 2


#define LWR_CELL_SRB_SRBID 1
#define LWR_CELL_SRB_RLC_INFO 2
#define LWR_CELL_SRB_LCH_INFO 4
#define LWR_CELL_SRB_QCI_INFO 8

#define LWR_SRB_ID_1 1
#define LWR_SRB_ID_2 2


#define LWR_MAX_PLMN_IDS 6
#define LWR_MEAS_MAX_EVENT_A1_CFG 4
#define LWR_MEAS_MAX_EVENT_A2_CFG 10
#define LWR_MEAS_MAX_EVENT_A3_CFG 5
#define LWR_MEAS_MAX_EVENT_A4_CFG 1
#define LWR_MEAS_MAX_EVENT_A5_CFG 5
#define LWR_MEAS_MAX_EUTRA_PERD_CFG 2
#define LWR_MEAS_MAX_UTRA_PERD_CFG 4
#define LWR_MEAS_MAX_UTRA_EVNT_B2_CFG 2
#define LWR_MEAS_MAX_EVENT_B1_CFG 1
#define LWR_MEAS_MAX_1XCDMA_EVENT_B2_CFG 1
#define LWR_MEAS_MAX_CDMA_HRPD_EVENT_B2_CFG 1
#define LWR_MEAS_MAX_CDMA_PERD_CFG 3

#define STWRPROTOCFG 256
#define STWRPROTOIND 128
# 254 "../..//enbapp/src/wr_lwr.h"
#define LWR_MAX_PLMNS_PER_MME 6
#define LWR_MAX_GROUPS_PER_MME 6
#define LWR_MAX_CODES_PER_MME 6
#define LWR_MAX_ENODEB_POOLS 6
#define LWR_MAX_MMES 16
#define LWR_MAX_PLMN_IDS 6
#define LWR_MAX_SRBS 3
#define LWR_MAX_QCI 256

#define LWR_SM_MAX_MMES 16
#define LWR_SM_MAX_EAIDS 15
#define LWR_SM_MAX_PLMN_IDS 6





#define LWR_MAX_PROTOCOL_CFG_COUNT 7



#define EVTLWRCFGREQ 1
#define EVTLWRCFGCFM 2
#define EVTLWRCNTRLREQ 3
#define EVTLWRCNTRLCFM 4
#define EVTLWRSTAIND 5
#define EVTLWRLOADIND 6
# 312 "../..//enbapp/src/wr_lwr.h"
#define LWR_SAP_UNBOUND 1
#define LWR_SAP_BINDING 2
#define LWR_SAP_BOUND 3

#define EWRXXX 0



#define LWR_UMM_MEAS_EVENT_A1 1
#define LWR_UMM_MEAS_EVENT_A2 2
#define LWR_UMM_MEAS_EVENT_A4 4
#define LWR_UMM_MEAS_EVENT_A3 8
#define LWR_UMM_MEAS_EVENT_A5 16
#define LWR_UMM_MEAS_EUTRA_PERD 32
#define LWR_UMM_MEAS_1XCDMA_EVENT_B1 64
#define LWR_UMM_MEAS_CDMA_HRPD_EVENT_B1 128
#define LWR_UMM_MEAS_1XCDMA_EVENT_B2 256
#define LWR_UMM_MEAS_CDMA_HRPD_EVENT_B2 512
#define LWR_UMM_MEAS_1XCDMA_PERD 1024
#define LWR_UMM_MEAS_CDMA_HRPD_PERD 2048
#define LWR_UMM_MEAS_SPEED_PARAMS 4096
#define LWR_UMM_MEAS_MOBILITY_PARAMS 8192
#define LWR_UMM_MEAS_QUANTITY_PARAMS 16384
#define LWR_UMM_MEAS_GAP_PARAMS 32768
#define LWR_UMM_MEAS_PRE_REGIS_HRPD 65536




#define LWR_CAUSE_NHU_SAP_BOUND (LCM_CAUSE_LYR_SPECIFIC + 1)
#define LWR_CAUSE_CTF_SAP_BOUND (LCM_CAUSE_LYR_SPECIFIC + 2)
#define LWR_CAUSE_RGR_SAP_BOUND (LCM_CAUSE_LYR_SPECIFIC + 3)
#define LWR_CAUSE_SZT_SAP_BOUND (LCM_CAUSE_LYR_SPECIFIC + 4)
#define LWR_CAUSE_EGT_SAP_BOUND (LCM_CAUSE_LYR_SPECIFIC + 5)
#define LWR_CAUSE_PJU_SAP_BOUND (LCM_CAUSE_LYR_SPECIFIC + 6)

#define LWR_CAUSE_CZT_SAP_BOUND (LCM_CAUSE_LYR_SPECIFIC + 7)

#define LWR_CAUSE_MME_SYNC_LOST (LCM_CAUSE_LYR_SPECIFIC + 8)

#define LWR_EVENT_CELL_CFG_SUCCESS (LCM_CAUSE_LYR_SPECIFIC + 1)
#define LWR_EVENT_CELL_CFG_FAILED (LCM_CAUSE_LYR_SPECIFIC + 2)
#define LWR_EVENT_S1CON_SET_SUCCESS (LCM_CAUSE_LYR_SPECIFIC + 3)
#define LWR_EVENT_S1CON_SET_FAIL (LCM_CAUSE_LYR_SPECIFIC + 4)
#define LWR_EVENT_ENB_CFGUPD_SUCCESS (LCM_CAUSE_LYR_SPECIFIC + 5)
#define LWR_EVENT_ENB_CFGUPD_FAIL (LCM_CAUSE_LYR_SPECIFIC + 6)
#define LWR_EVENT_ERRIND_FROM_PEER (LCM_CAUSE_LYR_SPECIFIC + 7)
#define LWR_EVENT_ERR_IND_RCVD (LCM_CAUSE_LYR_SPECIFIC + 8)


#define LCM_CAUSE_DUP_ECGI (LCM_CAUSE_LYR_SPECIFIC + 9)
#define LCM_CAUSE_DUP_ENB_ID (LCM_CAUSE_LYR_SPECIFIC + 10)


#define LWR_EVENT_S1U_PATH_UNREACHABLE (LCM_CAUSE_LYR_SPECIFIC + 19)
#define LWR_EVENT_S1U_PATH_REACHABLE (LCM_CAUSE_LYR_SPECIFIC + 20)


#define LWR_EVENT_X2AP_PATH_UNREACHABLE (LCM_CAUSE_LYR_SPECIFIC + 21)
#define LWR_EVENT_X2AP_PATH_REACHABLE (LCM_CAUSE_LYR_SPECIFIC + 22)

#define LWR_EVENT_CELL_UNAVAILABLE (LCM_CAUSE_LYR_SPECIFIC + 23)
#define LWR_EVENT_CELL_AVAILABLE (LCM_CAUSE_LYR_SPECIFIC + 24)



typedef enum wrOamNotifyType
{
    WR_OAM_NOTIFY_S1U = 1,
    WR_OAM_NOTIFY_S1MME,
    WR_OAM_NOTIFY_X2AP,
    WR_OAM_NOTIFY_MAX
}WrOamNotifyType;




#define LWR_TIMER_CFG_S1SETUP 1




#define LWR_SAP_UNBOUND 1
#define LWR_SAP_BINDING 2
#define LWR_SAP_BOUND 3

#define ELWRXXX 0

#define STWRGEN 1

#define STWRRGRSAP 2
#define STWRNHUSAP 3
#define STWRCTFSAP 4
#define STWRSZTSAP 5


#define STWRCZTSAP 10
#define STWRNGH 11
#define STWRMME 12
#define STWRX2CONSETUP 0
#define MAX_NO_OF_PLMNS 6



#define STWRCELLCFG 6
#define STWRS1CONSETUP 7


#define LWR_MAX_GU_GRP_IDS 16

#define STWRDRBCFGDONE 99

#define STWRSNDPARTS1RST 15
#define STWRSNDFULLS1RST 16
#define STWRSNDERABRELIND 17
#define STWRTRIGX2RST 18
#define STWRSYSTEMSTA 19
#define STWRCELLSTA 20
#define STWRMMESTA 21
#define STWRSGWSTA 22
#define STWRMMESTAPER 23
#define STWRMMERSETCTRL 24
#define STWRCELLSETUPSTA 25
#define STWRUEACTSTA 26
#define STWRANRPRINTCELL 27


#define LWR_CELLCONFIG 1

#define LWR_USTA_DGNVAL_SAP 0
#define LWR_USTA_DGNVAL_CELLUEID 1



#define STWREGTSAP 8
#define STWRPJUSAP 9



#define LWR_CAUSE_CELL_UP 100

#define LWR_CELLCONFIG 1






#define MAX_GP_PREF 16

#define ELWRXXX 0

#define ERRLWR 0

#define ELWR001 (ERRLWR + 1)
#define ELWR002 (ERRLWR + 2)
#define ELWR003 (ERRLWR + 3)
#define ELWR004 (ERRLWR + 4)
#define ELWR005 (ERRLWR + 5)
#define ELWR006 (ERRLWR + 6)
#define ELWR007 (ERRLWR + 7)
#define ELWR008 (ERRLWR + 8)
#define ELWR009 (ERRLWR + 9)
#define ELWR010 (ERRLWR + 10)
#define ELWR011 (ERRLWR + 11)
#define ELWR012 (ERRLWR + 12)
#define ELWR013 (ERRLWR + 13)
#define ELWR014 (ERRLWR + 14)
#define ELWR015 (ERRLWR + 15)


#define LWR_MAX_BL_CELL_INFO 16
#define LWR_MAX_EUTRAN_BL_NR 16
#define LWR_MAX_CDMA_HRPD_BL_NR 16
#define LWR_MAX_CDMA_1XRTT_BL_NR 16


#define MAX_NUM_FREQ_CFG 16
#define MAX_NUM_BAND_CFG 2


#define LWR_BL_CELL_INFO_INDEX 1
#define LWR_BL_CELL_INFO_STATUS 2
#define LWR_BL_CELL_INFO_PCITYPE 4
#define LWR_BL_CELL_INFO_STARTPCI 8
#define LWR_BL_CELL_INFO_PCIRANGE 16
#define LWR_BL_CELL_INFO_EARFCNDL 32
#define LWR_BL_CELL_INFO_EARFCNUL 64



#define LWR_EUTRAN_BL_NR_INDEX 1
#define LWR_EUTRAN_BL_NR_STATUS 2
#define LWR_EUTRAN_BL_NR_ENBID 4
#define LWR_EUTRAN_BL_NR_TARGET_CELL_NUM 8
#define LWR_EUTRAN_BL_NR_ENB_TYPE 16
#define LWR_EUTRAN_BL_NR_TAC 32
#define LWR_EUTRAN_BL_NR_ENB_PLMN 64
#define LWR_EUTRAN_BL_NR_PCI 128




#define LWR_CDMA_HRPD_BL_NR_INDEX 1
#define LWR_CDMA_HRPD_BL_NR_STATUS 2
#define LWR_CDMA_HRPD_BL_NR_COLOR_CODE 4
#define LWR_CDMA_HRPD_BL_NR_BSMID 8
#define LWR_CDMA_HRPD_BL_NR_BSCID 16
#define LWR_CDMA_HRPD_BL_NR_DPSSID 32
#define LWR_CDMA_HRPD_BL_NR_BTSID 64
#define LWR_CDMA_HRPD_BL_NR_SECTORID 128
#define LWR_CDMA_HRPD_BL_NR_BANDCLASS 256
#define LWR_CDMA_HRPD_BL_NR_ARFCN 512
#define LWR_CDMA_HRPD_BL_NR_PNOFFSET 1024



#define LWR_CDMA_1XRTT_BL_NR_INDEX 1
#define LWR_CDMA_1XRTT_BL_NR_STATUS 2
#define LWR_CDMA_1XRTT_BL_NR_SID 4
#define LWR_CDMA_1XRTT_BL_NR_NID 8
#define LWR_CDMA_1XRTT_BL_NR_BASEID 16
#define LWR_CDMA_1XRTT_BL_NR_PNOFFSET 32
#define LWR_CDMA_1XRTT_BL_NR_MARKETID 64
#define LWR_CDMA_1XRTT_BL_NR_CELLID 128
#define LWR_CDMA_1XRTT_BL_NR_SECTOR_NUM 256
#define LWR_CDMA_1XRTT_BL_NR_BANDCLASS 512
#define LWR_CDMA_1XRTT_BL_NR_ARFCN 1024



#define LWR_NBR_EUTRAN_FREQ_STATUS 1
#define LWR_NBR_EUTRAN_FREQ_EARFCNUL 2
#define LWR_NBR_EUTRAN_FREQ_EARFCNDL 4
#define LWR_NBR_EUTRAN_FREQ_PRIORITY 8
#define LWR_NBR_EUTRAN_FREQ_QRXLEVMIN 16
#define LWR_NBR_EUTRAN_FREQ_PMAXUSAGE 32
#define LWR_NBR_EUTRAN_FREQ_PMAX 64
#define LWR_NBR_EUTRAN_FREQ_TRESELECTION 128
#define LWR_NBR_EUTRAN_FREQ_SFUSAGE 256
#define LWR_NBR_EUTRAN_FREQ_TRESELECTIONSFMED 512
#define LWR_NBR_EUTRAN_FREQ_TRESELECTIONSFHIGH 1024
#define LWR_NBR_EUTRAN_FREQ_SINTRASEARCH 2048
#define LWR_NBR_EUTRAN_FREQ_SNONINTRASEARCH 4096
#define LWR_NBR_EUTRAN_FREQ_SERVTHRESHOLDLOW 8192
#define LWR_NBR_EUTRAN_FREQ_THRESHXHIGH 16384
#define LWR_NBR_EUTRAN_FREQ_THRESHXLOW 32768
#define LWR_NBR_EUTRAN_FREQ_MEASBANDWIDTH 65536
#define LWR_NBR_EUTRAN_FREQ_PRESANTENNAPORT1 131072
#define LWR_NBR_EUTRAN_FREQ_NEIGHCELLCFG 262144
#define LWR_NBR_EUTRAN_FREQ_QOFFSETFREQ 524288
#define LWR_NBR_EUTRAN_FREQ_OFFSETFREQ 1048576
#define LWR_NBR_EUTRAN_FREQ_SINTRASEARCHREL9 2097152
#define LWR_NBR_EUTRAN_FREQ_SINTERSEARCHREL9 4194304
#define LWR_NBR_EUTRAN_FREQ_QQUALMINREL9 8388608
#define LWR_NBR_EUTRAN_FREQ_RESELECTHRESHQREL9 16777216
#define LWR_NBR_EUTRAN_FREQ_THRESHXQREL9 33554432


#define LWR_NBR_UTRAN_FREQ_FREQINDEX 1
#define LWR_NBR_UTRAN_FREQ_ARFCNUL 2
#define LWR_NBR_UTRAN_FREQ_ARFCNDL 4
#define LWR_NBR_UTRAN_FREQ_PRIORITY 8
#define LWR_NBR_UTRAN_FREQ_THRESHXHIGH 16
#define LWR_NBR_UTRAN_FREQ_THRESHXLOW 32
#define LWR_NBR_UTRAN_FREQ_QRXLEVELMIN 64
#define LWR_NBR_UTRAN_FREQ_PMAXUTRA 128
#define LWR_NBR_UTRAN_FREQ_PQUALMIN 256
#define LWR_NBR_UTRAN_FREQ_OFFSETFREQ 512
#define LWR_NBR_UTRAN_FREQ_DUPLEXMODE 1024



#define LWR_NBR_UTRAN_CELL_NRINDEX 1
#define LWR_NBR_UTRAN_CELL_RNCID 2
#define LWR_NBR_UTRAN_CELL_CID 4
#define LWR_NBR_UTRAN_CELL_LAC 8
#define LWR_NBR_UTRAN_CELL_RAC 16
#define LWR_NBR_UTRAN_CELL_PLMN 32
#define LWR_NBR_UTRAN_CELL_PSCMCODE 64
#define LWR_NBR_UTRAN_CELL_REMOVE_ALLOWED 128
#define LWR_NBR_UTRAN_CELL_HO_ALLOWED 256
#define LWR_NBR_UTRAN_CELL_ARFCN_UL 512
#define LWR_NBR_UTRAN_CELL_ARFCN_DL 1024
#define LWR_NBR_UTRAN_CELL_VOIP_IN_CAPABLE 2048
#define LWR_NBR_UTRAN_CELL_DUPLEXMODE 4096


#define LWR_UTRAN_SIB6_TRESELECT 1
#define LWR_UTRAN_SIB6_TRESELECT_SF_MEDIUM 2
#define LWR_UTRAN_SIB6_TRESELECT_SF_HIGH 4
#define LWR_UTRAN_SIB6_SFUSAGE_PRES 8




#define LWR_CDMA_1XRTT_FREQ_STATUS 1
#define LWR_CDMA_1XRTT_FREQ_BANDCLASS 2
#define LWR_CDMA_1XRTT_FREQ_ARFCN 4
#define LWR_CDMA_1XRTT_FREQ_SEARCHRATE 8
#define LWR_CDMA_1XRTT_FREQ_OFFSETFREQ 16
#define LWR_CDMA_1XRTT_FREQ_ANRUESEARCHRATE_1XRTT 32



#define LWR_CDMA_HRPD_FREQ_STATUS 1
#define LWR_CDMA_HRPD_FREQ_BANDCLASS 2
#define LWR_CDMA_HRPD_FREQ_ARFCN 4
#define LWR_CDMA_HRPD_FREQ_SEARCHRATE 8
#define LWR_CDMA_HRPD_FREQ_OFFSETFREQ 16
#define LWR_CDMA_HRPD_FREQ_ANRUESEARCHRATE_HRPD 32


#define LWR_NBR_CDMA_BANDCLASS_INDEX 1
#define LWR_NBR_CDMA_BANDCLASS_STATUS 2
#define LWR_NBR_CDMA_BANDCLASS_BANDCLASS 4
#define LWR_NBR_CDMA_BANDCLASS_CELL_RESEL_PRI 8
#define LWR_NBR_CDMA_BANDCLASS_THRESHX_HIGH 16
#define LWR_NBR_CDMA_BANDCLASS_THRESHX_LOW 32


#define WR_MAX_PLMN 6
#define LWR_MAX_CONN 16

typedef struct lwrNghENBCfg
{
  U32 peerId;
  U16 eAValue;

  U16 iPAValue;

  U32 priDstAddr;
  U16 dstPort;



} LwrNghENBCfg;

typedef struct lwrSmMmeCfg
{
   U16 mmeId;
   U32 mmeAddr;
} LwrSmMmeCfg;

typedef struct lwrEcgiCfg
{

   U32 plmnId;

   U32 eutranCellId;
} LwrEcgiCfg;

typedef struct lwrNghInfoCfg
{
   LwrEcgiCfg ecgi;
   U16 physCellId;
   U32 earfcn;
}LwrNghInfoCfg;


typedef struct lwrNghUtraCfg
{
   U16 rncId;
   U16 cId;
   U32 enbAddr;
   U16 arfcnDl;
   U16 arfcnUl;
}LwrNghUtraCfg;

typedef struct lwrNghFreqCfg
{
   U16 arfcnDl;
   U16 arfcnUl;
}LwrNghFreqCfg;


typedef struct lwrGuGrpIdCfg
{

   U32 plmnId;
   U16 mmeGrpId;
} LwrGuGrpIdCfg;

typedef struct lwrNghCellCfg
{
   U32 enbId;
   U8 enbType;
   CmTptAddr ipAddr;
   U32 enbAddr;
   U16 physCellId;
   U16 tac;
   U32 cellId;
   U32 plmnId;
   U32 peerId;
   Bool trgrX2;

   U32 dlEarfcn;
   U32 ulEarfcn;
} LwrNghCellCfg;




typedef enum lwrActType
{
   WR_ACT_ADD = 1,
   WR_ACT_MOD,
   WR_ACT_DEL,
   WR_ACT_IND
} LwrActType;

typedef enum lwrBandwidth
{
   LWR_BANDWIDTH_6,
   LWR_BANDWIDTH_15,
   LWR_BANDWIDTH_25,
   LWR_BANDWIDTH_50,
   LWR_BANDWIDTH_75,
   LWR_BANDWIDTH_100
} LwrBandwidth;

typedef enum lwrQoffRange
{
   LWR_OFFSET_DB_MINUS_24 = 0,
   LWR_OFFSET_DB_MINUS_22,
   LWR_OFFSET_DB_MINUS_20,
   LWR_OFFSET_DB_MINUS_18,
   LWR_OFFSET_DB_MINUS_16,
   LWR_OFFSET_DB_MINUS_14,
   LWR_OFFSET_DB_MINUS_12,
   LWR_OFFSET_DB_MINUS_10,
   LWR_OFFSET_DB_MINUS_8,
   LWR_OFFSET_DB_MINUS_6,
   LWR_OFFSET_DB_MINUS_4,
   LWR_OFFSET_DB_MINUS_2,
   LWR_OFFSET_DB_ZERO_0,
   LWR_OFFSET_DB_PLUS_1,
   LWR_OFFSET_DB_PLUS_2,
   LWR_OFFSET_DB_PLUS_3,
   LWR_OFFSET_DB_PLUS_4,
   LWR_OFFSET_DB_PLUS_5,
   LWR_OFFSET_DB_PLUS_6,
   LWR_OFFSET_DB_PLUS_8,
   LWR_OFFSET_DB_PLUS_10,
   LWR_OFFSET_DB_PLUS_12,
   LWR_OFFSET_DB_PLUS_14,
   LWR_OFFSET_DB_PLUS_16,
   LWR_OFFSET_DB_PLUS_18,
   LWR_OFFSET_DB_PLUS_20,
   LWR_OFFSET_DB_PLUS_21,
   LWR_OFFSET_DB_PLUS_24
}LwrQoffRange;
# 773 "../..//enbapp/src/wr_lwr.h"
typedef enum lwrProtoCfgType
{
   WR_CFG_TYPE_CELL = 1,
   WR_CFG_TYPE_MME = 2,
   WR_CFG_TYPE_NEIGH = 3,
   WR_CFG_TYPE_NEIGH_CELL = 4,
   WR_CFG_TYPE_ENB = 5,
   WR_CFG_TYPE_NEIGH_FREQ = 6,
   WR_CFG_TYPE_BAND_CLASS = 7,
   WR_IND_TYPE_ENB = 8
} LwrProtoCfgType;







typedef enum lwrMmeState
{
   WR_MME_STATE_ACTIVE,
   WR_MME_STATE_INACTIVE
} LwrMmeState;
# 804 "../..//enbapp/src/wr_lwr.h"
typedef enum lwrMmeAdminState
{
   WR_MME_LOCKED,
   WR_MME_UNLOCKED,
   WR_MME_SHUTTING_DOWN
} LwrMmeAdminState;


typedef enum lwrInetAddrType
{
   WR_INET_IPV4,
   WR_INET_IPV6
} LwrInetAddrType;


typedef struct lwrPlmnId
{
   U8 numMncDigits;
   U8 mcc[3];
   U8 mnc[3];
} LwrPlmnId;

typedef struct lwrMmePlmnCfg
{
   TknPres pres;
} LwrMmePlmnCfg;
# 839 "../..//enbapp/src/wr_lwr.h"
typedef struct lwrAddModMmeCfg
{
   U32 reCfgType;
   U8 mmeIndex;
   U8 peerId;
# 852 "../..//enbapp/src/wr_lwr.h"
   CmTptAddr ipAddr;
   CmTptAddr secIpAddr;
   LwrMmeState mmeState;
   LwrMmeAdminState adminState;
} LwrAddModMmeCfg;





typedef struct lwrDelMme
{
   U8 mmeIndex;
   U8 peerId;
} LwrDelMme;

typedef struct lwrMmeCfg
{
   LwrActType action;
   union
   {
      LwrAddModMmeCfg addMme;
      LwrAddModMmeCfg modMme;
      LwrDelMme delMme;
   }t;
} LwrMmeCfg;



typedef enum lwrPhichRes
{
   WR_PHICH_RES_ONE_SIXTH,
   WR_PHICH_RES_ONE_HALF,
   WR_PHICH_RES_ONE,
   WR_PHICH_RES_TWO
} LwrPhichRes;



typedef enum lwrPhichDur
{
   WR_PHICH_DURATION_NORMAL,
   WR_PHICH_DURATION_EXTENDED
} LwrPhichDur;



typedef struct lwrPhichCfg
{
   LwrPhichDur phichDur;
   LwrPhichRes phichRes;
} LwrPhichCfg;





typedef struct lwrCellMibCfgGrp
{
   U32 reCfgType;




   LwrBandwidth dlBw;
   LwrPhichCfg phichCfg;
} LwrCellMibCfgGrp;


typedef enum lwrCellRsrvdFrOperUse
{
   CELL_RESERVED_FOR_OPER_USE,
   CELL_NOT_RESERVED_FOR_OPER_USE
} LwrCellRsrvdFrOperUse;



typedef struct lwrPlmnInfo
{
   LwrPlmnId plmnId;
   LwrCellRsrvdFrOperUse rsrvdFrOperUse;
} LwrPlmnInfo;




typedef struct lwrCellAccessInfo
{
   U32 reCfgType;



   U8 numOfPlmns;
   LwrPlmnInfo plmnInfo[6];

   U16 tac;
   U32 cellId;
   Bool cellBarred;
   Bool intraFreqReSelection;


   Bool csgIndication;
   TknU32 csgIdentity;
} LwrCellAccessInfo;




typedef struct lwrCellSelectInfo
{
   S8 qRxLevMin;
   TknU8 qRxLevMinOffset;
   U8 rel9SelInfoPres;
   S8 qQualMin;
   TknU8 qQualMinOffset;
} LwrCellSelectInfo;





typedef struct lwrTddCfg
{
   U8 subframeCfg;
   U8 specialSubframeCfg;
} LwrTddCfg;

typedef enum lwrSiWindowSize
{
   WR_SI_WINDOWLEN_1,
   WR_SI_WINDOWLEN_2,
   WR_SI_WINDOWLEN_5,
   WR_SI_WINDOWLEN_10,
   WR_SI_WINDOWLEN_15,
   WR_SI_WINDOWLEN_20,
   WR_SI_WINDOWLEN_40
} LwrSiWindowSize;





typedef struct lwrCellSib1CfgGrp
{
   U32 reCfgType;




   LwrCellAccessInfo cellAccessInfo;

   LwrCellSelectInfo cellSelectInfo;

   U8 pMaxPres;
   S8 pMax;
   U8 freqBandInd;
   LwrTddCfg tddCfg;
   LwrSiWindowSize siWindowSize;
} LwrCellSib1CfgGrp;

typedef struct lwrAcBarringCfg
{
   TknPres pres;
   U8 acBarringFactor;
   U16 acBarringTime;
   Bool acBarringAC11;
   Bool acBarringAC12;
   Bool acBarringAC13;
   Bool acBarringAC14;
   Bool acBarringAC15;
} LwrAcBarringCfg;

typedef struct lwrAcBarringInfo
{
   TknPres pres;
   Bool acBarringForEmergency;
   LwrAcBarringCfg acBarringForMOSignal;
   LwrAcBarringCfg acBarringForMOData;

   Bool barringDataUsage;

   Bool barringSignalUsage;




} LwrAcBarringInfo;

typedef enum lwrCyclicPrefixLen
{
   WR_CYCLIC_PREFIX_NORMAL,
   WR_CYCLIC_PREFIX_EXTENDED
} LwrCyclicPrefixLen;

typedef enum lwrPwrOffstGrpB
{
   WR_POWER_OFFSET_DB_MINUS_INFNTY,
   WR_POWER_OFFSET_DB_0,
   WR_POWER_OFFSET_DB_5,
   WR_POWER_OFFSET_DB_8,
   WR_POWER_OFFSET_DB_10,
   WR_POWER_OFFSET_DB_12,
   WR_POWER_OFFSET_DB_15,
   WR_POWER_OFFSET_DB_18
} LwrPwrOffstGrpB;


typedef enum lwrCdma2kBandClassType
{
   WR_CDMA_2K_BAND_CLASS_0 = 0,
   WR_CDMA_2K_BAND_CLASS_1 = 1,
   WR_CDMA_2K_BAND_CLASS_2 = 2,
   WR_CDMA_2K_BAND_CLASS_3 = 3,
   WR_CDMA_2K_BAND_CLASS_4 = 4,
   WR_CDMA_2K_BAND_CLASS_5 = 5,
   WR_CDMA_2K_BAND_CLASS_6 = 6,
   WR_CDMA_2K_BAND_CLASS_7 = 7,
   WR_CDMA_2K_BAND_CLASS_8 = 8,
   WR_CDMA_2K_BAND_CLASS_9 = 9,
   WR_CDMA_2K_BAND_CLASS_10 = 10,
   WR_CDMA_2K_BAND_CLASS_11 = 11,
   WR_CDMA_2K_BAND_CLASS_12 = 12,
   WR_CDMA_2K_BAND_CLASS_13 = 13,
   WR_CDMA_2K_BAND_CLASS_14 = 14,
   WR_CDMA_2K_BAND_CLASS_15 = 15,
   WR_CDMA_2K_BAND_CLASS_16 = 16,
   WR_CDMA_2K_BAND_CLASS_17 = 17,
   WR_CDMA_2K_BAND_CLASS_SPARE_14 = 18,
   WR_CDMA_2K_BAND_CLASS_SPARE_13 = 19,
   WR_CDMA_2K_BAND_CLASS_SPARE_12 = 20,
   WR_CDMA_2K_BAND_CLASS_SPARE_11 = 21,
   WR_CDMA_2K_BAND_CLASS_SPARE_10 = 22,
   WR_CDMA_2K_BAND_CLASS_SPARE_9 = 23,
   WR_CDMA_2K_BAND_CLASS_SPARE_8 = 24,
   WR_CDMA_2K_BAND_CLASS_SPARE_7 = 25,
   WR_CDMA_2K_BAND_CLASS_SPARE_6 = 26,
   WR_CDMA_2K_BAND_CLASS_SPARE_5 = 27,
   WR_CDMA_2K_BAND_CLASS_SPARE_4 = 28,
   WR_CDMA_2K_BAND_CLASS_SPARE_3 = 29,
   WR_CDMA_2K_BAND_CLASS_SPARE_2 = 30,
   WR_CDMA_2K_BAND_CLASS_SPARE_1 = 31
} LwrCdma2kBandClassType;



typedef struct lwrPreambleCfg
{
   U8 numOfRAPreambles;
   U8 groupASize;
   U16 msgSizeGroupA;
   LwrPwrOffstGrpB pwrOffstGrpB;
} LwrPreambleCfg;

typedef struct lwrPowerRamping
{
   U8 powerRampingstep;
   S16 initRcvdTrgtPwr;
} LwrPowerRamping;

typedef struct lwrRaSupervisionCfg
{
   U8 preambleTransMax;
   U8 rarWindowSize;
   U8 macContResTimer;
} LwrRaSupervisionCfg;

typedef struct lwrRachCfgCommon
{
   U32 reCfgType;




   LwrPreambleCfg preambleCfg;
   LwrPowerRamping powerRamping;
   LwrRaSupervisionCfg raSupervisionCfg;
   U8 maxHARQMsg3;
} LwrRachCfgCommon;





typedef struct lwrBCCHCfgCommon
{
   U8 modPeriodCoeff;
} LwrBCCHCfgCommon;



typedef enum lwrnB
{
   WR_FOUR_T,
   WR_TWO_T,
   WR_ONE_T,
   WR_HALF_T,
   WR_QUATER_T,
   WR_EIGTH_T,
   WR_SIXTEENTH_T,
   WR_THIRTYTWOTH_T
} LwrnB;



typedef enum lwrDefaultPagingCycle
{
   WR_RF_32,
   WR_RF_64,
   WR_RF_128,
   WR_RF_256
} LwrDefaultPagingCycle;

typedef struct lwrPCCHCfgCommon
{
   LwrDefaultPagingCycle defaultPagingCycle;
   LwrnB nB;
} LwrPCCHCfgCommon;






typedef struct lwrPdschCfgCommon
{
   S8 referenceSignalPwr;
   U8 pB;
} LwrPdschCfgCommon;

typedef enum lwrPuschHoppingMode
{
   WR_INTER_SUBFRAME_HOPPING,
   WR_INTRA_SUBFRAME_HOPPING
} LwrPuschHoppingMode;

typedef struct lwrPuschBasicCfgCommon
{
   U32 reCfgType;




   U8 nSb;
   LwrPuschHoppingMode hoppingMode;
   U8 hoppingOffset;
   Bool enable64QAM;
} LwrPuschBasicCfgCommon;

 typedef struct lwrPuschRefSignalCfg
{
   Bool grpHopEnabled;
   U8 grpAsgnPusch;
   Bool seqHopEnabled;
   U8 cyclicShift;
} LwrPuschRefSignalCfg;





typedef struct lwrPuschCfgCommon
{
   U32 reCfgType;




   LwrPuschBasicCfgCommon puschBasicCfg;
   LwrPuschRefSignalCfg puschRefSigCfg;

} LwrPuschCfgCommon;

typedef enum lwrDeltaPucchShift
{
   WR_DELTA_PUCCH_SHIFT_1,
   WR_DELTA_PUCCH_SHIFT_2,
   WR_DELTA_PUCCH_SHIFT_3
} LwrDeltaPucchShift;




typedef struct lwrPucchCfgCommon
{
   LwrDeltaPucchShift deltaShift;
   U8 nRBCqi;

   U8 nCSAN;

   U16 n1PucchAn;
} LwrPucchCfgCommon;

typedef struct lwrSRSCfgCommon
{
   U8 cSrs;
   U8 subframeCfg;
   Bool simulAckNackSrs;
   Bool srsMaxUpts;
} LwrSRSCfgCommon;

typedef enum lwrULPwrAlpha
{
   WR_UL_PWR_ALPHA_0,
   WR_UL_PWR_ALPHA_04,
   WR_UL_PWR_ALPHA_05,
   WR_UL_PWR_ALPHA_06,
   WR_UL_PWR_ALPHA_07,
   WR_UL_PWR_ALPHA_08,
   WR_UL_PWR_ALPHA_09,
   WR_UL_PWR_ALPHA_1
} LwrULPwrAlpha;

typedef enum lwrDeltaPUCCHF
{
   WR_PUCCH_F_DELTA_min_2,
   WR_PUCCH_F_DELTA_0,
   WR_PUCCH_F_DELTA_1,
   WR_PUCCH_F_DELTA_2,
   WR_PUCCH_F_DELTA_3,
   WR_PUCCH_F_DELTA_5
} LwrDeltaPUCCHF;

typedef struct lwrDeltaPUCCHLst
{
   LwrDeltaPUCCHF deltaPucchFormat1;
   LwrDeltaPUCCHF deltaPucchFormat1b;
   LwrDeltaPUCCHF deltaPucchFormat2;
   LwrDeltaPUCCHF deltaPucchFormat2a;
   LwrDeltaPUCCHF deltaPucchFormat2b;
} LwrDeltaPUCCHLst;




typedef struct lwrULPwrCtrlCommon
{
   S8 pNomialPusch;
   LwrULPwrAlpha alpha;
   S8 pNomialPucch;
   LwrDeltaPUCCHLst deltaFLst;
   S8 deltaMsg3;
} LwrULPwrCtrlCommon;

typedef struct lwrPrachCfgInfo
{
   U8 prachCfgIdx;

   Bool highSpeedFlag;
   U8 zeroCorrelationZoneCfg;
   U8 prachFreqOffset;
} LwrPrachCfgInfo;

typedef struct lwrPrachCfgCommon
{
   U16 rootSequenceIndx;
   LwrPrachCfgInfo prachCfgInfo;
   U8 prachPosition;
} LwrPrachCfgCommon;

typedef struct lwrRadioResourceCommon
{
   U32 reCfgType;




   LwrRachCfgCommon rachCfgCommon;
   LwrBCCHCfgCommon bcchCfgCommon;
   LwrPCCHCfgCommon pcchCfgCommon;
   LwrPrachCfgCommon prachCfgCommon;
   LwrPdschCfgCommon pdschCfgCommon;
   LwrPuschCfgCommon puschCfgCommon;
   LwrPucchCfgCommon pucchCfgCommon;
   LwrSRSCfgCommon srsCfgCommon;
   LwrULPwrCtrlCommon ulPwrCtrlCommon;
   LwrCyclicPrefixLen ulCyclicPrefix;
   LwrCyclicPrefixLen dlCyclicPrefix;
} LwrRadioResourceCommon;

typedef struct lwrUeTimerConstants
{
   U16 t300;
   U16 t301;
   U16 t302;
   U16 t304;
   U16 ccoT304;
   U16 t310;
   U16 n310;
   U16 t311;
   U16 n311;
   U16 t320;
} LwrUeTimerConstants;

typedef struct lwrULFrequencyInfo
{
   U16 eARFCN;
   LwrBandwidth ulBandwidth;
   U8 addSpectEmission;
} LwrULFrequencyInfo;

typedef enum lwrTimeAlignment
{
   WR_TIME_ALIGNMENT_TIMER_500,
   WR_TIME_ALIGNMENT_TIMER_750,
   WR_TIME_ALIGNMENT_TIMER_1280,
   WR_TIME_ALIGNMENT_TIMER_1920,
   WR_TIME_ALIGNMENT_TIMER_2560,
   WR_TIME_ALIGNMENT_TIMER_5120,
   WR_TIME_ALIGNMENT_TIMER_10240,
   WR_TIME_ALIGNMENT_TIMER_INFINITE
} LwrTimeAlignment;

typedef struct lwrCellSib2CfgGrp
{
   U32 reCfgType;




   LwrAcBarringInfo acBarringInfo;
   LwrRadioResourceCommon radioResourceCommon;
   LwrUeTimerConstants ueTimerConstants;
   LwrULFrequencyInfo ulFreqInfo;
   LwrTimeAlignment timeAlignmentCommon;

   LwrAcBarringCfg acBarringVoice;
   LwrAcBarringCfg acBarringVideo;
} LwrCellSib2CfgGrp;
# 1396 "../..//enbapp/src/wr_lwr.h"
typedef struct lwrMeasMobilityStatParams
{
   TknPres speedStatPres;
   U16 tEvalulation;
   U16 tHystNormal;
   U16 nCellChangeMedium;
   U16 nCellChangeHigh;
} LwrMeasMobilityStatParams;
# 1413 "../..//enbapp/src/wr_lwr.h"
typedef struct lwrMeasSpdStateScaleFact
{
   U8 sMeasure;
   TknPres sfUsagePres;
   U8 timeToTriggerSfMedium;
   U8 timeToTriggerSfHigh;
} LwrMeasSpdStateScaleFact;







typedef struct lwrMeasQtyCfgParams
{
   U8 rsrpFltrCoeff;
   U8 rsrqFltrCoeff;
   U8 measQtyCDMA2k;
   U8 ecnoFltrCoeff;
   U8 measQtyUtraFdd;
   U8 measQtyUtraTdd;
} LwrMeasQtyCfgParams;
# 1451 "../..//enbapp/src/wr_lwr.h"
typedef struct lwrMeasPreRegHrpd
{
   U8 preRegAllowed;
   U8 preRegZoneId;
   U8 NumOf2ndPreRegZoneIdList;
   U8 secondaryPreRegZoneId1;
   U8 secondaryPreRegZoneId2;
} LwrMeasPreRegHrpd;
# 1471 "../..//enbapp/src/wr_lwr.h"
typedef struct lwrMeasGapConfig
{
   U32 gapPatternForInterFA;
   U32 gapPatternForInterRAT;
   TknPres gapForANRPres;
   U32 gapPatternForANR;
} LwrMeasGapConfig;
# 1488 "../..//enbapp/src/wr_lwr.h"
typedef enum lwrMeasEvntA1Type
{
   WR_MEAS_EVENTA1_DEACT_MEASGAP_INTERFREQ_HO_RSRP,
   WR_MEAS_EVENTA1_DEACT_MEASGAP_INTERFREQ_HO_RSRQ,
   WR_MEAS_EVENTA1_DEACT_MEASGAP_INTERFREQ_HRPD_RSRP,
   WR_MEAS_EVENTA1_DEACT_MEASGAP_INTERFREQ_HRPD_RSRQ,
   WR_MEAS_EVENTA1_RESV1,
   WR_MEAS_EVENTA1_RESV2
} LwrMeasEvntA1Type;
# 1513 "../..//enbapp/src/wr_lwr.h"
typedef enum lwrMeasEvntA2Type
{
   WR_MEAS_EVENTA2_ACT_MEASGAP_INTERFREQ_HO_RSRP,
   WR_MEAS_EVENTA2_ACT_MEASGAP_INTERFREQ_HO_RSRQ,
   WR_MEAS_EVENTA2_ACT_MEASGAP_INTERFREQ_ANR_RSRP,
   WR_MEAS_EVENTA2_ACT_MEASGAP_INTERFREQ_ANR_RSRQ,
   WR_MEAS_EVENTA2_ACT_MEASGAP_HO_NONOPT_HRPD_RSRP,
   WR_MEAS_EVENTA2_ACT_MEASGAP_HO_NONOPT_HRPD_RSRQ,
   WR_MEAS_EVENTA2_ACT_MEASGAP_HO_OPT_HRPD_RSRP,
   WR_MEAS_EVENTA2_ACT_MEASGAP_HO_OPT_HRPD_RSRQ,
   WR_MEAS_EVENTA2_ACT_MEASGAP_ANR_HRPD_RSRP,
   WR_MEAS_EVENTA2_ACT_MEASGAP_ANR_HRPD_RSRQ,
   WR_MEAS_EVENTA2_RESV1,
   WR_MEAS_EVENTA2_RESV2
} LwrMeasEvntA2Type;
# 1539 "../..//enbapp/src/wr_lwr.h"
typedef enum lwrMeasEvntA3Type
{
   WR_MEAS_EVENTA3_INTRA_FREQ_HO,
   WR_MEAS_EVENTA3_INTER_FREQ_HO_RSRP,
   WR_MEAS_EVENTA3_INTER_FREQ_HO_RSRQ,
   WR_MEAS_EVENTA3_INTRA_FREQ_ANR,
   WR_MEAS_EVENTA3_INTER_FREQ_ANR,
   WR_MEAS_EVENTA3_RESV1,
   WR_MEAS_EVENTA3_RESV2
} LwrMeasEvntA3Type;







typedef enum lwrMeasEvntA4Type
{
   WR_MEAS_EVENTA4_ANR_SPECIFIC,
   WR_MEAS_EVENTA4_RESV1,
   WR_MEAS_EVENTA4_RESV2
} LwrMeasEvntA4Type;
# 1573 "../..//enbapp/src/wr_lwr.h"
typedef enum lwrMeasEvntA5Type
{
   WR_MEAS_EVENTA5_INTRA_FREQ_HO,
   WR_MEAS_EVENTA5_INTER_FREQ_HO_RSRP,
   WR_MEAS_EVENTA5_INTER_FREQ_HO_RSRQ,
   WR_MEAS_EVENTA5_INTRA_FREQ_ANR,
   WR_MEAS_EVENTA5_INTER_FREQ_ANR,
   WR_MEAS_EVENTA5_RESV1,
   WR_MEAS_EVENTA5_RESV2
} LwrMeasEvntA5Type;







typedef enum lwrMeasEutraPeriodic
{
   WR_MEAS_EUTRA_PERIODIC_REPORT_STRNG_CELLS,
   WR_MEAS_EUTRA_PERIODIC_REPORT_CGI,
   WR_MEAS_EUTRA_PERIODIC_RESV1
} LwrMeasEutraPeriodic;







typedef enum lwrMeasEvntB1Type
{
   WR_MEAS_EVENTB1_ANR_SPECIFIC,
   WR_MEAS_EVENTB1_RESV1,
   WR_MEAS_EVENTB1_RESV2
} LwrMeasEvntB1Type;
# 1617 "../..//enbapp/src/wr_lwr.h"
typedef enum lwrMeasUtraB1Type
{
   WR_MEAS_UTRA_EVENTB1_HO,
   WR_MEAS_UTRA_EVENTB1_CSFB,
   WR_MEAS_UTRA_EVENTB1_ANR,
   WR_MEAS_UTRA_EVENTB1_RESV1
}LwrMeasUtraB1Type;
# 1632 "../..//enbapp/src/wr_lwr.h"
typedef enum lwrMeasUtraB2Type
{
   WR_MEAS_UTRA_EVENTB2_HO,
   WR_MEAS_UTRA_EVENTB2_CSFB,
   WR_MEAS_UTRA_EVENTB2_ANR,
   WR_MEAS_UTRA_EVENTB2_RESV1
}LwrMeasUtraB2Type;







typedef enum lwrMeas1xCdmaEvntB2Type
{
   WR_MEAS_1XCDMA_EVENTB2_INTER_RAT_HO,
   WR_MEAS_1XCDMA_EVENTB2_RESV1,
   WR_MEAS_1XCDMA_EVENTB2_RESV2
} LwrMeas1xCdmaEvntB2Type;







typedef enum lwrMeasCdmaHrpdEvntB2Type
{
   WR_MEAS_CDMA_HRPD_EVENTB2_OPT_HRPD_HO,
   WR_MEAS_CDMA_HRPD_EVENTB2_RESV1,
   WR_MEAS_CDMA_HRPD_EVENTB2_RESV2
} LwrMeasCdmaHrpdEvntB2Type;







typedef enum lwrMeasCDMAPeriodic
{
   WR_MEAS_CDMA_PERIODIC_REPORT_STRNG_CELLS,
   WR_MEAS_CDMA_PERIODIC_REPORT_STRNG_CELLS_ANR,
   WR_MEAS_CDMA_PERIODIC_REPORT_CGI
} LwrMeasCDMAPeriodic;


typedef enum lwrMeasUtraPeriodic
{
   WR_MEAS_UTRA_PERIODIC_REPORT_STRNG_CELLS,
   WR_MEAS_UTRA_PERIODIC_REPORT_STRNG_CELLS_ANR,
   WR_MEAS_UTRA_PERIODIC_REPORT_STRNG_CELLS_CSFB
}LwrMeasUtraPeriodic;
# 1713 "../..//enbapp/src/wr_lwr.h"
typedef struct lwrMeasCDMAEvntB2RptCfg
{
   TknPres isPres;
   U8 reason;
   U8 cellType;
   U32 threshold1Rsrp;
   U32 threshold1Rsrq;
   U32 threshold2;
   U32 hysteresis;
   U32 timeToTrigger;
   U8 maxRptCells;
   U8 trigQtyEutra;
   U32 reportInterval;
   U32 reportAmount;
} LwrMeasCDMAEvntB2RptCfg;
# 1741 "../..//enbapp/src/wr_lwr.h"
typedef struct lwrMeasCDMAPeridRptCfg
{
   TknPres isPres;
   U8 reason;
   U8 cellType;
   U8 maxRptCells;
   U32 reportInterval;
   U32 reportAmount;
} LwrMeasCDMAPeridRptCfg;
# 1765 "../..//enbapp/src/wr_lwr.h"
typedef struct lwrMeasEutraPeridRptCfg
{
   TknPres isPres;
   U8 reason;
   U8 triggerQty;
   U8 reportQty;
   U8 maxRptCells;
   U32 reportInterval;
   U32 reportAmount;
} LwrMeasEutraPeridRptCfg;
# 1795 "../..//enbapp/src/wr_lwr.h"
typedef struct lwrMeasCDMAEvntB1RptCfg
{
   TknPres isPres;
   U8 reason;
   U8 cellType;
   U32 threshold;
   U32 hysteresis;
   U32 timeToTrigger;
   U8 maxRptCells;
   U32 reportInterval;
   U32 reportAmount;
} LwrMeasCDMAEvntB1RptCfg;
# 1829 "../..//enbapp/src/wr_lwr.h"
typedef struct lwrMeasEvntA3RptCfg
{
   TknPres isPres;
   U8 reason;
   S32 offset;
   U8 reportOnLeave;
   U32 hysteresis;
   U32 timeToTrigger;
   U8 triggerQty;
   U8 reportQty;
   U8 maxRptCells;
   U32 reportInterval;
   U32 reportAmount;
} LwrMeasEvntA3RptCfg;
# 1869 "../..//enbapp/src/wr_lwr.h"
typedef struct lwrMeasEvntA5RptCfg
{
   TknPres isPres;
   U8 reason;
   U32 threshold1_RSRP;
   U32 threshold1_RSRQ;
   U32 threshold2_RSRP;
   U32 threshold2_RSRQ;
   U32 hysteresis;
   U32 timeToTrigger;
   U8 triggerQty;
   U8 reportQty;
   U8 maxRptCells;
   U32 reportInterval;
   U32 reportAmount;
} LwrMeasEvntA5RptCfg;
# 1907 "../..//enbapp/src/wr_lwr.h"
typedef struct lwrMeasEvntRptCfg
{
   TknPres isPres;
   U8 reason;
   U32 threshold_RSRP;
   U32 threshold_RSRQ;
   U32 hysteresis;
   U32 timeToTrigger;
   U8 triggerQty;
   U8 reportQty;
   U8 maxRptCells;
   U32 reportInterval;
   U32 reportAmount;
} LwrMeasEvntRptCfg;
# 1932 "../..//enbapp/src/wr_lwr.h"
typedef struct lwrMeasUtraPeriodRptCfg
{
   U8 reason;
   Bool activeState;
   U8 maxReportCell;
   U8 reportInterval;
   U8 reportAmount;
}LwrMeasUtraPeriodRptCfg;
# 1968 "../..//enbapp/src/wr_lwr.h"
typedef struct lwrMeasUtraEvntB1RptCfg
{
   LwrMeasUtraB1Type reason;
   Bool activeState;
   U8 b1ThresholdUtraRSCP;
   U8 b1ThresholdUtraEcNo;
   U8 hysteresis;
   U16 timeToTrigger;
   U8 maxReportCell;
   U8 reportInterval;
   U8 reportAmount;
}LwrMeasUtraEvntB1RptCfg;
# 2017 "../..//enbapp/src/wr_lwr.h"
typedef struct lwrMeasUtraEvntB2RptCfg
{
   LwrMeasUtraB2Type reason;
   Bool activeState;
   U8 b2Threshold1RSRP;
   U8 b2Threshold1RSRQ;
   U8 b2Threshold2UtraRSCP;
   U8 b2Threshold2UtraEcNo;
   U8 hysteresis;
   U16 timeToTrigger;
   U8 maxReportCell;
   U8 reportInterval;
   U8 reportAmount;

}LwrMeasUtraEvntB2RptCfg;
# 2060 "../..//enbapp/src/wr_lwr.h"
typedef struct lwrCellMeasCfgGrp
{
   U32 reCfgType;
   LwrMeasEvntRptCfg measA1EvtRptCfg[4];
   LwrMeasEvntRptCfg measA2EvtRptCfg[10];
   LwrMeasEvntRptCfg measA4EvtRptCfg[1];
   LwrMeasEvntA3RptCfg measEvtA3Cfg[5];
   LwrMeasEvntA5RptCfg measEvtA5Cfg[5];
   LwrMeasEutraPeridRptCfg measEutraPerdRptCfg[2];
   LwrMeasUtraPeriodRptCfg measUtraPerdRptCfg[4];
   LwrMeasUtraEvntB1RptCfg measUtraEventB1RptCfg[4];
   LwrMeasUtraEvntB2RptCfg measUtraEventB2RptCfg[4];
   LwrMeasCDMAEvntB1RptCfg meas1xCDMAEventB1RptCfg[1];
   LwrMeasCDMAEvntB1RptCfg measCDMAHrpdEventB1RptCfg[1];
   LwrMeasCDMAEvntB2RptCfg
      meas1xCDMAEventB2RptCfg[1];
   LwrMeasCDMAEvntB2RptCfg
      measCDMAHrpdEventB2RptCfg[1];
   LwrMeasCDMAPeridRptCfg meas1xCDMAPeridRptCfg[3];
   LwrMeasCDMAPeridRptCfg measCDMAHrpdPeridRptCfg[3];
   LwrMeasSpdStateScaleFact measSpdSclFact;
   LwrMeasMobilityStatParams mobStatParams;
   LwrMeasQtyCfgParams qtyCfg;
   LwrMeasGapConfig measGap;
   LwrMeasPreRegHrpd preRegHrpd;
   U8 searchWindowSize1xRTT;
   U8 searchWindowSizeHRPD;

} LwrCellMeasCfgGrp;
# 2099 "../..//enbapp/src/wr_lwr.h"
typedef enum lwrCellCfgGrpType
{
   WR_CELL_CFG_GRP_MIB,
   WR_CELL_CFG_GRP_SIB1,
   WR_CELL_CFG_GRP_SIB2,
   WR_CELL_CFG_GRP_SIB3,
   WR_CELL_CFG_GRP_SIB4,
   WR_CELL_CFG_GRP_SIB6,
   WR_CELL_CFG_GRP_SIB9,
   WR_CELL_CFG_GRP_ANR,
   WR_CELL_CFG_GRP_MEAS,
   WR_CELL_CFG_GRP_EAID,
   WR_CELL_CFG_GRP_SIB_SCHED,
   WR_CELL_CFG_GRP_RAB_PARAMS,
   WR_CELL_CFG_GRP_TIMER,
   WR_CELL_CFG_GRP_RRM,
   WR_CELL_CFG_GRP_ULSCHD,
   WR_CELL_CFG_GRP_DLSCHD,
   WR_CELL_CFG_MAX_GRPS
} LwrCellCfgGrpType;
# 2154 "../..//enbapp/src/wr_lwr.h"
typedef struct lwrCellSib3CfgGrp
{
   U32 reCfgType;




   U8 qHyst;
   U8 speedStateReselPres;
   U8 sfMedium;
   U8 sfHigh;
   LwrMeasMobilityStatParams mobStateParams;




} LwrCellSib3CfgGrp;

typedef struct lwrSib4CsgInfo
{
  U8 csgPciType;
  U16 csgStartPhyCellId;
  U8 csgPciRangeUsage;
  U8 csgPciRange;
} LwrSib4CsgInfo;
typedef struct lwrcellSib4CfgGrp
{
   U32 reCfgType;
   LwrSib4CsgInfo csgInfo;
} LwrCellSib4CfgGrp;
typedef enum lwrEnbType
{
   WR_ENODEB_TYPE_MACRO,
   WR_ENODEB_TYPE_HOME
} LwrEnbType;

typedef struct lwrCellEAIDCfgGrp
{
   U32 reCfgType;
   TknU32 eaid[15];
} LwrCellEAIDCfgGrp;


typedef struct lwrCellSibSchedCfgGrp
{
  U32 reCfgType;
   U8 sib2Period;
   U8 sib3Period;
   U8 sib4Period;
   U8 sib5Period;
   U8 sib6Period;
   U8 sib7Period;
   U8 sib8Period;
   U8 sib9Period;
   U8 sib10Period;
   U8 sib11Period;
   U8 sib12Period;
   U8 siWindow;
   Bool sib10ManualPrdPres;
   U16 sib10RepetPeriod;
   U16 sib10NumBroadCast;
   U16 sib11WarnSegSize;
} LwrCellSibSchedCfgGrp;

typedef enum lwrUpdateRetryCount
{
   ci_CountZero = 0,
   ci_CountOne = 1,
   ci_CouintTwo = 2,
   ci_CountThree = 3,
   ci_CountTen = 4,
   ci_CountInfinity = 5
} LwrUpdateRetryCount;

typedef enum lwrUpdateTimeToWait
{
   ci_v1s = 0,
   ci_v2s = 1,
   ci_v5s = 2,
   ci_v10s = 3,
   ci_v20s = 4,
   ci_v60s = 5
}LwrUpdateTimeToWait;


typedef struct lwrProcTimerCfgGrp
{
   U32 reCfgType;
   U8 dbIndex;
   U32 rrcConnectionSetupTmr;
   U32 rrcConnectionReconfigTmr;
   U32 rrcConnectionReEstablishTmr;
   U32 rrcSecurityModeCommandTmr;
   U32 rrcUeCapabilityEnquiryTmr;
   U32 rrcConnectionReleaseTmr;
   U32 rrcHandoverPreperationTmr;
   U32 rrcUeInformationRequestTmr;
   U16 s1SetupTmr;
   U16 s1UpdateTmr;
   LwrUpdateRetryCount s1RetryCount;
   LwrUpdateTimeToWait s1TimeToWait;
   U16 s1InitialContextSetupTmr;
   U16 s1ErabReleaseIndicationTmr;
   U16 s1UeContextReleaseTmr;
   U16 s1PathSwitchTmr;
   U16 s1HandoverPreperationTmr;
   U16 s1RelocOveallTmr;
   U16 s1HandoverCancelTmr;
   U16 s1MmeConfigurationTransferTmr;
   U16 s1MmeStatusTransferTmr;
   U16 s1ResetTmr;
   U16 S1ResetRetryCount;
   U16 x2SetupTmr;
   LwrUpdateTimeToWait x2SetTimeToWait;
   U16 x2UpdateTmr;
   LwrUpdateRetryCount x2UpdRetryCount;
   LwrUpdateTimeToWait x2UpdTimeToWait;
   U16 x2HandoverPreperationTmr;
   U16 x2RelocOverallTmr;
   U16 x2StoreUeContextTmr;
   U16 x2SnStatusTransferTmr;
   U16 x2ResetTmr;
   U16 X2ResetRetryCount;
   U16 X2SetupRetryCount;
   U16 internalResourceSetupTmr;
   U16 internalResourceReleaseTmr;
   U16 internalSecurityControlTmr;
   U16 internalRrcDataTransferTmr;
   U16 internalForwardingPathSetupTmr;
   U16 internalReestablishControlTmr;
   U16 internalBufferFlushTmr;
   U16 internalDataTransferStartTmr;
   U16 internalDataForwardEndIndTmr;
   U16 internalReestablishTimeToWaitTmr;
   U16 internalUserInactivityTmr;
   U16 internalSignalingInactivityTmr;
   U16 internalUnassignedTmr;
   U16 internalNoWaitRetryTmr;
   U16 internalRrcResetTmr;
   U16 internalEnbResetTmr;
   U16 internalSolicitMeasurementTmr;
   U16 internalRtdInfoReqTmr;
   U16 rimRirTmr;
   U16 rimRiaeTmr;
   U16 internalSubCellChangeTmr;
   U16 internalSubCellPdcpControlTmr;
   U16 ehrpdOptHoCompleteTmr;
   U16 intraEnbHoCompleteTmr;
   U16 measurementReportToWaitTmr;
}LwrProcTimerCfgGrp;





typedef enum lwrTimerPollRetransmit
{
   LTE_MS5,
   LTE_MS10,
   LTE_MS15,
   LTE_MS20,
   LTE_MS25,
   LTE_MS30,
   LTE_MS35,
   LTE_MS40,
   LTE_MS45,
   LTE_MS50,
   LTE_MS55,
   LTE_MS60,
   LTE_MS65,
   LTE_MS70,
   LTE_MS75,
   LTE_MS80,
   LTE_MS85,
   LTE_MS90,
   LTE_MS95,
   LTE_MS100,
   LTE_MS105,
   LTE_MS110,
   LTE_MS115,
   LTE_MS120,
   LTE_MS125,
   LTE_MS130,
   LTE_MS135,
   LTE_MS140,
   LTE_MS145,
   LTE_MS150,
   LTE_MS155,
   LTE_MS160,
   LTE_MS165,
   LTE_MS170,
   LTE_MS175,
   LTE_MS180,
   LTE_MS185,
   LTE_MS190,
   LTE_MS195,
   LTE_MS200,
   LTE_MS205,
   LTE_MS210,
   LTE_MS215,
   LTE_MS220,
   LTE_MS225,
   LTE_MS230,
   LTE_MS235,
   LTE_MS240,
   LTE_MS245,
   LTE_MS250,
   LTE_MS300,
   LTE_MS350,
   LTE_MS400,
   LTE_MS450,
   LTE_MS500,
   LTE_SPARE9,
   LTE_SPARE8,
   LTE_SPARE7,
   LTE_SPARE6,
   LTE_SPARE5,
   LTE_SPARE4,
   LTE_SPARE3,
   LTE_SPARE2,
   LTE_SPARE1

} LwrTimerPollRetransmit;


typedef enum lwrPollPdu
{
   LTE_P4,
   LTE_P8,
   LTE_P16,
   LTE_P32,
   LTE_P64,
   LTE_P128,
   LTE_P256,
   LTE_PInfinity
} LwrPollPdu;

typedef enum lwrPollByte
{
   LTE_KB25,
   LTE_KB50,
   LTE_KB75,
   LTE_KB100,
   LTE_KB125,
   LTE_KB250,
   LTE_KB375,
   LTE_KB500,
   LTE_KB750,
   LTE_KB1000,
   LTE_KB1250,
   LTE_KB1500,
   LTE_KB2000,
   LTE_KB3000,
   LTE_KBinfinity,
   LTE_SPARE_1
} LwrPollByte;

typedef enum lwrMaxRetransThresh
{
   LTE_T1,
   LTE_T2,
   LTE_T3,
   LTE_T4,
   LTE_T6,
   LTE_T8,
   LTE_T16,
   LTE_T32
} LwrMaxRetransThresh;

typedef enum lwrTimerReordering
{
   LTE_TR_MS0,
   LTE_TR_MS5,
   LTE_TR_MS10,
   LTE_TR_MS15,
   LTE_TR_MS20,
   LTE_TR_MS25,
   LTE_TR_MS30,
   LTE_TR_MS35,
   LTE_TR_MS40,
   LTE_TR_MS45,
   LTE_TR_MS50,
   LTE_TR_MS55,
   LTE_TR_MS60,
   LTE_TR_MS65,
   LTE_TR_MS70,
   LTE_TR_MS75,
   LTE_TR_MS80,
   LTE_TR_MS85,
   LTE_TR_MS90,
   LTE_TR_MS95,
   LTE_TR_MS100,
   LTE_TR_MS110,
   LTE_TR_MS120,
   LTE_TR_MS130,
   LTE_TR_MS140,
   LTE_TR_MS150,
   LTE_TR_MS160,
   LTE_TR_MS170,
   LTE_TR_MS180,
   LTE_TR_MS190,
   LTE_TR_MS200,
   LTE_TR_SPARE1
} LwrTimerReordering;

typedef enum lwrTimerStatusProhibit
{
   LTE_TSP_MS0,
   LTE_TSP_MS5,
   LTE_TSP_MS10,
   LTE_TSP_MS15,
   LTE_TSP_MS20,
   LTE_TSP_MS25,
   LTE_TSP_MS30,
   LTE_TSP_MS35,
   LTE_TSP_MS40,
   LTE_TSP_MS45,
   LTE_TSP_MS50,
   LTE_TSP_MS55,
   LTE_TSP_MS60,
   LTE_TSP_MS65,
   LTE_TSP_MS70,
   LTE_TSP_MS75,
   LTE_TSP_MS80,
   LTE_TSP_MS85,
   LTE_TSP_MS90,
   LTE_TSP_MS95,
   LTE_TSP_MS100,
   LTE_TSP_MS105,
   LTE_TSP_MS110,
   LTE_TSP_MS115,
   LTE_TSP_MS120,
   LTE_TSP_MS125,
   LTE_TSP_MS130,
   LTE_TSP_MS135,
   LTE_TSP_MS140,
   LTE_TSP_MS145,
   LTE_TSP_MS150,
   LTE_TSP_MS155,
   LTE_TSP_MS160,
   LTE_TSP_MS165,
   LTE_TSP_MS170,
   LTE_TSP_MS175,
   LTE_TSP_MS180,
   LTE_TSP_MS185,
   LTE_TSP_MS190,
   LTE_TSP_MS195,
   LTE_TSP_MS200,
   LTE_TSP_MS205,
   LTE_TSP_MS210,
   LTE_TSP_MS215,
   LTE_TSP_MS220,
   LTE_TSP_MS225,
   LTE_TSP_MS230,
   LTE_TSP_MS235,
   LTE_TSP_MS240,
   LTE_TSP_MS245,
   LTE_TSP_MS250,
   LTE_TSP_MS300,
   LTE_TSP_MS350,
   LTE_TSP_MS400,
   LTE_TSP_MS450,
   LTE_TSP_MS500,
   LTE_TSP_SPARE8,
   LTE_TSP_SPARE7,
   LTE_TSP_SPARE6,
   LTE_TSP_SPARE5,
   LTE_TSP_SPARE4,
   LTE_TSP_SPARE3,
   LTE_TSP_SPARE2,
   LTE_TSP_SPARE1

} LwrTimerStatusProhibit;

typedef enum lwrSnFieldLength
{
   SIZE5,
   SIZE10
} LwrSnFieldLength;

typedef enum lwrPrioritisedBitRate
{
   LTE_PBR_KBPS0,
   LTE_PBR_KBPS8,
   LTE_PBR_KBPS16,
   LTE_PBR_KBPS32,
   LTE_PBR_KBPS64,
   LTE_PBR_KBPS128,
   LTE_PBR_KBPS256,
   INFINITY,
   LTE_PBR_SPARE8,
   LTE_PBR_SPARE7,
   LTE_PBR_SPARE6,
   LTE_PBR_SPARE5,
   LTE_PBR_SPARE4,
   LTE_PBR_SPARE3,
   LTE_PBR_SPARE2,
   LTE_PBR_SPARE1

} LwrPrioritisedBitRate;

typedef enum lwrBucketSizeDurn
{
   LTE_BSD_MS50,
   LTE_BSD_MS100,
   LTE_BSD_MS150,
   LTE_BSD_MS300,
   LTE_BSD_MS500,
   LTE_BSD_MS1000,
   LTE_BSD_SPARE2,
   LTE_BSD_SPARE1

} LwrBucketSizeDurn;
typedef struct lwrSrbQciInfo
{
   U8 srbId;
   U8 resourceType;
   U8 priotity;
   U8 pdb;
   U8 pler;
}LwrSrbQciInfo;

typedef struct lwrSrbLchInfo
{
   U8 srbId;
   U8 pbr;
   U8 bucketSizeDuration;
   U8 lchGrpId;
}LwrSrbLchInfo;
typedef struct lwrSrbRlcInfo
{
   U8 srbId;
   LwrTimerPollRetransmit tpRetransmit;
   LwrPollPdu pollPdu;
   LwrPollByte pollByte;
   LwrMaxRetransThresh maxRetransThresh;
   LwrTimerReordering timerReordering;
   LwrTimerStatusProhibit timerStatusProhibit;
}LwrSrbRlcInfo;
typedef struct lwrSrbPolicy
{
   U32 reCfgType;
   U8 srbId;
   LwrSrbRlcInfo rlcInfo;
   LwrSrbLchInfo lchInfo;
   LwrSrbQciInfo qciInfo;
}LwrSrbPolicy;

typedef struct lwrDrbPdcpInfo
{
   S16 qci;
   U16 umSnSize;
   U8 discardTimer;

   U16 fwdEndTimer;

   Bool statRprtReqrd;
} LwrDrbPdcpInfo;

typedef struct lwrDrbRlcInfo
{
   S16 qci;
   U8 rlcMode;
   LwrTimerPollRetransmit dlTpRetransmit;
   LwrPollPdu dlPollPdu;
   LwrPollByte dlPollByte;
   LwrMaxRetransThresh dlMaxRetransThresh;
   LwrTimerReordering dlTimerReordering;
   LwrTimerStatusProhibit dlTimerStatusProhibit;
   LwrTimerPollRetransmit ulTpRetransmit;
   LwrPollPdu ulPollPdu;
   LwrPollByte ulPollByte;
   LwrMaxRetransThresh ulMaxRetransThresh;
   LwrTimerReordering ulTimerReordering;
   LwrTimerStatusProhibit ulTimerStatusProhibit;
   LwrSnFieldLength snFieldLength;
} LwrDrbRlcInfo;

typedef struct lwrDrbLchInfo
{
   S16 qci;
   LwrPrioritisedBitRate prioritisedBitRate;
   LwrBucketSizeDurn bcketSizeDurn;
   U16 lchPriority;
   U16 nonGbrPfWgt;
} LwrDrbLchInfo;

typedef struct lwrDrbQciInfo
{
   S16 qci;
   Bool qciSupported;
   U8 resourceType;
   U8 priotity;
   U8 pdb;
   U8 pler;
   U8 bhServiceGrp;
   U16 schedulingType;
}LwrDrbQciInfo;

typedef struct lwrDrbDscpInfo
{
   S16 qci;
   U16 dscp;
   U16 port;
}LwrDrbDscpInfo;
typedef struct lwrDrbPolicy
{
   U32 reCfgType;
   U8 qci;
   LwrActType action;
   LwrDrbQciInfo qciInfo;
   LwrDrbLchInfo lchInfo;
   LwrDrbRlcInfo rlcInfo;
   LwrDrbPdcpInfo pdcpInfo;
   LwrDrbDscpInfo dscpInfo;
} LwrDrbPolicy;

typedef struct lwrRabPolicyCfgGrp
{
   U32 reCfgType;
   U8 numSrbPolicies;
   U8 numDrbPolicies;
   LwrSrbPolicy srbPolicy[3];
   LwrDrbPolicy drbPolicy[256];
} LwrRabPolicyCfgGrp;


typedef struct lwrEnbCacInfo
{
   U8 dbIndex;
   Bool callCountCacUsage;
   U16 maxEnbCallCount;
   U16 callCacThreshForNormal;
   U16 callCacThreshForEmerHo;
   Bool checkUeIdUsage;
   Bool plmnEnbCacUsage;
} LwrEnbCacInfo;

typedef struct lwrRrmCfgGrp
{
   LwrEnbCacInfo enbCacInfo;
} LwrRrmCfgGrp;


typedef struct lwrCellUlSchdCfgGrp
{
 U32 dlMimoMode;
 U32 alpha;
 U32 beta;
 U32 gamma;
 U32 backhaulDelay;
 U32 ulSchedulingAlg;
}LwrCellUlSchdCfgGrp;


typedef struct lwrCellDlSchdCfgGrp
{
 U32 dlMimoMode;
 U32 alpha;
 U32 beta;
 U32 gamma;
 U32 backhaulDelay;
 U32 dlSchedulingAlg;
}LwrCellDlSchdCfgGrp;
# 2727 "../..//enbapp/src/wr_lwr.h"
typedef struct lwrCellSib6CfgGrp
{
   U32 reCfgType;
   TknPres sfUsagePres;
   U16 tReselection;
   U8 tReselectionSfMedium;
   U8 tReselectionSfHigh;

}LwrCellSib6CfgGrp;




typedef struct lwrCellSib9CfgGrp
{
   U8 henbName[48];
}LwrCellSib9CfgGrp;


typedef struct lwrCellAnrCfgGrp
{
   TknU8 maxRankWght;
   TknU8 minRankWght;
   TknU32 epocTimerVal;
   U32 csfbTransTmrVal;
} LwrCellAnrCfgGrp;



typedef struct lwrCellCfgGrp
{
   LwrCellCfgGrpType grpType;
   union
   {
      LwrCellMibCfgGrp mibCfgGrp;
      LwrCellSib1CfgGrp sib1CfgGrp;
      LwrCellSib2CfgGrp sib2CfgGrp;
      LwrCellSib3CfgGrp sib3CfgGrp;
      LwrCellSib4CfgGrp sib4CfgGrp;
      LwrCellSib6CfgGrp sib6CfgGrp;
      LwrCellSib9CfgGrp sib9CfgGrp;
      LwrCellAnrCfgGrp anrCfgGrp;
      LwrCellMeasCfgGrp measCfgGrp;
      LwrCellEAIDCfgGrp eaidCfgGrp;
      LwrCellSibSchedCfgGrp sibSchedCfgGrp;
      LwrRabPolicyCfgGrp rabPolicyCfgGrp;
      LwrProcTimerCfgGrp procTimerCfgGrp;
    LwrRrmCfgGrp rrmCfgGrp;
      LwrCellUlSchdCfgGrp ulSchdCfgGrp;
      LwrCellDlSchdCfgGrp dlSchdCfgGrp;
   }t;
} LwrCellCfgGrp;
# 2790 "../..//enbapp/src/wr_lwr.h"
typedef struct lwrAddCellCfg
{
   U32 reCfgType;
   U8 cellIndex;
   U32 cellId;
   U16 physCellId;
   U16 numOfGrps;
   U8 duplexMode;
   U16 dlCarrierFreq;
   LwrCellCfgGrp cellCfgGrp[WR_CELL_CFG_MAX_GRPS];

} LwrAddCellCfg;


typedef struct lwrDelCell
{
   U8 cellIndex;
} LwrDelCell;



typedef struct lwrCellCfg
{
   LwrActType action;
   union
   {
      LwrAddCellCfg addCell;
      LwrAddCellCfg modCell;
      LwrDelCell delCell;
   }t;
} LwrCellCfg;

typedef enum lwrNeighEnbState
{
   WR_NEIGH_ENB_STATE_DOWN = 1,
   WR_NEIGH_ENB_STATE_UP = 2
} LwrNeighEnbState;

typedef struct lwrGuGrpIdLst
{
   LwrPlmnId plmnId;
   U16 mmeGrpId;
} LwrGuGrpIdLst;
# 2842 "../..//enbapp/src/wr_lwr.h"
typedef struct lwrEUTRANeighCfg
{
   U8 enbIndx;
   U32 enbId;
   LwrEnbType enbType;
   LwrPlmnId plmn;
   CmTptAddr ipAddr;
   CmTptAddr secIpAddr;
   LwrNeighEnbState state;
   Bool isX2Reqd;
   Bool noHO;
   Bool noDirectFwd;




} LwrEUTRANeighCfg;




typedef struct lwrCDMA2KNeighCfg
{
   U8 cellIndex;
} LwrCDMA2KNeighCfg;

typedef enum lwrNeighType
{
   WR_NEIGH_CELL_EUTRA,
   WR_NEIGH_CELL_CDMA2K_1XRTT,
   WR_NEIGH_CELL_CDMA2K_HRPD,
   WR_NEIGH_CELL_UTRA
} LwrNeighType;




typedef struct lwrNeighAddModCfg
{
   U8 enbIndx;
   U32 peerId;
   U32 enbId;
   LwrEnbType enbType;
   LwrPlmnId plmn;
   CmTptAddr ipAddr;
   CmTptAddr secIpAddr;
   LwrNeighEnbState state;
   Bool isX2Reqd;





} LwrNeighAddModCfg;


typedef struct lwrNeighDel
{
      U8 enbIndx;
      U32 enbId;
} LwrNeighDel;

#define LWR_MAX_NBR_ENB 25
typedef struct lwrNeighCfg
{
   U16 cellId;
   LwrActType action;
   U8 numEnb;
   union
   {
      LwrNeighAddModCfg neighAdd[25];
      LwrNeighAddModCfg neighMod[25];
      LwrNeighDel neighDel[25];
   }t;
} LwrNeighCfg;

typedef struct lwrMmeLdBalCfg
{
   U16 mmeGroupId;
   U16 mmeGrpPrior;
}LwrMmeLdBalCfg;

typedef struct lwrSctpParamCfg
{
 U32 mmeFailoverTimer;
 U32 heartBeatInterval;
 U32 numPathReTx;
 U32 rtoInitial;
 U32 rtoMin;
 U32 rtoMax;
 U32 connectInterval;
}LwrSctpParamCfg;




typedef struct lwrEnbGrpInfo
{
   LwrPlmnInfo plmnId;
   U16 mmeGId;
} LwrEnbGrpInfo;

typedef struct lwrServedCellCfg
{

   U16 pci;

} LwrServedCellCfg;




typedef struct lwrEnbProtoCfg
{
   CmTptAddr enbIpAddr;
   U16 sctpPortNumS1;


   U16 sctpPortNumX2;



   U32 bhLinkCapacity;
   TknStrOSXL enbName;

   LwrEnbType enbType;
   U32 enbId;
   U32 numPlmns;
   LwrPlmnId plmns[6];
} LwrEnbProtoCfg;



typedef struct lwrEnbOvldParams
{
   U8 critThrldVal;
   U8 majThrldVal;
   U8 minThrldVal;
   U8 critRcvryVal;
   U8 majRcvryVal;
   U8 minRcvryVal;
   U8 eNBMemCritThresVal;
   U8 eNBMemMajThresVal;
   U8 eNBMemMinThresVal;
   U32 eNBOvldMonTimerVal;
   U32 eNBOvldMonfreq;
   U8 maxCntval;
   Bool eNbOvrLdFlag;
} LwrEnbOvldParams;





typedef struct lwrENodeBCfg
{
   U32 reCfgType;




   U8 maxNumOfUe;





   LwrEnbProtoCfg protoCfg;

   U8 numOfMmePriGrps;
   LwrMmeLdBalCfg mmeLdBalCfg[16];
   U8 cpuLoad;
   U32 enbCfgTransTmrVal;
} LwrENodeBCfg;




typedef struct lwrENbCfg
{
   LwrActType action;
   union
   {
      LwrENodeBCfg eNodeBCfg;
      LwrENodeBCfg eNodeBReCfg;

   }t;
} LwrENbCfg;

typedef struct LwrSib2PrachCfg
{
   U16 rootSeqIdx;
   U8 prachCfgIdx;
   U8 highSpeedFlag;
   U8 zeroCorrZone;
   U8 prachFreqOffset;
} LwrSib2PrachCfg;

typedef struct lwrEcgi
{
   LwrPlmnId plmnId;
   U32 eutranCellId;
} LwrEcgi;

typedef struct lwrEUTRANeighCell
{
   U32 reCfgType;

   U8 status;
   U8 cellNum;
   U8 neighCellId;
   U8 nrIndex;

   U32 enbId;





   LwrEnbType enbType;




   LwrPlmnId enbPlmn;



   U16 pci;


   U16 tac;


   U8 numPlmn;
   LwrPlmnId plmnId[6];


   U16 earfcnDl;



   U16 earfcnUl;


   LwrBandwidth dlBw;


   LwrBandwidth ulBw;


   LwrQoffRange cio;



   LwrQoffRange qoffset;




}LwrEUTRANeighCell;

typedef enum lwrCdmaType{

   LWR_1XRTT,
   LWR_HRPD
}LwrCdmaType;

typedef struct lwrCDMAHrpdNeighCell
{
   U8 cellNum;
   U16 nrIndex;
   Bool status;
   U16 colorCode;
   U16 bsmId;
   U16 bscId;
   U16 dpssId;
   U16 btsId;
   U16 sectorId;
   LwrCdma2kBandClassType bandClass;



   U32 arfcn;



   U16 pnOffset;


   U16 curRank;

   U8 loadBalanceRate;

   U32 neighCellFlag;

   U8 cid[32];
}LwrCDMAHrpdNeighCell;



typedef struct lwrCDMA1xNeighCell
{
   U8 cellNum;
   U8 nrIndex;
   Bool status;
   U16 sId;
   U16 nId;
   U16 baseId;
   U16 marketId;
   U16 switchNum;
   U16 cellId;
   U16 sectorNum;

   LwrCdma2kBandClassType bandClass;



   U32 arfcn;



   U16 pnOffset;


   U16 curRank;

   U32 neighCellFlag;

}LwrCDMA1xNeighCell;
# 3208 "../..//enbapp/src/wr_lwr.h"
typedef struct lwrUtraNeighCell{
   U32 reCfgType;
   U8 cellNum;
   U8 status;
   U32 nrIndex;
   U16 rncId;
   U16 cId;
   U16 lac;
   U8 rac;
   U8 numPlmn;
   LwrPlmnId plmnId[6];
   U16 psc;
   Bool isRemAllowed;
   Bool isHOAllowed;
   U16 arfcnUl;
   U16 arfcnDl;
   Bool voipIncapable;
   U8 duplexMode;
   U16 curRank;
   U16 prevRank;
}LwrUtraNeighCell;

typedef struct lwrNeighCellAddCfg
{
   LwrNeighType type;
   union
   {
      LwrEUTRANeighCell eutraCell;
      LwrCDMA1xNeighCell cdma1xCell;
      LwrCDMAHrpdNeighCell cdmaHrpdCell;
      LwrUtraNeighCell utranCell;
   }t;
} LwrNeighCellAddCfg;

typedef struct lwrEutranCellDelCfg
{
   U16 nrIndex;
   U16 earfcn;
   U16 phyCellId;
}LwrEutranCellDelCfg;

typedef struct lwrCdmaCellDelCfg
{
   U16 nrIndex;
   LwrCdma2kBandClassType bandClass;
   U16 arfcn;
   U16 pnOffset;
}LwrCdmaCellDelCfg;







typedef struct lwrUtraCellDelCfg
{
   U16 nrIndex;
   U16 arfcn;
   U16 psc;
}LwrUtraCellDelCfg;

typedef struct lwrNeighCellDelCfg
{
   LwrNeighType type;
   union
   {
      LwrEutranCellDelCfg eutranCell;
      LwrCdmaCellDelCfg cdmaCell;
      LwrUtraCellDelCfg utranCell;
   }t;
}LwrNeighCellDelCfg;

typedef struct lwrNeighCellCfg
{
   U8 cellId;
   LwrActType action;
   U16 numCells;
   union
   {
      LwrNeighCellAddCfg neighAddCfg[100];
      LwrNeighCellAddCfg neighModCfg[100];
      LwrNeighCellDelCfg neighDelCfg[100];
   }t;
} LwrNeighCellCfg;

typedef enum lwrNeighCdmaFreqType
{
   LWR_NEIGH_CDMA_1x_RTT_TYPE,
   LWR_NEIGH_CDMA_HRPD_TYPE
} LwrNeighCdmaFreq;

typedef enum lwrNeighFreqType
{
   LWR_NEIGH_EUTRA_FREQ_TYPE,
   LWR_NEIGH_CDMA_FREQ_TYPE
} LwrNeighFreqType;

typedef enum lwrQOffsetRange
{
   LWR_Q_OFFSET_RANGE_MINUS_24,
   LWR_Q_OFFSET_RANGE_MINUS_22,
   LWR_Q_OFFSET_RANGE_MINUS_20,
   LWR_Q_OFFSET_RANGE_MINUS_18,
   LWR_Q_OFFSET_RANGE_MINUS_16,
   LWR_Q_OFFSET_RANGE_MINUS_14,
   LWR_Q_OFFSET_RANGE_MINUS_12,
   LWR_Q_OFFSET_RANGE_MINUS_10,
   LWR_Q_OFFSET_RANGE_MINUS_8,
   LWR_Q_OFFSET_RANGE_MINUS_6,
   LWR_Q_OFFSET_RANGE_MINUS_5,
   LWR_Q_OFFSET_RANGE_MINUS_4,
   LWR_Q_OFFSET_RANGE_MINUS_3,
   LWR_Q_OFFSET_RANGE_MINUS_2,
   LWR_Q_OFFSET_RANGE_MINUS_1,
   LWR_Q_OFFSET_RANGE_0,
   LWR_Q_OFFSET_RANGE_1,
   LWR_Q_OFFSET_RANGE_2,
   LWR_Q_OFFSET_RANGE_3,
   LWR_Q_OFFSET_RANGE_4,
   LWR_Q_OFFSET_RANGE_5,
   LWR_Q_OFFSET_RANGE_6,
   LWR_Q_OFFSET_RANGE_8,
   LWR_Q_OFFSET_RANGE_10,
   LWR_Q_OFFSET_RANGE_12,
   LWR_Q_OFFSET_RANGE_14,
   LWR_Q_OFFSET_RANGE_16,
   LWR_Q_OFFSET_RANGE_18,
   LWR_Q_OFFSET_RANGE_20,
   LWR_Q_OFFSET_RANGE_22,
   LWR_Q_OFFSET_RANGE_24
} LwrQOffsetRange;

typedef struct lwrSSearchRel9
{
   Bool pres;
   U8 sSearchPRel9;
   U8 sSearchQRel9;
} LwrSSearchRel9;

typedef struct lwrThreshXQRel9
{
   U8 threshXHighQR9;
   U8 threshXLowQR9;
} LwrThreshXQRel9;


typedef struct lwrNeighEutraFreq
{
   U32 reCfgType;
   U8 freqIndex;
   U8 status;
   U16 earfcnUl;
   U16 earfcnDl;
   U8 priority;
   S8 qRxLevMin;
   Bool pMaxUsage;
   S8 pMax;
   U8 tReselection;
   Bool sfUsage;
   U8 tReselectionSFMed;
   U8 tReselectionSFHigh;
   TknU8 sIntraSearch;
   TknU8 sNonIntraSearch;
   U8 servThresholdLow;
   U8 threshXHigh;
   U8 threshXLow;
   TknU8 measBandwidth;
   Bool presAntennaPort1;
   U8 neighCellCfg;
   LwrQOffsetRange qOffsetFreq;
   LwrQOffsetRange offsetFreq;
   LwrSSearchRel9 sIntraSearchRel9;
   LwrSSearchRel9 sInterSearchRel9;
   TknS8 qQualMinRel9;
   TknU8 reselecThreshQRel9;
   LwrThreshXQRel9 threshXQRel9;
} LwrNeighEutraFreq;



typedef struct lwrNeighEutraDelInfo
{
   U8 freqIndex;
   U16 earfcn;
} LwrNeighEutraDelInfo;



typedef struct lwrNeighCdmaDelInfo
{
   U8 freqIndex;
   U16 arfcn;
   LwrCdma2kBandClassType bandClass;
} LwrNeighCdmaDelInfo;



typedef struct lwrNeighUtraDelInfo
{
   U8 freqIndex;
   U16 arfcn;
}LwrNeighUtraDelInfo;




typedef struct lwrNeighCdma1xFreq
{
   U8 reCfgType;
   U8 cellNum;
   U8 freqIndex;
   Bool status;
   LwrCdma2kBandClassType bandClass;
   U16 arfcn;
   U8 searchRate;
   S8 offsetFreq;
} LwrNeighCdma1xFreq;



typedef struct lwrNeighCdmaHRPDFreq
{
   U8 reCfgType;
   U8 cellNum;
   U8 freqIndex;
   Bool status;
   LwrCdma2kBandClassType bandClass;
   U16 arfcn;
   U8 searchRate;
   S8 offsetFreq;
} LwrNeighCdmaHRPDFreq;






typedef struct lwrNrUtraFreqThrQR9{
   U8 pres;
   U8 thresXHighQR9;
   U8 thresXLowQR9;
}LwrNrUtraFreqThrQR9;
# 3473 "../..//enbapp/src/wr_lwr.h"
typedef struct lwrNeighUtraFreq{
   U32 reCfgType;
   U8 freqIndex;
   U8 status;
   U16 arfcnUl;
   U16 arfcnDl;
   TknU8 priority;
   U8 threshXhigh;
   U8 threshXlow;
   S8 qRxLevMin;
   S8 pMaxUtra;
   S8 pQualMin;
   U8 offsetFreq;
   U8 duplexMode;
   LwrNrUtraFreqThrQR9 thresR9;
}LwrNeighUtraFreq;


typedef struct lwrNeighFreqDelCfg
{
   LwrNeighType type;
   union
   {
      LwrNeighEutraDelInfo eutranFreq;
      LwrNeighCdmaDelInfo cdmaFreq;
      LwrNeighUtraDelInfo utranFreq;
   }t;
} LwrNeighFreqDelCfg;


typedef struct lwrNeighFreqAddCfg
{
   LwrNeighType type;
   union
   {
      LwrNeighEutraFreq eutranFreq;
      LwrNeighCdma1xFreq cdma1xFreq;
      LwrNeighCdmaHRPDFreq cdmaHrpdFreq;
      LwrNeighUtraFreq utranFreq;
   }t;
} LwrNeighFreqAddModCfg;

typedef struct lwrNeighFreqCfg
{
   U8 cellId;
   LwrActType action;
   U8 numFreq;
   union
   {
      LwrNeighFreqAddModCfg addNeighFreq[16];
      LwrNeighFreqAddModCfg modNeighFreq[16];
      LwrNeighFreqDelCfg delNeighFreq[16];
   }t;
} LwrNeighFreqCfg;

typedef struct lwrNeighCdmaBandClassCfg
{
   U8 reCfgType;
   U8 badnClassIndex;
   U8 status;
   LwrCdma2kBandClassType bandClass;
   U8 cellReselectPrior;
   U8 threshXHigh;
   U8 threshXLow;
} LwrNeighCdmaBandClassCfg;

typedef struct lwrNeighBandClassDel
{
   LwrCdmaType cdmaType;
   U8 badnClassIndex;
   LwrCdma2kBandClassType bandClass;
} LwrNeighBandClassDel;

typedef struct lwrNeighBandClassCfg
{
   LwrCdmaType cdmaType;
   union
   {
      LwrNeighCdmaBandClassCfg bandClass1XRtt;
      LwrNeighCdmaBandClassCfg bandClassHRPD;
   }t;
} LwrNeighBandClassCfg;

typedef struct lwrNeighBandClass
{
   U8 cellId;
   LwrActType action;
   U8 numBandClass;
   union
   {
      LwrNeighBandClassCfg bcAddCfg[2];
      LwrNeighBandClassCfg bcModCfg[2];
      LwrNeighBandClassDel bcDelCfg[2];
   }t;
} LwrNeighBandClass;


typedef struct lwrProtoCfg
{
   LwrProtoCfgType type;
   union
   {
      LwrCellCfg cellCfg;
      LwrMmeCfg mmeCfg;
      LwrNeighCfg neighCfg;
      LwrNeighCellCfg neighCellCfg;
      LwrENbCfg eNbCfg;
      LwrNeighFreqCfg neighFreqCfg;
      LwrNeighBandClass cdmaBandClassCfg;
   }t;
} LwrProtoCfg;

typedef struct lwrLoadIndInfo
{
  U8 cpuLoad;
}LwrLoadIndInfo;

typedef struct lwrCellFddCfg
{
   U32 ulEarfcn;
   U32 dlEarfcn;
   U8 ulTxBndWdth;
   U8 dlTxBndWdth;
} LwrCellFddCfg;

typedef struct lwrCellTddCfg
{
   U32 earfcn;
   U8 txBndWdth;
   U8 sfAssgnmnt;
   U8 splSfPatrn;
   U8 dlCycPrefix;
   U8 ulCycPrefix;
} LwrCellTddCfg;

typedef struct lwrGenUeCfg
{

  U8 intgAlgo;
  U8 ciphAlgo;
} LwrGenUeCfg;

typedef struct lwrSmCellCfg
{

   U16 cellId;

   U8 modType;

   U16 duplexMode;
   U8 maxUeSupp;

   TknU8 mcc[3];
   TknU8 mnc[3];

   U16 trackAreaCode;

   U8 freqBandInd;
   LwrGenUeCfg genUeCfg;

   U16 physCellId;
   U16 rrmRntiStart;
   U16 maxRrmRntis;
   U16 rrmPrmblStart;
   U16 maxRrmPrmbls;
   U16 macRntiStart;
   U16 maxMacRntis;
   U8 numOfMacPrm;
   U32 rsrpTrshldRange;

   LwrCellFddCfg fddCfg;
   LwrCellTddCfg tddCfg;
   U8 noOfBrdCstPlmn;
   U8 plmnId[6][3];


} LwrSmCellCfg;

typedef struct lwrGenCfg
{
   Pst lmPst;

   LwrSmCellCfg cellCfg;

   CmTptAddr dataAppAddr;
   U8 eNBType;
   U16 noOfNghInfo;
   LwrNghCellCfg **nghInfo;
   U8 noOfguGrp;
   LwrGuGrpIdCfg **guGrpId;
   U32 s1PrepTimerVal;
   U32 s1OvrAllTimerVal;
   U32 ueHoAttachTimerVal;
   U32 inactvTmrVal;
   U32 endMrkTmrVal;

   LwrEnbOvldParams eNBOvldParams;

} LwrGenCfg;


typedef struct lwrLSapCfg
{
   SuId suId;
   SpId spId;
   Ent srcEnt;
   Inst srcInst;
   ProcId dstProcId;
   Ent dstEnt;
   Inst dstInst;
   Priority dstPrior;
   Route dstRoute;
   Selector dstSel;
   Mem mem;
   U8 maxBndRetry;
   TmrCfg bndTmr;
   TmrCfg connTmr;
} LwrLSapCfg;

typedef struct lwrCfg
{
   union
   {
      LwrGenCfg genCfg;
      LwrLSapCfg lSap;
   }t;
} LwrCfg;

typedef struct lwrDbgCntrl
{
   U32 dbgMsk;
# 3733 "../..//enbapp/src/wr_lwr.h"
} LwrDbgCntrl;

typedef struct lwrCntrl
{
   Action action;
   Action subAction;
   U8 numConn;
   U32 peerId[16];
   U32 idLst[16];

   union
   {
      SpId sapId;

      U16 cellId;


      U32 dbgMask;
      LwrDbgCntrl dbg;



      U8 oper;
      U32 logMask;
   } u;

} LwrCntrl;

typedef struct lwrUstaDgn
{
   U8 type;
   union
   {
      SpId sapId;
      struct {
         U16 udId;
         U16 cellId;
      }s;
   }u;
} LwrUstaDgn;

typedef struct lwrUsta
{
   CmAlarm alarm;
   LwrUstaDgn dgn;
} LwrUsta;

typedef struct wrHoEutran
{
    U32 wrHODesirableForRadioReasons;
    U32 wrTimeCriticalHO;
    U32 wrResourceOptimizationHO;
    U32 wrReduceLoadInServingCell;
    U32 wrRadioResourcesNotAvailable;
    U32 wrControlProcessingOverload;
    U32 wrNotEnoughUPProcesingResources;
    U32 wrOAMIntervention;
    U32 wrSum;
}WrHoEutran;

typedef struct wrHoUtran
{
    U32 wrHODesirableForRadioReasons;
    U32 wrTimeCriticalHO;
    U32 wrResourceOptimizationHO;
    U32 wrReduceLoadInServingCell;
    U32 wrRadioResourcesNotAvailable;
    U32 wrControlProcessingOverload;
    U32 wrNotEnoughUPProcesingResources;
    U32 wrOAMIntervention;
    U32 wrSum;
}WrHoUtran;


typedef struct wrIntraRatHoSts
{
   WrHoEutran wrToAttempt;
   WrHoEutran wrToSuccess;
   WrHoEutran wrToFail;
   WrHoEutran wrFrAttempt;
   WrHoEutran wrFrSuccess;
   WrHoEutran wrFrFail;
}WrIntraRatHoSts;

typedef struct wrInterRatHoSts
{
   WrHoUtran wrToAttempt;
    WrHoUtran wrToSuccess;
    WrHoUtran wrToFail;
    WrHoUtran wrFrAttempt;
    WrHoUtran wrFrSuccess;
    WrHoUtran wrFrFail;
}WrInterRatHoSts;


typedef struct wrHoSts
{
   WrIntraRatHoSts wrIntraRatHoStat;
   WrInterRatHoSts wrInterRatHoStat;
}WrHoSts;

typedef struct wrConnEstab
{
    U32 emergency;
    U32 HighPriorityAccess;
    U32 MtAccess;
    U32 MoSignalling;
    U32 MoData;
    U32 DelayTolerantAccessV1020;
    U32 Sum;
}WrConnEstab;


typedef struct wrRrcConCause
{
    U32 emergency;
    U32 highPriorityAccess;
    U32 mtAccess;
    U32 moSignalling;
    U32 moData;
    U32 delayTolerantAccessV1020;
  U32 sum;
}WrRrcConCause;


typedef struct wrRrcSts
{
    WrRrcConCause attConnEstab;
    WrRrcConCause succConnEstab;
    WrRrcConCause failConnEstab;
    WrRrcConCause failConnDegradedRadio;
}WrRrcSts;

typedef struct wrRrcReEstabCause
{
 U32 recfgFail;
 U32 hoFail;
 U32 OthrFail;
 U32 sum;
}WrRrcReEstabCause;

typedef struct wrRrcReEstabSts
{
    WrRrcReEstabCause attConnEstab;
    WrRrcReEstabCause succConnEstab;
    WrRrcReEstabCause failConnEstab;
    WrRrcReEstabCause failConnDegradedRadio;
}WrRrcReEstabSts;


typedef struct wrErabStat
{
    U32 qci1;
    U32 qci2;
    U32 qci3;
    U32 qci4;
    U32 qci5;
    U32 qci6;
    U32 qci7;
    U32 qci8;
    U32 qci9;
    U32 qciSum;
}WrErabStat;

typedef struct wrErabFailStat
{
    U32 wrRadioResourcesNotAvailable;
    U32 wrFailureInRadioInterfaceProcedure;
    U32 wrInvalidQoSCombinations;
    U32 wrMultipleERABIDInstances;
    U32 wrNotSupportedQCIValue;
    U32 wrS1IntraSystemHandoverTriggered;
    U32 wrS1InterSystemHandoverTriggered;
    U32 wrX2HandoverTriggered;
    U32 wrSum;
}WrErabFailStat;


typedef struct wrErabFailStatHenb
{
   U32 wrRadioResourcesNotAvailable;
    U32 wrReduceLoadInServingCell;
    U32 wrFailureInTheRadioInterfaceProcedure;
    U32 wrReleaseDueToEUTRANGeneratedReaso;
    U32 wrUserInactivity;
    U32 wrRadioConnectionWithUELost;
    U32 wrHardwareFailure;
    U32 wrOAMIntervention;
}WrErabFailStatHenb;



typedef struct wrErabSts
{
    WrErabStat estabInitAttNbr;
    WrErabStat estabInitSuccNbr;
    WrErabFailStat EstabInitFailNbr;

    WrErabStat EstabAttNbr;
    WrErabStat EstabSuccNbr;
    WrErabFailStat EstabFailNbr;

    WrErabStat RelEnbNbr;
    WrErabFailStatHenb RelEnbNbr_Henb;


    WrErabStat RelEnbMmeAtt;
    WrErabStat RelEnbMmeSucc;
    WrErabFailStat RelEnbMmeFail;

    WrErabStat ModAttNbr;
    WrErabStat ModSuccNbr;
    WrErabFailStat ModFailNbr;
}WrErabSts;

typedef struct wrSigSts
{
 U32 wrSigAttempt;
 U32 wrSigSuccess;
}WrSigSts;


typedef struct wrUeCtxtRelSts
{
 U32 wrUeCtxtRelReq;
 U32 wrUeCtxtRelSuccess;
}WrUeCtxtRelSts;



typedef struct wrCallSts
{
    U32 wrActiveCalls;
    U32 wrTotalCalls;
}WrCallSts;



typedef enum wrMmeStatus
{
    WR_MME_IDLE = 0,
   WR_MME_ACTIVE
}WrMmeStatus;


typedef struct wrMmeSta
{ U32 numMme;
   U32 mmeIdx[16];
    WrMmeStatus mmeUsageState[16];
}WrMmeSta;


typedef enum wrCellStatus
{
  WR_CELL_IDLE = 0,
  WR_CELL_ACTIVE,
  WR_CELL_BUSY
}WrCellStatus;


typedef struct wrCellSta
{
    U16 cellNum;
    WrCellStatus cellUsageState[2];
}WrCellSta;


typedef struct wrS1USta
{
    U32 s1UStat;
}WrS1USta;

typedef struct wrCellSetupSta
{
   U16 cellNum;
   U16 result;
   U8 cause[40];
}WrCellSetupSta;

typedef struct wrUeActvCount
{
   U16 cellNum;
   U16 activeUeCnt;

} WrUeActvCount;





typedef struct lwrSta
{
   DateTime dt;
   U8 sapInst;
   union
   {
      WrMmeSta wrMmeSta;
      WrCellSta wrCellSt;
      WrS1USta wrS1Usta;
      WrCellSetupSta wrCellSetupSta;
      WrUeActvCount wrUeActvCount;
   }s;
}LwrSta;





typedef struct lwrSts
{
   DateTime dt;
   U8 sapInst;
   Action action;

   union
   {
      WrRrcSts wrRrcStat;
      WrErabSts wrErabStat;
      WrCallSts wrCallStat;
      U32 wrPagStat;
      WrHoSts wrHoStat;
      WrUeCtxtRelSts wrUeCtxtRelSts;
   }s;
}LwrSts;

typedef struct lwrNbrAddReq
{
   U32 enbId;
   CmTptAddr nbIpAddress;
} LwrNbrAddReq;

typedef struct lwrNbrAddCfm
{
   U32 enbId;
   U32 peerId;
   CmTptAddr ipAddr;
} LwrNbrAddCfm;

typedef struct lwrMngmt
{
   Header hdr;
   CmStatus cfm;
   union
   {
      LwrCfg cfg;
      LwrCntrl cntrl;
      LwrUsta usta;
      LwrSts sts;
      LwrSta sta;
      LwrProtoCfg protoCfg;
      LwrNbrAddReq nbrAddReq;
      LwrNbrAddCfm nbrAddCfm;
   }t;
} LwrMngmt;




typedef S16 (*LwrCfgReq) (
Pst *pst,
LwrMngmt *cfg
);

typedef S16 (*LwrCfgCfm) (
Pst *pst,
LwrMngmt *cfg
);

typedef S16 (*LwrCntrlReq) (
Pst *pst,
LwrMngmt *cntrl
);

typedef S16 (*LwrCntrlCfm) (
Pst *pst,
LwrMngmt *cntrl
);

typedef S16 (*LwrStaInd) (
Pst *pst,
LwrMngmt *sta
);

typedef S16 (*LwrLoadInd) (
Pst *pst,
LwrLoadIndInfo *loadInd
);

extern S16 WrMiLwrCfgReq (Pst *pst, LwrMngmt *cfg);
extern S16 WrMiLwrCfgCfm (Pst *pst, LwrMngmt *cfg);
extern S16 WrMiLwrCntrlReq (Pst *pst, LwrMngmt *cntrl);
extern S16 WrMiLwrCntrlCfm (Pst *pst, LwrMngmt *cntrl);
extern S16 WrMiLwrStaInd (Pst *pst, LwrMngmt *sta);
extern S16 WrMiLwrLoadInd (Pst *pst, LwrLoadIndInfo *loadInd);




extern S16 WrMiLwrCfgReq (Pst *pst, LwrMngmt *cfg);
extern S16 WrMiLwrCfgCfm (Pst *pst, LwrMngmt *cfg);
extern S16 WrMiLwrCntrlReq (Pst *pst, LwrMngmt *cntrl);
extern S16 WrMiLwrCntrlCfm (Pst *pst, LwrMngmt *cntrl);
extern S16 WrMiLwrStaInd (Pst *pst, LwrMngmt *sta);
extern S16 WrMiLwrLoadInd (Pst *pst, LwrLoadIndInfo *loadInd);




extern S16 SmMiLwrCfgReq (Pst *pst, LwrMngmt *cfg);
extern S16 SmMiLwrCfgCfm (Pst *pst, LwrMngmt *cfg);
extern S16 SmMiLwrCntrlReq (Pst *pst, LwrMngmt *cntrl);
extern S16 SmMiLwrCntrlCfm (Pst *pst, LwrMngmt *cntrl);
extern S16 SmMiLwrStaInd (Pst *pst, LwrMngmt *sta);
extern S16 SmMiLwrAddNeighCfgReq (Pst *pst,LwrMngmt *cntrl);
extern S16 SmMiLwrLoadInd (Pst *pst, LwrLoadIndInfo *loadInd);
extern S16 WrMiLwrAddNeighCfm(Pst *pst,LwrMngmt *cfg);





extern S16 smWrActvInit (Ent ent, Inst inst,
                                Region region, Reason reason);

extern S16 smWrActvTsk (Pst *pst, Buffer *mBuf);




extern S16 wrActvInit (Ent ent, Inst inst,
                                Region region, Reason reason);

extern S16 wrActvTsk (Pst *pst, Buffer *mBuf);




extern S16 euActvInit (Ent ent, Inst inst,
                                Region region, Reason reason);

extern S16 euActvTsk (Pst *pst, Buffer *mBuf);
# 160 "../..//enbapp/src/wr.h" 2
# 1 "../..//mt/ss_diag.h" 1
# 90 "../..//mt/ss_diag.h"
#define __SS_DIAG_H__ 






typedef enum
{
   SS_DIAG_NORMAL,
   SS_DIAG_RPTPEND,
   SS_DIAG_REPORTED
} SsDiagLostState;

typedef enum
{
   SS_DIAG_BUF1,
   SS_DIAG_BUF2,
   SS_DIAG_BUF3,
   SS_DIAG_BUF4,
   SS_DIAG_BUF5,
   SS_DIAG_BUF6
} SsDiagCircBuf;

typedef enum
{
   SS_DIAG_MSG_TYPE_FIXED = 1,
   SS_DIAG_MSG_TYPE_HEXDUMP,
   SS_DIAG_MSG_TYPE_VAR,
   SS_DIAG_MSG_TYPE_MARKER,
   SS_DIAG_MSG_TYPE_NOLOGLOST
}SsDiagMsgType;


#define SS_DIAG_INST0 0
#define SS_DIAG_INST1 1

#define SS_DIAG_LVL0 0x1
#define SS_DIAG_LVL1 0x2
#define SS_DIAG_LVL2 0x4
#define SS_DIAG_LVL3 0x8
#define SS_DIAG_LVL4 0x10
#define SS_DIAG_MSG 0x20
#define SS_DIAG_VAR 0x40

#define SS_DIAG_BUF_SIZE_SYSTSK1 4095
#define SS_DIAG_BUF_SIZE_SYSTSK2 4095
#define SS_DIAG_BUF_SIZE_SYSTSK3 4095
#define SS_DIAG_BUF_SIZE_SYSTSK4 4095
#define SS_DIAG_BUF_SIZE_SYSTSK5 4095
#define SS_DIAG_BUF_SIZE_SYSTSK6 4095

#define SS_DIAG_SPL_TOKN 0xfffffff1
#define SS_DIAG_INV_ARG 0xffffffff
#define SS_DIAG_SORT_MARKER 0xfffffffe
#define SS_DIAG_MAX_CIRC_BUF 6
#define SS_DIAG_NUM_CIRBUF_UARM 4
#define SS_DIAG_MIN_BUF_DIFF 4
#define SS_DIAG_SLEEP 10
#define SS_DIAG_MAX_NUM_VAR_BUF 10
#define SS_DIAG_VAR_BUF_LEN 255



#define SS_UNPKU16(_tmpU16) { _tmpU16 = 0; _tmpU16 = (U16)PutHiByte(_tmpU16, (U8)pkArray[bytCnt++]); _tmpU16 = (U16)PutLoByte(_tmpU16, (U8)pkArray[bytCnt++]); }
# 165 "../..//mt/ss_diag.h"
#define SS_DIAG_GET_TIME_STAMP(_timeRef) { _timeRef=numTti;}




#define SS_DIAG_FILE_OPEN(_string,_mode) fopen(_string, _mode);


#define SS_DIAG_FILE_WRITE(src,size,count,dst) fwrite(src, size, count, dst);
# 182 "../..//mt/ss_diag.h"
typedef struct _ssDiagBuf
{
   U32 timRef;
   U32 tknId;
   U32 entInstId;
   U32 level;
   U32 type;
   U32 splArg;
   U32 arg1;
   U32 arg2;
   U32 arg3;
   U32 arg4;
   U32 isValid;

}SsDiagBuf;





typedef struct _ssDiagCirBuf
{
   U32 front;
   U32 rear;
   U32 noLogLost;
   U32 logLostState;
   U32 nLen;
   SsDiagBuf *logBuf;
}SsDiagCirBuf;





typedef struct _ssDiagVarBuf
{
   U8 varStr[255];
   Bool isValid;
}SsDiagVarBuf;





extern SsDiagCirBuf ssDiagCirLogBuf[6];
extern SsDiagCirBuf ssDiagCirVarBuf[4];

extern Void ssDiagFix ( U32 tknId, U32 splArgEnum, U32 entId, U32 instId, U32 logLvl, U32 logType, U32 splArg, U32 arg1, U32 arg2, U32 arg3, U32 arg4, S8 *string);


extern S16 ssDiagInitFixCircBuf(U32 ssSysTstId, U16 maxBufLen);
extern S16 ssDiagInitVarCircBuf(U32 ssSysTstId, U16 maxBufLen);

extern Void ssDiagVarible (U32 entId, U32 instId, U32 logLvl, U32 logType, U32 tknId, U32 splArg, S8 string[]);

extern S16 ssDiagUnPackLogs (Buffer *mBuf);
# 161 "../..//enbapp/src/wr.h" 2

# 1 "../..//enbapp/lterrm/rm_wr.h" 1
# 94 "../..//enbapp/lterrm/rm_wr.h"
#define __RM_WR_H__ 





typedef U32 TransId;
# 111 "../..//enbapp/lterrm/rm_wr.h"
typedef enum rrmWrCfgAction
{
   RRM_WR_CFG_ADD,
   RRM_WR_CFG_MOD,
   RRM_WR_CFG_DEL
}RrmWrCfgAction;
# 125 "../..//enbapp/lterrm/rm_wr.h"
typedef enum RrmWrRespStatus
{
   RRM_WR_CFG_SUCCESS,
   RRM_WR_CFG_FAILURE
}RrmWrRespStatus;
# 153 "../..//enbapp/lterrm/rm_wr.h"
typedef enum rrmWrAcBarringFactor
{
   RRM_WR_ACBFACTOR_P00,
   RRM_WR_ACBFACTOR_P05,
   RRM_WR_ACBFACTOR_P10,
   RRM_WR_ACBFACTOR_P15,
   RRM_WR_ACBFACTOR_P20,
   RRM_WR_ACBFACTOR_P25,
   RRM_WR_ACBFACTOR_P30,
   RRM_WR_ACBFACTOR_P40,
   RRM_WR_ACBFACTOR_P50,
   RRM_WR_ACBFACTOR_P60,
   RRM_WR_ACBFACTOR_P70,
   RRM_WR_ACBFACTOR_P75,
   RRM_WR_ACBFACTOR_P80,
   RRM_WR_ACBFACTOR_P85,
   RRM_WR_ACBFACTOR_P90,
   RRM_WR_ACBFACTOR_P95,
   RRM_WR_ACBFACTOR_NA
}RrmWrAcBarringFactor;
# 188 "../..//enbapp/lterrm/rm_wr.h"
typedef enum rrmWrAcBarringTime
{
   RRM_WR_ACBTIME_S4,
   RRM_WR_ACBTIME_S8,
   RRM_WR_ACBTIME_S16,
   RRM_WR_ACBTIME_S32,
   RRM_WR_ACBTIME_S64,
   RRM_WR_ACBTIME_S128,
   RRM_WR_ACBTIME_S256,
   RRM_WR_ACBTIME_S512
}RrmWrAcBarringTime;
# 212 "../..//enbapp/lterrm/rm_wr.h"
typedef enum rrmWrUeAdmitCause
{
   RRM_WR_EMERGENCY,
   RRM_WR_HIGHPRIORACCESS,
   RRM_WR_MTACCESS,
   RRM_WR_MOSIGNALLING,
   RRM_WR_MODATA
}RrmWrUeAdmitCause;
# 234 "../..//enbapp/lterrm/rm_wr.h"
typedef enum rrmWrTxMode
{
   RRM_WR_TXMODE1,
   RRM_WR_TXMODE2,
   RRM_WR_TXMODE3,
   RRM_WR_TXMODE4,
   RRM_WR_TXMODE5,
   RRM_WR_TXMODE6,
   RRM_WR_TXMODE7
} RrmWrTxMode;
# 256 "../..//enbapp/lterrm/rm_wr.h"
typedef enum rrmWrMmeOvldStatus
{
   RRM_WR_MME_REJECT_MODATA,
   RRM_WR_MME_REJECT_MOSIG_MODATA,
   RRM_WR_MME_PERMITONLY_EMG_MTACCESS,
   RRM_WR_MME_OVLD_STOP
}RrmWrMmeOvldStatus;
# 277 "../..//enbapp/lterrm/rm_wr.h"
typedef enum rrmWrCellBw
{
   RRM_WR_BANDWIDTH_6,
   RRM_WR_BANDWIDTH_15,
   RRM_WR_BANDWIDTH_25,
   RRM_WR_BANDWIDTH_50,
   RRM_WR_BANDWIDTH_75,
   RRM_WR_BANDWIDTH_100,
   RRM_WR_BANDWIDTH_MAX
}RrmWrCellBw;
# 295 "../..//enbapp/lterrm/rm_wr.h"
typedef enum rmWrPcqiFormatInd
{
   RRM_WR_PCQI_FMT_WIDEBAND,
   RRM_WR_PCQI_FMT_SUBBAND
}RrmWrPcqiFormatInd;
# 309 "../..//enbapp/lterrm/rm_wr.h"
typedef enum rmTmrsEnum
{
   RRM_CAC_ACB_HYST_TMR,
   RRM_CAC_ACB_RRCCON_HYST_TMR
}RmTmrsEnum;
# 331 "../..//enbapp/lterrm/rm_wr.h"
typedef enum rrmWrCause
{
   RRM_WR_CAUSE_CELLID_UNKNOWN,
   RRM_WR_CAUSE_MMEID_UNKNOWN,
   RRM_WR_CAUSE_UEID_UNKNOWN,
   RRM_WR_CAUSE_OUT_OF_RESOURCE,
   RRM_WR_CAUSE_MAX_CAPACITY_REACHED,
   RRM_WR_CAUSE_CELL_ALREADY_EXISTS,
   RRM_WR_CAUSE_MME_ALREADY_EXISTS,
   RRM_WR_CAUSE_ENB_ALREADY_UP,
   RRM_WR_CAUSE_NOT_APP,
   RRM_WR_CAUSE_OTHER
}RrmWrCause;
# 353 "../..//enbapp/lterrm/rm_wr.h"
typedef enum rmWrEnbStaType
{
   RRM_WR_ENBSTATYPE_CPULOAD,
   RRM_WR_ENBSTATYPE_MMESTA
}RrmWrEnbStaType;
# 368 "../..//enbapp/lterrm/rm_wr.h"
typedef enum rmWrUeStaType
{
   RRM_WR_UESTATYPE_DOPEST,
   RRM_WR_UESTATYPE_WIDEBANDCQI,
   RRM_WR_UESTATYPE_SUBBANDCQI
}RrmWrUeStaType;







typedef struct rmWrStatusInfo
{
   RrmWrRespStatus status;
   RrmWrCause cause;
}RmWrStatusInfo;







typedef struct rrmWrMmeCfg
{
   RrmWrCfgAction addModOrDel;
   U16 mmeId;
}RrmWrMmeCfg;




#define RRM_WR_ENB_CFGTYPE_ENBINIT 0x01
#define RRM_WR_ENB_CFGTYPE_MMECFG 0x02
# 413 "../..//enbapp/lterrm/rm_wr.h"
typedef struct rrmWrEnbCfgReqInfo
{
   U8 cfgType;
   RrmWrMmeCfg mmeCfg;
}RrmWrEnbCfgReqInfo;
# 426 "../..//enbapp/lterrm/rm_wr.h"
typedef struct rrmWrEnbCfgRespInfo
{
   RmWrStatusInfo statusInfo;
}RrmWrEnbCfgRespInfo;
# 444 "../..//enbapp/lterrm/rm_wr.h"
typedef struct rrmWrCellCfg
{
   RrmWrCellBw dlBw;
   U8 n2Rb;
   U8 n1Cs;
   RrmWrAcBarringTime moDataAcbTime;
   RrmWrAcBarringTime moSigAcbTime;
   U8 maxNumUes;
   Bool isDlfsSchd;
}RrmWrCellCfg;




#define RRM_WR_CELL_RECFGTYPE_RESERVE 0x0001
#define RRM_WR_CELL_RECFGTYPE_MODATA_ACBTIME 0x0002
#define RRM_WR_CELL_RECFGTYPE_MOSIG_ACBTIME 0x0004
# 473 "../..//enbapp/lterrm/rm_wr.h"
typedef struct rrmWrCellCfgReqInfo
{
   CmLteCellId cellId;
   RrmWrCfgAction addModOrDel;
   U16 reCfgType;
   RrmWrCellCfg cellCfg;
}RrmWrCellCfgReqInfo;
# 488 "../..//enbapp/lterrm/rm_wr.h"
typedef struct rrmWrCellCfgRespInfo
{
   CmLteCellId cellId;
   RmWrStatusInfo statusInfo;
}RrmWrCellCfgRespInfo;
# 503 "../..//enbapp/lterrm/rm_wr.h"
typedef struct rrmWrUeAdmitReqInfo
{
   CmLteCellId cellId;
   U16 crnti;
   TransId transId;
   RrmWrUeAdmitCause conEstabCause;
}RrmWrUeAdmitReqInfo;
# 527 "../..//enbapp/lterrm/rm_wr.h"
typedef struct rrmWrPCqiReportCfg
{
   Bool pres;
   Bool simulAckNackCqi;
   U8 pucchReportMode;
   U16 cqiConfigIndex;
   U16 cqiResourceIndex;
   RrmWrPcqiFormatInd cqiFormatInd;
   TknU8 factorK;
   TknU16 riConfigIndex;
}RrmWrPCqiReportCfg;





typedef struct rrmWrUeCqiReportCfg
{
   RrmWrPCqiReportCfg prdCqiRepCfg;
}RrmWrUeCqiReportCfg;





typedef struct rrmWrUeDedPhyCfg
{
   RrmWrUeCqiReportCfg cqiRepCfg;
}RrmWrUeDedPhyCfg;




#define RRM_WR_PHY_CFG_DED_RES_SR 0x01
#define RRM_WR_PHY_CFG_DED_RES_CQI 0x02
#define RRM_WR_PHY_CFG_DED_RES_SRS 0x04





typedef struct rrmWrUeRadioResCfg
{
   U8 phyCfgDedResBitMap;
   RrmWrUeDedPhyCfg phyCfgDed;
}RrmWrUeRadioResCfg;
# 585 "../..//enbapp/lterrm/rm_wr.h"
typedef struct rrmWrUeAdmitRespInfo
{
   CmLteCellId cellId;
   U16 crnti;
   TransId transId;
   RmWrStatusInfo statusInfo;
   RrmWrUeRadioResCfg ueRadioResCfg;
}RrmWrUeAdmitRespInfo;
# 601 "../..//enbapp/lterrm/rm_wr.h"
typedef struct rrmWrUeRelReqInfo
{
   CmLteCellId cellId;
   U16 crnti;
   TransId transId;
}RrmWrUeRelReqInfo;
# 618 "../..//enbapp/lterrm/rm_wr.h"
typedef struct rrmWrUeRelRespInfo
{
   CmLteCellId cellId;
   U16 crnti;
   TransId transId;
   RmWrStatusInfo statusInfo;
}RrmWrUeRelRespInfo;
# 633 "../..//enbapp/lterrm/rm_wr.h"
typedef struct rmWrERabArpInfo
{
   U8 priorityLvl;
   Bool preemptCapability;
   Bool preemptVulnerability;
}RmWrERabArpInfo;
# 647 "../..//enbapp/lterrm/rm_wr.h"
typedef struct rmWrERabGbrInfo
{
   U32 dlMbr;
   U32 ulMbr;
   U32 dlGbr;
   U32 ulGbr;
}RmWrERabGbrInfo;







typedef struct rmWrERabQosInfo
{
   U8 qci;
   U16 pktDelayBudget;
   RmWrERabGbrInfo gbrInfo;
}RmWrERabQosInfo;







typedef struct rrmWrERabCfgInfo
{
   RmWrERabQosInfo qosInfo;
   RmWrERabArpInfo arpInfo;
}RmWrERabCfgInfo;
# 692 "../..//enbapp/lterrm/rm_wr.h"
typedef struct rrmWrERabAddMod
{
   U8 eRabId;
   Bool isERabToAdd;
   RmWrERabCfgInfo eRabCfg;
   RmWrStatusInfo statusInfo;
}RrmWrERabAddMod;
# 708 "../..//enbapp/lterrm/rm_wr.h"
typedef struct rrmWrERabRel
{
   U8 eRabId;
   RmWrStatusInfo statusInfo;
}RrmWrERabRel;


#define RRM_WR_MAX_NUM_ERABS 11
# 727 "../..//enbapp/lterrm/rm_wr.h"
typedef struct rrmWrERabCfg
{
   U16 numERabToAddMod;
   U16 numERabToRel;
   RrmWrERabAddMod eRabAddModList[11];
   RrmWrERabRel eRabRelList[11];
}RrmWrERabCfg;




#define RRM_WR_UE_RECFGREQTYPE_TXMODE 0x01
#define RRM_WR_UE_RECFGREQTYPE_ERABCFG 0x02
#define RRM_WR_UE_RECFGREQTYPE_NEWCRNTI 0x04
# 758 "../..//enbapp/lterrm/rm_wr.h"
typedef struct rrmWrUeRecfgReqInfo
{
   CmLteCellId cellId;
   U16 crnti;
   TransId transId;
   U8 recfgType;
   RrmWrTxMode txMode;
   RrmWrERabCfg ueERabCfg;
   U16 newCrnti;
}RrmWrUeRecfgReqInfo;




#define RRM_WR_UE_RECFGTYPE_RESCFG 0x01
#define RRM_WR_UE_RECFGTYPE_ERABCFG 0x02
# 788 "../..//enbapp/lterrm/rm_wr.h"
typedef struct rrmWrUeRecfgRespInfo
{
   CmLteCellId cellId;
   U16 crnti;
   TransId transId;
   U8 recfgType;
   RrmWrUeRadioResCfg ueRadioResCfg;
   RrmWrERabCfg ueERabCfg;
   RmWrStatusInfo statusInfo;
}RrmWrUeRecfgRespInfo;







typedef struct rrmWrMmeStaInfo
{
   U16 mmeId;
   RrmWrMmeOvldStatus mmeOvldStatus;
}RrmWrMmeStaInfo;
# 818 "../..//enbapp/lterrm/rm_wr.h"
typedef struct rrmWrEnbStaIndInfo
{
   RrmWrEnbStaType staType;
   U8 cpuLoad;
   RrmWrMmeStaInfo mmeStatus;
}RrmWrEnbStaIndInfo;




typedef struct rrmWrCellStaIndInfo
{
   CmLteCellId cellId;
}RrmWrCellStaIndInfo;
# 842 "../..//enbapp/lterrm/rm_wr.h"
typedef struct rrmWrUeStaIndInfo
{
   CmLteCellId cellId;
   U16 crnti;
   RrmWrUeStaType staType;
   U8 dopplerEst;
   U8 widebandCqi;
}RrmWrUeStaIndInfo;
# 859 "../..//enbapp/lterrm/rm_wr.h"
typedef struct rrmWrSib2AcBarringCfg
{
   Bool pres;
   RrmWrAcBarringFactor acbFactor;
   RrmWrAcBarringTime acbTime;
}RrmWrSib2AcBarringCfg;
# 874 "../..//enbapp/lterrm/rm_wr.h"
typedef struct rrmWrSib2Cfg
{
   RrmWrSib2AcBarringCfg acBarringMoData;
   RrmWrSib2AcBarringCfg acBarringMoSig;
}RrmWrSib2Cfg;


#define RRM_WR_CELL_RECFGINDTYPE_SIB2CFG 0x0001







typedef struct RrmWrCellRecfgIndInfo
{
   CmLteCellId cellId;
   U16 recfgType;
   RrmWrSib2Cfg sib2Cfg;
}RrmWrCellRecfgIndInfo;





typedef RrmWrUeRecfgRespInfo RrmWrUeRecfgIndInfo;







typedef struct rrmWrUeRelIndInfo
{
   CmLteCellId cellId;
   U16 crnti;
   RrmWrCause relCause;
}RrmWrUeRelIndInfo;
# 929 "../..//enbapp/lterrm/rm_wr.h"
extern S16 WrRmEnodebCfgReq (RrmWrEnbCfgReqInfo *rrmWrEnbCfgReq);
# 945 "../..//enbapp/lterrm/rm_wr.h"
extern S16 RmWrEnodebCfgResp (RrmWrEnbCfgRespInfo *rrmWrEnbCfgResp);
# 962 "../..//enbapp/lterrm/rm_wr.h"
extern S16 WrRmCellCfgReq (RrmWrCellCfgReqInfo *rrmWrCellCfgReq);
# 978 "../..//enbapp/lterrm/rm_wr.h"
extern S16 RmWrCellCfgResp (RrmWrCellCfgRespInfo *rrmWrCellCfgResp);
# 994 "../..//enbapp/lterrm/rm_wr.h"
extern S16 WrRmUeAdmitReq (RrmWrUeAdmitReqInfo *rrmWrUeAdmitReq);
# 1010 "../..//enbapp/lterrm/rm_wr.h"
extern S16 RmWrUeAdmitResp (RrmWrUeAdmitRespInfo *rrmWrUeAdmitResp);
# 1027 "../..//enbapp/lterrm/rm_wr.h"
extern S16 WrRmUeRecfgReq (RrmWrUeRecfgReqInfo *rrmWrUeRecfgReq);
# 1043 "../..//enbapp/lterrm/rm_wr.h"
extern S16 RmWrUeRecfgResp (RrmWrUeRecfgRespInfo *rrmWrUeRecfgResp);
# 1058 "../..//enbapp/lterrm/rm_wr.h"
extern S16 WrRmUeRelReq (RrmWrUeRelReqInfo *rrmWrUeRelReq);
# 1073 "../..//enbapp/lterrm/rm_wr.h"
extern S16 RmWrUeRelResp (RrmWrUeRelRespInfo *rrmWrUeRelResp);
# 1088 "../..//enbapp/lterrm/rm_wr.h"
extern S16 WrRmCellStaInd (RrmWrCellStaIndInfo *rrmWrCellStaInd);
# 1103 "../..//enbapp/lterrm/rm_wr.h"
extern S16 WrRmUeStaInd (RrmWrUeStaIndInfo *rrmWrUeStaInd);
# 1118 "../..//enbapp/lterrm/rm_wr.h"
extern S16 WrRmEnodebStaInd (RrmWrEnbStaIndInfo *rrmWrEnbStaInd);
# 1132 "../..//enbapp/lterrm/rm_wr.h"
extern S16 RmWrCellRecfgInd (RrmWrCellRecfgIndInfo *rrmWrCellRecfgInd);
# 1147 "../..//enbapp/lterrm/rm_wr.h"
extern S16 RmWrUeRecfgInd (RrmWrUeRecfgIndInfo *rrmWrUeRecfgInd);
# 1163 "../..//enbapp/lterrm/rm_wr.h"
extern S16 RmWrUeRelInd (RrmWrUeRelIndInfo *rrmWrUeRelInd);
# 163 "../..//enbapp/src/wr.h" 2



#define WR_NUM_TQENTRY 100
#define WR_MAX_SAPS 10
#define WR_MEM_REGION 0
#define WR_MEM_POOL 0


#define WR_RLC_UM_DFLT_SN_LEN 10

#define WRLAYERNAME "eNB App"

#define WR_CALC_WAIT_TIME(_delay) (_delay/((1000/SS_TICKS_SEC) * WR_TMR_RES))

#define WR_TMR_NHU_SAP_BND 1
#define WR_TMR_RGR_SAP_BND 2
#define WR_TMR_CTF_SAP_BND 3
#define WR_TMR_SZT_SAP_BND 4
#define WR_TMR_CZT_SAP_BND 5
#define WR_TMR_EGT_SAP_BND 6
#define WR_TMR_PJU_SAP_BND 7
#define WR_TMR_INACTIVITY 8
#define WR_TMR_S1_RELOC_TMR 9
#define WR_TMR_S1_OVRL_TMR 10
#define WR_TMR_UE_HO_ATTACH_TMR 11
#define WR_TMR_MME_SETUP_RSP 12
#define WR_TMR_MME_SETUP_WAIT 13
#define WR_TMR_REESTABLISH 14
#define WR_TMR_RECONFIGURE 15
#define WR_TMR_ENB_SETUP_RSP 16
#define WR_TMR_ENB_SETUP_WAIT 17
#define WR_TMR_ENB_CFG_RSP 18
#define WR_TMR_ENB_CFG_WAIT 19
#define WR_TMR_OVERLD_SAMPLE 20
#define WR_TMR_OVERLD_STATUS 21

#define WR_TMR_ANR_INTRA_LTE 22
#define WR_TMR_ANR_INTER_RAT 23
#define WR_TMR_ANR_DFLT_PERIOD 24
#define WR_TMR_ANR_1XRTT_DFLT_PERIOD 25
#define WR_TMR_ANR_HRPD_DFLT_PERIOD 26

#define WR_TMR_X2_RST_RSP 27
#define WR_TMR_ENB_CONFIG_UPDATE_WAIT 28
#define WR_TMR_RST_RSP 29
#define WR_TMR_S1_ENB_CFG_RSP 30
#define WR_TMR_S1_ENB_CFG_WAIT 31
#define WR_TMR_RRC_RRCCON 32
#define WR_TMR_RRC_CONREL 33
#define WR_TMR_RRC_CAPENQ 34
#define WR_TMR_RRC_SECUCMD 35
#define WR_TMR_CSFB_CFG 36
#define WR_TMR_TGTENB_RELOCEXE 37

#define WR_TMR_RAD_RES_MOD_TMR 38
#define WR_TMR_INITIAL_CTX_REQ 39
#define WR_TMR_END_MARKER_TMR 40
#define WR_TMR_DETECT_RLF 41
#define WR_TMR_RRCCON_FAIL_RRC_UNDO_CFG 42
#define WR_TMR_UE_CTX_REL_REQ 43
#define WR_TMR_ENB_CFG_TRANSFER_WAIT 44

#define WR_TMR_ANR_MEAS_EPOCH_TMR 45
#define WR_TMR_ANR_MEAS_TRICE_TMR 46
#define WR_TMR_TGT_HOPREP 47
#define WR_TMR_TGT_PATH_SWITCH 48




#define WR_TMR_RRCCON_VAL 10000
#define WR_TMR_RRC_RECONFIG_VAL 10000
#define WR_TMR_CONREL_VAL 1000
#define WR_TMR_CAPENQ_VAL 1000
#define WR_TMR_SECUCMD_VAL 10000
#define WR_TMR_REESTABLISH_VAL 1000
#define WR_TMR_RAD_RES_MOD_TMR_VAL 100000
#define WR_TMR_INITIAL_CTX_REQ_TMR_VAL 10000

#define WR_TMR_CSFB_CFG_VAL 30000
#define WR_TMR_S1_RELOC_VAL 20000
#define WR_TMR_CSFB_CFG_VAL 30000
#define WR_TMR_TGT_HOPREP_VAL 1000
#define WR_TMR_DETECT_RLF_VAL 50000
#define WR_TMR_RRCCON_FAIL_RRC_UNDO_CFG_VAL 500
#define WR_TMR_UE_CTX_REL_VAL 200
#define WR_TMR_TGT_PATH_SWITCH_VAL 500

#define WR_MAX_TMR_PER_UE 1
#define WR_TMR_RES 1
#define WR_APP_TQSIZE 64




#define WR_DFLT_EGTP_PORT 2152

#define WR_INIT_STATE 0

#define WR_SI_CNT 4

#define WR_MAX_TARGET_PREP 3
#define WR_MAX_X2AP_CON 10

#define WR_BYTE_LEN 8
#define WR_TRAC_LEN 16

#define WR_MEM_PDU_SIZE 4096

#define WR_MAX_SRBS 2

#define WR_RGR_SRB_CFG_LCH 0x1
#define WR_RGR_SRB_CFG_LCG 0x2
#define WR_RGR_DRB_CFG_LCH 0x4
#define WR_RGR_DRB_CFG_LCG 0x8

#define WR_S1_SETUP_DONE 1
#define WR_S1_CONNECTING 2
#define WR_S1_CONNECTED 3
#define WR_MAX_S1AP_CON 100


#define WR_ENC_TRANSID_HO_REQ 11
#define WR_ENC_TRANSID_HO_CMD 12
#define WR_DEC_TRANSID_HO_CMD 13
#define WR_ENC_TRANSID_HO_DL_DCCH_MSG 14
# 306 "../..//enbapp/src/wr.h"
#define SZ_MAX_MSG_ID 63
#define SZ_MEM_SDU_SIZE 2048
#define WR_CZ_MAX_MSG_ID 25
#define WR_SZ_MEM_SDU_SIZE 2048
#define WR_CZ_MEM_SDU_SIZE 2048

#define WR_PRNT_BUF wrCb.init.prntBuf
#define DBGMASK_SM 1
#define WR_EVEBASE 0
#define WR_ERRVE (WR_EVEBASE + 0)
#define WR_EVE001 (WR_ERRVE + 1)

#define WR_PRSNT 1
#define WR_NOTPRSNT 0



typedef enum WrCellResetStates
{
   WR_INIT_STATE_NONE = 0,
   WR_S1_RESET_DONE = 1,
   WR_UE_RELEASE_DONE = 2,
   WR_X2_RESET_DONE = 4,
   WR_ALL_RESET_DONE = 7
}WrCellResetStates;

#define WR_S1_SETUP_DONE_PAR_RESET 8
#define WR_PAR_RESET_DONE 10


#define WR_X2_SETUP_DONE 16
# 366 "../..//enbapp/src/wr.h"
#define WRDBGP(_msgClass,_arg) { DBGP(&smCb.init, "EnodeB App: ", _msgClass, _arg); }





#define WR_ERROR 1

#define WR_DBG_ERROR(_args) { DBGP(&(wrCb.init), WRLAYERNAME, WR_ERROR, _args); }
# 405 "../..//enbapp/src/wr.h"
#define WR_LYR_DBGP(_msgClass,_arg) { DBGP(&wrCb.init, "EnodeB App: ", _msgClass, _arg); }
# 423 "../..//enbapp/src/wr.h"
typedef struct wrLiSapCb
{
   Pst pst;
   SuId suId;
   SpId spId;
   State sapState;
   Mem mem;
   CmTimer timer;
   U8 bndRetryCnt;
   U8 maxBndRetry;
   TmrCfg bndTmr;
} WrLiSapCb;
# 452 "../..//enbapp/src/wr.h"
typedef struct wrCb
{
   Mem mem;
   CmTqCp tqCp;
   CmTqType tq[100];
   TskInit init;
   Header lmHdr;
   UConnId s1apConId;
   WrLiSapCb **nhuSap;
   WrLiSapCb **ctfSap;
   WrLiSapCb **rgrSap;
   WrLiSapCb **sztSap;
   WrLiSapCb **cztSap;
   WrLiSapCb **egtSap;
   WrLiSapCb **pjuSap;
   WrCellResetStates resetCmfState;
   WrCellResetStates parResetCmfState;






} WrCb;

typedef struct wrUmmTimer
{
 void *cb;
 CmLList tmrLnk;
 CmTimer tmr;
}WrUmmTimer;

extern WrCb wrCb;

extern S16 wrActvTmr (Ent ent, Inst inst);
extern S16 wrRegInitTmr(Void);
extern S16 wrStartTmr(U32 cb, S16 tmrEvnt, U32 delay);
extern Void wrStopTmr(U32 cb, S16 event);
extern Bool wrIsTmrRunning(CmTimer *tmr, S16 event);

extern Void wrSendLmAlarm(U16 category, U16 event, U16 cause);
extern S16 wrDiagPrntIpAddr(U32 ipAddr, U32 diagLvl);




typedef enum
{
   WR_DIAG_CELLID,
   WR_DIAG_CRNTI,
   WR_DIAG_MMEID,
   WR_DIAG_UEID,
   WR_DIAG_PEERID,
   WR_DIAG_ENBID,
   WR_DIAG_NA
} WrDiagSplArg;






#define WR_DIAG_LVL0(_tknId,_splArgEnum,_splArg,_string,_arg1,_arg2,_arg3,_arg4) { if(wrCb.init.logMask & SS_DIAG_LVL0) { ssDiagFix(_tknId, _splArgEnum, ENTWR, wrCb.init.inst, SS_DIAG_LVL0, SS_DIAG_MSG_TYPE_FIXED, _splArg, _arg1, _arg2, _arg3, _arg4, _string); } }
# 525 "../..//enbapp/src/wr.h"
#define WR_DIAG_LVL1(_tknId,_splArgEnum,_splArg,_string,_arg1,_arg2,_arg3,_arg4) { if(wrCb.init.logMask & SS_DIAG_LVL1) { ssDiagFix(_tknId, _splArgEnum, ENTWR, wrCb.init.inst, SS_DIAG_LVL1, SS_DIAG_MSG_TYPE_FIXED, _splArg, _arg1, _arg2, _arg3, _arg4, _string); } }
# 536 "../..//enbapp/src/wr.h"
#define WR_DIAG_LVL2(_tknId,_splArgEnum,_splArg,_string,_arg1,_arg2,_arg3,_arg4) { if(wrCb.init.logMask & SS_DIAG_LVL2) { ssDiagFix(_tknId, _splArgEnum, ENTWR, wrCb.init.inst, SS_DIAG_LVL2, SS_DIAG_MSG_TYPE_FIXED, _splArg, _arg1, _arg2, _arg3, _arg4, _string); } }
# 547 "../..//enbapp/src/wr.h"
#define WR_DIAG_LVL3(_tknId,_splArgEnum,_splArg,_string,_arg1,_arg2,_arg3,_arg4) { if(wrCb.init.logMask & SS_DIAG_LVL3) { ssDiagFix(_tknId, _splArgEnum, ENTWR, wrCb.init.inst, SS_DIAG_LVL3, SS_DIAG_MSG_TYPE_FIXED, _splArg, _arg1, _arg2, _arg3, _arg4, _string); } }
# 558 "../..//enbapp/src/wr.h"
#define WR_DIAG_LVL4(_tknId,_splArgEnum,_splArg,_string,_arg1,_arg2,_arg3,_arg4) { if(wrCb.init.logMask & SS_DIAG_LVL4) { ssDiagFix(_tknId, _splArgEnum, ENTWR, wrCb.init.inst, SS_DIAG_LVL4, SS_DIAG_MSG_TYPE_FIXED, _splArg, _arg1, _arg2, _arg3, _arg4, _string); } }
# 569 "../..//enbapp/src/wr.h"
#define WR_DIAG_VAR(_tknId,_splArgEnum,_splArg,_string,_stringPtr) { if(wrCb.init.logMask & SS_DIAG_VAR) { ssDiagFix(_tknId, _splArgEnum, ENTWR, wrCb.init.inst, SS_DIAG_VAR, SS_DIAG_MSG_TYPE_FIXED, _splArg, 0, 0, 0, 0, _string); ssDiagVarible(ENTWR, wrCb.init.inst, SS_DIAG_VAR, SS_DIAG_MSG_TYPE_VAR, _tknId, _splArg, _stringPtr); } }
# 580 "../..//enbapp/src/wr.h"
#define ALARM printf
# 4 "../..//enbapp/src/wr_smm_pdcp.c" 2
# 1 "../..//enbapp/src/wr_cmn.h" 1



#define __WR_CMN_H__ 







#define WR_GET_SFN_MIB(_var,_sfnInt) { U8 _byte = 0; _byte = (U8)((_sfnInt & 0x0003FC) >> 2); _var = _byte; }
# 23 "../..//enbapp/src/wr_cmn.h"
#define WR_ALLOCMBUF(_region,_pool,_buf) do { if (SGetMsg((_region), (_pool), (Buffer **)(_buf)) != ROK) { (*(_buf)) = NULLP; } } while(0)
# 37 "../..//enbapp/src/wr_cmn.h"
#define WR_FREEMBUF(_mBuf) do{ if (_mBuf != NULLP) { (Void)SPutMsg((_mBuf)); (_mBuf) = NULLP; } }while(0)
# 47 "../..//enbapp/src/wr_cmn.h"
#define WR_ALLOCEVNT(_evntPtr,_size) { (*_evntPtr) = NULLP; if(cmAllocEvnt((Size) _size, WR_MEM_PDU_SIZE, &wrCb.mem, (Ptr *)(_evntPtr)) != ROK) { RETVALUE(RFAILED); } }
# 58 "../..//enbapp/src/wr_cmn.h"
#define WR_GET_MEM(_memPtr,_size,_allocPtr) { (*_allocPtr) = NULLP; if(cmGetMem((U8 *)_memPtr, _size, (Ptr *)_allocPtr) != ROK) { RETVALUE(RFAILED); } }
# 68 "../..//enbapp/src/wr_cmn.h"
#define WR_FREE_EVNT(_evntPtr) { cmFreeMem((_evntPtr)); (_evntPtr) = NULLP; }






#define WR_FILL_TKN_UINT(_ptr,_val) { _ptr.pres = PRSNT_NODEF; _ptr.val = _val;}





#define WR_FILL_TKN_STR_UINT(_ptr,_val,_len) { _ptr->pres = PRSNT_NODEF; _ptr->val = _val; _ptr->len = _len;}





#define WR_GET_S1AP_CON_ID(_suConId,_ptr) { _suConId = ((_ptr->cellId & 0xFFFF) << 16) |(_ptr->ueIdx & 0xFFFF);}




#define WR_GET_CELLID_FRM_SUCONID(_suConId,_cellId,_ueId) { _cellId = ((_suConId >> 16) & 0xFFFF); _ueId = ((_suConId & 0xFF)); }




#define WR_MEM_COPY(_dst,_src,_len) cmMemcpy((U8*) (_dst), (U8*) (_src), _len);



#define WR_FREEEVNT(_evntPtr) { cmFreeMem((_evntPtr)); (_evntPtr) = NULLP; }





#define WR_ALLOC(_buf,_size) { if (SGetSBuf(WR_MEM_REGION, WR_MEM_POOL, (Data **)(_buf), _size) == ROK) { WR_SET_ZERO((*_buf), _size); } else { WR_DIAG_LVL0(0x0ff00001, WR_DIAG_NA, SS_DIAG_INV_ARG, "SSI memory allocation of %d             bytes %d failed in :%d",_size, __LINE__, 0, 0) (*_buf) = NULLP; } }
# 122 "../..//enbapp/src/wr_cmn.h"
#define WR_SET_ZERO(_buf,_size) { cmMemset((U8 *)(_buf), 0, _size);}





#define WR_FREE(_buf,_size) { (Void) SPutSBuf(WR_MEM_REGION, WR_MEM_POOL, (Data *) _buf, (Size) _size); (_buf) = NULLP;}




#define WR_GET_VALS_RGR_TRANS(_arr,_cfgTyp,_lcId,_crnti) { U16 _tempByte = 0; _cfgTyp = _arr[0]; _lcId = _arr[1]; _tempByte = _arr[3]; _tempByte = ((_tempByte << 8) | _arr[2]); _crnti = _tempByte;}
# 143 "../..//enbapp/src/wr_cmn.h"
#define WR_SET_TRANS(_arr,_transId) { _arr[0] = (U8) (_transId & 0xff); _arr[1] = (U8) ((_transId & 0x0000ff00) >> 8) ; _arr[2] = (U8) ((_transId & 0x00ff0000) >> 16); _arr[3] = (U8) ((_transId & 0xff000000) >> 24);}







#define WR_GET_U32_FRM_OSXL(_var,_tkn) { U16 _len = 0; U16 _idx = 0; U32 _finalVal = 0; _len = _tkn.len; if(_len > 4) _len = 4; for(_idx = 0; _idx < _len; _idx++) { _finalVal = ((_finalVal << 8) | (_tkn.val[_idx])); } _var = _finalVal; }
# 166 "../..//enbapp/src/wr_cmn.h"
#define WR_GET_UE_X2_IDX(_ueX2apId) (_ueX2apId % WR_MAX_X2AP_CON)
#define WR_CALC_COUNT(_snLen,_sn,_txHfn,_count) { _count = _sn; _txHfn = _txHfn << _snLen; _count |= _txHfn; }






#define WR_LOGERROR(errCls,errCode,errVal,errDesc) do { { SLogError(wrCb.init.ent, wrCb.init.inst, wrCb.init.procId, (Txt *)__FILE__, __LINE__, errCls, errCode, (ErrVal)errVal, (Txt *)errDesc); } }while(0)
# 184 "../..//enbapp/src/wr_cmn.h"
#define WR_FILL_BIT_STR(_ptr,_len,_val,_pdu) { U16 _tmpLen; _ptr.pres = PRSNT_NODEF; _ptr.len = _len; _tmpLen = _len; if((_len%8) > 0) { _tmpLen = (_len/8)+1; } else { _tmpLen = _len/8; } WR_GET_MEM(_pdu, _tmpLen * sizeof(U8), (Ptr *)&(_ptr.val)); if(_ptr.val != NULLP) { *_ptr.val = _val; *_ptr.val = (*_ptr.val) << (_tmpLen*8 - _len); } }
# 207 "../..//enbapp/src/wr_cmn.h"
#define WR_FILL_BIT_STR_VAL(_ptr,_len,_val,_pdu) { S8 i; U16 _tmpLen; U32 _val2= _val; _ptr.pres = PRSNT_NODEF; _ptr.len = _len; _tmpLen = _len; if((_len%8) > 0) { _tmpLen = (_len/8)+1; } else { _tmpLen = _len/8; } WR_GET_MEM(_pdu, _tmpLen * sizeof(U8), (Ptr *)&(_ptr.val)); if(_ptr.val != NULLP) { for(i = _tmpLen - 1; i >= 0; i--) { _ptr.val[i] = (U8)(0x000000ff & _val2); _val2 = _val2>>8; } } }
# 234 "../..//enbapp/src/wr_cmn.h"
#define WR_ANTENA_TX_MODE_1 NhuAntennaInfoDedicatedtransmissionModetm1Enum
#define WR_ANTENA_TX_MODE_2 NhuAntennaInfoDedicatedtransmissionModetm2Enum
#define WR_ANTENA_TX_MODE_3 NhuAntennaInfoDedicatedtransmissionModetm3Enum
#define WR_ANTENA_TX_MODE_4 NhuAntennaInfoDedicatedtransmissionModetm4Enum
#define WR_ANTENA_TX_MODE_5 NhuAntennaInfoDedicatedtransmissionModetm5Enum
#define WR_ANTENA_TX_MODE_6 NhuAntennaInfoDedicatedtransmissionModetm6Enum
#define WR_ANTENA_TX_MODE_7 NhuAntennaInfoDedicatedtransmissionModetm7Enum
#define WR_ANTENA_TX_MODE_8 NhuAntennaInfoDedicatedtransmissionModetm8_v920Enum

#define FILL_ANT_TX_MODE(_txmode,_cfg) {switch(_txmode){ case WR_ANTENA_TX_MODE_1: _cfg->txModeEnum = RGR_UE_TM_1; break; case WR_ANTENA_TX_MODE_2: _cfg->txModeEnum = RGR_UE_TM_2; break; case WR_ANTENA_TX_MODE_3: _cfg->txModeEnum = RGR_UE_TM_3; break; case WR_ANTENA_TX_MODE_4: _cfg->txModeEnum = RGR_UE_TM_4; break; case WR_ANTENA_TX_MODE_5: _cfg->txModeEnum = RGR_UE_TM_5; break; case WR_ANTENA_TX_MODE_6: _cfg->txModeEnum = RGR_UE_TM_6; break; case WR_ANTENA_TX_MODE_7: _cfg->txModeEnum = RGR_UE_TM_7; break; }}
# 270 "../..//enbapp/src/wr_cmn.h"
typedef U8 WrCellBw;

#define WR_BANDWIDTH_6RBS 0
#define WR_BANDWIDTH_15RBS 1
#define WR_BANDWIDTH_25RBS 2
#define WR_BANDWIDTH_50RBS 3
#define WR_BANDWIDTH_75RBS 4
#define WR_BANDWIDTH_100RBS 5

#define WR_CAUSE_RADIONW 0
#define WR_CAUSE_TRANSPORT 1
#define WR_CAUSE_NAS 2
#define WR_CAUSE_PROTOCOL 3
#define WR_CAUSE_MISC 4



#define MAX_NBR_UTRA_CELL 16
#define MAX_NBR_EUTRA_FREQ 16
#define MAX_NBR_UTRA_FREQ 16




typedef enum WrCellState
{
   WR_CELL_STATE_INIT = 1,
   WR_CELL_STATE_RESET,
   WR_CELL_STATE_UP,
   WR_CELL_STATE_PWR_DOWN
}WrCellState;



typedef enum
{
   UTRA_FDD,
   UTRA_TDD128,
   UTRA_TDD384,
   UTRA_TDD768,
   GERAN,
   CDMA2000_HRPD,
   CDMA2000_1XRTT
}wrCsfbRatType;
# 322 "../..//enbapp/src/wr_cmn.h"
typedef struct wrUmmMsgCause
{
   U32 causeTyp;
   U32 causeVal;
} WrUmmMsgCause;
# 336 "../..//enbapp/src/wr_cmn.h"
typedef struct wrPlmnId
{
   U8 numMncDigits;
   U8 mcc[3];
   U8 mnc[3];
} WrPlmnId;





typedef struct wrEcgi
{
   WrPlmnId plmnId;
   U32 eutranCellId;
} WrEcgi;






typedef struct wrSTmsi
{
   Bool pres;
   U8 mmec;
   U32 mTMSI;
} WrSTmsi;







typedef struct wrGummei
{
   Bool pres;
   WrPlmnId plmnId;
   U16 mmeGrpId;
   U8 mmec;
}WrGummei;





typedef struct wrBitRate
{
   U32 dl;
   U32 ul;
} WrBitRate;

#define WR_PLMNID_IE_LEN 3
#define WR_LAC_IE_LEN 2

#define RB_DIR_UL 1
#define RB_DIR_DL 2
#define RB_DIR_BI RB_DIR_UL | RB_DIR_DL
typedef U32 WrRbDir;

typedef U32 WrMmeId;
typedef CmLteCellId WrCellId;





typedef struct wrCgi
{
   WrPlmnId plmnId;
   U32 cellId;
} WrCgi;





typedef struct wrTai
{
   WrPlmnId plmnId;
   U16 tac;
} WrTai;


#define WR_INTG_KEY_LEN 16
#define WR_CIPH_KEY_LEN 16
#define WR_KENB_KEY_LEN 32







typedef struct wrLchChnlCfg
{
   U8 priority;
   U32 pbr;
   U32 bucketSzDur;
   U8 lcg;
} WrLchChnlCfg;
# 447 "../..//enbapp/src/wr_cmn.h"
typedef struct wrUeCapInfo
{
   NhuUE_EUTRA_Cap eUTRA_Cap;
   TknStrOSXL ueEutraOctStr;
   TknStrOSXL ueUtraOctStr;
   TknStrOSXL ueGeranCsOctStr;
   TknStrOSXL ueGeranPsOctStr;
   TknStrOSXL ueCdmaOctStr;
} WrUeCapInfo;

typedef U16 WrTac;
typedef U16 WrLac;

typedef struct wrForbiddenTAs
{
   WrPlmnId plmnId;
   U16 noOfTac;
   WrTac *tac;
} WrForbiddenTAs;


typedef struct wrForbiddenLAs
{
   WrPlmnId plmnId;
   U16 noOfLac;
   WrLac *lac;
} WrForbiddenLAs;

typedef struct wrHoRstrctInfo
{
   WrPlmnId srvngPlmn;
   U32 frbdnInterRATs;
   U8 noOfEplmn;
   U8 noOfTAs;
   U8 noOfLAs;
   WrPlmnId *ePlmn;
   WrForbiddenTAs *frbdnTAs;
   WrForbiddenLAs *frbdnLAs;
} WrHoRstrctInfo;


#define WR_RLC_AM 0
#define WR_RLC_UM_BI_DIR 1
#define WR_RLC_UM_UL 2
#define WR_RLC_UM_DL 3
# 502 "../..//enbapp/src/wr_cmn.h"
typedef struct wrRlcAmCfg
{
   U32 tPollRetransmit;
   U32 pollPdu;
   U32 pollByte;
   U32 maxRetxThreshold;
   U32 tReordering;
   U32 tStatusProhibit;
} WrRlcAmCfg;







typedef struct wrRlcUmCfg
{
   U32 dlSnLen;
   U32 ulSnLen;
   U32 tReordering;
} WrRlcUmCfg;
# 533 "../..//enbapp/src/wr_cmn.h"
typedef struct wrRlcCfg
{
   U8 mode;
   union
   {
      WrRlcAmCfg amCfg;
      WrRlcUmCfg umCfg;
   } u;
} WrRlcCfg;
# 551 "../..//enbapp/src/wr_cmn.h"
typedef struct wrPdcpCfg
{
   Bool statusRptReq;
   Bool hdrCmpReq;
   U32 discardTmr;
   U32 snSize;
   U16 maxCid;
   U16 rohcProfid;
} WrPdcpCfg;
# 568 "../..//enbapp/src/wr_cmn.h"
typedef struct wrEmmS1ConId
{
   U8 type;
   U32 conId;
}WrEmmS1ConId;





typedef struct wrRegLai
{
      WrPlmnId plmnId;
      U16 lac;
} WrRegLai;
# 595 "../..//enbapp/src/wr_cmn.h"
typedef struct wrHoNghInfo
{
   U16 pci;
   U32 earfcn;
   U32 peerId;
   U32 eutranCellId;
   WrPlmnId plmnId;
   CmTptAddr neighEnbAddr;
   U8 isX2Connected;
   U8 enbType;
   U16 tac;
} WrHoNghInfo;






typedef struct wrUmmAnrMeasInterFreqInfo
{
   CmLList lnk;
   U32 uarfcn;
} WrUmmAnrMeasInterFreqInfo;






typedef struct wrUmmAnrMeasInfo
{
   TknU32 intraFreq;
   CmLListCp interFreqLst;
} WrUmmAnrMeasInfo;

#define WR_MAX_CELLS 2
#define WR_MAX_MMES 16
#define WR_CELL_CFG_DFLT_RBS 6


#define WR_MAX_PLMN_IDS 6

#define WR_MCC_SIZE 3





#define WR_MAX_UES_PER_CELL (16 + 16)
#define WR_VAL_ZERO 0
#define WR_VAL_ONE 1
#define WR_VAL_TWO_CELL_RELEASE 2
#define WR_MAX_SFN 1024


#define WR_CFG_OK 1
#define WR_CFG_NOK 2



#define WR_PDCP_ID_SRB1 1
#define WR_PDCP_ID_SRB2 2
#define WR_PDCP_ID_DRB 3

#define WR_RLC_TM_MODE 1
#define WR_RLC_UM_MODE 2
#define WR_RLC_AM_MODE 3



#define WR_MACRO_ENB ENB_ID_MACROENB_ID
#define WR_HOME_ENB ENB_ID_HOMEENB_ID

#define WR_S1AP_ENB_ID 1
#define WR_S1AP_MME_ID 2
typedef U8 WrEnbType;


#define WR_MAX_FMT3_INDX 16
#define WR_MAX_FMT3A_INDX 32


extern S16 wrEmCellSchdSiWinSzMap(U16 window, U16 *siWindowSize);
extern S16 wrEmmInit(Void);
extern S16 wrEmmGetCgi(WrCellId cellId, WrCgi *cgi);
extern S16 wrEmmGetTai(WrCellId cellId, WrTai *tai);
extern S16 wrEmmSchdTtiInd(RgrTtiIndInfo *ttiInd);
extern S16 wrEmmSchdCellCfgCfm(U32 transId, U8 status);
extern S16 wrEmmS1apProcPdu(SztUDatEvnt *uDatEvnt);
extern S16 wrEmmPrcPhyCfgCfm(U32 transId, U8 status);
extern S16 wrEmmSetupS1(WrMmeId mmeId);
extern S16 wrEmmRrcCellCfgCfm(U16 cellId);
extern S16 wrEmmAddCell(WrCellId cellId);
extern S16 wrEmmSchdSiCfgCfm(U32 transId, U8 status);
extern S16 wrEmmPrcS1StaInd(SztStaInd *sztSta);
extern S16 wrEmmMmeSetupWaitTmrExpiry(U32 mmeCb);
extern S16 wrEmmAddMme(WrMmeId mmeId);
extern S16 wrEmmGetMmeByPlmn(WrPlmnId *plmnId, WrMmeId *mmeId);
extern S16 wrEmmGetMmeByMmec(U8 mmec, WrMmeId *mmeId);
extern S16 wrEmmGetMme(WrPlmnId *plmnId, U16 grpId, U8 mmeCode, WrMmeId *mmeId);
extern S16 wrEmmGetSelPlmn(WrCellId cellId, U8 selPlmnId, WrPlmnId **plmn);
extern S16 wrEmmGetDatAppAddr(CmTptAddr **addr);
extern S16 wrEmmUmmMeasReCfg(WrCellId cellId);
extern S16 wrEmmUpdateCellState(U16 cellId,WrCellState cellState);
extern S16 wrEmmMmeBrngCellPwrDown(Void);

extern Void wrUmmInit(Void);
extern S16 wrUmmAddCell(WrCellId cellId);
extern S16 wrUmmDelMme(WrMmeId mmeId);
extern S16 wrUmmAddMme(WrMmeId mmeId);
extern S16 wrUmmPrcRrcCfgCfm(NhuCfgCfmSdus *cfgCfm);
extern S16 wrUmmPrcPhyCfgCfm(U32 transId, U8 status);
extern S16 wrUmmPrcSchdCfgCfm(U32 transId, U8 status);
extern S16 wrUmmPrcUuDatInd(NhuDatIndSdus *uuDatInd);
extern S16 wrUmmPrcS1RelCfm(SztRelCfm *relCfm);
extern S16 wrUmmPrcS1RelInd(SztRelInd *relInd);
extern S16 wrUmmPrcS1apConCfm(SztConCfm *conCfm);
extern S16 wrUmmPrcS1DatInd(SztDatEvntInd *s1DatInd);
extern S16 wrUmmPrcRrcDatCfm(NhuDatCfmSdus *rrcDatCfm);
extern S16 wrUmmPrcRrcErrInd(NhuErrIndSdus *rrcErrInd);
extern S16 wrUmmPrcRrcEncodeCfm(NhuEncCfmSdus *rrcEncCfmSdus);
extern S16 wrUmmPrcRrcDecodeCfm(NhuDecodeSduCfm *rrcDecCfmSdus);
extern S16 wrUmmPrcTimerExp(WrUmmTimer *cb, U8 wrUmmTmrExpEvnt);
extern S16 wrUmmMmeFullRst(WrMmeId mmeId);
extern S16 wrUmmMmePartInRst(WrMmeId mmeId, SztResetTyp *tknIE);
extern S16 wrUmmMmePartRst(WrMmeId mmeId, WrEmmS1ConId *conId, U32 nmbCons);
extern S16 wrUmmPrcReestabCfm(U32 transId, U8 status);
extern S16 wrUmmUpdateCellState(U16 cellId,WrCellState cellState);
extern S16 wrUmmPrcRrmUeAdmitResp(RrmWrUeAdmitRespInfo *ueAdmitResp);
extern S16 wrUmmPrcRrmUeRelInd(RrmWrUeRelIndInfo *ueRelInd);
extern S16 wrUmmPrcRrmUeRelResp(RrmWrUeRelRespInfo *ueRelResp);



extern S16 wrUmmGetUeCntxToRel(WrCellId cellId);


extern S16 wrDamInit(Void);
extern S16 wrDamTnlMgmtCfm(EgtUEvnt *eguMsg);
extern S16 wrDamErrInd(EgtUEvnt *eguMsg);
extern S16 wrDamEgtpDatInd(Pst *pst, EgtUEvnt *eguMsg);
extern S16 wrDamPdcpDatInd(CmLtePdcpId *pdcpId, Buffer *mBuf);
extern S16 wrDamPdcpDatFwdInd(Pst *pst, CmLtePdcpId *pdcpId,
      PjuDatFwdIndInfo *datFwdInd);
extern Bool wrDamIsUeInactv(Void *cb);
extern U16 wrEmmGetServCarrierFreq(U16 cellId);
extern U16 wrEmmGetPhyCellId(U16 cellId);
extern U16 wrEmmGetNeighIpFrmPeerId(U32 peerId, U8 cellId, CmTptAddr *peerAddr);


extern Void wrEnbParamsInit(Void);
extern U8 wrEmmGetNumTxAnt(Void);
extern U32 wrEmmGetRrcUeCapTmrVal(U16 cellId);

extern U32 wrEmmGetRrcSecModTmrVal(U16 cellId);
extern U32 wrEmmGetRrcConTmrVal(U16 cellId);
extern U32 wrEmmGetRrcReestabTmrVal(U16 cellId);
extern U32 wrEmmGetRrcConRelTmrVal(U16 cellId);
extern U32 wrEmmGetRrcReCfgTmrVal(U16 cellId);

extern S16 wrUmmMmeGetFirstUeS1apId(WrMmeId mmeId, U32 *ue_enb_s1apId,
                                                     U32 *ue_mme_s1apId);
extern S16 wrUmmAnrMeasInitCfg(U16 cellId, WrUmmAnrMeasInfo *anrMeasCfgInfo);

extern S16 wrUmmAnrStartMeasurements(U16 cellId);
extern Void wrEmmAnrUeConnected(U16 cellId);
extern S16 wrUmmAnrDelMeasCfgForAllUe(U16 cellId);
extern S16 wrEmmMeasReportCgiHdlr(U16 cellId,U8 nrType,U16 carrFreq,
                                             NhuMeasResults *measRprt);
extern S16 wrUmmAddNrFreq(U16 cellId, U8 numFreq, LwrNeighFreqAddModCfg *nrFreqCfg);
extern S16 wrUmmModNrFreq(U16 cellId,U8 numFreq,LwrNeighFreqAddModCfg *nrFreqCfg);
extern S16 wrUmmDelNrFreq(U16 cellId,U16 numFreq,LwrNeighFreqDelCfg *nrFreqCfg);
extern S16 wrEmmGetOffsetFreqFrmArfcn(U16 cellId,U16 arfcn,U8 *offsetFreq);

extern Void wrEmmAnrPrintCellInfo(Void);
# 5 "../..//enbapp/src/wr_smm_pdcp.c" 2
# 1 "../..//cm/lkw.h" 1
# 91 "../..//cm/lkw.h"
#define __LKW_H__ 






#define LKW_MAX_NUM_RB 24


#define LKW_EVT_CFG_REQ 0x01
#define LKW_EVT_CFG_CFM 0x02
#define LKW_EVT_CNTRL_REQ 0x03
#define LKW_EVT_CNTRL_CFM 0x04
#define LKW_EVT_STA_IND 0x05
#define LKW_EVT_STA_REQ 0x06
#define LKW_EVT_STA_CFM 0x07
#define LKW_EVT_STS_REQ 0x08
#define LKW_EVT_STS_CFM 0x09
#define LKW_EVT_TRC_IND 0x0A

#define LKW_EVT_L2MEAS_REQ 0x0B
#define LKW_EVT_L2MEAS_CFM 0x0C

#define LKW_ZEROSTS 0
#define LKW_NOZEROSTS 1




#define LKW_EVENT_RGU_BND_CFM (LCM_EVENT_LYR_SPECIFIC + 1)
#define LKW_EVENT_KWU_BND_REQ (LCM_EVENT_LYR_SPECIFIC + 2)
#define LKW_EVENT_CKW_BND_REQ (LCM_EVENT_LYR_SPECIFIC + 3)




#define LKW_CAUSE_UNKNOWN (LCM_CAUSE_LYR_SPECIFIC + 1)
#define LKW_CAUSE_SAP_BNDENB (LCM_CAUSE_LYR_SPECIFIC + 2)
#define LKW_CAUSE_SAP_BNDDIS (LCM_CAUSE_LYR_SPECIFIC + 3)

#define LKW_CAUSE_RSRC_UNAVAIL (LCM_CAUSE_LYR_SPECIFIC + 4)
# 147 "../..//cm/lkw.h"
#define LKW_CAUSE_RLSTXLST_FULL (LCM_CAUSE_LYR_SPECIFIC + 14)
#define LKW_CAUSE_RLSRETXLST_FULL (LCM_CAUSE_LYR_SPECIFIC + 15)


#define LKW_CAUSE_REASMBLDAMLST_FULL (LCM_CAUSE_LYR_SPECIFIC + 16)
#define LKW_CAUSE_REASMBLDUMLST_FULL (LCM_CAUSE_LYR_SPECIFIC + 17)




#define LKW_EVT_BND_REQ 0
#define LKW_EVT_BND_CFM 1
#define LKW_EVT_UBND_REQ 2
#define LKW_EVT_WAIT_BNDCFM 3







#define LKW_EVENT_STA_PDU 5


#define LKW_EVENT_AM_UL_PDU 6
#define LKW_EVENT_UM_UL_PDU 7




#define LKW_RRC_SAP 0x00
#define LKW_PDCP_SAP 0x01




#define LKW_USTA_DGNVAL_NONE 1
#define LKW_USTA_DGNVAL_MEM 2
#define LKW_USTA_DGNVAL_SAPID 3
#define LKW_USTA_DGNVAL_UEID 4
#define LKW_USTA_MAX_DGNVAL 256





#define LKW_L2MEAS_NONE 0x0000
#define LKW_L2MEAS_ACT_UE 0x0001
#define LKW_L2MEAS_DL_DELAY 0x0002
#define LKW_L2MEAS_DL_DISC 0x0004
#define LKW_L2MEAS_UU_LOSS 0x0008
#define LKW_L2MEAS_DL_IP 0x0010
#define LKW_L2MEAS_UL_IP 0x0020

#define LKW_MAX_L2MEAS 10
#define LKW_MAX_QCI 10




#define LKW_EVENT_LI_BND_CFM (LCM_EVENT_LYR_SPECIFIC + 1)

#define LKW_PART_NUM_STR_LEN 10


#define LKW_FULL_TRACE -1


#define LKWLOGERROR(_pst,_errCls,_errCode,_errVal,_errDesc) SLogError(_pst->srcEnt, _pst->srcInst, _pst->srcProcId, __FILE__, __LINE__, _errCls, _errCode, _errVal, _errDesc)




#define ERRLKW 0
#define ELKWXXX 0

#define ELKW001 (ERRLKW + 1)
#define ELKW002 (ERRLKW + 2)
#define ELKW003 (ERRLKW + 3)
#define ELKW004 (ERRLKW + 4)
#define ELKW005 (ERRLKW + 5)
#define ELKW006 (ERRLKW + 6)
#define ELKW007 (ERRLKW + 7)
#define ELKW008 (ERRLKW + 8)
#define ELKW009 (ERRLKW + 9)
#define ELKW010 (ERRLKW + 10)
#define ELKW011 (ERRLKW + 11)
#define ELKW012 (ERRLKW + 12)
#define ELKW013 (ERRLKW + 13)
#define ELKW014 (ERRLKW + 14)
#define ELKW015 (ERRLKW + 15)
#define ELKW016 (ERRLKW + 16)
#define ELKW017 (ERRLKW + 17)
#define ELKW018 (ERRLKW + 18)
#define ELKW019 (ERRLKW + 19)
#define ELKW020 (ERRLKW + 20)
#define ELKW021 (ERRLKW + 21)
#define ELKW022 (ERRLKW + 22)
#define ELKW023 (ERRLKW + 23)
#define ELKW024 (ERRLKW + 24)
#define ELKW025 (ERRLKW + 25)
#define ELKW026 (ERRLKW + 26)
#define ELKW027 (ERRLKW + 27)
#define ELKW028 (ERRLKW + 28)
#define ELKW029 (ERRLKW + 29)
#define ELKW030 (ERRLKW + 30)
#define ELKW031 (ERRLKW + 31)
# 6 "../..//enbapp/src/wr_smm_pdcp.c" 2
# 1 "../..//cm/lkw.x" 1
# 92 "../..//cm/lkw.x"
#define __LKW_X__ 





typedef U32 CntrSts;



typedef struct kwGenCfg
{
   Pst lmPst;

   U32 maxUe;

   U16 maxKwuSaps;
   Ticks timeRes;
}KwGenCfg;



typedef struct kwSapCfg
{
   Selector selector;
   MemoryId mem;
   ProcId procId;
   Ent ent;
   Inst inst;
   SpId sapId;
   U16 bndTmrIntvl;
   Priority priority;
   Route route;
}KwSapCfg;




typedef struct kwCfg
{
   union
   {
      KwGenCfg gen;
      KwSapCfg sap;
   }s;
}KwCfg;



typedef struct kwGenSts
{
   CntrSts numUe;
   CntrSts pdusRecv;
   CntrSts pdusSent;
   CntrSts pdusRetx;
   CntrSts bytesRecv;
   CntrSts bytesSent;
   CntrSts unexpPdusRecv;
   CntrSts errorPdusRecv;
   CntrSts protTimeOut;

   CntrSts numOfRb;
   CntrSts numSduDisc;
}KwGenSts;



typedef struct kwKwuSapSts
{

   SpId spId;
   CntrSts sduRx;
   CntrSts sduTx;
}KwKwuSapSts;



typedef struct kwCkwCntSts
{
   CntrSts statMsgs;
}KwCkwCntSts;



typedef struct kwSts
{
   DateTime dt;
   union
   {
      KwGenSts gen;
      KwKwuSapSts kwuSap;
      KwCkwCntSts ckwSap;
   }s;
}KwSts;



typedef struct kwRguSapSta
{
   SuId suId;
   State state;
}KwRguSapSta;



typedef struct kwKwuSapSta
{
   SpId spId;
   State state;
}KwKwuSapSta;



typedef struct kwCkwCntSapSta
{
   SpId spId;
   State state;
}KwCkwCntSapSta;



typedef struct kwSSta
{
   DateTime dt;
   union
   {
      SystemId sysId;
      KwRguSapSta rguSap;
      KwKwuSapSta kwuSap;
      KwCkwCntSapSta ckwSap;
   }s;
}KwSSta;



typedef struct kwTrcCntrl
{
   U8 trcMask;
   S16 trcLen;
}KwTrcCntrl;



typedef struct kwDbgCntrl
{
   U32 dbgMask;

}KwDbgCntrl;



typedef struct kwSapCntrl
{
   SuId suId;
   SpId spId;
}KwSapCntrl;



typedef struct kwCntrl
{
   DateTime dt;
   U8 action;
   U8 subAction;
   union
   {
      KwTrcCntrl trcCntrl;
      KwDbgCntrl dbgCntrl;
      KwSapCntrl sapCntrl;
      U32 logMask;
   }s;
}KwCntrl;



typedef struct kwUSta
{
   DateTime dt;
   CmAlarm alarm;
   SuId suId;
   U32 ueId;




}KwUSta;



typedef struct kwTrc
{
   DateTime dt;
   U16 event;

}KwTrc;



typedef struct _kwMngmt
{
   Header hdr;
   CmStatus cfm;
   union
   {
      KwCfg cfg;
      KwCntrl cntrl;
      KwSts sts;
      KwSSta ssta;
      KwUSta usta;
      KwTrc trc;
   }t;
}KwMngmt;
# 386 "../..//cm/lkw.x"
typedef S16 (*LkwCfgReq) (Pst *pst, KwMngmt *cfg);
typedef S16 (*LkwCfgCfm) (Pst *pst, KwMngmt *cfgCfm);

typedef S16 (*LkwCntrlReq) (Pst *pst, KwMngmt *cntl);
typedef S16 (*LkwCntrlCfm) (Pst *pst, KwMngmt *cntlCfm);

typedef S16 (*LkwStaInd) (Pst *pst, KwMngmt *staInd);
typedef S16 (*LkwStaReq) (Pst *pst, KwMngmt *staReq);
typedef S16 (*LkwStaCfm) (Pst *pst, KwMngmt *staCfm);

typedef S16 (*LkwStsReq) (Pst *pst, Action, KwMngmt *sts);
typedef S16 (*LkwStsCfm) (Pst *pst, Action, KwMngmt *stsCfm);

typedef S16 (*LkwTrcInd) (Pst *pst, KwMngmt *trc, Buffer *mBuf);
# 415 "../..//cm/lkw.x"
extern S16 KwMiLkwCfgReq (Pst *pst, KwMngmt *cfg);
# 424 "../..//cm/lkw.x"
extern S16 KwMiLkwCfgCfm (Pst *pst, KwMngmt *cfgCfm);
# 437 "../..//cm/lkw.x"
extern S16 KwMiLkwCntrlReq (Pst *pst, KwMngmt *cntl);
# 447 "../..//cm/lkw.x"
extern S16 KwMiLkwCntrlCfm (Pst *pst, KwMngmt *cntlCfm);
# 458 "../..//cm/lkw.x"
extern S16 KwMiLkwStaReq (Pst *pst, KwMngmt *staInd);
# 469 "../..//cm/lkw.x"
extern S16 KwMiLkwStaCfm (Pst *pst, KwMngmt *staCfm);
# 480 "../..//cm/lkw.x"
extern S16 KwMiLkwStsReq (Pst *pst, Action, KwMngmt *sts);
# 491 "../..//cm/lkw.x"
extern S16 KwMiLkwStsCfm (Pst *pst, Action action, KwMngmt *stsCfm);
# 502 "../..//cm/lkw.x"
extern S16 KwMiLkwTrcInd (Pst *pst, KwMngmt *trc, Buffer *mBuf);
# 534 "../..//cm/lkw.x"
extern S16 KwMiLkwStaInd (Pst *pst, KwMngmt *staReq);

extern Void kwSendLmAlarm (U16 category, U16 event, U16 cause, SuId suId, U32 ueId);






extern S16 SmMiLkwCfgCfm ( Pst *, KwMngmt * );




extern S16 SmMiLkwCntrlCfm ( Pst *, KwMngmt * );




extern S16 SmMiLkwStaInd ( Pst *, KwMngmt * );




extern S16 SmMiLkwStaCfm ( Pst *, KwMngmt * );




extern S16 SmMiLkwStsCfm ( Pst *, Action, KwMngmt * );





extern S16 SmMiLkwTrcInd ( Pst *, KwMngmt *, Buffer * );





extern S16 SmMiLkwStsReq ( Pst *, Action, KwMngmt * );





extern S16 SmMiLkwStaReq ( Pst *, KwMngmt * );




extern S16 SmMiLkwCntrlReq ( Pst *, KwMngmt * );




extern S16 SmMiLkwCfgReq ( Pst *, KwMngmt * );
# 609 "../..//cm/lkw.x"
extern S16 smKwActvInit (Ent ent, Inst inst, Region region, Reason reason);
extern S16 smKwActvTsk (Pst *pst, Buffer *mBuf);
# 7 "../..//enbapp/src/wr_smm_pdcp.c" 2
# 1 "../..//cm/lpj.h" 1
# 91 "../..//cm/lpj.h"
#define __LPJ_H__ 





#define LPJ_SEL_LC 0


#define LPJ_MAX_NUM_RB 24


#define LPJ_EVT_CFG_REQ 0x50
#define LPJ_EVT_CFG_CFM 0x51
#define LPJ_EVT_CNTRL_REQ 0x52
#define LPJ_EVT_CNTRL_CFM 0x53
#define LPJ_EVT_STA_IND 0x54
#define LPJ_EVT_STA_REQ 0x55
#define LPJ_EVT_STA_CFM 0x56
#define LPJ_EVT_STS_REQ 0x57
#define LPJ_EVT_STS_CFM 0x58
#define LPJ_EVT_TRC_IND 0x59

#define LPJ_EVT_L2MEAS_REQ 0x60
#define LPJ_EVT_L2MEAS_CFM 0x61




#define LPJ_ZEROSTS 0
#define LPJ_NOZEROSTS 1




#define LPJ_EVENT_RGU_BND_CFM (LCM_EVENT_LYR_SPECIFIC + 1)
#define LPJ_EVENT_KWU_BND_REQ (LCM_EVENT_LYR_SPECIFIC + 2)
#define LPJ_EVENT_CKW_BND_REQ (LCM_EVENT_LYR_SPECIFIC + 3)
#define LPJ_EVENT_CPJ_BND_REQ (LCM_EVENT_LYR_SPECIFIC + 4)
#define LPJ_EVENT_PJU_BND_REQ (LCM_EVENT_LYR_SPECIFIC + 5)




#define LPJ_CAUSE_UNKNOWN (LCM_CAUSE_LYR_SPECIFIC + 1)
#define LPJ_CAUSE_SAP_BNDENB (LCM_CAUSE_LYR_SPECIFIC + 2)
#define LPJ_CAUSE_SAP_BNDDIS (LCM_CAUSE_LYR_SPECIFIC + 3)
#define LMG_CAUSE_RSRC_UNAVAIL (LCM_CAUSE_LYR_SPECIFIC + 4)
# 153 "../..//cm/lpj.h"
#define LPJ_EVT_BND_REQ 0
#define LPJ_EVT_BND_CFM 1
#define LPJ_EVT_UBND_REQ 2
#define LPJ_EVT_WAIT_BNDCFM 3




#define LPJ_RRC_SAP 0x00
#define LPJ_PDCP_SAP 0x01




#define LPJ_USTA_DGNVAL_NONE 1
#define LPJ_USTA_DGNVAL_MEM 2
#define LPJ_USTA_DGNVAL_SAPID 3
#define LPJ_USTA_DGNVAL_UEID 4
#define LPJ_USTA_MAX_DGNVAL 256



#define LPJ_EVENT_LI_BND_CFM (LCM_EVENT_LYR_SPECIFIC + 1)

#define LPJ_PART_NUM_STR_LEN 10
# 192 "../..//cm/lpj.h"
#define LPJ_FULL_TRACE -1

#define LPJLOGERROR(_pst,_errCls,_errCode,_errVal,_errDesc) SLogError(_pst->srcEnt, _pst->srcInst, _pst->srcProcId, __FILE__, __LINE__, _errCls, _errCode, _errVal, _errDesc)




#define ERRLPJ 0

#define ELPJ001 (ERRLPJ + 1)
#define ELPJ002 (ERRLPJ + 2)
#define ELPJ003 (ERRLPJ + 3)
#define ELPJ004 (ERRLPJ + 4)
#define ELPJ005 (ERRLPJ + 5)
#define ELPJ006 (ERRLPJ + 6)
#define ELPJ007 (ERRLPJ + 7)
#define ELPJ008 (ERRLPJ + 8)
#define ELPJ009 (ERRLPJ + 9)
#define ELPJ010 (ERRLPJ + 10)
#define ELPJ011 (ERRLPJ + 11)
#define ELPJ012 (ERRLPJ + 12)
#define ELPJ013 (ERRLPJ + 13)
#define ELPJ014 (ERRLPJ + 14)
#define ELPJ015 (ERRLPJ + 15)
#define ELPJ016 (ERRLPJ + 16)
#define ELPJ017 (ERRLPJ + 17)
#define ELPJ018 (ERRLPJ + 18)
#define ELPJ019 (ERRLPJ + 19)
#define ELPJ020 (ERRLPJ + 20)
#define ELPJ021 (ERRLPJ + 21)
#define ELPJ022 (ERRLPJ + 22)
#define ELPJ023 (ERRLPJ + 23)
#define ELPJ024 (ERRLPJ + 24)
#define ELPJ025 (ERRLPJ + 25)
#define ELPJ026 (ERRLPJ + 26)
#define ELPJ027 (ERRLPJ + 27)
#define ELPJ028 (ERRLPJ + 28)
#define ELPJ029 (ERRLPJ + 29)
#define ELPJ030 (ERRLPJ + 30)
#define ELPJ031 (ERRLPJ + 31)
#define ELPJ032 (ERRLPJ + 32)
#define ELPJ033 (ERRLPJ + 33)
#define ELPJ034 (ERRLPJ + 34)
#define ELPJ035 (ERRLPJ + 35)
#define ELPJ036 (ERRLPJ + 36)
#define ELPJ037 (ERRLPJ + 37)
#define ELPJ038 (ERRLPJ + 38)
#define ELPJ039 (ERRLPJ + 39)
#define ELPJ040 (ERRLPJ + 40)
#define ELPJ041 (ERRLPJ + 41)
#define ELPJ042 (ERRLPJ + 42)
#define ELPJ043 (ERRLPJ + 43)
#define ELPJ044 (ERRLPJ + 44)
#define ELPJ045 (ERRLPJ + 45)
#define ELPJ046 (ERRLPJ + 46)
#define ELPJ047 (ERRLPJ + 47)
#define ELPJ048 (ERRLPJ + 48)
#define ELPJ049 (ERRLPJ + 49)
#define ELPJ050 (ERRLPJ + 50)
#define ELPJ051 (ERRLPJ + 51)
#define ELPJ052 (ERRLPJ + 52)
#define ELPJ053 (ERRLPJ + 53)
#define ELPJ054 (ERRLPJ + 54)
#define ELPJ055 (ERRLPJ + 55)
#define ELPJ056 (ERRLPJ + 56)
#define ELPJ057 (ERRLPJ + 57)
#define ELPJ058 (ERRLPJ + 58)
#define ELPJ059 (ERRLPJ + 59)
#define ELPJ060 (ERRLPJ + 60)
#define ELPJ061 (ERRLPJ + 61)
#define ELPJ062 (ERRLPJ + 62)
#define ELPJ063 (ERRLPJ + 63)
#define ELPJ064 (ERRLPJ + 64)
#define ELPJ065 (ERRLPJ + 65)
#define ELPJ066 (ERRLPJ + 66)
#define ELPJ067 (ERRLPJ + 67)
# 8 "../..//enbapp/src/wr_smm_pdcp.c" 2
# 1 "../..//cm/lpj.x" 1
# 92 "../..//cm/lpj.x"
#define __LPJ_X__ 
# 116 "../..//cm/lpj.x"
typedef struct pjGenCfg
{
   Pst lmPst;

   U8 maxPjuSaps;
   U8 nmbUlBins;

   U8 nmbDlBins;
# 134 "../..//cm/lpj.x"
}PjGenCfg;



typedef struct pjSapCfg
{
   Selector selector;
   MemoryId mem;
   ProcId procId;
   Ent ent;
   Inst inst;

   SpId sapId;
   U16 bndTmrIntvl;
   Priority priority;
   Route route;
}PjSapCfg;




typedef struct pjCfg
{
   union
   {
      PjGenCfg gen;
      PjSapCfg sap;
   }s;
}PjCfg;



typedef struct pjGenSts
{
   CntrSts rxPdus;
   CntrSts txPdus;
   CntrSts errorPdusRecv;
   CntrSts numSdusDisc;

   CntrSts numCmpFails;
   CntrSts numDecmpFails;
   CntrSts numIntgPrtFails;
   CntrSts numIntgVrfFails;
   CntrSts numCiphFails;
   CntrSts numDeciphFails;
   CntrSts numPdusDiscObdTmrExp;

   CntrSts numSdusDiscObdTmrExp;

   CntrSts numPktsFrwd;

   CntrSts numPktsRcvd;

}PjGenSts;



typedef struct pjPjuSts
{

   SpId spId;
   CntrSts rxSdus;
   CntrSts txSdus;
}PjPjuSts;


typedef struct pjSts
{
   DateTime dt;
   union
   {
      PjGenSts gen;
      PjPjuSts pjuSap;
   }s;
}PjSts;



typedef struct pjPjuSapSta
{
   SpId spId;
   State state;
}PjPjuSapSta;



typedef struct pjCpjSapSta
{
   SpId spId;
   State state;
}PjCpjSapSta;



typedef struct pjSSta
{
   DateTime dt;
   union
   {
      SystemId sysId;
      PjCpjSapSta cpjSap;
      PjPjuSapSta pjuSap;
   }s;
}PjSSta;



typedef struct pjTrcCntrl
{
   U8 trcMask;
   S16 trcLen;
}PjTrcCntrl;



typedef struct pjDbgCntrl
{
   U32 dbgMask;

}PjDbgCntrl;



typedef struct pjCntrl
{
   DateTime dt;
   U8 action;
   U8 subAction;
   union
   {
      PjTrcCntrl trcCntrl;
      PjDbgCntrl dbgCntrl;
      U32 logMask;
   }s;
}PjCntrl;



typedef struct pjUSta
{
   DateTime dt;
   CmAlarm alarm;
   SuId suId;
   U32 ueId;




}PjUSta;



typedef struct pjTrc
{
   DateTime dt;
   U16 event;

}PjTrc;



typedef struct _pjMngmt
{
   Header hdr;
   CmStatus cfm;
   union
   {
      PjCfg cfg;
      PjCntrl cntrl;
      PjSts sts;
      PjSSta ssta;
      PjUSta usta;
      PjTrc trc;
   }t;
}PjMngmt;
# 350 "../..//cm/lpj.x"
typedef S16 (*LpjCfgReq) (Pst *pst, PjMngmt *cfg);
typedef S16 (*LpjCfgCfm) (Pst *pst, PjMngmt *cfgCfm);

typedef S16 (*LpjCntrlReq) (Pst *pst, PjMngmt *cntl);
typedef S16 (*LpjCntrlCfm) (Pst *pst, PjMngmt *cntlCfm);

typedef S16 (*LpjStaInd) (Pst *pst, PjMngmt *staInd);
typedef S16 (*LpjStaReq) (Pst *pst, PjMngmt *staReq);
typedef S16 (*LpjStaCfm) (Pst *pst, PjMngmt *staCfm);

typedef S16 (*LpjStsReq) (Pst *pst, Action, PjMngmt *sts);
typedef S16 (*LpjStsCfm) (Pst *pst, Action, PjMngmt *stsCfm);

typedef S16 (*LpjTrcInd) (Pst *pst, PjMngmt *trc, Buffer *mBuf);
# 380 "../..//cm/lpj.x"
extern S16 PjMiLpjCfgReq (Pst *pst, PjMngmt *cfg);
# 389 "../..//cm/lpj.x"
extern S16 PjMiLpjCfgCfm (Pst *pst, PjMngmt *cfgCfm);
# 402 "../..//cm/lpj.x"
extern S16 PjMiLpjCntrlReq (Pst *pst, PjMngmt *cntl);
# 412 "../..//cm/lpj.x"
extern S16 PjMiLpjCntrlCfm (Pst *pst, PjMngmt *cntlCfm);
# 424 "../..//cm/lpj.x"
extern S16 PjMiLpjStaReq (Pst *pst, PjMngmt *staInd);
# 435 "../..//cm/lpj.x"
extern S16 PjMiLpjStaCfm (Pst *pst, PjMngmt *staCfm);
# 448 "../..//cm/lpj.x"
extern S16 PjMiLpjStsReq (Pst *pst, Action, PjMngmt *sts);
# 459 "../..//cm/lpj.x"
extern S16 PjMiLpjStsCfm (Pst *pst, Action action, PjMngmt *stsCfm);
# 471 "../..//cm/lpj.x"
extern S16 PjMiLpjTrcInd (Pst *pst, PjMngmt *trc, Buffer *mBuf);
# 482 "../..//cm/lpj.x"
extern S16 PjMiLpjStaInd (Pst *pst, PjMngmt *staReq);
# 507 "../..//cm/lpj.x"
extern Void pjSendLmAlarm (U16 category, U16 event, U16 cause, SuId suId, U32 ueId);






extern S16 SmMiLpjCfgCfm ( Pst *, PjMngmt * );




extern S16 SmMiLpjCntrlCfm ( Pst *, PjMngmt * );




extern S16 SmMiLpjStaInd ( Pst *, PjMngmt * );




extern S16 SmMiLpjStaCfm ( Pst *, PjMngmt * );




extern S16 SmMiLpjStsCfm ( Pst *, Action, PjMngmt * );





extern S16 SmMiLpjTrcInd ( Pst *, PjMngmt *, Buffer * );





extern S16 SmMiLpjStsReq ( Pst *, Action, PjMngmt * );





extern S16 SmMiLpjStaReq ( Pst *, PjMngmt * );




extern S16 SmMiLpjCntrlReq ( Pst *, PjMngmt * );




extern S16 SmMiLpjCfgReq ( Pst *, PjMngmt * );
# 580 "../..//cm/lpj.x"
extern S16 smPjActvInit (Ent ent, Inst inst, Region region, Reason reason);
extern S16 smPjActvTsk (Pst *pst, Buffer *mBuf);




extern S16 cmPkLpjCfgReq ( Pst * pst, PjMngmt * cfg );



extern S16 cmUnpkLpjCfgReq ( LpjCfgReq func, Pst *pst, Buffer *mBuf );




extern S16 cmPkLpjCfgCfm ( Pst * pst, PjMngmt * cfgCfm );



extern S16 cmUnpkLpjCfgCfm ( LpjCfgCfm func, Pst *pst, Buffer *mBuf );




extern S16 cmPkLpjCntrlReq ( Pst * pst, PjMngmt * cntl );



extern S16 cmUnpkLpjCntrlReq ( LpjCntrlReq func, Pst *pst, Buffer *mBuf );




extern S16 cmPkLpjCntrlCfm ( Pst * pst, PjMngmt * cntlCfm );



extern S16 cmUnpkLpjCntrlCfm ( LpjCntrlCfm func, Pst *pst, Buffer *mBuf );




extern S16 cmPkLpjStaInd ( Pst * pst, PjMngmt * staInd );



extern S16 cmUnpkLpjStaInd ( LpjStaInd func, Pst *pst, Buffer *mBuf );




extern S16 cmPkLpjStaReq ( Pst * pst, PjMngmt * staReq );



extern S16 cmUnpkLpjStaReq ( LpjStaReq func, Pst *pst, Buffer *mBuf );




extern S16 cmPkLpjStaCfm ( Pst * pst, PjMngmt * staCfm );



extern S16 cmUnpkLpjStaCfm ( LpjStaCfm func, Pst *pst, Buffer *mBuf );




extern S16 cmPkLpjStsReq ( Pst * pst, Action actn, PjMngmt * sts );




extern S16 cmUnpkLpjStsReq ( LpjStsReq func, Pst *pst, Buffer *mBuf );




extern S16 cmPkLpjStsCfm ( Pst * pst, Action actn, PjMngmt * stsCfm );




extern S16 cmUnpkLpjStsCfm ( LpjStsCfm func, Pst *pst, Buffer *mBuf );




extern S16 cmPkLpjTrcInd ( Pst * pst, PjMngmt * trc, Buffer * mBuf );




extern S16 cmUnpkLpjTrcInd ( LpjTrcInd func, Pst *pst, Buffer *mBuf );
# 728 "../..//cm/lpj.x"
extern S16 cmPkPjGenCfg ( PjGenCfg *param, Buffer *mBuf );



extern S16 cmUnpkPjGenCfg ( PjGenCfg *param, Buffer *mBuf );



extern S16 cmPkPjSapCfg ( PjSapCfg *param, Buffer *mBuf );



extern S16 cmUnpkPjSapCfg ( PjSapCfg *param, Buffer *mBuf );



extern S16 cmPkPjCfg ( PjMngmt *cfg, Elmnt elmnt, Buffer *mBuf );




extern S16 cmUnpkPjCfg ( PjMngmt *cfg, Elmnt elmnt, Buffer *mBuf );




extern S16 cmPkPjGenSts ( PjGenSts *param, Buffer *mBuf );



extern S16 cmUnpkPjGenSts ( PjGenSts *param, Buffer *mBuf );



extern S16 cmPkPjPjuSts ( PjPjuSts *param, Buffer *mBuf );



extern S16 cmUnpkPjPjuSts ( PjPjuSts *param, Buffer *mBuf );



extern S16 cmPkPjSts ( PjMngmt *sts, Elmnt elmnt, Buffer *mBuf );




extern S16 cmUnpkPjSts ( PjMngmt *sts, Elmnt elmnt, Buffer *mBuf );




extern S16 cmPkPjPjuSapSta ( PjPjuSapSta *param, Buffer *mBuf );



extern S16 cmUnpkPjPjuSapSta ( PjPjuSapSta *param, Buffer *mBuf );



extern S16 cmPkPjCpjSapSta ( PjCpjSapSta *param, Buffer *mBuf );



extern S16 cmUnpkPjCpjSapSta ( PjCpjSapSta *param, Buffer *mBuf );



extern S16 cmPkPjSSta ( PjMngmt *ssta, Elmnt elmnt, Event eventType, Buffer *mBuf );





extern S16 cmUnpkPjSSta ( PjMngmt *ssta, Elmnt elmnt, Event eventType, Buffer *mBuf );





extern S16 cmPkPjTrcCntrl ( PjTrcCntrl *param, Buffer *mBuf );



extern S16 cmUnpkPjTrcCntrl ( PjTrcCntrl *param, Buffer *mBuf );



extern S16 cmPkPjDbgCntrl ( PjDbgCntrl *param, Buffer *mBuf );



extern S16 cmUnpkPjDbgCntrl ( PjDbgCntrl *param, Buffer *mBuf );



extern S16 cmPkPjCntrl ( PjMngmt *cntrl, Elmnt elmnt, Buffer *mBuf );




extern S16 cmUnpkPjCntrl ( PjMngmt *cfm, Elmnt elmnt, Buffer *mBuf );




extern S16 cmPkPjUSta ( PjMngmt *usta, Elmnt elmnt, Buffer *mBuf );




extern S16 cmUnpkPjUSta ( PjMngmt *usta, Elmnt elmnt, Buffer *mBuf );




extern S16 cmPkPjTrc ( PjMngmt *trc, Buffer *mBuf );



extern S16 cmUnpkPjTrc ( PjMngmt *trc, Buffer *mBuf );



extern S16 cmPkPjMngmt ( PjMngmt *param, Event eventType, Buffer *mBuf );




extern S16 cmUnpkPjMngmt ( PjMngmt *param, Event eventType, Buffer *mBuf );
# 9 "../..//enbapp/src/wr_smm_pdcp.c" 2


# 1 "../..//enbapp/src/wr_smm_init.h" 1

#define __WR_SM_INIT_H__ 





#define DFLT_CZ_RES_THR_UP 2
#define DFLT_CZ_RES_THR_LOW 1
#define UNKNOWN_VALUE 1
#define MAX_ENB_NAME_LEN 20
# 60 "../..//enbapp/src/wr_smm_init.h"
#define SM_SM_PROC 100
#define SM_NH_PROC 100
#define SM_NX_PROC 100
#define SM_RX_PROC 100
#define SM_SZ_PROC 100
#define SM_CZ_PROC 100

#define SM_SB_PROC 100
#define SM_HI_PROC 100
#define SM_EG_PROC 100
#define SM_WR_PROC 100
#define SM_PJ_PROC 100
#define SM_TF_PROC 100
#define SM_KW_PROC 100
#define SM_RG_PROC 100
#define SM_YS_PROC 100





#define RG_POOL 0
#define HI_POOL 0
#define SB_POOL 0
#define SZ_POOL 0
#define CZ_POOL 0
#define NH_POOL 0
#define WR_POOL 0
#define EG_POOL 0
#define YS_POOL 0
#define PJ_POOL 0
#define KW_POOL 0
# 105 "../..//enbapp/src/wr_smm_init.h"
#define SCH_INST_ID 1
#define RRM_INST_ID 1

#define WR_YS_SUID 0
#define WR_YS_SPID 0
#define WR_NH_SUID 1
#define WR_NH_SPID 0
#define WR_PJ_SUID 2
#define WR_PJ_SPID 1
#define WR_RG_SUID 0
#define WR_RG_SPID 0
#define WR_SZ_SPID 0
#define WR_EG_SUID 5
#define WR_EG_SPID 0

#define NH_PJ_SPID 0
#define NH_PJ_SUID 0

#define RG_YS_SUID 0
#define RG_YS_SPID 0
#define RG_SCH_YS_SPID 1

#define SB_HI_SUID 0
#define SB_HI_SPID 0

#define EG_HI_SUID 0
#define EG_HI_SPID 1

#define SZ_SB_SUID 0
#define SZ_SB_SPID 0
#define CZ_SB_SUID 0
#define CZ_SB_SPID 1

#define NH_KW_KWU_SUID 0
#define NH_KW_CKW_SUID 1
#define NH_RG_CRG_SUID 2
#define NH_KW_CPJ_SUID 3
#define NH_KW_PJU_SUID 4



#define WR_RG_GEN_CFG 1
#define WR_RG_RGU_SAP_CFG 2
#define WR_RG_CRG_SAP_CFG 4
#define WR_RG_SCH_INS_CFG 8
#define WR_RG_TFU_SAP_CFG 16

#define WR_KW_GEN_CFG 1
#define WR_KW_RGU_SAP_CFG 2
#define WR_KW_CKW_SAP_CFG 4
#define WR_KW_KWU_SAP_CFG 8

#define WR_NH_GEN_CFG 1
#define WR_NH_PROT_CFG 2
#define WR_NH_USAP_CFG 4
#define WR_NH_CKW_SAP_CFG 8
#define WR_NH_KWU_SAP_CFG 16
#define WR_NH_CRG_SAP_CFG 32
#define WR_NH_CPJ_SAP_CFG 64
#define WR_NH_PJU_SAP_CFG 128
#define WR_NH_CTF_SAP_CFG 256

#define WR_SZ_GEN_CFG 1
#define WR_SZ_PROT_CFG 2
#define WR_SZ_SZT_SAP_CFG 4
#define WR_SZ_SCT_SAP_CFG 8
#define WR_SZ_PEER_CFG 16

#define WR_CZ_GEN_CFG 1

#define WR_CZ_PROT_CFG 2
#define WR_CZ_CZT_SAP_CFG 4
#define WR_CZ_SCT_SAP_CFG 8
#define WR_CZ_PEER_CFG 16

#define WR_SB_GEN_CFG 1
#define WR_SB_TSAP_CFG 2
#define WR_SB_SCT_SAP_CFG 4

#define WR_EG_GEN_CFG 1
#define WR_EG_EGT_SAP_CFG 2
#define WR_EG_TSAP_CFG 4
#define WR_EG_TSRV_CFG 8
#define WR_EG_IPADDR_CFG 16

#define WR_WR_GEN_CFG 1
#define WR_WR_CTF_SAP_CFG 2
#define WR_WR_NHU_SAP_CFG 4
#define WR_WR_PJU_SAP_CFG 8
#define WR_WR_RGR_SAP_CFG 16
#define WR_WR_SZT_SAP_CFG 32
#define WR_WR_EGT_SAP_CFG 64
#define WR_WR_CZT_SAP_CFG 128
#define WR_WR_NGH_CFG 256
#define WR_WR_MME_CFG 512

#define WR_YS_GEN_CFG 1
#define WR_YS_CTF_SAP_CFG 2
#define WR_YS_TFU_SAP_CFG 4

#define WR_PJ_GEN_CFG 1
#define WR_PJ_CPJ_SAP_CFG 2
#define WR_PJ_PJU_SAP_CFG 4





#define WR_SMM_MAX_NBR_ENB 16
#define WR_SMM_INVALID_PEERID 0

#define WR_SM_PJ_CONFIGURED (WR_PJ_GEN_CFG | WR_PJ_CPJ_SAP_CFG | WR_PJ_PJU_SAP_CFG)



#define WR_SM_WR_CONFIGURED (WR_WR_GEN_CFG | WR_WR_CTF_SAP_CFG | WR_WR_NHU_SAP_CFG | WR_WR_PJU_SAP_CFG | WR_WR_RGR_SAP_CFG | WR_WR_SZT_SAP_CFG | WR_WR_CZT_SAP_CFG | WR_WR_EGT_SAP_CFG | STWRPROTOCFG)
# 231 "../..//enbapp/src/wr_smm_init.h"
#define WR_HI_GEN_CFG 1
#define WR_HI_TSAP_CFG 2

#define WR_SM_HI_CONFIGURED (WR_HI_GEN_CFG | WR_HI_TSAP_CFG)
#define WR_SM_SB_CONFIGURED (WR_SB_GEN_CFG | WR_SB_TSAP_CFG | WR_SB_SCT_SAP_CFG)
#define WR_SM_SZ_CONFIGURED (WR_SZ_GEN_CFG | WR_SZ_PROT_CFG | WR_SZ_SZT_SAP_CFG | WR_SZ_SCT_SAP_CFG | WR_SZ_PEER_CFG)


#define WR_SM_CZ_CONFIGURED (WR_CZ_GEN_CFG | WR_CZ_PROT_CFG | WR_CZ_CZT_SAP_CFG | WR_CZ_SCT_SAP_CFG | WR_CZ_PEER_CFG)

#define WR_SM_CZ_CONFGRD_WO_PEER (WR_CZ_GEN_CFG | WR_CZ_PROT_CFG | WR_CZ_CZT_SAP_CFG | WR_CZ_SCT_SAP_CFG)


#define WR_SM_EG_CONFIGURED (WR_EG_GEN_CFG | WR_EG_EGT_SAP_CFG | WR_EG_TSAP_CFG | WR_EG_TSRV_CFG | WR_EG_IPADDR_CFG)



#define WR_SM_YS_CONFIGURED (WR_YS_GEN_CFG | WR_YS_CTF_SAP_CFG | WR_YS_TFU_SAP_CFG)

#define WR_SM_RG_CONFIGURED (WR_RG_GEN_CFG | WR_RG_RGU_SAP_CFG | WR_RG_CRG_SAP_CFG | WR_RG_SCH_INS_CFG | WR_RG_TFU_SAP_CFG)


#define WR_SM_KW_CONFIGURED (WR_KW_GEN_CFG | WR_KW_RGU_SAP_CFG | WR_KW_CKW_SAP_CFG | WR_KW_KWU_SAP_CFG)

#define WR_SM_NH_CONFIGURED (WR_NH_GEN_CFG | WR_NH_PROT_CFG | WR_NH_USAP_CFG | WR_NH_CKW_SAP_CFG | WR_NH_KWU_SAP_CFG | WR_NH_CRG_SAP_CFG | WR_NH_CPJ_SAP_CFG | WR_NH_PJU_SAP_CFG )




#define WRSM_LYS_MAX_TFU_SAPS 2
#define WRSM_LYS_NMB_UES 2




#define WRSM_ENB_CPU_LOAD 1

#define WR_FILL_PST(_pst,_srcProc,_dstEnt,_srcEnt,_event,_pool,_selector) { cmMemset((U8 *)&(_pst), 0, sizeof(Pst)); _pst.dstProcId = SM_SM_PROC; _pst.srcProcId = _srcProc; _pst.dstEnt = _dstEnt; _pst.srcEnt = _srcEnt; _pst.dstInst = 0; _pst.srcInst = 0; _pst.event = _event; _pst.pool = _pool; _pst.selector= _selector; }
# 282 "../..//enbapp/src/wr_smm_init.h"
#define SM_SET_ZERO(_buf,_size) cmMemset((U8 *)(_buf), 0, _size);


#define SM_FREE(_region,_pool,_buf,_size) do { if (_buf != NULLP) { (Void) SPutSBuf(_region, _pool, (Data *) _buf, (Size) _size); (_buf) = NULLP; } } while(0)
# 297 "../..//enbapp/src/wr_smm_init.h"
#define WRSM_ALLOC(_buf,_size) do { if (SGetSBuf(DFLT_REGION, DFLT_POOL, (Data **)(_buf), _size) == ROK) { SM_SET_ZERO((*_buf), _size); } else { (*_buf) = NULLP; } } while(0)
# 313 "../..//enbapp/src/wr_smm_init.h"
#define SM_DFLT_MEM_UPPER_THR_CFG 9
#define SM_DFLT_MEM_LOWER_THR_CFG 2
#define SM_DFLT_MSEC_TMR_CFG 10

#define SM_INST_ZERO 0
#define SM_ZERO_VAL 0

#define KWU_SAP_ID 0x00
#define CKW_SAP_ID 0x01
#define CRG_SAP_ID 0x02
#define CPJ_SAP_ID 0x03
#define PJU_SAP_ID 0x04
#define RGR_SAP_ID 0x05
#define RGU_SAP_ID 0x05
#define NHU_SAP_ID 0x06


#define SM_SELECTOR_LC 0
#define SM_SELECTOR_TC 1
#define SM_SELECTOR_LWLC 2


#define WR_SZ_SPID 0
#define WR_SZ_SUID 0

#define WR_CZ_SPID 0
#define WR_CZ_SUID 0

#define WRSM_LSZ_MAX_SZTSAP 10
#define WRSM_LSZ_MAX_SCTSAP 10

#define WRSM_LCZ_MAX_CZTSAP 3
#define WRSM_LCZ_MAX_SCTSAP 3

#define WRSM_LSZ_TIMERES 10

#define WRSM_LCZ_TIMERES 10

#define WRSM_MSGPRIOR PRIOR0



#define WRSM_CZSMSEL 0

#define WRSM_SMCZSEL 0


#define WRSM_SZSMSEL 0

#define WRSM_SMSZSEL 0


#define WRSM_YSSMSEL 0

#define WRSM_SMYSSEL 0


#define WRSM_SBSMSEL 0

#define WRSM_SMSBSEL 0
# 381 "../..//enbapp/src/wr_smm_init.h"
#define WRSM_RGYSSEL 1

#define WRSM_YSRGSEL 1




#define WRSM_HISMSEL 0

#define WRSM_SMHISEL 0



#define WRSM_WRSZSEL 2

#define WRSM_SZWRSEL 2



#define WRSM_WRCZSEL 2

#define WRSM_CZWRSEL 2


#define WRSM_SZSBSEL 0

#define WRSM_SBSZSEL 0


#define WRSM_CZSBSEL 0

#define WRSM_SBCZSEL 0


#define WRSM_SBHISEL 0

#define WRSM_HISBSEL 0


#define WRSM_EGHISEL 0

#define WRSM_HIEGSEL 0


#define WRSM_WRSMSEL 1

#define WRSM_SMWRSEL 1


#define WRSM_WRYSSEL 0

#define WRSM_YSWRSEL 0


#define WRSM_WRNHSEL 0

#define WRSM_NHWRSEL 0


#define WRSM_WRPJSEL 0

#define WRSM_PJWRSEL 0


#define WRSM_WRRGSEL 0

#define WRSM_RGWRSEL 0


#define WRSM_WREGSEL 2

#define WRSM_EGWRSEL 2

#define WRSM_LSZ_VAL_3 3
#define WRSM_LSZ_VAL_5 5
#define WRSM_LSZ_VAL_10 10
#define WRSM_LSZ_VAL_50 50
#define WRSM_LCZ_VAL_3 3
#define WRSM_LCZ_VAL_10 10
#define WRSM_LCZ_VAL_50 50


#define WRSM_ENB_IPADDR 0x0A010101
#define WRSM_MME_IPADDR 0x0A010102
#define WRSM_SCTP_IP_ADDR 0x0A010102





#define WRSM_LSZ_ENB_SCTPORT 36412
#define WRSM_LSZ_MME_SCTPORT 36412

#define WRSM_LSZ_ENB_PRC0 0

#define WRSM_LCZ_ENB_SCTPORT 36422
#define WRSM_LCZ_ENB_PRC0 0
#define WRSM_X2HO_PREP_MAX_TIME 3
#define WRSM_X2HO_OVRALL_MAX_TIME 20
#define WRSM_X2HO_TIME_TO_WAIT 20

#define WRSM_LSZ_MME_PRC1 1

#define WRSM_MAX_PROFILE 50
#define WRSM_LSZ_INV_NODE 10
#define WRSM_LSZ_RESETRETRY 10


#define WRSM_LSZ_NUM_PEERS 1
#define WRSM_LSZ_OUT_STRMS 3


#define WRSM_LCZ_OUT_STRMS 3


#define WRSM_LSZ_PEERID 0

#define WRSM_LSZ_MAX_PEER WR_MAX_MMES


#define WRSM_LCZ_MAX_PEER 20

#define WRSM_HI_NUMBSAPS 10
#define WRSM_HI_NMBCONS 10


#define WRSM_HI_FDS 1024



#define WRSM_HI_FDBINS 4

#define WRSM_HI_SELTIMEOUT 2
#define WRSM_HI_UDP_MSGS_TOREAD 20
#define WRSM_HI_NUMCL_TOACCEPT 5

#define WRSM_HI_PERM_TSK_FLAG TRUE
#define WRSM_HI_SCHDTMR_VAL 1

#define WRSM_HI_TIME_RES 0
#define WRSM_HI_STRT_THRESH 1
#define WRSM_HI_DRP_THRESH 1
#define WRSM_HI_STP_THRESH 1

#define WRSM_HI_CONG_STRT 15000
#define WRSM_HI_CONG_DRP 20000
#define WRSM_HI_CONG_STP 10000
#define WRSM_HI_NMB_HLBINS 16


#define WRSM_LWR_VAL_10 100
#define WRSM_LWR_MAX_BND_RETRY 3

#define WRSM_CELLID 1







#define SM_GETSBUF(_size,_datPtr,_ret) { _ret = SGetSBuf(DFLT_REGION, DFLT_POOL, (Data**)&_datPtr, _size); }
# 553 "../..//enbapp/src/wr_smm_init.h"
#define SM_SND_DIAG_CNTRL_REQ(_logLevel,_logState,_logMask,_lyr,_maskIdx) { _logMask = 0x01; if(_logState == TRUE) { for(_maskIdx = 0; _maskIdx <= _logLevel; _maskIdx++) { _logMask = (_logMask | (0x01 << _maskIdx)); } smSendDiagCntrlReq(WR_ON, _lyr, logMask); } else { _logMask = 0x0; smSendDiagCntrlReq(WR_OFF, _lyr, logMask); }}
# 571 "../..//enbapp/src/wr_smm_init.h"
#define EVTWRTUCLCFG 10
#define EVTWRSCTPCFG 11
#define EVTWRS1APCFG 12
#define EVTWREGTPCFG 13
#define EVTWRAPPCFG 14
#define EVTWRRRCCFG 15
#define EVTWRPDCPCFG 16
#define EVTWRRLCCFG 17
#define EVTWRMACCFG 18
#define EVTWRCLCFG 19
#define EVTWRX2APCFG 20

#define EVTWRS1APSTKBND 25
#define EVTWREGTPSTKBND 26
#define EVTWRX2APSTKBND 27
#define EVTWRRRCSTKBND 28
#define EVTWRENBDEBUGS 29
#define EVTWRENBALRMS 30
#define EVTWRINITS1SETUP 31
#define EVTWRCELLCFG 32
#define EVTWRINITX2SETUP 33
#define EVTWRENBLOG 34
# 602 "../..//enbapp/src/wr_smm_init.h"
typedef enum {
    WR_SM_STATE_INIT = 0,
    WR_SM_STATE_TUCL_CFG_DONE,
    WR_SM_STATE_SCTP_CFG_DONE,
    WR_SM_STATE_S1AP_CFG_DONE,
    WR_SM_STATE_X2AP_CFG_DONE,
    WR_SM_STATE_EGTP_CFG_DONE,
    WR_SM_STATE_APP_CFG_DONE,
    WR_SM_STATE_RRC_CFG_DONE,
    WR_SM_STATE_PDCP_CFG_DONE,
    WR_SM_STATE_RLC_CFG_DONE,
    WR_SM_STATE_MAC_CFG_DONE,
    WR_SM_STATE_CL_CFG_DONE,
    WR_SM_STATE_S1AP_STK_BND_DONE,
    WR_SM_STATE_EGTP_STK_BND_DONE,
    WR_SM_STATE_X2AP_STK_BND_DONE,
    WR_SM_STATE_RRC_STK_BND_DONE,
    WR_SM_STATE_ENB_DEBUGS_DONE,
    WR_SM_STATE_ENB_ALRMS_DONE,
    WR_SM_STATE_AWAIT_S1_CON,
    WR_SM_STATE_AWAIT_CELL_UP,
    WR_SM_STATE_DYN_X2AP_CFG_DONE,
    WR_SM_STATE_CELL_UP







       ,
    WR_SM_STATE_ENB_LOG_DONE
}WrSmState;

typedef enum
{
   WR_ON,
   WR_OFF
}WrCliSecArg;

typedef enum
{
   APP = 1,
   S1AP,
   SCTP,
   TUCL,
   X2AP,
   EGTP,
   RRC,
   RLC,
   PDCP,
   MAC,
   CL,
   CPLANE,
   ALL
}WrLyrDbg;

#define WR_SM_HI_DBG_MASK 0x01
#define WR_SM_SB_DBG_MASK 0x02
#define WR_SM_SZ_DBG_MASK 0x04
#define WR_SM_EG_DBG_MASK 0x08
#define WR_SM_WR_DBG_MASK 0x10
#define WR_SM_NH_DBG_MASK 0x20
#define WR_SM_KW_DBG_MASK 0x40
#define WR_SM_RG_DBG_MASK 0x80
#define WR_SM_YS_DBG_MASK 0x100
#define WR_SM_CZ_DBG_MASK 0x200

#define MAXARGS 20
#define MAXCMDLEN 50
# 681 "../..//enbapp/src/wr_smm_init.h"
typedef struct _smDiagInfo
{
   U32 diagLvl;
   Bool diagState;
}SmDiagInfo;





typedef struct _smLyrDiagInfo
{
  SmDiagInfo tucl;
  SmDiagInfo sctp;
  SmDiagInfo s1ap;
  SmDiagInfo x2ap;
  SmDiagInfo egtp;
  SmDiagInfo app;
  SmDiagInfo lteRrc;
  SmDiagInfo lteRlc;
  SmDiagInfo ltePdcp;
  SmDiagInfo lteMac;
  SmDiagInfo lteCl;
}SmLyrDiagInfo;

typedef struct _smCfgCb
{
   U16 cellId;
   U8 modType;
   U16 duplexMode;
   U8 maxUeSupp;
   TknU8 mcc[3];
   TknU8 mnc[3];
   U16 trackAreaCode;
   U8 freqBandInd;

   U32 enbIpAddr;
   U32 sctpIpAddr;
   U8 noOfCfg;
   LwrSmMmeCfg *mmeCfg[16];
   U8 hiDbg;
   U8 sbDbg;
   U8 szDbg;
   U8 egDbg;
   U8 wrDbg;
   U8 nhDbg;
   U8 kwDbg;
   U8 rgDbg;
   U8 ysDbg;
   U8 smDbg;

   U32 smDbgMsk;

   U32 inactvTmrVal;
   U32 endMrkTmrVal;

   U32 maxExpires;
   U8 sctpUdpServiceType;

   U8 czDbg;
   U32 x2PrepTimerVal;
   U32 x2OvrAllTimerVal;
   U32 x2TimeToWaitTimerVal;
   U16 pci;
   U8 enbName[20];
   U8 noOfBrdCstPlmn;
   U8 plmnId[6][3];
   U16 noOfNghInfo;
   LwrNghInfoCfg **nghInfo;
   LwrNghUtraCfg *nghUtraInfo[16];
   U16 noOfEutraFreq;
   LwrNghFreqCfg *nghEutraFreq[16];
   U16 noOfUtraFreq;
   LwrNghFreqCfg *nghUtraFreq[16];
   U8 noOfguGrp;
   LwrGuGrpIdCfg **guGrpId;
   U32 s1PrepTimerVal;
   U32 s1OvrAllTimerVal;
   U32 ueHoAttachTimerVal;




   U32 maxX2Peers;
   U8 noOfNghCfg;
   LwrNghCellCfg *wrNghCellCfg[16];

   TknU16 wrX2apPeerIdLst[16];

   U8 suppMsrmntCfg;
   U16 rrmRntiStart;
   U16 maxRrmRntis;
   U8 rrmDedPrmStart;
   U8 rrmNumDedPrm;
   U16 macRntiStart;
   U16 maxMacRntis;
   U8 numOfMacPrm;
   U32 rsrpTrshldRange;

   U8 noOfnghENBs;



   LwrEnbType eNBType;
# 797 "../..//enbapp/src/wr_smm_init.h"
  LwrSctpParamCfg lwrSctpParamCfg;
  SmLyrDiagInfo diagInfo;
}SmCfgCb;

extern SmCfgCb smCfgCb;

typedef struct _smCb
{
   TskInit init;
   WrSmState smState;
   SmCfgCb cfgCb;
   Bool cellState;







}SmCb;

typedef struct _tstTkn
{
   TknStr tok;
   U16 nmbArgs;
   TknStr args[20];
} TstTkn;







typedef enum
{
   PHY_CMD_START_TEST,
   PHY_CMD_STOP_TEST,
   PHY_CMD_ENABLE_LOG,
   PHY_CMD_DISABLE_LOG
}SmPhyCmd;

typedef struct _smUlAllocInfoCb
{
   U8 mcs;
   U16 numOfRb;
   U16 rbStart;
   Bool testStart;
   Bool enaLog;
   U16 logTime;
   U32 crcOk;
   U32 crcErr;
   U32 numUlPackets;
   U32 numPrach;
   U32 taZero;
}SmUlAllocInfoCb;

extern SmUlAllocInfoCb smUlAllocInfoCb;


extern SmCb smCb;






extern S16 SRegInfoShow (Region region, U32 *availmem);
extern S16 smWrReadConfigParams (Void);
extern Void smWrCfgGetTagNum (U8* tag, U16* tagNum);
extern Void wrCfgValdtInput (U8* input, Bool* status, U8 *noOfElem);
extern Void wrCfgGetParamVal (U8* tagVal, U8 paramLst[][50], U16* noOfParams);


extern S16 smWrInit (SSTskId sysTskId);
extern S16 smSzInit (SSTskId sysTskId);


extern S16 smCzInit (SSTskId sysTskId);

extern S16 smEgInit (SSTskId sysTskId);
extern S16 smEuInit (SSTskId sysTskId);
extern S16 smSbInit (SSTskId sysTskId);
extern S16 smHiInit (SSTskId sysTskId);
extern S16 smNhInit (SSTskId sysTskId);
extern S16 smPjInit (SSTskId sysTskId);
extern S16 smRgInit (SSTskId sysTskId);
extern S16 smKwInit (SSTskId sysTskId);
extern S16 smYsInit (SSTskId sysTskId);



extern Void smWrProcSm (U8 event);
extern S16 wrSmSelfPstMsg (Pst *pst);
extern Void wrSmHdlTuclCfgEvent (U8 event);
extern Void wrSmHdlSctpCfgEvent (U8 event);
extern Void wrSmHdlS1apCfgEvent (U8 event);
extern Void wrSmHdlEgtpCfgEvent (U8 event);
extern Void wrSmHdlAppCfgEvent (U8 event);
extern Void wrSmHdlRrcCfgEvent (U8 event);
extern Void wrSmHdlPdcpCfgEvent (U8 event);
extern Void wrSmHdlRlcCfgEvent (U8 event);
extern Void wrSmHdlMacCfgEvent (U8 event);
extern Void wrSmHdlCLCfgEvent (U8 event);
extern Void wrSmHdlBndS1apStack (U8 event);
extern Void wrSmHdlBndEgtpStack (U8 event);
extern Void wrSmHdlBndRrcStack (U8 event);

extern Void wrSmHdlEnbAlarms (U8 event);
extern Void wrSmHdlEnbDebugs (U8 event);
extern Void wrSmHdlInitS1Setup (U8 event);
extern Void wrSmHdlInitCellCfg (U8 event);


extern Void wrSmHdlX2apCfgEvent (U8 event);
extern Void wrSmHdlBndX2apStack (U8 event);
extern Void wrSmHdlInitX2Setup (U8 event);
# 922 "../..//enbapp/src/wr_smm_init.h"
extern S16 nhActvTsk (Pst *, Buffer *);
extern S16 nhActvInit (Ent, Inst, Region, Reason);
extern S16 kwActvTsk (Pst *, Buffer *);
extern S16 kwActvInit (Ent, Inst, Region, Reason);
extern S16 rgActvTsk (Pst *, Buffer *);
extern S16 rgActvInit (Ent, Inst, Region, Reason);
extern S16 schActvTsk (Pst *, Buffer *);
extern S16 schActvInit (Ent, Inst, Region, Reason);
extern S16 egActvTsk (Pst *, Buffer *);
extern S16 egActvInit (Ent, Inst, Region, Reason);
extern S16 pjActvTsk (Pst *, Buffer *);
extern S16 pjActvInit (Ent, Inst, Region, Reason);
extern S16 rmActvTsk (Pst *, Buffer *);
extern S16 rmActvInit (Ent, Inst, Region, Reason);

extern S16 tfActvTsk (Pst *, Buffer *);
extern S16 tfActvInit (Ent, Inst, Region, Reason);



extern S16 smEgActvTsk (Pst *, Buffer *);
extern S16 smRgActvTsk (Pst *, Buffer *);
extern S16 smNhActvTsk (Pst *, Buffer *);
extern S16 smKwActvTsk (Pst *, Buffer *);
extern S16 smPjActvTsk (Pst *, Buffer *);
extern S16 smHiActvTsk (Pst *, Buffer *);
extern S16 smSbActvTsk (Pst *, Buffer *);
extern S16 smSzActvTsk (Pst *, Buffer *);


extern S16 smSzActvTsk (Pst *, Buffer *);



extern Void wrSmHiCfg (Void);
extern Void wrSmSbCfg (Void);
extern Void wrSmSzCfg (Void);
extern Void wrSmEgCfg (Void);
extern Void wrSmWrCfg (Void);
extern Void wrSmNhCfg (Void);
extern Void wrSmPjCfg (Void);
extern Void wrSmKwCfg (Void);
extern Void wrSmRgCfg (Void);
extern Void wrSmYsCfg (Void);


extern Void wrSmCzCfg (Void);




extern Void smBuildHiGenCfg (Void);
extern Void smBuildHiTSapCfg (SpId spId);
extern Void smBuildHiDbgCntrl (Void);
extern Void smBuildHiLogCntrl (Bool actType, U32 mask);


extern Void smBuildSbGenCfg (Void);
extern Void smBuildSbTSapCfg (SpId spId, SuId suId);
extern Void smBuildSbSctSapCfg (SpId spId);
extern Void smBindSbToLSap (SpId spId);
extern Void smBuildSbDbgCntrl (Void);
extern Void smBuildSbLogCntrl (Bool actType, U32 mask);


extern S16 smBuildSzGenCfg (Void);
extern S16 smBuildSzLSapCfg (SpId spId, SuId suId);
extern S16 smBuildSzUSapCfg (SpId spId);
extern S16 smBuildSzProtCfg (Void);
extern S16 smBuildSzPeerCfg (Void);
extern S16 smBuildDynSzPeerCfg (U8 mmeIndex, U8 dbIndex);
extern S16 smBuildDynCzPeerCfg (U32 nbrIndex,U8 dbIndex);
extern S16 smBldSzPeerDelCntrlReq(U8 peerId, U8 dbIndex);
extern S16 smBldCzPeerDelCntrlReq(U8 peerId, U8 dbIndex);
extern S16 smBindSzToLSap (Void);
extern S16 smBuildSzGenCntrl (Void);
extern S16 smBuildSzDbgCntrl (Void);
extern S16 smBuildSzLogCntrl (Bool actType, U32 mask);




extern S16 smBuildCzGenCfg (Void);
extern S16 smBuildCzProtCfg (Void);
extern S16 smBuildCzLSapCfg (SuId suId, SpId spId);
extern S16 smBuildCzUSapCfg (SpId spId);
extern S16 smBuildCzPeerCfg (Void);
extern S16 smBuildCzUstaCntrl (Void);
extern S16 smBuildCzDbgCntrl (Void);
extern S16 smBuildCzLogCntrl (Bool actType, U32 mask);
extern S16 smBuildCzShutDownCntrl (Void);
extern S16 smBuildCzLSapTrcCntrl (U16 action);
extern S16 smBuildCzPeerTrcCntrl (Void);
extern S16 smBuildCzEndPtCntrl (Void);
extern S16 smBuildCzAssocCntrl (Void);
extern S16 smBuildCzGenStsReq (Void);
extern S16 smBuildCzPeerStsReq (Void);
extern S16 smBuildCzGenStaReq (Void);
extern S16 smBuildCzSidStaReq (Void);
extern S16 smBuildCzUSapStaReq (Void);
extern S16 smBuildCzLSapStaReq (Void);
extern S16 smBuildCzPeerStaReq (Void);
extern S16 smBindCzToLSap (Void);
extern S16 smUbindCzFrmUSap (Void);
extern S16 smDelCzUSap (Void);
extern S16 smUbindCzFrmLSap (Void);
extern S16 smDelCzLSap (Void);
extern S16 smDelCzPeer (Void);



extern S16 smBuildEgGenCfg (Void);
extern S16 smBuildEgUSapCfg (SpId spId);
extern S16 smBuildEgLSapCfg (SpId spId, SuId suId);

extern S16 smBuildEgIpAddrCfg (SpId spId);
extern S16 smBuildTServerCfg (Void);
extern Void smBindEgToHitSap (SpId spId);
extern Void smBuildEgDbgCntrl (Void);
extern Void smBuildEgLogCntrl (Bool actType, U32 mask);


extern S16 smBuildYsGenCfg (Void);
extern S16 smBuildYsTfuSapCfg (SpId spId, SuId suId);
extern S16 smBuildYsSchTfuSapCfg (SpId spId, SuId suId);
extern S16 smBuildYsCtfSapCfg (SpId spId, SuId suId);
extern S16 smBuildYsGenCntrl (Void);
extern S16 smBuildYsDbgCntrl (Void);
extern S16 smBuildYsLogCntrl (Bool actType, U32 mask);


extern S16 smBuildWrGenCfg (Void);
extern S16 smBuildWrCtfLSapCfg (SpId spId, SuId suId);
extern S16 smBuildWrNhuLSapCfg (SpId spId, SuId suId);
extern S16 smBuildWrRgrLSapCfg (SpId spId, SuId suId);
extern S16 smBuildWrSztLSapCfg (SpId spId, SuId suId);

extern S16 smBuildWrCztLSapCfg (SpId spId, SuId suId);
extern S16 smBindWrToCztSap (Void);

extern S16 smBuildWrNehCellCfg (LwrMngmt *lwrMng);
extern S16 smBuildWrInterFreqNehCellCfg (LwrMngmt *lwrMng);
extern S16 smBuildWrNghCfg (LwrMngmt *lwrMng);
extern S16 smBuildCellCfg (LwrMngmt *lwrMng);
extern S16 smBuildModCellCfg (LwrMngmt *lwrMng);
extern S16 smBuildWrMmeCfg (LwrMngmt *lwrMng, LwrSmMmeCfg *mmeCfg);
extern S16 smBuildWrEnbCfg (LwrMngmt *lwrMng);







extern S16 smBuildWrEgtLSapCfg (SpId spId, SuId suId);
extern S16 smBuildWrPjuLSapCfg (SpId spId, SuId suId);
extern S16 smBindWrToEgtSap (Void);
extern S16 smBindWrToPjuSap (Void);

extern S16 smBuildPjLogCntrl (Bool actType, U32 mask);

extern S16 smBindWrToSztSap (Void);
extern S16 smBindWrToNhuSap (Void);
extern S16 smBindWrToCtfSap (Void);
extern S16 smBindWrToRgrSap (Void);
extern S16 smBuildWrGenCntrl (Void);
extern S16 smBuildWrS1InitCntrl (Void);
extern S16 smBuildWrCellCntrl (Void);
extern S16 smBuildWrDbgCntrl (Void);
extern S16 smBuildWrLogCntrl (Bool actType, U32 mask);


extern S16 smBuildNhGenCfg (Void);
extern S16 smBuildNhProtCfg (Void);
extern S16 smBuildNhUsapCfg (Void);
extern S16 smBuildNhKwuLsapCfg (Void);
extern S16 smBuildNhCkwLsapCfg (Void);
extern S16 smBuildNhCrgLsapCfg (Void);
extern S16 smBuildNhCpjLsapCfg (Void);
extern S16 smBuildNhPjuLsapCfg (Void);
extern S16 smBuildNhLsapCfg (U8 elemId);
extern S16 smBindNhToKwuSap (Void);
extern S16 smBindNhToCkwSap (Void);
extern S16 smBindNhToCrgSap (Void);
extern S16 smBindNhToCpjSap (Void);
extern S16 smBindNhToPjuSap (Void);
extern S16 smBindNhToLsap (U8 elemId);
extern S16 smBuildNhGenCntrl (Void);
extern S16 smBuildNhDbgCntrl (Void);
extern S16 smBuildNhLogCntrl (Bool actType, U32 mask);


extern S16 smBuildPjGenCfg (Void);
extern S16 smBuildPjCpjSapCfg (Void);
extern S16 smBuildPjPjuSapCfg (SpId spId);


extern S16 smBuildKwGenCfg (Void);
extern S16 smBuildKwUsapCfg (U8 elemId, U8 ent);
extern S16 smBuildCkwUsapCfg (Void);
extern S16 smBuildKwuUsapCfg (U8 ent);
extern S16 smBuildKwRguLsapCfg (Void);
extern S16 smBindKwToRguSap (Void);
extern S16 smBuildKwDbgCntrl (Void);
extern S16 smBuildKwLogCntrl (Bool actType, U32 mask);


extern S16 smBuildRgGenCfg (Void);
extern S16 smBuildRgUsapCfg (U8 elemId);
extern S16 smBuildCrgUsapCfg (Void);
extern S16 smBuildRguUsapCfg (Void);
extern S16 smBuildRgSchInsCfg (Void);
extern S16 smBuildRgTfuLsapCfg (Void);
extern S16 smBindRgToTfuSap (Void);
extern S16 smBindRgSchToTfuSap (Void);
extern S16 smBuildRgGenCntrl (Void);
extern S16 smBuildRgDbgCntrl (Void);
extern S16 smBuildRgLogCntrl (Bool actType, U32 mask);
extern S16 smCreateLogThr (Void);

typedef enum {
 WR_TAG_CELL_ID,
 WR_TAG_MOD_TYPE,
 WR_TAG_DUP_MODE,
 WR_TAG_MAX_UE_SUPPORT,
 WR_TAG_MCC_0,
 WR_TAG_MCC_1,
 WR_TAG_MCC_2,
 WR_TAG_MNC_0,
 WR_TAG_MNC_1,
 WR_TAG_MNC_2,
 WR_TAG_TA_CODE,
 WR_TAG_FREQ_BAND_IND,
 WR_TAG_ENB_IP_ADDR,
 WR_TAG_NO_OF_MME_INFO,
 WR_TAG_MME_INFO,
 WR_TAG_SCTP_IP_ADDR,
 WR_TAG_HI_DBG,
 WR_TAG_SB_DBG,
 WR_TAG_SZ_DBG,
 WR_TAG_EG_DBG,
 WR_TAG_WR_DBG,
 WR_TAG_NH_DBG,
 WR_TAG_KW_DBG,
 WR_TAG_RG_DBG,
 WR_TAG_YS_DBG,
 WR_TAG_SM_DBG,
 WR_TAG_INACTIVITY_TIMER_VAL,
 WR_TAG_MAX_EXPIRY,

 WR_TAG_CZ_DBG,
 WR_TAG_X2_PREP_TMR,
 WR_TAG_X2_OVRALL_TMR,
 WR_TAG_ENB_NAME,
 WR_TAG_NO_OF_BRDCST_PLMN,
 WR_TAG_PLMN_ID_LST,
 WR_TAG_CELL_FDD_CFG,
 WR_TAG_CELL_TDD_CFG,
 WR_TAG_NO_OF_NGH_INFO,
 WR_TAG_NGH_INFO_CFG,
 WR_TAG_NO_OF_GU_GRP,
 WR_TAG_GU_GRP_ID_CFG,
 WR_TAG_S1_PREP_TMR,
 WR_TAG_S1_OVRALL_TMR,
 WR_TAG_NO_OF_NGH_CFG,
 WR_TAG_NGH_CELL_CFG,
 WR_TAG_MEAS_CFG_ENB,
 WR_TAG_RRM_RNTI_STRT,
 WR_TAG_MAX_RRM_RNTIS,
 WR_TAG_MAC_RNTI_STRT,
 WR_TAG_MAX_MAC_RNTIS,
 WR_TAG_RRM_NO_OF_DED_PREMBL,
 WR_TAG_RRM_DED_PREMBL_STRT,
 WR_TAG_MAC_NO_OF_PREMBL,
 WR_TAG_A1_RSRP_THRSHLD_VAL,
 WR_TAG_A2_RSRP_THRSHLD_VAL,
 WR_TAG_A5_RSRP_THRSHLD1_VAL,
 WR_TAG_A5_RSRP_THRSHLD2_VAL,
 WR_TAG_NO_OF_NGH_ENB_CFG,
 WR_TAG_NGH_ENB_CFG,
 WR_TAG_ENB_TYPE,
 WR_TAG_PCI_VAL,
 WR_TAG_DL_NUM_UE_PER_TTI,
 WR_TAG_UL_NUM_UE_PER_TTI,
 WR_TAG_DL_SCHD_TYPE,
 WR_TAG_UL_SCHD_TYPE,
 WR_TAG_MAX_X2_PEERS,
 WR_TAG_X2_TIME_TO_WAIT,
 WR_TAG_UE_HO_ATTACH_TMR,
 WR_TAG_SCTP_SRVC_TYPE,
 WR_TAG_OP_MODE,
 WR_TAG_PERIOD,
 WR_TAG_DL_EARFCN,
 WR_TAG_UL_EARFCN,
 WR_TAG_END_MARKER_TIMER_VAL,
# 1225 "../..//enbapp/src/wr_smm_init.h"
 WR_TAG_DIAG_TUCL,
 WR_TAG_DIAG_S1AP,
 WR_TAG_DIAG_EGTP,
 WR_TAG_DIAG_APP,
 WR_TAG_DIAG_LTERRC,
 WR_TAG_DIAG_LTERLC,
 WR_TAG_DIAG_LTEPDCP,
 WR_TAG_DIAG_LTECL,
 WR_TAG_DIAG_LTEMAC,
 WR_TAG_DIAG_X2AP,
 WR_TAG_DIAG_SCTP,

 WR_TAG_UL_MCS_VAL,
 WR_TAG_UL_RB_START_VAL,
 WR_TAG_UL_NUM_RB_VAL,
 WR_TAG_UL_ENABLE_TIME,





 WR_TAG_NO_OF_UTRA_NGH_CFG,
 WR_TAG_NGH_UTRA_CELL_CFG,
 WR_TAG_NUM_EUTRA_FREQ,
 WR_TAG_EUTRA_FREQ_CFG,
 WR_TAG_NUM_UTRA_FREQ,
 WR_TAG_UTRA_FREQ_CFG,
 WR_TAG_MAX_DL_UE_PER_TTI,
 WR_TAG_MAX_UL_UE_PER_TTI,

 WR_TAG_SCTP_RTO_MIN,
 WR_TAG_SCTP_RTO_MAX,
 WR_TAG_SCTP_RTO_INITIAL,
 WR_TAG_SCTP_HRTBEAT_INTERVAL,

 MAX_CFG_PARAM
}wrCfgTagNum;

extern S8 *wrCfgTagLst[MAX_CFG_PARAM];
extern U16 wrSmmGetX2apFreePeerId(Void);

extern U16 cmMaxBufLen;
# 1275 "../..//enbapp/src/wr_smm_init.h"
#define SM_DIAG_LVL0(_tknId,_splArg,_string,_arg1,_arg2,_arg3,_arg4) { if(smCb.init.logMask & SS_DIAG_LVL0) { ssDiagFix(_tknId, 0, ENTSM, smCb.init.inst, SS_DIAG_LVL0, SS_DIAG_MSG_TYPE_FIXED, _splArg, _arg1, _arg2, _arg3, _arg4, _string); } }
# 1286 "../..//enbapp/src/wr_smm_init.h"
#define SM_DIAG_LVL1(_tknId,_splArg,_string,_arg1,_arg2,_arg3,_arg4) { if(smCb.init.logMask & SS_DIAG_LVL1) { ssDiagFix(_tknId, _splArgEnum, ENTSM, smCb.init.inst, SS_DIAG_LVL1, SS_DIAG_MSG_TYPE_FIXED, _splArg, _arg1, _arg2, _arg3, _arg4, _string); } }
# 1297 "../..//enbapp/src/wr_smm_init.h"
#define SM_DIAG_LVL2(_tknId,_splArg,_string,_arg1,_arg2,_arg3,_arg4) { if(smCb.init.logMask & SS_DIAG_LVL2) { ssDiagFix(_tknId, _splArgEnum, ENTSM, smCb.init.inst, SS_DIAG_LVL2, SS_DIAG_MSG_TYPE_FIXED, _splArg, _arg1, _arg2, _arg3, _arg4, _string); } }
# 1308 "../..//enbapp/src/wr_smm_init.h"
#define SM_DIAG_LVL3(_tknId,_splArg,_string,_arg1,_arg2,_arg3,_arg4) { if(smCb.init.logMask & SS_DIAG_LVL3) { ssDiagFix(_tknId, _splArgEnum, ENTSM, smCb.init.inst, SS_DIAG_LVL3, SS_DIAG_MSG_TYPE_FIXED, _splArg, _arg1, _arg2, _arg3, _arg4, _string); } }
# 1319 "../..//enbapp/src/wr_smm_init.h"
#define SM_DIAG_LVL4(_tknId,_splArg,_string,_arg1,_arg2,_arg3,_arg4) { if(smCb.init.logMask & SS_DIAG_LVL4) { ssDiagFix(_tknId, _splArgEnum, ENTSM, smCb.init.inst, SS_DIAG_LVL4, SS_DIAG_MSG_TYPE_FIXED, _splArg, _arg1, _arg2, _arg3, _arg4, _string); } }
# 12 "../..//enbapp/src/wr_smm_pdcp.c" 2
# 28 "../..//enbapp/src/wr_smm_pdcp.c"
 Void wrSmPjCfg
(
Void
)



{
   ;

   smBuildPjGenCfg();
   smBuildPjCpjSapCfg();
   smBuildPjPjuSapCfg(1);
   smBuildPjPjuSapCfg(0);

   return;
}
# 60 "../..//enbapp/src/wr_smm_pdcp.c"
 S16 smBuildPjGenCfg
(
)



{
   PjMngmt pjMngmt;
   PjGenCfg *genCfg=0L;
   Pst pst;

   ;;

   cmMemset((U8 *)(&pjMngmt), 0, sizeof(PjMngmt));;
   cmMemset((U8 *)(&pst), 0, sizeof(Pst));;

   genCfg = &(pjMngmt.t.cfg.s.gen);
   genCfg->maxPjuSaps = 2;
   genCfg->nmbUlBins = 10;
   genCfg->nmbDlBins = 10;
   genCfg->lmPst.dstProcId = 100;
   genCfg->lmPst.srcProcId = 100;
   genCfg->lmPst.dstEnt = 0x0E;
   genCfg->lmPst.dstInst = 0;
   genCfg->lmPst.srcEnt = 0xd8;
   genCfg->lmPst.srcInst = 0;
   genCfg->lmPst.prior = 0x00;
   genCfg->lmPst.route = 0x00;
   genCfg->lmPst.region = smCb.init.region;
   genCfg->lmPst.pool = 0;
   genCfg->lmPst.selector = 0;
# 120 "../..//enbapp/src/wr_smm_pdcp.c"
   genCfg->nmbUlBins = 100;
   genCfg->nmbDlBins = 100;


   pjMngmt.hdr.msgType = 1;
   pjMngmt.hdr.msgLen = 0;
   pjMngmt.hdr.entId.ent = 0xd8;
   pjMngmt.hdr.entId.inst = 0;
   pjMngmt.hdr.elmId.elmnt = 1;
   pjMngmt.hdr.seqNmb = 0;
   pjMngmt.hdr.version = 0;
   pjMngmt.hdr.transId = 0;

   pjMngmt.hdr.response.prior = 0x00;
   pjMngmt.hdr.response.route = 0x00;
   pjMngmt.hdr.response.mem.region = smCb.init.region;
   pjMngmt.hdr.response.mem.pool = 0;
   pjMngmt.hdr.response.selector = 0;


   pst.selector = 0;
   pst.srcEnt = 0x0E;
   pst.dstEnt = 0xd8;
   pst.dstProcId = 100;
   pst.srcProcId = 100;
   pst.dstInst = 0;


   { { if ((&smCb.init)->dbgMask & (1)) { sprintf((&smCb.init)->prntBuf, "[%s 0x%x:%x] %s:%d ", "EnodeB App: ", (&smCb.init)->ent, (&smCb.init)->inst, "../..//enbapp/src/wr_smm_pdcp.c", 148); SPrint((&smCb.init)->prntBuf); sprintf (smCb.init.prntBuf, "PDCP Gen Cfg Req sent\n"); SPrint((&smCb.init)->prntBuf); } }; };



   SmMiLpjCfgReq(&pst, &pjMngmt);

   return(0);
}
# 172 "../..//enbapp/src/wr_smm_pdcp.c"
 S16 smBuildPjCpjSapCfg
(
)



{

   PjMngmt pjMngmt;
   PjSapCfg *usap=0L;
   Pst pst;

   ;

   cmMemset((U8 *)(&pjMngmt), 0, sizeof(PjMngmt));;
   cmMemset((U8 *)(&pst), 0, sizeof(Pst));;

   usap = &(pjMngmt.t.cfg.s.sap);

   usap->sapId = 0;
   usap->procId = 100;
   usap->priority = 0x00;
   usap->route = 0x00;
   usap->selector = 0;
   usap->ent = 0xd8;
   usap->inst = 0;
   usap->mem.region = smCb.init.region;
   usap->mem.pool = 0;
   usap->bndTmrIntvl = 1;



   pjMngmt.hdr.msgType = 1;
   pjMngmt.hdr.msgLen = 0;
   pjMngmt.hdr.entId.ent = 0xd8;
   pjMngmt.hdr.entId.inst = 0;
   pjMngmt.hdr.elmId.elmnt = 187;
   pjMngmt.hdr.seqNmb = 0;
   pjMngmt.hdr.version = 0;
   pjMngmt.hdr.transId = 0;

   pjMngmt.hdr.response.prior = 0x00;
   pjMngmt.hdr.response.route = 0x00;
   pjMngmt.hdr.response.mem.region = smCb.init.region;
   pjMngmt.hdr.response.mem.pool = 0;
   pjMngmt.hdr.response.selector = 0;


   pst.selector = 0;
   pst.srcEnt = 0x0E;
   pst.dstEnt = 0xd8;
   pst.dstProcId = 100;
   pst.srcProcId = 100;
   pst.dstInst = 0;


  { { if ((&smCb.init)->dbgMask & (1)) { sprintf((&smCb.init)->prntBuf, "[%s 0x%x:%x] %s:%d ", "EnodeB App: ", (&smCb.init)->ent, (&smCb.init)->inst, "../..//enbapp/src/wr_smm_pdcp.c", 228); SPrint((&smCb.init)->prntBuf); sprintf (smCb.init.prntBuf, "PDCP cpj Sap Cfg Req sent\n"); SPrint((&smCb.init)->prntBuf); } }; };



   SmMiLpjCfgReq(&pst, &pjMngmt);

   return(0);
}
# 251 "../..//enbapp/src/wr_smm_pdcp.c"
 S16 smBuildPjPjuSapCfg
(
SpId spId
)




{

   PjMngmt pjMngmt;
   PjSapCfg *usap=0L;
   Pst pst;

   ;

   cmMemset((U8 *)(&pjMngmt), 0, sizeof(PjMngmt));;
   cmMemset((U8 *)(&pst), 0, sizeof(Pst));;

   usap = &(pjMngmt.t.cfg.s.sap);

   usap->sapId = spId;
   usap->procId = 100;
   usap->priority = 0x00;
   usap->route = 0x00;
   usap->selector = 0;
   if(spId == 1)
   {
      usap->ent = 0xe3;
   }
   else if(spId == 0)
   {
      usap->ent = 0xd9;
   }
   else
   {

  { { if ((&smCb.init)->dbgMask & (1)) { sprintf((&smCb.init)->prntBuf, "[%s 0x%x:%x] %s:%d ", "EnodeB App: ", (&smCb.init)->ent, (&smCb.init)->inst, "../..//enbapp/src/wr_smm_pdcp.c", 288); SPrint((&smCb.init)->prntBuf); sprintf (smCb.init.prntBuf, "smBuildPjPjuSapCfg: Invalid spId\n"); SPrint((&smCb.init)->prntBuf); } }; };

   }
   usap->inst = 0;
   usap->mem.region = smCb.init.region;
   usap->mem.pool = 0;
   usap->bndTmrIntvl = 1;


   pjMngmt.hdr.msgType = 1;
   pjMngmt.hdr.msgLen = 0;
   pjMngmt.hdr.entId.ent = 0xd8;
   pjMngmt.hdr.entId.inst = 0;
   pjMngmt.hdr.elmId.elmnt = 188;
   pjMngmt.hdr.seqNmb = 0;
   pjMngmt.hdr.version = 0;
   pjMngmt.hdr.transId = 0;

   pjMngmt.hdr.response.prior = 0x00;
   pjMngmt.hdr.response.route = 0x00;
   pjMngmt.hdr.response.mem.region = smCb.init.region;
   pjMngmt.hdr.response.mem.pool = 0;
   pjMngmt.hdr.response.selector = 0;


   pst.selector = 0;
   pst.srcEnt = 0x0E;
   pst.dstEnt = 0xd8;
   pst.dstProcId = 100;
   pst.srcProcId = 100;
   pst.dstInst = 0;


  { { if ((&smCb.init)->dbgMask & (1)) { sprintf((&smCb.init)->prntBuf, "[%s 0x%x:%x] %s:%d ", "EnodeB App: ", (&smCb.init)->ent, (&smCb.init)->inst, "../..//enbapp/src/wr_smm_pdcp.c", 321); SPrint((&smCb.init)->prntBuf); sprintf (smCb.init.prntBuf, "PDCP pju Sap Cfg Req sent\n"); SPrint((&smCb.init)->prntBuf); } }; };



   SmMiLpjCfgReq(&pst, &pjMngmt);

   return(0);
}
# 346 "../..//enbapp/src/wr_smm_pdcp.c"
 S16 smPjActvTsk
(
Pst *pst,
Buffer *mBuf
)





{
   S16 ret;


   ;

   ret = 0;

   switch(pst->event)
   {

      case 0x51:
         ret = cmUnpkLpjCfgCfm(SmMiLpjCfgCfm, pst, mBuf);
         break;
      case 0x53:
         ret = cmUnpkLpjCntrlCfm(SmMiLpjCntrlCfm, pst, mBuf);
         break;

      default:
         SPutMsg(mBuf);
         ret = 1;

       { { if ((&smCb.init)->dbgMask & (1)) { sprintf((&smCb.init)->prntBuf, "[%s 0x%x:%x] %s:%d ", "EnodeB App: ", (&smCb.init)->ent, (&smCb.init)->inst, "../..//enbapp/src/wr_smm_pdcp.c", 379); SPrint((&smCb.init)->prntBuf); sprintf (smCb.init.prntBuf, "smPjActvTsk : Received         invalid event\n"); SPrint((&smCb.init)->prntBuf); } }; };


         break;
   }

   return(ret);

}





static U8 wrPjCfg = 0;
static U8 wrPjUsapCfgCnt = 0;







#define MAXPJMI 2
# 410 "../..//enbapp/src/wr_smm_pdcp.c"
static const LpjCfgReq SmMiLpjCfgReqMt[2] =
{

   cmPkLpjCfgReq,




   PjMiLpjCfgReq,



};

static const LpjCntrlReq SmMiLpjCntrlReqMt[2] =
{

   cmPkLpjCntrlReq,




   PjMiLpjCntrlReq,



};
# 452 "../..//enbapp/src/wr_smm_pdcp.c"
 S16 SmMiLpjCfgReq
(
Pst * pst,
PjMngmt * cfg
)





{

   ;;

   (*SmMiLpjCfgReqMt[pst->selector])(pst, cfg);

   return(0);

}
# 486 "../..//enbapp/src/wr_smm_pdcp.c"
 S16 SmMiLpjCntrlReq
(
Pst * pst,
PjMngmt * cfg
)





{

   ;;

   (*SmMiLpjCntrlReqMt[pst->selector])(pst, cfg);

   return(0);

}
# 597 "../..//enbapp/src/wr_smm_pdcp.c"
 S16 smBuildPjLogCntrl
(
 Bool actType,
 U32 mask
)





{
   PjCntrl *cntrl = 0L;
   PjMngmt pjMngmt;
   Pst pst;

   ;

   cmMemset((U8 *)(&pjMngmt), 0, sizeof(PjMngmt));;
   cmMemset((U8 *)(&pst), 0, sizeof(Pst));;

   cntrl = &(pjMngmt.t.cntrl);

   if(actType == WR_ON)
   {
      cntrl->action = 1;
   }
   else
   {
      cntrl->action = 2;
   }

   cntrl->subAction = 6;

   cntrl->s.logMask = mask;


   pjMngmt.hdr.msgType = 2;
   pjMngmt.hdr.entId.ent = 0xd8;
   pjMngmt.hdr.entId.inst = 0;
   pjMngmt.hdr.elmId.elmnt = 1;


   pst.selector = 0;
   pst.srcEnt = 0x0E;
   pst.dstEnt = 0xd8;
   pst.dstProcId = 100;
   pst.srcProcId = 100;


   SmMiLpjCntrlReq(&pst, &pjMngmt);

   return(0);

}
# 668 "../..//enbapp/src/wr_smm_pdcp.c"
 S16 SmMiLpjCfgCfm
(
Pst *pst,
PjMngmt *cfm
)





{
   Pst pjPst;

   ;;

   cmMemset((U8 *)(&pjPst), 0, sizeof(Pst));;

   if (cfm->cfm.status == 0)
   {
      switch (cfm->hdr.elmId.elmnt)
      {
         case 1:
            wrPjCfg |= 1;
            break;
         case 187:
            wrPjCfg |= 2;
            break;
         case 188:
            wrPjCfg |= 4;
            wrPjUsapCfgCnt++;
            break;
         default:

            { { if ((&smCb.init)->dbgMask & (1)) { sprintf((&smCb.init)->prntBuf, "[%s 0x%x:%x] %s:%d ", "EnodeB App: ", (&smCb.init)->ent, (&smCb.init)->inst, "../..//enbapp/src/wr_smm_pdcp.c", 703); SPrint((&smCb.init)->prntBuf); sprintf (smCb.init.prntBuf,"SmMiLpjCfgCfm PDCP Cfg                      Cfm received with invalid element                      %d\n",cfm->hdr.elmId.elmnt); SPrint((&smCb.init)->prntBuf); } }; };



            break;
      }


      { { if ((&smCb.init)->dbgMask & (1)) { sprintf((&smCb.init)->prntBuf, "[%s 0x%x:%x] %s:%d ", "EnodeB App: ", (&smCb.init)->ent, (&smCb.init)->inst, "../..//enbapp/src/wr_smm_pdcp.c", 710); SPrint((&smCb.init)->prntBuf); sprintf (smCb.init.prntBuf, "PDCP Cfg Cfm received               for the element %d\n",cfm->hdr.elmId.elmnt); SPrint((&smCb.init)->prntBuf); } }; };



      if (wrPjCfg == (1 | 2 | 4) && wrPjUsapCfgCnt == 2)
      {
         smCb.smState = WR_SM_STATE_PDCP_CFG_DONE;
         { cmMemset((U8 *)&(pjPst), 0, sizeof(Pst)); pjPst.dstProcId = 100; pjPst.srcProcId = 100; pjPst.dstEnt = 0x0E; pjPst.srcEnt = 0xe3; pjPst.dstInst = 0; pjPst.srcInst = 0; pjPst.event = 17; pjPst.pool = 0; pjPst.selector= 0; };

         if(wrSmSelfPstMsg(&pjPst) != 0)
         {

            { { if ((&smCb.init)->dbgMask & (1)) { sprintf((&smCb.init)->prntBuf, "[%s 0x%x:%x] %s:%d ", "EnodeB App: ", (&smCb.init)->ent, (&smCb.init)->inst, "../..//enbapp/src/wr_smm_pdcp.c", 722); SPrint((&smCb.init)->prntBuf); sprintf (smCb.init.prntBuf, "PDCP CONFIGURATION                      SUCCESSFULLY PERFORMED. Failure at Self Pst.\n"); SPrint((&smCb.init)->prntBuf); } }; };


         }
         else
         {

            { { if ((&smCb.init)->dbgMask & (1)) { sprintf((&smCb.init)->prntBuf, "[%s 0x%x:%x] %s:%d ", "EnodeB App: ", (&smCb.init)->ent, (&smCb.init)->inst, "../..//enbapp/src/wr_smm_pdcp.c", 729); SPrint((&smCb.init)->prntBuf); sprintf (smCb.init.prntBuf, "PDCP CONFIGURATION                      SUCCESSFULLY PERFORMED.\n"); SPrint((&smCb.init)->prntBuf); } }; };


         }

      }
   }
   else
   {

      { { if ((&smCb.init)->dbgMask & (1)) { sprintf((&smCb.init)->prntBuf, "[%s 0x%x:%x] %s:%d ", "EnodeB App: ", (&smCb.init)->ent, (&smCb.init)->inst, "../..//enbapp/src/wr_smm_pdcp.c", 739); SPrint((&smCb.init)->prntBuf); sprintf (smCb.init.prntBuf, "SmMiLkwCfgCfm: Configuration Cfm               with NOK Received.\n"); SPrint((&smCb.init)->prntBuf); } }; };


   }

   return(0);
}
# 763 "../..//enbapp/src/wr_smm_pdcp.c"
 S16 SmMiLpjCntrlCfm
(
Pst *pst,
PjMngmt *cfm
)





{
   ;


   (pst=pst);
   (cfm=cfm);

   return(0);
}
