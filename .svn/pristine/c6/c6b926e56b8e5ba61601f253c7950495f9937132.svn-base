/*
 * Note: this file originally auto-generated by mib2c using
 *  : mib2c.iterate.conf 19302 2010-08-13 12:19:42Z dts12 $
 */
#ifndef S1APPEERNODECOUNTERS_H
#define S1APPEERNODECOUNTERS_H

/* function declarations */
void init_s1apPeerNodeCounters(void);
void initialize_table_s1apPeerNodeCountersTable(void);

/* column number definitions for table s1apPeerNodeCountersTable */
       #define COLUMN_S1AP_PEER_NODE_COUNTERS_INDEX		1
       #define COLUMN_PEERID		2
       #define COLUMN_NMBUNEXPEVT		3
       #define COLUMN_NMBTRAFEXP		4
       #define COLUMN_ERABSETUPREQ		5
       #define COLUMN_ERABSETUPRESP		6
       #define COLUMN_ERABMODIFYREQUEST		7
       #define COLUMN_ERABMODRESP		8
       #define COLUMN_ERABRELCMD		9
       #define COLUMN_ERABRELCOMP		10
       #define COLUMN_ERABRELREQ		11
       #define COLUMN_INITCXTSETUP		12
       #define COLUMN_INITCXTSETUPRESP		13
       #define COLUMN_INITCXTSETUPFAIL		14
       #define COLUMN_UECXTRELREQ		15
       #define COLUMN_UECXTRELCMD		16
       #define COLUMN_UECXTRELCOMP		17
       #define COLUMN_UECXTMODREQ		18
       #define COLUMN_UECXTMODRESP		19
       #define COLUMN_UECXTMODFAIL		20
       #define COLUMN_INITUEMSG		21
       #define COLUMN_DWNNASTPT		22
       #define COLUMN_UPNASTPT		23
       #define COLUMN_NONDELINDNAS		24
       #define COLUMN_ERRINDTX		25
       #define COLUMN_ERRINDRX		26
       #define COLUMN_S1AP_PEER_NODE_COUNTERS_NODATATX		27
       #define COLUMN_S1AP_PEER_NODE_COUNTERS_NODATARX		28
       #define COLUMN_RESETTX		29
       #define COLUMN_RESETRX		30
       #define COLUMN_RESETACKTX		31
       #define COLUMN_RESETACKRX		32
       #define COLUMN_SETUPREQ		33
       #define COLUMN_SETUPRESP		34
       #define COLUMN_SETUPFAIL		35
       #define COLUMN_PAGING		36
       #define COLUMN_HANDREQD		37
       #define COLUMN_HANDCMD		38
       #define COLUMN_HANDPREPFAIL		39
       #define COLUMN_HANDREQ		40
       #define COLUMN_HANDREQACK		41
       #define COLUMN_HANDFAIL		42
       #define COLUMN_HANDNTFY		43
       #define COLUMN_PATHSWCHREQ		44
       #define COLUMN_PATHSWCHREQACK		45
       #define COLUMN_HANDCAN		46
       #define COLUMN_HANDCANACK		47
       #define COLUMN_ENBSTATRANS		48
       #define COLUMN_MMESTATRANS		49
       #define COLUMN_DEACTTRACE		50
       #define COLUMN_TRACESTART		51
       #define COLUMN_TRACEFAILIND		52
       #define COLUMN_LOCREPORTCNTRL		53
       #define COLUMN_LOCREPORTFAILIND		54
       #define COLUMN_LOCREPORT		55
       #define COLUMN_ENBCFGUPD		56
       #define COLUMN_ENBCFGUPDACK		57
       #define COLUMN_ENBCFGUPDFAIL		58
       #define COLUMN_MMECFGUPD		59
       #define COLUMN_MMECFGUPDACK		60
       #define COLUMN_MMECFGUPDFAIL		61
       #define COLUMN_UPS1CDMA2000TUNN		62
       #define COLUMN_DNS1CDMA2000TUNN		63
       #define COLUMN_UECAPINFOIND		64
       #define COLUMN_OVERLOADSTART		65
       #define COLUMN_OVERLOADSTOP		66
       #define COLUMN_WRITEREPWARNREQ		67
       #define COLUMN_WRITEREPWARNRSP		68
       #define COLUMN_ENBDIRINFOTRANS		69
       #define COLUMN_MMEDIRINFOTRANS		70
       #define COLUMN_PRIVMSGTX		71
       #define COLUMN_PRIVMSGRX		72
       #define COLUMN_ENBCONFIGTFR		73
       #define COLUMN_MMECONFIGTFR		74
       #define COLUMN_CELLTRAFFICTRACE		75
       #define COLUMN_SZDEDPROCSTSTX		76
       #define COLUMN_SZDEDPROCSTSRX		77
       #define COLUMN_SZCOMPROCSTSTX		78
       #define COLUMN_SZCOMPROCSTSRX		79
       #define COLUMN_S1AP_PEER_NODE_COUNTERS_LASTCOLLECTEDAT  80

#define S1AP_PEER_NODE_COUNTERS_MAX_COL  COLUMN_S1AP_PEER_NODE_COUNTERS_LASTCOLLECTEDAT

#define S1AP_PEER_NODE_COUNTERS_LCOLLECT_BUF_LEN_MAX 18

    /* Typical data structure for a row entry */
typedef struct s1apPeerNodeCountersTable_entry {
    /* Index values */
    unsigned int index;

    /* Column values */
    unsigned int peerId;
    int nmbUnexpEvt;
    int nmbTRafExp;
    int eRABSetupReq;
    int eRABSetupResp;
    int eRABModifyRequest;
    int eRABModResp;
    int eRABRelCmd;
    int eRABRelComp;
    int eRABRelReq;
    int initCxtSetup;
    int initCxtSetupResp;
    int initCxtSetupFail;
    int ueCxtRelReq;
    int ueCxtRelCmd;
    int ueCxtRelComp;
    int ueCxtModReq;
    int ueCxtModResp;
    int ueCxtModFail;
    int initUEMsg;
    int dwnNASTpt;
    int upNASTpt;
    int nonDelIndNAS;
    int errIndtx;
    int errIndrx;
    int noDatatx;
    int noDatarx;
    int resettx;
    int resetrx;
    int resetAcktx;
    int resetAckrx;
    int setupReq;
    int setupResp;
    int setupFail;
    int paging;
    int handReqd;
    int handCmd;
    int handPrepFail;
    int handReq;
    int handReqAck;
    int handFail;
    int handNtfy;
    int pathSwchReq;
    int pathSwchReqAck;
    int handCan;
    int handCanAck;
    int eNBStaTrans;
    int mmeStaTrans;
    int deactTrace;
    int traceStart;
    int traceFailInd;
    int locReportCntrl;
    int locReportFailInd;
    int locReport;
    int enbCfgUpd;
    int enbCfgUpdAck;
    int enbCfgUpdFail;
    int mmeCfgUpd;
    int mmeCfgUpdAck;
    int mmeCfgUpdFail;
    int upS1CDMA2000Tunn;
    int dnS1CDMA2000Tunn;
    int ueCapInfoInd;
    int overloadStart;
    int overloadStop;
    int writeRepWarnReq;
    int writeRepWarnRsp;
    int enbDirInfoTrans;
    int mmeDirInfoTrans;
    int privMsgtx;
    int privMsgrx;
    int eNBConfigTfr;
    int mmeConfigTfr;
    int cellTrafficTrace;
    int szDedProcStstx;
    int szDedProcStsrx;
    int szComProcStstx;
    int szComProcStsrx;
    char lastCollectedAt[S1AP_PEER_NODE_COUNTERS_LCOLLECT_BUF_LEN_MAX];
    size_t lastCollectedAt_len;

    /* Illustrate using a simple linked list */
    int   valid;
    struct s1apPeerNodeCountersTable_entry *next;
}s1apPeerNodeCountersTableEntry;

#endif /* S1APPEERNODECOUNTERS_H */
