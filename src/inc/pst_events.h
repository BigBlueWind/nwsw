/*
 * pst_events.h
 *
 *  Created on: Apr 19, 2011
 *      @author: m_sharma
 */

#ifndef PST_EVENTS_H
#define PST_EVENTS_H

/* Events corresponding to messages To/from PWAV developed modules
 * These events should not overlap with CCPU-defined events
 */

typedef enum PwavPstEvent {
  EVT_START_QUERY          = 100,
  EVT_START_IND            = 101,
  EVT_HELLO                = 102,
  EVT_HELLO_ACK            = 103,
  EVT_EXIT                 = 104,

  EVT_BSM_CEM_OPSTART       = 105,
  EVT_CEM_BSM_OPSTART_SUCC  = 106,
  EVT_CEM_BSM_OPSTART_FAIL  = 107,

  EVT_BSM_CEM_OPSTOP_CMD    = 108,
  EVT_CEM_BSM_OPSTOP_CMPL   = 109,

  EVT_BSM_CEM_CFG_REQ       = 110,
  EVT_CEM_BSM_CFG_SUCC      = 111,
  EVT_CEM_BSM_CFG_FAIL      = 112,

  EVT_BSM_S1M_CFG_REQ       = 113,
  EVT_S1M_BSM_CFG_SUCC      = 114,
  EVT_S1M_BSM_CFG_FAIL      = 115,

  EVT_BSM_S1M_OPSTART       = 116,
  EVT_S1M_BSM_OPSTART_SUCC  = 117,
  EVT_S1M_BSM_OPSTART_FAIL  = 118,

  EVT_BSM_S1M_OPSTOP_CMD    = 119,
  EVT_S1M_BSM_OPSTOP_CMPL   = 120,

  EVT_S1M_LINK_UP_IND       = 121,
  EVT_S1M_LINK_DOWN_IND     = 122,
  EVT_S1M_LINK_CLOSED_IND   = 123,

  EVT_BSM_UEH_ACTIVE_UE_STATUS_REQ = 124,
  EVT_UEH_BSM_ACTIVE_UE_STATUS_RSP = 125,

  EVT_BSM_UDH_ACTIVE_RAB_STATUS_REQ = 126,
  EVT_UDH_BSM_ACTIVE_RAB_STATUS_RSP = 127,

  EVT_S1M_RESET_IND               = 128,

  EVT_BSM_SM_S1AP_CFG_REQ         = 129,
  EVT_SM_BSM_S1AP_CFG_SUCC        = 130,
  EVT_SM_BSM_S1AP_CFG_FAIL        = 131,

  EVT_BSM_SM_SCTP_CFG_REQ         = 132,
  EVT_SM_BSM_SCTP_CFG_SUCC        = 133,
  EVT_SM_BSM_SCTP_CFG_FAIL        = 134,

  EVT_BSM_SM_EGTP_CFG_REQ         = 135,
  EVT_SM_BSM_EGTP_CFG_SUCC        = 136,
  EVT_SM_BSM_EGTP_CFG_FAIL        = 137,

  EVT_SM_LTH_TRC_IND              = 138,
  EVT_LTH_SM_TRC_START_REQ        = 139,
  EVT_LTH_SM_TRC_STOP_REQ         = 140,
  EVT_SM_LTH_TRC_START_FAIL       = 141,
  EVT_SM_LTH_TRC_STOP_FAIL        = 142,
  EVT_SM_LTH_TRC_START_SUCC       = 143,
  EVT_SM_LTH_TRC_STOP_SUCC        = 144,

  EVT_BSM_UDH_CFG_REQ             = 145,
  EVT_UDH_BSM_CFG_SUCC            = 146,
  EVT_UDH_BSM_CFG_FAIL            = 147,

  EVT_BSM_UDH_OPSTART             = 148,
  EVT_UDH_BSM_OPSTART_SUCC        = 149,
  EVT_UDH_BSM_OPSTART_FAIL        = 150,

  EVT_BSM_UDH_OPSTOP_CMD          = 151,
  EVT_UDH_BSM_OPSTOP_CMPL         = 152,

  EVT_PMH_SM_PDCP_GEN_STAT_REQ    = 153,
  EVT_PMH_SM_PDCP_UPLANE_STAT_REQ = 154,

  EVT_PMH_SM_SCTP_GEN_STAT_REQ    = 155,
  EVT_PMH_SM_GTP_GEN_STAT_REQ     = 156,
  EVT_PMH_SM_RLC_GEN_STAT_REQ     = 157,

  EVT_PMH_SM_RRC_GEN_STAT_REQ     = 158,
  EVT_PMH_SM_RRC_CELL_STAT_REQ    = 159,

  EVT_PMH_SM_S1AP_GEN_STAT_REQ    = 160,
  EVT_PMH_SM_S1AP_PEER_NODE_STAT_REQ   = 161,

  EVT_PMH_SM_MAC_GEN_STAT_REQ     = 162,
  EVT_PMH_SM_MAC_RLCSAP_STAT_REQ  = 163,
  EVT_PMH_SM_MAC_PHYSAP_STAT_REQ  = 164,

  EVT_SM_PMH_PDCP_GEN_STAT_RSP    = 165,
  EVT_SM_PMH_PDCP_UPLANE_STAT_RSP = 166,

  EVT_SM_PMH_SCTP_GEN_STAT_RSP    = 167,
  EVT_SM_PMH_GTP_GEN_STAT_RSP     = 168,
  EVT_SM_PMH_RLC_GEN_STAT_RSP     = 169,

  EVT_SM_PMH_RRC_GEN_STAT_RSP     = 170,
  EVT_SM_PMH_RRC_CELL_STAT_RSP    = 171,

  EVT_SM_PMH_S1AP_GEN_STAT_RSP    = 172,
  EVT_SM_PMH_S1AP_PEER_NODE_STAT_RSP   = 173,

  EVT_SM_PMH_MAC_GEN_STAT_RSP     = 174,
  EVT_SM_PMH_MAC_RLCSAP_STAT_RSP  = 175,
  EVT_SM_PMH_MAC_PHYSAP_STAT_RSP  = 176,

  EVT_EGTP_LTH_TRC_IND            = 177,

  EVT_BSM_UEH_MOD_STATE_REQ       = 178,
  EVT_UEH_BSM_MOD_STATE_RSP       = 179,

  EVT_BSM_UDH_MOD_STATE_REQ       = 180,
  EVT_UDH_BSM_MOD_STATE_RSP       = 181,

  EVT_BSM_UEH_UE_EVENT_HISTORY_REQ = 182,
  EVT_UEH_BSM_UE_EVENT_HISTORY_RSP = 183,

  EVT_BSM_UDH_RAB_HISTORY_REQ      = 184,
  EVT_UDH_BSM_RAB_HISTORY_RSP      = 185,

// RRM Changes
  EVT_PMH_UEH_RRM_CELL_STAT_REQ   = 186,
  EVT_UEH_PMH_RRM_CELL_STAT_RSP   = 187,

  EVT_BSM_SM_SET_LOG_CFG          = 188,

  EVT_PMH_TFU_DSTATS_CFG_REQ      = 189,
  EVT_TFU_PMH_DSTATS_IND          = 190,

//GTP Debug Counters Messages
  EVT_PMH_UDH_DSTAT_REQ            = 191,
  EVT_UDH_PMH_DSTAT_RSP            = 192,
  EVT_UEH_BSM_UNKWN_ENB_UE_ID_IND  = 193,
// Cell barring procedure BS-1799 
  EVT_BSM_CEM_CELL_BAR_REQ        = 194,
  EVT_BSM_CEM_CELL_UNBAR_REQ      = 195,
  EVT_CEM_BSM_CELL_BAR_SUCC       = 196,
  EVT_CEM_BSM_CELL_UNBAR_SUCC     = 197,
  EVT_BSM_UEH_UEEVENTHISTORYLOG_CONFIG_REQ =  198,
  EVT_UEH_BSM_UEEVENTHISTORYLOG_CONFIG_SUCC = 199,
  EVT_UEH_BSM_UEEVENTHISTORYLOG_CONFIG_FAIL = 200,

  EVT_PMH_UEH_COUNTER_START_REQ  =  201,
  EVT_UEH_PMH_COUNTER_START_SUCC =  202,
  EVT_UEH_PMH_COUNTER_START_FAIL =  203,

  EVT_PMH_UEH_COUNTER_STOP_REQ  = 204,
  EVT_UEH_PMH_COUNTER_STOP_SUCC = 205,

  EVT_UEH_PMH_COUNTER_REPORT_IND = 206,
  EVT_UEH_PMH_COUNTER_STOP_IND  =  207,

  /* Add events above. Make sure MAX_PWAV_EVENT is < 255 */
  MAX_PWAV_EVENT

} PwavPstEvent;

#define PWAV_START_EVENT EVT_START_QUERY
#define NUM_PWAV_EVENTS  (MAX_PWAV_EVENT - PWAV_START_EVENT + 1)
#endif /* PST_EVENTS_H */
